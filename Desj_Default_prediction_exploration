{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "# regex\n",
    "import re\n",
    "\n",
    "#time\n",
    "import pytz as tz\n",
    "from datetime import datetime\n",
    "\n",
    "#data explore\n",
    "import numpy as np\n",
    "\n",
    "import pandas as pd"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "%matplotlib inline\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "#defaults\n",
    "plt.rcParams['figure.figsize'] = (20.0, 20.0)\n",
    "plt.rcParams.update({'font.size': 10})\n",
    "plt.rcParams['xtick.major.pad']='5'\n",
    "plt.rcParams['ytick.major.pad']='5'\n",
    "\n",
    "plt.style.use('ggplot')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "df = pd.read_csv('C:\\\\Users\\\\marcp\\\\OneDrive\\\\Documents\\\\DataCup\\\\Dataframes\\\\DataFrame_Final2.csv')\n",
    "df_predict = pd.read_csv('C:\\\\Users\\\\marcp\\\\OneDrive\\\\Documents\\\\DataCup\\\\Dataframes\\\\DataFrameTest.csv')\n",
    "\n",
    "#df = pd.read_csv('DataFrame_Final2.csv')\n",
    "#df_predict = pd.read_csv('DataFrameTest.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Explanatory variables:  54\n",
      "Number of Observations: 11900\n",
      "Target variable: 'default payment next year' -> 'Default'\n"
     ]
    }
   ],
   "source": [
    "print(\"Explanatory variables:  {}\".format(len(df.columns)-1))\n",
    "print(\"Number of Observations: {}\".format(df.shape[0]))\n",
    "\n",
    "df['Default'] = df['Default'].astype('category')\n",
    "\n",
    "# create a 'target' column for our own convenience\n",
    "print(\"Target variable: '{}' -> '{}'\".format('default payment next year', 'Default'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>DelqCycle_month_1</th>\n",
       "      <th>DelqCycle_month_2</th>\n",
       "      <th>DelqCycle_month_3</th>\n",
       "      <th>DelqCycle_month_4</th>\n",
       "      <th>DelqCycle_month_5</th>\n",
       "      <th>DelqCycle_month_6</th>\n",
       "      <th>DelqCycle_month_7</th>\n",
       "      <th>DelqCycle_month_8</th>\n",
       "      <th>DelqCycle_month_9</th>\n",
       "      <th>DelqCycle_month_10</th>\n",
       "      <th>DelqCycle_month_11</th>\n",
       "      <th>DelqCycle_month_12</th>\n",
       "      <th>DelqCycle_month_13</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   DelqCycle_month_1  DelqCycle_month_2  DelqCycle_month_3  DelqCycle_month_4  \\\n",
       "0                  0                  0                  0                  0   \n",
       "1                  0                  0                  0                  1   \n",
       "2                  0                  0                  0                  0   \n",
       "3                  0                  0                  0                  0   \n",
       "4                  0                  0                  0                  0   \n",
       "\n",
       "   DelqCycle_month_5  DelqCycle_month_6  DelqCycle_month_7  DelqCycle_month_8  \\\n",
       "0                  0                  0                  0                  0   \n",
       "1                  2                  0                  0                  0   \n",
       "2                  0                  0                  0                  0   \n",
       "3                  0                  0                  0                  0   \n",
       "4                  0                  0                  0                  0   \n",
       "\n",
       "   DelqCycle_month_9  DelqCycle_month_10  DelqCycle_month_11  \\\n",
       "0                  0                   0                   0   \n",
       "1                  0                   0                   0   \n",
       "2                  0                   0                   0   \n",
       "3                  0                   0                   0   \n",
       "4                  0                   0                   0   \n",
       "\n",
       "   DelqCycle_month_12  DelqCycle_month_13  \n",
       "0                   0                   0  \n",
       "1                   0                   0  \n",
       "2                   0                   0  \n",
       "3                   0                   0  \n",
       "4                   0                   0  "
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pattern = re.compile(\"^DelqCycle_month_[0-9]+$\")\n",
    "pay_status_columns = [ x for x in df.columns if (pattern.match(x))]\n",
    "\n",
    "df[pay_status_columns].head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x720 with 15 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# pay status columns\n",
    "pattern = re.compile(\"^DelqCycle_month_[0-9]+$\")\n",
    "pay_status_columns = [ x for x in df.columns if (pattern.match(x))]\n",
    "\n",
    "fig, ax = plt.subplots(5,3)\n",
    "fig.set_size_inches(15,10)\n",
    "fig.suptitle('Distribution of dalays in the past 13 months')\n",
    "\n",
    "for i in range(len(pay_status_columns)):\n",
    "    row,col = int(i/3), i%3\n",
    "\n",
    "    d  = df[pay_status_columns[i]].value_counts()\n",
    "    ax[row,col].bar(d.index, d, align='center', color='g')\n",
    "    ax[row,col].set_title(pay_status_columns[i])\n",
    "\n",
    "plt.tight_layout(pad=3.0, w_pad=0.5, h_pad=1.0)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>CurrentTotalBalance_month_1</th>\n",
       "      <th>CurrentTotalBalance_month_2</th>\n",
       "      <th>CurrentTotalBalance_month_3</th>\n",
       "      <th>CurrentTotalBalance_month_4</th>\n",
       "      <th>CurrentTotalBalance_month_5</th>\n",
       "      <th>CurrentTotalBalance_month_6</th>\n",
       "      <th>CurrentTotalBalance_month_7</th>\n",
       "      <th>CurrentTotalBalance_month_8</th>\n",
       "      <th>CurrentTotalBalance_month_9</th>\n",
       "      <th>CurrentTotalBalance_month_10</th>\n",
       "      <th>CurrentTotalBalance_month_11</th>\n",
       "      <th>CurrentTotalBalance_month_12</th>\n",
       "      <th>CurrentTotalBalance_month_13</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>11900.000000</td>\n",
       "      <td>11900.000000</td>\n",
       "      <td>11900.000000</td>\n",
       "      <td>11900.000000</td>\n",
       "      <td>11900.000000</td>\n",
       "      <td>11900.000000</td>\n",
       "      <td>11900.000000</td>\n",
       "      <td>11900.000000</td>\n",
       "      <td>11900.000000</td>\n",
       "      <td>11900.000000</td>\n",
       "      <td>11900.000000</td>\n",
       "      <td>11900.000000</td>\n",
       "      <td>11900.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>2453.702857</td>\n",
       "      <td>2450.690000</td>\n",
       "      <td>2388.149778</td>\n",
       "      <td>2441.601539</td>\n",
       "      <td>2484.910157</td>\n",
       "      <td>2551.082613</td>\n",
       "      <td>2626.718535</td>\n",
       "      <td>2661.433488</td>\n",
       "      <td>2677.986791</td>\n",
       "      <td>2787.199703</td>\n",
       "      <td>2791.954050</td>\n",
       "      <td>2838.772817</td>\n",
       "      <td>2945.579359</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>3727.227175</td>\n",
       "      <td>3775.163162</td>\n",
       "      <td>3764.768217</td>\n",
       "      <td>3815.424821</td>\n",
       "      <td>3817.706691</td>\n",
       "      <td>3879.083346</td>\n",
       "      <td>3962.154382</td>\n",
       "      <td>4024.767464</td>\n",
       "      <td>4094.999281</td>\n",
       "      <td>4134.062853</td>\n",
       "      <td>4207.712405</td>\n",
       "      <td>4263.837379</td>\n",
       "      <td>4332.793996</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>341.367500</td>\n",
       "      <td>320.035000</td>\n",
       "      <td>301.997500</td>\n",
       "      <td>320.120000</td>\n",
       "      <td>333.900000</td>\n",
       "      <td>362.677500</td>\n",
       "      <td>385.960000</td>\n",
       "      <td>386.867500</td>\n",
       "      <td>381.397500</td>\n",
       "      <td>420.675000</td>\n",
       "      <td>407.880000</td>\n",
       "      <td>406.985000</td>\n",
       "      <td>447.015000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>1006.985000</td>\n",
       "      <td>988.000000</td>\n",
       "      <td>892.350000</td>\n",
       "      <td>932.840000</td>\n",
       "      <td>1003.830000</td>\n",
       "      <td>1043.900000</td>\n",
       "      <td>1085.755000</td>\n",
       "      <td>1078.980000</td>\n",
       "      <td>1076.250000</td>\n",
       "      <td>1173.790000</td>\n",
       "      <td>1124.845000</td>\n",
       "      <td>1150.090000</td>\n",
       "      <td>1251.120000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>2866.060000</td>\n",
       "      <td>2844.180000</td>\n",
       "      <td>2689.597500</td>\n",
       "      <td>2766.450000</td>\n",
       "      <td>2874.647500</td>\n",
       "      <td>2955.117500</td>\n",
       "      <td>3031.367500</td>\n",
       "      <td>3088.840000</td>\n",
       "      <td>3067.807500</td>\n",
       "      <td>3209.595000</td>\n",
       "      <td>3209.745000</td>\n",
       "      <td>3279.850000</td>\n",
       "      <td>3421.665000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>60238.860000</td>\n",
       "      <td>60122.140000</td>\n",
       "      <td>53568.360000</td>\n",
       "      <td>59245.590000</td>\n",
       "      <td>56904.740000</td>\n",
       "      <td>57308.160000</td>\n",
       "      <td>61218.360000</td>\n",
       "      <td>62879.200000</td>\n",
       "      <td>59398.560000</td>\n",
       "      <td>53433.540000</td>\n",
       "      <td>52767.930000</td>\n",
       "      <td>58537.560000</td>\n",
       "      <td>57351.430000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       CurrentTotalBalance_month_1  CurrentTotalBalance_month_2  \\\n",
       "count                 11900.000000                 11900.000000   \n",
       "mean                   2453.702857                  2450.690000   \n",
       "std                    3727.227175                  3775.163162   \n",
       "min                       0.000000                     0.000000   \n",
       "25%                     341.367500                   320.035000   \n",
       "50%                    1006.985000                   988.000000   \n",
       "75%                    2866.060000                  2844.180000   \n",
       "max                   60238.860000                 60122.140000   \n",
       "\n",
       "       CurrentTotalBalance_month_3  CurrentTotalBalance_month_4  \\\n",
       "count                 11900.000000                 11900.000000   \n",
       "mean                   2388.149778                  2441.601539   \n",
       "std                    3764.768217                  3815.424821   \n",
       "min                       0.000000                     0.000000   \n",
       "25%                     301.997500                   320.120000   \n",
       "50%                     892.350000                   932.840000   \n",
       "75%                    2689.597500                  2766.450000   \n",
       "max                   53568.360000                 59245.590000   \n",
       "\n",
       "       CurrentTotalBalance_month_5  CurrentTotalBalance_month_6  \\\n",
       "count                 11900.000000                 11900.000000   \n",
       "mean                   2484.910157                  2551.082613   \n",
       "std                    3817.706691                  3879.083346   \n",
       "min                       0.000000                     0.000000   \n",
       "25%                     333.900000                   362.677500   \n",
       "50%                    1003.830000                  1043.900000   \n",
       "75%                    2874.647500                  2955.117500   \n",
       "max                   56904.740000                 57308.160000   \n",
       "\n",
       "       CurrentTotalBalance_month_7  CurrentTotalBalance_month_8  \\\n",
       "count                 11900.000000                 11900.000000   \n",
       "mean                   2626.718535                  2661.433488   \n",
       "std                    3962.154382                  4024.767464   \n",
       "min                       0.000000                     0.000000   \n",
       "25%                     385.960000                   386.867500   \n",
       "50%                    1085.755000                  1078.980000   \n",
       "75%                    3031.367500                  3088.840000   \n",
       "max                   61218.360000                 62879.200000   \n",
       "\n",
       "       CurrentTotalBalance_month_9  CurrentTotalBalance_month_10  \\\n",
       "count                 11900.000000                  11900.000000   \n",
       "mean                   2677.986791                   2787.199703   \n",
       "std                    4094.999281                   4134.062853   \n",
       "min                       0.000000                      0.000000   \n",
       "25%                     381.397500                    420.675000   \n",
       "50%                    1076.250000                   1173.790000   \n",
       "75%                    3067.807500                   3209.595000   \n",
       "max                   59398.560000                  53433.540000   \n",
       "\n",
       "       CurrentTotalBalance_month_11  CurrentTotalBalance_month_12  \\\n",
       "count                  11900.000000                  11900.000000   \n",
       "mean                    2791.954050                   2838.772817   \n",
       "std                     4207.712405                   4263.837379   \n",
       "min                        0.000000                      0.000000   \n",
       "25%                      407.880000                    406.985000   \n",
       "50%                     1124.845000                   1150.090000   \n",
       "75%                     3209.745000                   3279.850000   \n",
       "max                    52767.930000                  58537.560000   \n",
       "\n",
       "       CurrentTotalBalance_month_13  \n",
       "count                  11900.000000  \n",
       "mean                    2945.579359  \n",
       "std                     4332.793996  \n",
       "min                        0.000000  \n",
       "25%                      447.015000  \n",
       "50%                     1251.120000  \n",
       "75%                     3421.665000  \n",
       "max                    57351.430000  "
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# bill columns\n",
    "pattern = re.compile(\"^CurrentTotalBalance_month_[0-9]+$\")\n",
    "bill_columns = [ x for x in df.columns if (pattern.match(x))]\n",
    "df[bill_columns].describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>TRANSACTION_AMT_month_1</th>\n",
       "      <th>TRANSACTION_AMT_month_2</th>\n",
       "      <th>TRANSACTION_AMT_month_3</th>\n",
       "      <th>TRANSACTION_AMT_month_4</th>\n",
       "      <th>TRANSACTION_AMT_month_5</th>\n",
       "      <th>TRANSACTION_AMT_month_6</th>\n",
       "      <th>TRANSACTION_AMT_month_7</th>\n",
       "      <th>TRANSACTION_AMT_month_8</th>\n",
       "      <th>TRANSACTION_AMT_month_9</th>\n",
       "      <th>TRANSACTION_AMT_month_10</th>\n",
       "      <th>TRANSACTION_AMT_month_11</th>\n",
       "      <th>TRANSACTION_AMT_month_12</th>\n",
       "      <th>TRANSACTION_AMT_month_13</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>11900.000000</td>\n",
       "      <td>11900.000000</td>\n",
       "      <td>11900.000000</td>\n",
       "      <td>11900.000000</td>\n",
       "      <td>11900.000000</td>\n",
       "      <td>11900.000000</td>\n",
       "      <td>11900.000000</td>\n",
       "      <td>11900.000000</td>\n",
       "      <td>11900.000000</td>\n",
       "      <td>11900.000000</td>\n",
       "      <td>11900.000000</td>\n",
       "      <td>11900.000000</td>\n",
       "      <td>11900.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>49.096527</td>\n",
       "      <td>1108.607426</td>\n",
       "      <td>945.299311</td>\n",
       "      <td>1051.483387</td>\n",
       "      <td>1092.411270</td>\n",
       "      <td>1139.077190</td>\n",
       "      <td>1120.780929</td>\n",
       "      <td>1185.926696</td>\n",
       "      <td>1110.893351</td>\n",
       "      <td>1043.371548</td>\n",
       "      <td>1125.944572</td>\n",
       "      <td>1088.214398</td>\n",
       "      <td>1105.821534</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>383.212228</td>\n",
       "      <td>1770.095193</td>\n",
       "      <td>1696.052824</td>\n",
       "      <td>1747.289992</td>\n",
       "      <td>1811.853025</td>\n",
       "      <td>1799.518515</td>\n",
       "      <td>1913.736010</td>\n",
       "      <td>1931.344952</td>\n",
       "      <td>2026.415532</td>\n",
       "      <td>1903.745721</td>\n",
       "      <td>1991.467925</td>\n",
       "      <td>1812.943638</td>\n",
       "      <td>1880.936562</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>235.272500</td>\n",
       "      <td>171.150000</td>\n",
       "      <td>217.217500</td>\n",
       "      <td>214.000000</td>\n",
       "      <td>239.997500</td>\n",
       "      <td>212.220000</td>\n",
       "      <td>257.437500</td>\n",
       "      <td>230.557500</td>\n",
       "      <td>200.000000</td>\n",
       "      <td>228.237500</td>\n",
       "      <td>214.000000</td>\n",
       "      <td>204.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>622.595000</td>\n",
       "      <td>505.000000</td>\n",
       "      <td>561.560000</td>\n",
       "      <td>606.000000</td>\n",
       "      <td>634.290000</td>\n",
       "      <td>604.565000</td>\n",
       "      <td>657.730000</td>\n",
       "      <td>612.380000</td>\n",
       "      <td>554.365000</td>\n",
       "      <td>612.530000</td>\n",
       "      <td>599.120000</td>\n",
       "      <td>595.400000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>1335.045000</td>\n",
       "      <td>1112.000000</td>\n",
       "      <td>1260.175000</td>\n",
       "      <td>1320.760000</td>\n",
       "      <td>1413.660000</td>\n",
       "      <td>1353.825000</td>\n",
       "      <td>1428.310000</td>\n",
       "      <td>1341.197500</td>\n",
       "      <td>1256.000000</td>\n",
       "      <td>1358.647500</td>\n",
       "      <td>1324.985000</td>\n",
       "      <td>1358.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>19943.000000</td>\n",
       "      <td>54320.000000</td>\n",
       "      <td>46293.400000</td>\n",
       "      <td>51857.000000</td>\n",
       "      <td>49347.650000</td>\n",
       "      <td>51456.690000</td>\n",
       "      <td>60349.720000</td>\n",
       "      <td>63990.260000</td>\n",
       "      <td>118084.860000</td>\n",
       "      <td>92180.000000</td>\n",
       "      <td>75560.000000</td>\n",
       "      <td>54407.140000</td>\n",
       "      <td>68565.250000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       TRANSACTION_AMT_month_1  TRANSACTION_AMT_month_2  \\\n",
       "count             11900.000000             11900.000000   \n",
       "mean                 49.096527              1108.607426   \n",
       "std                 383.212228              1770.095193   \n",
       "min                   0.000000                 0.000000   \n",
       "25%                   0.000000               235.272500   \n",
       "50%                   0.000000               622.595000   \n",
       "75%                   0.000000              1335.045000   \n",
       "max               19943.000000             54320.000000   \n",
       "\n",
       "       TRANSACTION_AMT_month_3  TRANSACTION_AMT_month_4  \\\n",
       "count             11900.000000             11900.000000   \n",
       "mean                945.299311              1051.483387   \n",
       "std                1696.052824              1747.289992   \n",
       "min                   0.000000                 0.000000   \n",
       "25%                 171.150000               217.217500   \n",
       "50%                 505.000000               561.560000   \n",
       "75%                1112.000000              1260.175000   \n",
       "max               46293.400000             51857.000000   \n",
       "\n",
       "       TRANSACTION_AMT_month_5  TRANSACTION_AMT_month_6  \\\n",
       "count             11900.000000             11900.000000   \n",
       "mean               1092.411270              1139.077190   \n",
       "std                1811.853025              1799.518515   \n",
       "min                   0.000000                 0.000000   \n",
       "25%                 214.000000               239.997500   \n",
       "50%                 606.000000               634.290000   \n",
       "75%                1320.760000              1413.660000   \n",
       "max               49347.650000             51456.690000   \n",
       "\n",
       "       TRANSACTION_AMT_month_7  TRANSACTION_AMT_month_8  \\\n",
       "count             11900.000000             11900.000000   \n",
       "mean               1120.780929              1185.926696   \n",
       "std                1913.736010              1931.344952   \n",
       "min                   0.000000                 0.000000   \n",
       "25%                 212.220000               257.437500   \n",
       "50%                 604.565000               657.730000   \n",
       "75%                1353.825000              1428.310000   \n",
       "max               60349.720000             63990.260000   \n",
       "\n",
       "       TRANSACTION_AMT_month_9  TRANSACTION_AMT_month_10  \\\n",
       "count             11900.000000              11900.000000   \n",
       "mean               1110.893351               1043.371548   \n",
       "std                2026.415532               1903.745721   \n",
       "min                   0.000000                  0.000000   \n",
       "25%                 230.557500                200.000000   \n",
       "50%                 612.380000                554.365000   \n",
       "75%                1341.197500               1256.000000   \n",
       "max              118084.860000              92180.000000   \n",
       "\n",
       "       TRANSACTION_AMT_month_11  TRANSACTION_AMT_month_12  \\\n",
       "count              11900.000000              11900.000000   \n",
       "mean                1125.944572               1088.214398   \n",
       "std                 1991.467925               1812.943638   \n",
       "min                    0.000000                  0.000000   \n",
       "25%                  228.237500                214.000000   \n",
       "50%                  612.530000                599.120000   \n",
       "75%                 1358.647500               1324.985000   \n",
       "max                75560.000000              54407.140000   \n",
       "\n",
       "       TRANSACTION_AMT_month_13  \n",
       "count              11900.000000  \n",
       "mean                1105.821534  \n",
       "std                 1880.936562  \n",
       "min                    0.000000  \n",
       "25%                  204.000000  \n",
       "50%                  595.400000  \n",
       "75%                 1358.000000  \n",
       "max                68565.250000  "
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# pay status columns\n",
    "pattern = re.compile(\"^TRANSACTION_AMT_month_[0-9]+$\")\n",
    "pay_amount_columns = [ x for x in df.columns if (pattern.match(x))]\n",
    "df[pay_amount_columns].describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>TRANSACTION_AMT_month_1</th>\n",
       "      <th>TRANSACTION_AMT_month_2</th>\n",
       "      <th>TRANSACTION_AMT_month_3</th>\n",
       "      <th>TRANSACTION_AMT_month_4</th>\n",
       "      <th>TRANSACTION_AMT_month_5</th>\n",
       "      <th>TRANSACTION_AMT_month_6</th>\n",
       "      <th>TRANSACTION_AMT_month_7</th>\n",
       "      <th>TRANSACTION_AMT_month_8</th>\n",
       "      <th>TRANSACTION_AMT_month_9</th>\n",
       "      <th>TRANSACTION_AMT_month_10</th>\n",
       "      <th>TRANSACTION_AMT_month_11</th>\n",
       "      <th>TRANSACTION_AMT_month_12</th>\n",
       "      <th>TRANSACTION_AMT_month_13</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.0</td>\n",
       "      <td>262.50</td>\n",
       "      <td>303.00</td>\n",
       "      <td>200.00</td>\n",
       "      <td>288.80</td>\n",
       "      <td>176.80</td>\n",
       "      <td>303.00</td>\n",
       "      <td>618.00</td>\n",
       "      <td>267.50</td>\n",
       "      <td>226.60</td>\n",
       "      <td>244.80</td>\n",
       "      <td>250.00</td>\n",
       "      <td>273.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.0</td>\n",
       "      <td>494.60</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1076.25</td>\n",
       "      <td>454.50</td>\n",
       "      <td>412.00</td>\n",
       "      <td>884.00</td>\n",
       "      <td>252.50</td>\n",
       "      <td>393.90</td>\n",
       "      <td>476.89</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.0</td>\n",
       "      <td>429.07</td>\n",
       "      <td>144.45</td>\n",
       "      <td>742.64</td>\n",
       "      <td>970.78</td>\n",
       "      <td>792.38</td>\n",
       "      <td>371.28</td>\n",
       "      <td>257.25</td>\n",
       "      <td>185.64</td>\n",
       "      <td>433.63</td>\n",
       "      <td>317.10</td>\n",
       "      <td>1311.69</td>\n",
       "      <td>831.10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.0</td>\n",
       "      <td>1074.75</td>\n",
       "      <td>463.05</td>\n",
       "      <td>2123.44</td>\n",
       "      <td>1137.76</td>\n",
       "      <td>640.56</td>\n",
       "      <td>0.00</td>\n",
       "      <td>2132.52</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1899.86</td>\n",
       "      <td>159.67</td>\n",
       "      <td>605.54</td>\n",
       "      <td>971.70</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.0</td>\n",
       "      <td>1129.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>894.40</td>\n",
       "      <td>2307.54</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1168.12</td>\n",
       "      <td>1416.78</td>\n",
       "      <td>3281.55</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1238.00</td>\n",
       "      <td>1723.28</td>\n",
       "      <td>1165.84</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>0.0</td>\n",
       "      <td>1849.60</td>\n",
       "      <td>1410.79</td>\n",
       "      <td>493.00</td>\n",
       "      <td>953.32</td>\n",
       "      <td>95.17</td>\n",
       "      <td>430.29</td>\n",
       "      <td>609.15</td>\n",
       "      <td>551.38</td>\n",
       "      <td>1599.93</td>\n",
       "      <td>430.22</td>\n",
       "      <td>1836.04</td>\n",
       "      <td>1889.59</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>0.0</td>\n",
       "      <td>202.00</td>\n",
       "      <td>262.75</td>\n",
       "      <td>2905.05</td>\n",
       "      <td>540.57</td>\n",
       "      <td>652.00</td>\n",
       "      <td>208.00</td>\n",
       "      <td>2259.10</td>\n",
       "      <td>668.50</td>\n",
       "      <td>1155.00</td>\n",
       "      <td>1973.90</td>\n",
       "      <td>321.00</td>\n",
       "      <td>310.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1472.00</td>\n",
       "      <td>1024.59</td>\n",
       "      <td>1769.54</td>\n",
       "      <td>0.00</td>\n",
       "      <td>599.96</td>\n",
       "      <td>714.48</td>\n",
       "      <td>895.59</td>\n",
       "      <td>395.90</td>\n",
       "      <td>1173.79</td>\n",
       "      <td>651.00</td>\n",
       "      <td>1416.45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>0.0</td>\n",
       "      <td>204.00</td>\n",
       "      <td>206.00</td>\n",
       "      <td>204.00</td>\n",
       "      <td>312.00</td>\n",
       "      <td>2040.00</td>\n",
       "      <td>400.00</td>\n",
       "      <td>500.00</td>\n",
       "      <td>420.00</td>\n",
       "      <td>782.25</td>\n",
       "      <td>343.74</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1203.09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>0.0</td>\n",
       "      <td>360.00</td>\n",
       "      <td>342.39</td>\n",
       "      <td>437.58</td>\n",
       "      <td>388.41</td>\n",
       "      <td>506.94</td>\n",
       "      <td>348.74</td>\n",
       "      <td>508.20</td>\n",
       "      <td>802.70</td>\n",
       "      <td>0.00</td>\n",
       "      <td>552.30</td>\n",
       "      <td>204.00</td>\n",
       "      <td>227.85</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   TRANSACTION_AMT_month_1  TRANSACTION_AMT_month_2  TRANSACTION_AMT_month_3  \\\n",
       "0                      0.0                   262.50                   303.00   \n",
       "1                      0.0                   494.60                     0.00   \n",
       "2                      0.0                   429.07                   144.45   \n",
       "3                      0.0                  1074.75                   463.05   \n",
       "4                      0.0                  1129.00                     0.00   \n",
       "5                      0.0                  1849.60                  1410.79   \n",
       "6                      0.0                   202.00                   262.75   \n",
       "7                      0.0                     0.00                  1472.00   \n",
       "8                      0.0                   204.00                   206.00   \n",
       "9                      0.0                   360.00                   342.39   \n",
       "\n",
       "   TRANSACTION_AMT_month_4  TRANSACTION_AMT_month_5  TRANSACTION_AMT_month_6  \\\n",
       "0                   200.00                   288.80                   176.80   \n",
       "1                     0.00                  1076.25                   454.50   \n",
       "2                   742.64                   970.78                   792.38   \n",
       "3                  2123.44                  1137.76                   640.56   \n",
       "4                   894.40                  2307.54                     0.00   \n",
       "5                   493.00                   953.32                    95.17   \n",
       "6                  2905.05                   540.57                   652.00   \n",
       "7                  1024.59                  1769.54                     0.00   \n",
       "8                   204.00                   312.00                  2040.00   \n",
       "9                   437.58                   388.41                   506.94   \n",
       "\n",
       "   TRANSACTION_AMT_month_7  TRANSACTION_AMT_month_8  TRANSACTION_AMT_month_9  \\\n",
       "0                   303.00                   618.00                   267.50   \n",
       "1                   412.00                   884.00                   252.50   \n",
       "2                   371.28                   257.25                   185.64   \n",
       "3                     0.00                  2132.52                     0.00   \n",
       "4                  1168.12                  1416.78                  3281.55   \n",
       "5                   430.29                   609.15                   551.38   \n",
       "6                   208.00                  2259.10                   668.50   \n",
       "7                   599.96                   714.48                   895.59   \n",
       "8                   400.00                   500.00                   420.00   \n",
       "9                   348.74                   508.20                   802.70   \n",
       "\n",
       "   TRANSACTION_AMT_month_10  TRANSACTION_AMT_month_11  \\\n",
       "0                    226.60                    244.80   \n",
       "1                    393.90                    476.89   \n",
       "2                    433.63                    317.10   \n",
       "3                   1899.86                    159.67   \n",
       "4                      0.00                   1238.00   \n",
       "5                   1599.93                    430.22   \n",
       "6                   1155.00                   1973.90   \n",
       "7                    395.90                   1173.79   \n",
       "8                    782.25                    343.74   \n",
       "9                      0.00                    552.30   \n",
       "\n",
       "   TRANSACTION_AMT_month_12  TRANSACTION_AMT_month_13  \n",
       "0                    250.00                    273.00  \n",
       "1                      0.00                      0.00  \n",
       "2                   1311.69                    831.10  \n",
       "3                    605.54                    971.70  \n",
       "4                   1723.28                   1165.84  \n",
       "5                   1836.04                   1889.59  \n",
       "6                    321.00                    310.00  \n",
       "7                    651.00                   1416.45  \n",
       "8                      0.00                   1203.09  \n",
       "9                    204.00                    227.85  "
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df[pay_amount_columns].head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>CashBalance_month_1</th>\n",
       "      <th>CashBalance_month_2</th>\n",
       "      <th>CashBalance_month_3</th>\n",
       "      <th>CashBalance_month_4</th>\n",
       "      <th>CashBalance_month_5</th>\n",
       "      <th>CashBalance_month_6</th>\n",
       "      <th>CashBalance_month_7</th>\n",
       "      <th>CashBalance_month_8</th>\n",
       "      <th>CashBalance_month_9</th>\n",
       "      <th>CashBalance_month_10</th>\n",
       "      <th>CashBalance_month_11</th>\n",
       "      <th>CashBalance_month_12</th>\n",
       "      <th>CashBalance_month_13</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>11900.000000</td>\n",
       "      <td>11900.000000</td>\n",
       "      <td>11900.000000</td>\n",
       "      <td>11900.000000</td>\n",
       "      <td>11900.000000</td>\n",
       "      <td>11900.000000</td>\n",
       "      <td>11900.000000</td>\n",
       "      <td>11900.000000</td>\n",
       "      <td>11900.000000</td>\n",
       "      <td>11900.000000</td>\n",
       "      <td>11900.000000</td>\n",
       "      <td>11900.000000</td>\n",
       "      <td>11900.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>88.278865</td>\n",
       "      <td>90.969730</td>\n",
       "      <td>93.382460</td>\n",
       "      <td>97.103634</td>\n",
       "      <td>95.422595</td>\n",
       "      <td>93.761534</td>\n",
       "      <td>98.501786</td>\n",
       "      <td>98.460611</td>\n",
       "      <td>107.745553</td>\n",
       "      <td>115.916637</td>\n",
       "      <td>118.464271</td>\n",
       "      <td>121.212502</td>\n",
       "      <td>124.735218</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>467.012758</td>\n",
       "      <td>475.114842</td>\n",
       "      <td>495.055449</td>\n",
       "      <td>504.568718</td>\n",
       "      <td>514.730228</td>\n",
       "      <td>495.563022</td>\n",
       "      <td>497.795561</td>\n",
       "      <td>506.371634</td>\n",
       "      <td>550.858261</td>\n",
       "      <td>594.802569</td>\n",
       "      <td>615.328495</td>\n",
       "      <td>642.692908</td>\n",
       "      <td>683.630438</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>11335.150000</td>\n",
       "      <td>11307.920000</td>\n",
       "      <td>11082.240000</td>\n",
       "      <td>10703.760000</td>\n",
       "      <td>12611.870000</td>\n",
       "      <td>10795.050000</td>\n",
       "      <td>12291.700000</td>\n",
       "      <td>14471.760000</td>\n",
       "      <td>16992.560000</td>\n",
       "      <td>16640.000000</td>\n",
       "      <td>16044.000000</td>\n",
       "      <td>15148.640000</td>\n",
       "      <td>15983.400000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       CashBalance_month_1  CashBalance_month_2  CashBalance_month_3  \\\n",
       "count         11900.000000         11900.000000         11900.000000   \n",
       "mean             88.278865            90.969730            93.382460   \n",
       "std             467.012758           475.114842           495.055449   \n",
       "min               0.000000             0.000000             0.000000   \n",
       "25%               0.000000             0.000000             0.000000   \n",
       "50%               0.000000             0.000000             0.000000   \n",
       "75%               0.000000             0.000000             0.000000   \n",
       "max           11335.150000         11307.920000         11082.240000   \n",
       "\n",
       "       CashBalance_month_4  CashBalance_month_5  CashBalance_month_6  \\\n",
       "count         11900.000000         11900.000000         11900.000000   \n",
       "mean             97.103634            95.422595            93.761534   \n",
       "std             504.568718           514.730228           495.563022   \n",
       "min               0.000000             0.000000             0.000000   \n",
       "25%               0.000000             0.000000             0.000000   \n",
       "50%               0.000000             0.000000             0.000000   \n",
       "75%               0.000000             0.000000             0.000000   \n",
       "max           10703.760000         12611.870000         10795.050000   \n",
       "\n",
       "       CashBalance_month_7  CashBalance_month_8  CashBalance_month_9  \\\n",
       "count         11900.000000         11900.000000         11900.000000   \n",
       "mean             98.501786            98.460611           107.745553   \n",
       "std             497.795561           506.371634           550.858261   \n",
       "min               0.000000             0.000000             0.000000   \n",
       "25%               0.000000             0.000000             0.000000   \n",
       "50%               0.000000             0.000000             0.000000   \n",
       "75%               0.000000             0.000000             0.000000   \n",
       "max           12291.700000         14471.760000         16992.560000   \n",
       "\n",
       "       CashBalance_month_10  CashBalance_month_11  CashBalance_month_12  \\\n",
       "count          11900.000000          11900.000000          11900.000000   \n",
       "mean             115.916637            118.464271            121.212502   \n",
       "std              594.802569            615.328495            642.692908   \n",
       "min                0.000000              0.000000              0.000000   \n",
       "25%                0.000000              0.000000              0.000000   \n",
       "50%                0.000000              0.000000              0.000000   \n",
       "75%                0.000000              0.000000              0.000000   \n",
       "max            16640.000000          16044.000000          15148.640000   \n",
       "\n",
       "       CashBalance_month_13  \n",
       "count          11900.000000  \n",
       "mean             124.735218  \n",
       "std              683.630438  \n",
       "min                0.000000  \n",
       "25%                0.000000  \n",
       "50%                0.000000  \n",
       "75%                0.000000  \n",
       "max            15983.400000  "
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# pay status columns\n",
    "pattern = re.compile(\"^CashBalance_month_[0-9]+$\")\n",
    "pay_amount_columns = [ x for x in df.columns if (pattern.match(x))]\n",
    "df[pay_amount_columns].describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>CashBalance_month_1</th>\n",
       "      <th>CashBalance_month_2</th>\n",
       "      <th>CashBalance_month_3</th>\n",
       "      <th>CashBalance_month_4</th>\n",
       "      <th>CashBalance_month_5</th>\n",
       "      <th>CashBalance_month_6</th>\n",
       "      <th>CashBalance_month_7</th>\n",
       "      <th>CashBalance_month_8</th>\n",
       "      <th>CashBalance_month_9</th>\n",
       "      <th>CashBalance_month_10</th>\n",
       "      <th>CashBalance_month_11</th>\n",
       "      <th>CashBalance_month_12</th>\n",
       "      <th>CashBalance_month_13</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.0</td>\n",
       "      <td>350.00</td>\n",
       "      <td>1148.45</td>\n",
       "      <td>2567.25</td>\n",
       "      <td>3307.33</td>\n",
       "      <td>4293.12</td>\n",
       "      <td>5224.44</td>\n",
       "      <td>5127.54</td>\n",
       "      <td>4753.35</td>\n",
       "      <td>4616.46</td>\n",
       "      <td>4786.08</td>\n",
       "      <td>4818.48</td>\n",
       "      <td>4791.44</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.0</td>\n",
       "      <td>236.08</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.01</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>20.00</td>\n",
       "      <td>0.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   CashBalance_month_1  CashBalance_month_2  CashBalance_month_3  \\\n",
       "0                  0.0               350.00              1148.45   \n",
       "1                  0.0               236.08                 0.00   \n",
       "2                  0.0                 0.00                 0.00   \n",
       "3                  0.0                 0.00                 0.00   \n",
       "4                  0.0                 0.00                 0.00   \n",
       "\n",
       "   CashBalance_month_4  CashBalance_month_5  CashBalance_month_6  \\\n",
       "0              2567.25              3307.33              4293.12   \n",
       "1                 0.00                 1.01                 0.00   \n",
       "2                 0.00                 0.00                 0.00   \n",
       "3                 0.00                 0.00                 0.00   \n",
       "4                 0.00                 0.00                 0.00   \n",
       "\n",
       "   CashBalance_month_7  CashBalance_month_8  CashBalance_month_9  \\\n",
       "0              5224.44              5127.54              4753.35   \n",
       "1                 0.00                 0.00                 0.00   \n",
       "2                 0.00                 0.00                 0.00   \n",
       "3                 0.00                 0.00                 0.00   \n",
       "4                 0.00                 0.00                 0.00   \n",
       "\n",
       "   CashBalance_month_10  CashBalance_month_11  CashBalance_month_12  \\\n",
       "0               4616.46               4786.08               4818.48   \n",
       "1                  0.00                  0.00                 20.00   \n",
       "2                  0.00                  0.00                  0.00   \n",
       "3                  0.00                  0.00                  0.00   \n",
       "4                  0.00                  0.00                  0.00   \n",
       "\n",
       "   CashBalance_month_13  \n",
       "0               4791.44  \n",
       "1                  0.00  \n",
       "2                  0.00  \n",
       "3                  0.00  \n",
       "4                  0.00  "
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df[pay_amount_columns].head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "count    11900.000000\n",
       "mean      7347.699244\n",
       "std       6610.368903\n",
       "min        300.000000\n",
       "25%       2100.000000\n",
       "50%       5300.000000\n",
       "75%      10300.000000\n",
       "max      80200.000000\n",
       "Name: CreditLimit, dtype: float64"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['CreditLimit'].describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 4320x2160 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig = plt.figure()\n",
    "fig.set_size_inches(60,30)\n",
    "ax = fig.add_subplot(111)\n",
    "fbins = [0,10000,20000,30000,40000,50000,60000,70000,80000,90000,10000]\n",
    "\n",
    "d = df.groupby(['CreditLimit']).size()\n",
    "ax.set_yscale(\"log\")\n",
    "ax.set_xticks(np.arange(len(d)))\n",
    "ax.set_xticklabels(['%d' % i for i in d.index], rotation='vertical')\n",
    "p = ax.bar(np.arange(len(d)), d, color='purple')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "defaulting accounts are 19.33613445378151% out of 11900 observations\n"
     ]
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAmcAAAE0CAYAAABpQJTVAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADl0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uIDIuMi4yLCBodHRwOi8vbWF0cGxvdGxpYi5vcmcvhp/UCwAAEDpJREFUeJzt3XuspHddx/HP2gOEi9jC8dLdVlukVGsTRRQaMaZysyCxGslPCkIFtAZBbiYqxoQASqpRsAlQU1uEEqR+qUT5A2iQazQFSsHY1Goo1263WpaW0oChFNY/5tmyHLqXs50z5zvO65VMzswzs8/8zv722fM+z/PMzI59+/YFAIAevmu7BwAAwLeIMwCARsQZAEAj4gwAoBFxBgDQiDgDAGhEnAEANCLOAAAaEWcAAI10jzMfXwAALIu5dMvaPFayxQQaALAy2sfZnj17tnsIHIX19fXs3bt3u4fBUTB3y8m8LS9zt7w2zt3OnTvnst7uhzUBAFaKOAMAaEScAQA0Is4AABoRZwAAjYgzAIBGxBkAQCPiDACgEXEGANCIOAMAaEScAQA0Is4AABoRZwAAjYgzAIBGxBkAQCPiDACgEXEGANCIOAMAaEScAQA0Is4AABoRZwAAjYgzAIBGxBkAQCPiDACgEXEGANCIOAMAaEScAQA0Is4AABoRZwAAjYgzAIBGxBkAQCNr2z2Aw9n5gV3bPQSO0s578Gf3nHnj3MYBAMvEnjMAgEbEGQBAI+IMAKARcQYA0Ig4AwBoRJwBADQizgAAGhFnAACNiDMAgEbEGQBAI+IMAKARcQYA0Ig4AwBoRJwBADQizgAAGhFnAACNiDMAgEbEGQBAI+IMAKARcQYA0Ig4AwBoRJwBADQizgAAGhFnAACNiDMAgEbEGQBAI+IMAKARcQYA0Ig4AwBoRJwBADSytognGWO8IcmTk9xcVacv4jkBAJbRovacvTHJWQt6LgCApbWQOKuqDyW5ZRHPBQCwzBZyWHMzxhjnJTkvSapqm0fDdllfX9/uIaystbU1f/9LyLwtL3O3vLZq7trFWVVdlOSi6ea+7RwL22fv3r3bPYSVtb6+7u9/CZm35WXultfGudu5c+dc1uvVmgAAjYgzAIBGFhJnY4y3JrkyyaljjN1jjOcs4nkBAJbNQs45q6pzFvE8AADLzmFNAIBGxBkAQCPiDACgEXEGANCIOAMAaEScAQA0Is4AABoRZwAAjYgzAIBGxBkAQCPiDACgEXEGANCIOAMAaEScAQA0Is4AABoRZwAAjYgzAIBGxBkAQCPiDACgEXEGANCIOAMAaEScAQA0Is4AABoRZwAAjYgzAIBGxBkAQCPiDACgEXEGANDI2nYP4HD2nHnjdg+Bo7C+vp69e/du9zAAYOnYcwYA0Ig4AwBoRJwBADQizgAAGhFnAACNiDMAgEbEGQBAI+IMAKARcQYA0Ig4AwBoRJwBADQizgAAGhFnAACNiDMAgEbEGQBAI0ccZ2OMTxxk+cfmNxwAgNW2mT1nD924YIyxI8lD5jccAIDVtna4B4wxLp2u3vuA6/udlOTaeQ8KAGBVHTbOknzqINf3JfnXJG+b64gAAFbYYeOsql6eJGOMD1fVFVs/JACA1XXIOBtjPOaAm1/fcPsuVfW+uY4KAGBFHW7P2SVHsI598aIAAIC5OGScVdXJixoIAADehBYAoJUjebVmkmSMcUNmhzC/Q1X94NxGBACwwo44zpL8+obbxyd5YZLL5jccAIDVdsRxVlUf3LhsjPGBJO9OcsEcxwQAsLLu6TlnX0viRQMAAHOymXPOXrFh0f2SPCnJu+Y6IgCAFbaZc85O3HD7K0leneTN8xsOAMBq28w5Z8/ayoEAALC5PWcZY9w7yalJ1pPs2L/cxzcBAMzHZs45+9kkb0tynyQPTPLlJN+d5Ib4+CYAgLnYzKs1X5Pkz6vqQUlun76+Msnrt2RkAAAraDNx9rB85/uZnZ/kxfMbDgDAattMnN2W2eHMJLlpjHFakuOSPGDuowIAWFGbibO3Z/a+ZklySZL3J7k6s/PQAACYg0PG2RjjuP3Xq+pFVfV30/W/TPKrSX4ryXlbOkIAgBVyuFdrfi7Tocwxxj9X1eP231FV/7KVAwMAWEWHi7OvjjFOT3JdkkeOMXbkgPc326+qvrkVgwMAWDWHi7OXJ/loZu9tliR3brh/R5J9SY6Z87gAAFbSIc85q6oLMzus+UNJ/jezN5v94enrQ5KcHG9ACwAwN4f9hICqujPJ7jHGw6vqcwsYEwDAytrMZ2t+fozxp0nOSfLgqvqeMcYTkjysql67NcMDAFgtm/34ptOTPD2z88yS5Nokz533oAAAVtVm4uxXkjytqq5M8s0kqaobk+zaioEBAKyizcTZHdlwGHSM8b1JvjjXEQEArLDNxNnbkrxpjHFykowxjk/y2iSXbcXAAABW0Wbi7I+SfCbJNUmOTfLJJDdl9l5oAADMwWZerfnQJP+Z5FWZvensP1bVNVsyKgCAFXXYOJs+sumSJOcm2Z1kT2YvAnjZGOPNSZ5dVfsOsQoAAI7Qkew5Oy/JmUnOqKqr9i8cY/x0krcm+e0kf70lowMAWDFHcs7ZM5K84MAwS5Lp9oum+wEAmIMjibPTknzwIPd9cLofAIA5OJI4O6aqbr+7O6blm3nFJwAAh3Ak55zda4zx80l23IN1AABwBI4krG5O8obD3A8AwBwcNs6q6qQFjAMAgDhfDACgFXEGANCIOAMAaEScAQA0Is4AABoRZwAAjYgzAIBGxBkAQCPiDACgkfafi7nzA7u2ewgcpZ3bPQCOmrlbTuZteZm7rbXnzBu3ewibYs8ZAEAj4gwAoBFxBgDQiDgDAGhEnAEANCLOAAAaEWcAAI2IMwCARsQZAEAj4gwAoBFxBgDQiDgDAGhEnAEANCLOAAAaEWcAAI2IMwCARsQZAEAj4gwAoBFxBgDQiDgDAGhEnAEANCLOAAAaEWcAAI2IMwCARsQZAEAj4gwAoBFxBgDQiDgDAGhEnAEANCLOAAAaWVvUE40xzkpyQZJjklxcVecv6rkBAJbFQvacjTGOSfK6JE9MclqSc8YYpy3iuQEAlsmiDms+Msn1VfXpqrojyWVJzl7QcwMALI1FHdbcleSGA27vTvKou3vgGOO8JOclSVVt/cgAgP/X1tfXt2S9a2trW7LuRcXZjrtZtu/uHlhVFyW56FCPAQA4Unv37t2S9a6vr3/bunfu3DmX9S7qsObuJCcecPuEJHsW9NwAAEtjUXvOrkpyyhjj5CQ3Jnlqkqct6LkBAJbGQvacVdWdSZ6f5Iok180W1bWLeG4AgGWysPc5q6p3Jnnnop4PAGAZ+YQAAIBGxBkAQCPiDACgEXEGANCIOAMAaEScAQA0Is4AABoRZwAAjYgzAIBGxBkAQCPiDACgEXEGANCIOAMAaEScAQA0Is4AABoRZwAAjYgzAIBGxBkAQCPiDACgEXEGANCIOAMAaEScAQA0Is4AABoRZwAAjYgzAIBGxBkAQCPiDACgEXEGANDI2nYP4HD2nHnjdg+Bo7C+vp69e/du9zA4CuZuOZm35WXu2MieMwCARsQZAEAj4gwAoBFxBgDQiDgDAGhEnAEANCLOAAAaEWcAAI2IMwCARsQZAEAj4gwAoBFxBgDQiDgDAGhEnAEANCLOAAAaEWcAAI2IMwCARsQZAEAj4gwAoBFxBgDQiDgDAGhEnAEANCLOAAAaEWcAAI2IMwCARsQZAEAj4gwAoBFxBgDQiDgDAGhEnAEANCLOAAAaEWcAAI2IMwCARnbs27dvu8dwKK0HBwCwwY57uoLWe87GGFdn9k26LNnF3C3vxdwt58W8Le/F3C3v5SBzd4+1jjMAgFUjzgAAGukeZxdt9wA4auZueZm75WTelpe5W15bMnfdXxAAALBSuu85AwBYKeIMAKARcQYA0Mjadg/gYMYYZyW5IMkxSS6uqvO3eUgrbYxxYpJLk/xAkm8muaiqLhhjPCjJ3yc5Kclnk4yqunWMsSOz+XtSkq8m+Y2q+vi0rnOT/PG06j+pqjct8ntZRWOMY5J8LMmNVfXkMcbJSS5L8qAkH0/yjKq6Y4xxn8zm+RFJvpjk16rqs9M6XprkOUm+keQFVXXF4r+T1TLGODbJxUlOz+xNuZ+d5L9im2tvjPHiJL+Z2bxdk+RZSY6P7a6dMcYbkjw5yc1Vdfq0bG4/28YYj0jyxiT3TfLOJC+sqkOe8N9yz9n0g+R1SZ6Y5LQk54wxTtveUa28O5P8XlX9aJIzkjxvmpM/TPLeqjolyXun28ls7k6ZLucluTC56x/8y5I8Kskjk7xsjHHcIr+RFfXCJNcdcPvPkrxmmrdbM/vPP9PXW6vqoUleMz0u01w/NcmPJTkryeun7ZStdUGSd1fVjyT58czm0DbX3BhjV5IXJPmp6Yf9MZltP7a7nt6Y2d/vgea5nV04PXb/n9v4XN+hZZxl9o1dX1Wfrqo7MvtN4+xtHtNKq6qb9v92UFW3Z/ZDYldm87L/t/A3Jfnl6frZSS6tqn1V9eEkx44xjk/yC0neU1W3VNWtSd6TI/iHytEbY5yQ5Bcz2wOT6Te/xyS5fHrIxnnbP5+XJ3ns9Pizk1xWVV+rqs8kuT6z7ZQtMsZ4YJKfS3JJklTVHVX1pdjmlsVakvuOMdaS3C/JTbHdtVRVH0pyy4bFc9nOpvseWFVXTnvLLj1gXQfVNc52JbnhgNu7p2U0MMY4KcnDk3wkyfdX1U3JLOCSfN/0sIPNobldvL9K8vuZHY5Okgcn+VJV3TndPnAO7pqf6f7bpsebt8V7SJIvJPnbMcYnxhgXjzHuH9tce1V1Y5K/SPL5zKLstiRXx3a3TOa1ne2arm9cfkhd4+zuPpvKG7I1MMZ4QJJ/SPKiqvryIR56sDk0tws0xth/HsXVByw+1ByYtz7Wkvxkkgur6uFJvpJvHVq5O+auielw1tlJTk6yM8n9MzsctpHtbvlsdq6Oag67xtnuJCcecPuEJHu2aSxMxhj3yizM3lJVb58W/8+02zbT15un5QebQ3O7WI9O8ktjjM9mdnrAYzLbk3bsdLgl+fY5uGt+pvu/J7Pd/eZt8XYn2V1VH5luX55ZrNnm+ntcks9U1Req6utJ3p7kZ2K7Wybz2s52T9c3Lj+krnF2VZJTxhgnjzHundkJke/Y5jGttOn8h0uSXFdVrz7grnckOXe6fm6Sfzpg+TPHGDvGGGckuW3aNXxFkieMMY6bfrt8wrSMLVBVL62qE6rqpMy2o/dV1dOTvD/JU6aHbZy3/fP5lOnx+6blTx1j3Gd6pecpST66oG9jJVXVfye5YYxx6rTosUn+I7a5ZfD5JGeMMe43/d+5f+5sd8tjLtvZdN/tY4wzpn8LzzxgXQfVMs6mY+7Pz+ybvW62qK7d3lGtvEcneUaSx4wx/m26PCnJ+UkeP8b4ZJLHT7eT2cuFP53ZCax/k+R3kqSqbknyyswC/Kokr5iWsVh/kOQlY4zrMzu35ZJp+SVJHjwtf0mmw2jT9leZ/YB5d5LnVdU3Fj7q1fO7Sd4yxvj3JD+R5FWxzbU37e28PLO3y7gms5+1F8V219IY461Jrkxy6hhj9xjjOZnvdvbczF6QdX2STyV51+HG5LM1AQAaabnnDABgVYkzAIBGxBkAQCPiDACgEXEGANCIOAMAaEScAQA0Is4AABr5P9cLIVmk/V4gAAAAAElFTkSuQmCC\n",
      "text/plain": [
       "<Figure size 720x360 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig = plt.figure()\n",
    "fig.set_size_inches(10,5)\n",
    "d = df.groupby(['Default']).size()\n",
    "\n",
    "print(\"defaulting accounts are {}% out of {} observations\".format(100* d[1]/(d[1]+d[0]), d[1]+d[0]))\n",
    "p = d.plot(kind='barh', color='orange')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [],
   "source": [
    "# help func\n",
    "def selcols(prefix, a=1, b=13):\n",
    "    return [prefix+str(i) for i in np.arange(a,b+1)]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ID_CPTE</th>\n",
       "      <th>CreditLimit</th>\n",
       "      <th>Default</th>\n",
       "      <th>CurrentTotalBalance_month_1</th>\n",
       "      <th>CurrentTotalBalance_month_2</th>\n",
       "      <th>CurrentTotalBalance_month_3</th>\n",
       "      <th>CurrentTotalBalance_month_4</th>\n",
       "      <th>CurrentTotalBalance_month_5</th>\n",
       "      <th>CurrentTotalBalance_month_6</th>\n",
       "      <th>CurrentTotalBalance_month_7</th>\n",
       "      <th>...</th>\n",
       "      <th>TRANSACTION_AMT_month_6</th>\n",
       "      <th>TRANSACTION_AMT_month_7</th>\n",
       "      <th>TRANSACTION_AMT_month_8</th>\n",
       "      <th>TRANSACTION_AMT_month_9</th>\n",
       "      <th>TRANSACTION_AMT_month_10</th>\n",
       "      <th>TRANSACTION_AMT_month_11</th>\n",
       "      <th>TRANSACTION_AMT_month_12</th>\n",
       "      <th>TRANSACTION_AMT_month_13</th>\n",
       "      <th>DelqCycle_avg</th>\n",
       "      <th>DelqCycle_std</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>99690111</td>\n",
       "      <td>16200.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1151.85</td>\n",
       "      <td>2298.96</td>\n",
       "      <td>4045.67</td>\n",
       "      <td>5926.20</td>\n",
       "      <td>6916.62</td>\n",
       "      <td>8497.84</td>\n",
       "      <td>10790.95</td>\n",
       "      <td>...</td>\n",
       "      <td>176.80</td>\n",
       "      <td>303.00</td>\n",
       "      <td>618.00</td>\n",
       "      <td>267.50</td>\n",
       "      <td>226.60</td>\n",
       "      <td>244.80</td>\n",
       "      <td>250.00</td>\n",
       "      <td>273.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>57427180</td>\n",
       "      <td>2800.0</td>\n",
       "      <td>0</td>\n",
       "      <td>219.00</td>\n",
       "      <td>233.58</td>\n",
       "      <td>234.00</td>\n",
       "      <td>809.12</td>\n",
       "      <td>1058.84</td>\n",
       "      <td>260.00</td>\n",
       "      <td>210.08</td>\n",
       "      <td>...</td>\n",
       "      <td>454.50</td>\n",
       "      <td>412.00</td>\n",
       "      <td>884.00</td>\n",
       "      <td>252.50</td>\n",
       "      <td>393.90</td>\n",
       "      <td>476.89</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.230769</td>\n",
       "      <td>0.599145</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>29617912</td>\n",
       "      <td>5800.0</td>\n",
       "      <td>0</td>\n",
       "      <td>301.04</td>\n",
       "      <td>428.00</td>\n",
       "      <td>135.00</td>\n",
       "      <td>739.32</td>\n",
       "      <td>613.00</td>\n",
       "      <td>451.54</td>\n",
       "      <td>382.20</td>\n",
       "      <td>...</td>\n",
       "      <td>792.38</td>\n",
       "      <td>371.28</td>\n",
       "      <td>257.25</td>\n",
       "      <td>185.64</td>\n",
       "      <td>433.63</td>\n",
       "      <td>317.10</td>\n",
       "      <td>1311.69</td>\n",
       "      <td>831.10</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>61632809</td>\n",
       "      <td>1600.0</td>\n",
       "      <td>0</td>\n",
       "      <td>914.64</td>\n",
       "      <td>1087.77</td>\n",
       "      <td>1616.77</td>\n",
       "      <td>1389.15</td>\n",
       "      <td>766.38</td>\n",
       "      <td>485.48</td>\n",
       "      <td>766.48</td>\n",
       "      <td>...</td>\n",
       "      <td>640.56</td>\n",
       "      <td>0.00</td>\n",
       "      <td>2132.52</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1899.86</td>\n",
       "      <td>159.67</td>\n",
       "      <td>605.54</td>\n",
       "      <td>971.70</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>14117855</td>\n",
       "      <td>3800.0</td>\n",
       "      <td>0</td>\n",
       "      <td>833.27</td>\n",
       "      <td>1186.50</td>\n",
       "      <td>884.77</td>\n",
       "      <td>853.30</td>\n",
       "      <td>1386.00</td>\n",
       "      <td>1180.21</td>\n",
       "      <td>1389.00</td>\n",
       "      <td>...</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1168.12</td>\n",
       "      <td>1416.78</td>\n",
       "      <td>3281.55</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1238.00</td>\n",
       "      <td>1723.28</td>\n",
       "      <td>1165.84</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 57 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "    ID_CPTE  CreditLimit Default  CurrentTotalBalance_month_1  \\\n",
       "0  99690111      16200.0       0                      1151.85   \n",
       "1  57427180       2800.0       0                       219.00   \n",
       "2  29617912       5800.0       0                       301.04   \n",
       "3  61632809       1600.0       0                       914.64   \n",
       "4  14117855       3800.0       0                       833.27   \n",
       "\n",
       "   CurrentTotalBalance_month_2  CurrentTotalBalance_month_3  \\\n",
       "0                      2298.96                      4045.67   \n",
       "1                       233.58                       234.00   \n",
       "2                       428.00                       135.00   \n",
       "3                      1087.77                      1616.77   \n",
       "4                      1186.50                       884.77   \n",
       "\n",
       "   CurrentTotalBalance_month_4  CurrentTotalBalance_month_5  \\\n",
       "0                      5926.20                      6916.62   \n",
       "1                       809.12                      1058.84   \n",
       "2                       739.32                       613.00   \n",
       "3                      1389.15                       766.38   \n",
       "4                       853.30                      1386.00   \n",
       "\n",
       "   CurrentTotalBalance_month_6  CurrentTotalBalance_month_7      ...        \\\n",
       "0                      8497.84                     10790.95      ...         \n",
       "1                       260.00                       210.08      ...         \n",
       "2                       451.54                       382.20      ...         \n",
       "3                       485.48                       766.48      ...         \n",
       "4                      1180.21                      1389.00      ...         \n",
       "\n",
       "   TRANSACTION_AMT_month_6  TRANSACTION_AMT_month_7  TRANSACTION_AMT_month_8  \\\n",
       "0                   176.80                   303.00                   618.00   \n",
       "1                   454.50                   412.00                   884.00   \n",
       "2                   792.38                   371.28                   257.25   \n",
       "3                   640.56                     0.00                  2132.52   \n",
       "4                     0.00                  1168.12                  1416.78   \n",
       "\n",
       "   TRANSACTION_AMT_month_9  TRANSACTION_AMT_month_10  \\\n",
       "0                   267.50                    226.60   \n",
       "1                   252.50                    393.90   \n",
       "2                   185.64                    433.63   \n",
       "3                     0.00                   1899.86   \n",
       "4                  3281.55                      0.00   \n",
       "\n",
       "   TRANSACTION_AMT_month_11  TRANSACTION_AMT_month_12  \\\n",
       "0                    244.80                    250.00   \n",
       "1                    476.89                      0.00   \n",
       "2                    317.10                   1311.69   \n",
       "3                    159.67                    605.54   \n",
       "4                   1238.00                   1723.28   \n",
       "\n",
       "   TRANSACTION_AMT_month_13  DelqCycle_avg  DelqCycle_std  \n",
       "0                    273.00       0.000000       0.000000  \n",
       "1                      0.00       0.230769       0.599145  \n",
       "2                    831.10       0.000000       0.000000  \n",
       "3                    971.70       0.000000       0.000000  \n",
       "4                   1165.84       0.000000       0.000000  \n",
       "\n",
       "[5 rows x 57 columns]"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from math import log\n",
    "\n",
    "# average and standard deviation payment status\n",
    "df['DelqCycle_avg'] = df[selcols('DelqCycle_month_')].mean(axis=1)\n",
    "df['DelqCycle_std'] = df[selcols('DelqCycle_month_')].std(axis=1)\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [],
   "source": [
    "# average payment\n",
    "df['TRANSACTION_AMT_avg'] = df[selcols('TRANSACTION_AMT_month_')].mean(axis=1)\n",
    "# log of average\n",
    "df['TRANSACTION_AMT_avg_log'] = df['TRANSACTION_AMT_avg'].apply(lambda x: log(x+1))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [],
   "source": [
    "#amounts relative to the average payment\n",
    "for i in np.arange(1,14):\n",
    "    df['TRANSACTION_relAMT_month_'+str(i)] = df['TRANSACTION_AMT_month_'+str(i)]/df['TRANSACTION_AMT_avg']\n",
    "\n",
    "# log of payments\n",
    "for i in np.arange(1,14):\n",
    "    df['TRANSACTION_logAMT_month_'+str(i)] = df['TRANSACTION_AMT_month_'+str(i)].apply(lambda x: log(x+1))\n",
    "df.fillna(0, inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 197,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0        1.0\n",
       "1        1.0\n",
       "2        1.0\n",
       "3        1.0\n",
       "4        1.0\n",
       "5        1.0\n",
       "6        1.0\n",
       "7        1.0\n",
       "8        1.0\n",
       "9        1.0\n",
       "10       1.0\n",
       "11       1.0\n",
       "12       1.0\n",
       "13       1.0\n",
       "14       0.0\n",
       "15       1.0\n",
       "16       1.0\n",
       "17       0.0\n",
       "18       1.0\n",
       "19       1.0\n",
       "20       1.0\n",
       "21       1.0\n",
       "22       1.0\n",
       "23       1.0\n",
       "24       1.0\n",
       "25       1.0\n",
       "26       1.0\n",
       "27       1.0\n",
       "28       1.0\n",
       "29       1.0\n",
       "        ... \n",
       "11870    1.0\n",
       "11871    1.0\n",
       "11872    1.0\n",
       "11873    1.0\n",
       "11874    1.0\n",
       "11875    1.0\n",
       "11876    1.0\n",
       "11877    1.0\n",
       "11878    1.0\n",
       "11879    1.0\n",
       "11880    1.0\n",
       "11881    1.0\n",
       "11882    1.0\n",
       "11883    1.0\n",
       "11884    1.0\n",
       "11885    1.0\n",
       "11886    1.0\n",
       "11887    1.0\n",
       "11888    1.0\n",
       "11889    1.0\n",
       "11890    1.0\n",
       "11891    1.0\n",
       "11892    1.0\n",
       "11893    1.0\n",
       "11894    1.0\n",
       "11895    1.0\n",
       "11896    1.0\n",
       "11897    1.0\n",
       "11898    1.0\n",
       "11899    1.0\n",
       "Name: CurrentTotalBalance_sign_month_1, Length: 11900, dtype: float64"
      ]
     },
     "execution_count": 197,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# average bill\n",
    "df['CurrentTotalBalance_avg'] = df[selcols('CurrentTotalBalance_month_')].mean(axis=1)\n",
    "df['CurrentTotalBalance_avg_log'] = df['CurrentTotalBalance_avg'].apply(lambda x: log(x+1) if x>0 else 0)\n",
    "\n",
    "# bill sign as a separate feature\n",
    "for i in np.arange(1,14):\n",
    "    df['CurrentTotalBalance_sign_month_'+str(i)] = df['CurrentTotalBalance_month_'+str(i)].apply(lambda x: float(x>0))\n",
    "    \n",
    "# bill log as a separate feature (0 if bill is negative)\n",
    "for i in np.arange(1,14):\n",
    "    df['CurrentTotalBalance_log_month_'+str(i)] = df['CurrentTotalBalance_month_'+str(i)].apply(lambda x: log(x+1) if x>0 else 0)\n",
    "# bill log to the power of 2\n",
    "for i in np.arange(1,14):\n",
    "    df['CurrentTotalBalance_log_month_'+str(i)] = df['CurrentTotalBalance_month_'+str(i)].apply(lambda x: x^2)\n",
    "for i in np.arange(1,14):\n",
    "    df['CurrentTotalBalance_log_month_'+str(i)] = df['CurrentTotalBalance_month_'+str(i)].apply(lambda x: x^3)\n",
    "#bill amounts relative to the limit\n",
    "for i in np.arange(1,14):\n",
    "    df['CurrentTotalBalance_rel_month_'+str(i)] = df['CurrentTotalBalance_month_'+str(i)]/df['CreditLimit']\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 198,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ID_CPTE</th>\n",
       "      <th>CreditLimit</th>\n",
       "      <th>CurrentTotalBalance_month_1</th>\n",
       "      <th>CurrentTotalBalance_month_2</th>\n",
       "      <th>CurrentTotalBalance_month_3</th>\n",
       "      <th>CurrentTotalBalance_month_4</th>\n",
       "      <th>CurrentTotalBalance_month_5</th>\n",
       "      <th>CurrentTotalBalance_month_6</th>\n",
       "      <th>CurrentTotalBalance_month_7</th>\n",
       "      <th>CurrentTotalBalance_month_8</th>\n",
       "      <th>...</th>\n",
       "      <th>CurrentTotalBalance_rel_month_6</th>\n",
       "      <th>CurrentTotalBalance_rel_month_7</th>\n",
       "      <th>CurrentTotalBalance_rel_month_8</th>\n",
       "      <th>CurrentTotalBalance_rel_month_9</th>\n",
       "      <th>CurrentTotalBalance_rel_month_10</th>\n",
       "      <th>CurrentTotalBalance_rel_month_11</th>\n",
       "      <th>CurrentTotalBalance_rel_month_12</th>\n",
       "      <th>CurrentTotalBalance_rel_month_13</th>\n",
       "      <th>CreditLimit_log</th>\n",
       "      <th>CreditLimit_cat</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>71424379</td>\n",
       "      <td>3200.0</td>\n",
       "      <td>1623.28</td>\n",
       "      <td>1020.24</td>\n",
       "      <td>595.35</td>\n",
       "      <td>707.70</td>\n",
       "      <td>845.30</td>\n",
       "      <td>785.89</td>\n",
       "      <td>706.00</td>\n",
       "      <td>2244.00</td>\n",
       "      <td>...</td>\n",
       "      <td>0.245591</td>\n",
       "      <td>0.220625</td>\n",
       "      <td>0.701250</td>\n",
       "      <td>0.342338</td>\n",
       "      <td>0.296297</td>\n",
       "      <td>0.337403</td>\n",
       "      <td>0.289112</td>\n",
       "      <td>0.216203</td>\n",
       "      <td>8.071219</td>\n",
       "      <td>[0, 10000)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>64887111</td>\n",
       "      <td>5100.0</td>\n",
       "      <td>1363.00</td>\n",
       "      <td>1646.40</td>\n",
       "      <td>816.00</td>\n",
       "      <td>298.86</td>\n",
       "      <td>662.50</td>\n",
       "      <td>657.30</td>\n",
       "      <td>542.88</td>\n",
       "      <td>417.90</td>\n",
       "      <td>...</td>\n",
       "      <td>0.128882</td>\n",
       "      <td>0.106447</td>\n",
       "      <td>0.081941</td>\n",
       "      <td>0.025000</td>\n",
       "      <td>0.111694</td>\n",
       "      <td>0.094361</td>\n",
       "      <td>0.219035</td>\n",
       "      <td>0.261051</td>\n",
       "      <td>8.537192</td>\n",
       "      <td>[0, 10000)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>69431075</td>\n",
       "      <td>9200.0</td>\n",
       "      <td>6126.75</td>\n",
       "      <td>5780.25</td>\n",
       "      <td>5772.15</td>\n",
       "      <td>5369.70</td>\n",
       "      <td>4695.60</td>\n",
       "      <td>4685.10</td>\n",
       "      <td>4692.00</td>\n",
       "      <td>5585.69</td>\n",
       "      <td>...</td>\n",
       "      <td>0.509250</td>\n",
       "      <td>0.510000</td>\n",
       "      <td>0.607140</td>\n",
       "      <td>0.609893</td>\n",
       "      <td>0.620609</td>\n",
       "      <td>0.696143</td>\n",
       "      <td>0.749028</td>\n",
       "      <td>0.703647</td>\n",
       "      <td>9.127067</td>\n",
       "      <td>[0, 10000)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>31823308</td>\n",
       "      <td>3100.0</td>\n",
       "      <td>38.11</td>\n",
       "      <td>57.75</td>\n",
       "      <td>69.96</td>\n",
       "      <td>445.00</td>\n",
       "      <td>284.96</td>\n",
       "      <td>94.94</td>\n",
       "      <td>59.16</td>\n",
       "      <td>151.50</td>\n",
       "      <td>...</td>\n",
       "      <td>0.030626</td>\n",
       "      <td>0.019084</td>\n",
       "      <td>0.048871</td>\n",
       "      <td>0.000987</td>\n",
       "      <td>0.117097</td>\n",
       "      <td>0.019223</td>\n",
       "      <td>0.007494</td>\n",
       "      <td>0.006842</td>\n",
       "      <td>8.039480</td>\n",
       "      <td>[0, 10000)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>39407834</td>\n",
       "      <td>4200.0</td>\n",
       "      <td>1355.00</td>\n",
       "      <td>2231.09</td>\n",
       "      <td>2141.36</td>\n",
       "      <td>2299.44</td>\n",
       "      <td>2700.88</td>\n",
       "      <td>2938.00</td>\n",
       "      <td>2968.39</td>\n",
       "      <td>3062.80</td>\n",
       "      <td>...</td>\n",
       "      <td>0.699524</td>\n",
       "      <td>0.706760</td>\n",
       "      <td>0.729238</td>\n",
       "      <td>0.903750</td>\n",
       "      <td>0.837402</td>\n",
       "      <td>0.806500</td>\n",
       "      <td>0.724081</td>\n",
       "      <td>0.764000</td>\n",
       "      <td>8.343078</td>\n",
       "      <td>[0, 10000)</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 127 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "    ID_CPTE  CreditLimit  CurrentTotalBalance_month_1  \\\n",
       "0  71424379       3200.0                      1623.28   \n",
       "1  64887111       5100.0                      1363.00   \n",
       "2  69431075       9200.0                      6126.75   \n",
       "3  31823308       3100.0                        38.11   \n",
       "4  39407834       4200.0                      1355.00   \n",
       "\n",
       "   CurrentTotalBalance_month_2  CurrentTotalBalance_month_3  \\\n",
       "0                      1020.24                       595.35   \n",
       "1                      1646.40                       816.00   \n",
       "2                      5780.25                      5772.15   \n",
       "3                        57.75                        69.96   \n",
       "4                      2231.09                      2141.36   \n",
       "\n",
       "   CurrentTotalBalance_month_4  CurrentTotalBalance_month_5  \\\n",
       "0                       707.70                       845.30   \n",
       "1                       298.86                       662.50   \n",
       "2                      5369.70                      4695.60   \n",
       "3                       445.00                       284.96   \n",
       "4                      2299.44                      2700.88   \n",
       "\n",
       "   CurrentTotalBalance_month_6  CurrentTotalBalance_month_7  \\\n",
       "0                       785.89                       706.00   \n",
       "1                       657.30                       542.88   \n",
       "2                      4685.10                      4692.00   \n",
       "3                        94.94                        59.16   \n",
       "4                      2938.00                      2968.39   \n",
       "\n",
       "   CurrentTotalBalance_month_8       ...         \\\n",
       "0                      2244.00       ...          \n",
       "1                       417.90       ...          \n",
       "2                      5585.69       ...          \n",
       "3                       151.50       ...          \n",
       "4                      3062.80       ...          \n",
       "\n",
       "   CurrentTotalBalance_rel_month_6  CurrentTotalBalance_rel_month_7  \\\n",
       "0                         0.245591                         0.220625   \n",
       "1                         0.128882                         0.106447   \n",
       "2                         0.509250                         0.510000   \n",
       "3                         0.030626                         0.019084   \n",
       "4                         0.699524                         0.706760   \n",
       "\n",
       "   CurrentTotalBalance_rel_month_8  CurrentTotalBalance_rel_month_9  \\\n",
       "0                         0.701250                         0.342338   \n",
       "1                         0.081941                         0.025000   \n",
       "2                         0.607140                         0.609893   \n",
       "3                         0.048871                         0.000987   \n",
       "4                         0.729238                         0.903750   \n",
       "\n",
       "   CurrentTotalBalance_rel_month_10  CurrentTotalBalance_rel_month_11  \\\n",
       "0                          0.296297                          0.337403   \n",
       "1                          0.111694                          0.094361   \n",
       "2                          0.620609                          0.696143   \n",
       "3                          0.117097                          0.019223   \n",
       "4                          0.837402                          0.806500   \n",
       "\n",
       "   CurrentTotalBalance_rel_month_12  CurrentTotalBalance_rel_month_13  \\\n",
       "0                          0.289112                          0.216203   \n",
       "1                          0.219035                          0.261051   \n",
       "2                          0.749028                          0.703647   \n",
       "3                          0.007494                          0.006842   \n",
       "4                          0.724081                          0.764000   \n",
       "\n",
       "   CreditLimit_log  CreditLimit_cat  \n",
       "0         8.071219       [0, 10000)  \n",
       "1         8.537192       [0, 10000)  \n",
       "2         9.127067       [0, 10000)  \n",
       "3         8.039480       [0, 10000)  \n",
       "4         8.343078       [0, 10000)  \n",
       "\n",
       "[5 rows x 127 columns]"
      ]
     },
     "execution_count": 198,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#log of credit limit\n",
    "df['CreditLimit_log'] = df['CreditLimit'].apply(lambda x: log(x+1))\n",
    "df['CreditLimit_cat'] = pd.cut(df['CreditLimit'], range(0, 120000, 10000), right=False, include_lowest=True)\n",
    "df_predict.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "c:\\users\\marcp\\appdata\\local\\programs\\python\\python36\\lib\\site-packages\\matplotlib\\axes\\_axes.py:6462: UserWarning: The 'normed' kwarg is deprecated, and has been replaced by the 'density' kwarg.\n",
      "  warnings.warn(\"The 'normed' kwarg is deprecated, and has been \"\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 2160x2160 with 15 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "from sklearn.neighbors.kde import KernelDensity\n",
    "\n",
    "pattern = re.compile(\"^CurrentTotalBalance_rel_month_[0-9]+$\")\n",
    "columns = [ x for x in df.columns if (pattern.match(x))]\n",
    "\n",
    "fig, ax = plt.subplots(5,3)\n",
    "fig.set_size_inches(30,30)\n",
    "fig.suptitle('Distribution of bill relative to credit in the past 13 months')\n",
    "\n",
    "for i in range(len(columns)):\n",
    "    row,col = int(i/3), i%3\n",
    "\n",
    "    d = df[columns[i]]\n",
    "    # the histogram of the data\n",
    "    n, bins, patches = ax[row,col].hist(d, 50, normed=1, facecolor='green', alpha=0.75)\n",
    "\n",
    "    # kernel density estimation\n",
    "    kde = KernelDensity(kernel='gaussian', bandwidth=0.2).fit(d.values.reshape(-1, 1))\n",
    "    x_grid = np.linspace(d.min(), d.max(), 1000)\n",
    "    log_pdf = kde.score_samples(x_grid.reshape(-1, 1))\n",
    "\n",
    "    # add the density line\n",
    "    ax[row,col].plot(x_grid, np.exp(log_pdf), color='blue', alpha=0.5, lw=3)\n",
    "    ax[row,col].set_title(columns[i])\n",
    "\n",
    "plt.tight_layout(pad=3.0, w_pad=0.5, h_pad=1.0)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x720 with 4 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "def_no = df[df['Default']==0].sample(1500)\n",
    "def_yes  = df[df['Default']==1].sample(1500)\n",
    "\n",
    "fig,ax = plt.subplots(2,2)\n",
    "fig.set_size_inches(15,10)\n",
    "\n",
    "ax[0,0].set_ylim([1,1e5])\n",
    "ax[0,0].set_title('defaulting')\n",
    "ax[0,0].set_ylabel('average payment')\n",
    "ax[0,0].set_xlabel('average payment delay in months')\n",
    "p = ax[0,0].semilogy(def_yes['DelqCycle_avg'], def_yes['TRANSACTION_AMT_avg'], 'ro', markersize=5, alpha=0.1)\n",
    "\n",
    "ax[0,1].set_ylim([1,1e5])\n",
    "ax[0,1].set_title('not defaulting')\n",
    "ax[0,1].set_ylabel('average payment')\n",
    "ax[0,1].set_xlabel('average payment delay in months')\n",
    "p = ax[0,1].semilogy(def_no['DelqCycle_avg'], def_no['TRANSACTION_AMT_avg'], 'bo', markersize=5, alpha=0.1)\n",
    "\n",
    "ax[1,0].set_ylim([1,1e5])\n",
    "ax[1,0].set_title('defaulting')\n",
    "ax[1,0].set_ylabel('average bill amount')\n",
    "ax[1,0].set_xlabel('average payment delay in months')\n",
    "p = ax[1,0].semilogy(def_yes['DelqCycle_avg'], def_yes['CurrentTotalBalance_avg'], 'ro', markersize=5, alpha=0.1)\n",
    "\n",
    "ax[1,1].set_ylim([1,1e5])\n",
    "ax[1,1].set_title('not defaulting')\n",
    "ax[1,1].set_ylabel('average bill amount')\n",
    "ax[1,1].set_xlabel('average payment delay in months')\n",
    "p = ax[1,1].semilogy(def_no['DelqCycle_avg'], def_no['CurrentTotalBalance_avg'], 'bo', markersize=5, alpha=0.1)\n",
    "\n",
    "plt.tight_layout(pad=0.4, w_pad=0.5, h_pad=1.0)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "ID_CPTE                              False\n",
       "CreditLimit                          False\n",
       "CurrentTotalBalance_month_1          False\n",
       "CurrentTotalBalance_month_2          False\n",
       "CurrentTotalBalance_month_3          False\n",
       "CurrentTotalBalance_month_4          False\n",
       "CurrentTotalBalance_month_5          False\n",
       "CurrentTotalBalance_month_6          False\n",
       "CurrentTotalBalance_month_7          False\n",
       "CurrentTotalBalance_month_8          False\n",
       "CurrentTotalBalance_month_9          False\n",
       "CurrentTotalBalance_month_10         False\n",
       "CurrentTotalBalance_month_11         False\n",
       "CurrentTotalBalance_month_12         False\n",
       "CurrentTotalBalance_month_13         False\n",
       "CashBalance_month_1                  False\n",
       "CashBalance_month_2                  False\n",
       "CashBalance_month_3                  False\n",
       "CashBalance_month_4                  False\n",
       "CashBalance_month_5                  False\n",
       "CashBalance_month_6                  False\n",
       "CashBalance_month_7                  False\n",
       "CashBalance_month_8                  False\n",
       "CashBalance_month_9                  False\n",
       "CashBalance_month_10                 False\n",
       "CashBalance_month_11                 False\n",
       "CashBalance_month_12                 False\n",
       "CashBalance_month_13                 False\n",
       "DelqCycle_month_1                    False\n",
       "DelqCycle_month_2                    False\n",
       "                                     ...  \n",
       "CurrentTotalBalance_sign_month_12    False\n",
       "CurrentTotalBalance_sign_month_13    False\n",
       "CurrentTotalBalance_log_month_1      False\n",
       "CurrentTotalBalance_log_month_2      False\n",
       "CurrentTotalBalance_log_month_3      False\n",
       "CurrentTotalBalance_log_month_4      False\n",
       "CurrentTotalBalance_log_month_5      False\n",
       "CurrentTotalBalance_log_month_6      False\n",
       "CurrentTotalBalance_log_month_7      False\n",
       "CurrentTotalBalance_log_month_8      False\n",
       "CurrentTotalBalance_log_month_9      False\n",
       "CurrentTotalBalance_log_month_10     False\n",
       "CurrentTotalBalance_log_month_11     False\n",
       "CurrentTotalBalance_log_month_12     False\n",
       "CurrentTotalBalance_log_month_13     False\n",
       "CurrentTotalBalance_rel_month_1      False\n",
       "CurrentTotalBalance_rel_month_2      False\n",
       "CurrentTotalBalance_rel_month_3      False\n",
       "CurrentTotalBalance_rel_month_4      False\n",
       "CurrentTotalBalance_rel_month_5      False\n",
       "CurrentTotalBalance_rel_month_6      False\n",
       "CurrentTotalBalance_rel_month_7      False\n",
       "CurrentTotalBalance_rel_month_8      False\n",
       "CurrentTotalBalance_rel_month_9      False\n",
       "CurrentTotalBalance_rel_month_10     False\n",
       "CurrentTotalBalance_rel_month_11     False\n",
       "CurrentTotalBalance_rel_month_12     False\n",
       "CurrentTotalBalance_rel_month_13     False\n",
       "CreditLimit_log                      False\n",
       "CreditLimit_cat                      False\n",
       "Length: 127, dtype: bool"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_predict.isnull().any()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [],
   "source": [
    "df.to_csv('C:\\\\Users\\\\marcp\\\\OneDrive\\\\Documents\\\\DataCup\\\\Dataframes\\\\DataFrame_temp.csv', sep=',', index = False)\n",
    "df = pd.read_csv('C:\\\\Users\\\\marcp\\\\OneDrive\\\\Documents\\\\DataCup\\\\Dataframes\\\\DataFrame_temp.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [],
   "source": [
    "from patsy import dmatrices\n",
    "\n",
    "formula  = 'ID_CPTE ~ '\n",
    "\n",
    "# original features\n",
    "##formula += 'C(sex) + C(marriage) +  C(education) + age'\n",
    "##formula += '+' + '+'.join(selcols('pay_'))\n",
    "\n",
    "#pay delays\n",
    "formula += 'DelqCycle_avg+DelqCycle_std'\n",
    "formula += '+' + '+'.join(selcols('DelqCycle_month_'))\n",
    "\n",
    "#### engineered / normalized features\n",
    "\n",
    "# categorical age and credit limit (binned)\n",
    "##formula += '+' + 'C(age_cat)'\n",
    "formula += '+' + 'C(CreditLimit_cat)+CreditLimit_log'\n",
    "    \n",
    "#pay_amt\n",
    "formula += '+' + 'TRANSACTION_AMT_avg_log'\n",
    "formula += '+' + '+'.join(selcols('TRANSACTION_relAMT_month_'))\n",
    "formula += '+' + '+'.join(selcols('TRANSACTION_logAMT_month_'))\n",
    "\n",
    "# bill amounts\n",
    "formula += '+' + 'CurrentTotalBalance_avg_log'\n",
    "formula += '+' + '+'.join(selcols('CurrentTotalBalance_rel_month_'))\n",
    "formula += '+' + '+'.join(selcols('CurrentTotalBalance_sign_month_'))\n",
    "formula += '+' + '+'.join(selcols('CurrentTotalBalance_log_month_'))\n",
    "\n",
    "#print(formula)\n",
    "\n",
    "predict_y, predict_X = dmatrices(formula, data=df_predict, return_type='dataframe')\n",
    "predict_y = predict_y.iloc[:, 0]\n",
    "#predict_y.to_csv('C:\\\\Users\\\\marcp\\\\OneDrive\\\\Documents\\\\DataCup\\\\Dataframes\\\\predict_order.csv', sep=',', index = False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [],
   "source": [
    "formula  = 'C(Default) ~ '\n",
    "\n",
    "# original features\n",
    "##formula += 'C(sex) + C(marriage) +  C(education) + age'\n",
    "##formula += '+' + '+'.join(selcols('pay_'))\n",
    "\n",
    "#pay delays\n",
    "formula += 'DelqCycle_avg+DelqCycle_std'\n",
    "formula += '+' + '+'.join(selcols('DelqCycle_month_'))\n",
    "\n",
    "#### engineered / normalized features\n",
    "\n",
    "# categorical age and credit limit (binned)\n",
    "##formula += '+' + 'C(age_cat)'\n",
    "formula += '+' + 'C(CreditLimit_cat)+CreditLimit_log'\n",
    "    \n",
    "#pay_amt\n",
    "formula += '+' + 'TRANSACTION_AMT_avg_log'\n",
    "formula += '+' + '+'.join(selcols('TRANSACTION_relAMT_month_'))\n",
    "formula += '+' + '+'.join(selcols('TRANSACTION_logAMT_month_'))\n",
    "\n",
    "# bill amounts\n",
    "formula += '+' + 'CurrentTotalBalance_avg_log'\n",
    "formula += '+' + '+'.join(selcols('CurrentTotalBalance_rel_month_'))\n",
    "formula += '+' + '+'.join(selcols('CurrentTotalBalance_sign_month_'))\n",
    "formula += '+' + '+'.join(selcols('CurrentTotalBalance_log_month_'))\n",
    "\n",
    "#print(formula)\n",
    "\n",
    "y, X = dmatrices(formula, data=df, return_type='dataframe')\n",
    "y = y.iloc[:, 1]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index([], dtype='object')"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#predict_y\n",
    "#X.to_csv('C:\\\\Users\\\\marcp\\\\OneDrive\\\\Documents\\\\DataCup\\\\Dataframes\\\\X.csv', sep=',', index = False)\n",
    "#predict_X.to_csv('C:\\\\Users\\\\marcp\\\\OneDrive\\\\Documents\\\\DataCup\\\\Dataframes\\\\predict_X.csv', sep=',', index = False)\n",
    "for z in list(X):\n",
    "    if z not in list(predict_X):\n",
    "        predict_X[z]=0\n",
    "for z in list(predict_X):\n",
    "    if z not in list(X):\n",
    "        X[z]=0\n",
    "X.columns.difference(predict_X.columns)        "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [],
   "source": [
    "import itertools\n",
    "from sklearn.metrics import roc_curve, auc, roc_auc_score, log_loss, accuracy_score, confusion_matrix\n",
    "\n",
    "def plot_cm(ax, y_true, y_pred, classes, title, th=0.5, cmap=plt.cm.Blues):\n",
    "    y_pred_labels = (y_pred>th).astype(int)\n",
    "    \n",
    "    cm = confusion_matrix(y_true, y_pred_labels)\n",
    "    \n",
    "    im = ax.imshow(cm, interpolation='nearest', cmap=cmap)\n",
    "    ax.set_title(title)\n",
    "\n",
    "    tick_marks = np.arange(len(classes))\n",
    "    ax.set_xticks(tick_marks)\n",
    "    ax.set_yticks(tick_marks)\n",
    "    ax.set_xticklabels(classes)\n",
    "    ax.set_yticklabels(classes)\n",
    "\n",
    "    thresh = cm.max() / 2.\n",
    "    for i, j in itertools.product(range(cm.shape[0]), range(cm.shape[1])):\n",
    "        ax.text(j, i, cm[i, j],\n",
    "                 horizontalalignment=\"center\",\n",
    "                 color=\"white\" if cm[i, j] > thresh else \"black\")\n",
    "    ax.set_ylabel('True label')\n",
    "    ax.set_xlabel('Predicted label')\n",
    "\n",
    "def plot_auc(ax, y_train, y_train_pred, y_test, y_test_pred, th=0.5):\n",
    "\n",
    "    y_train_pred_labels = (y_train_pred>th).astype(int)\n",
    "    y_test_pred_labels  = (y_test_pred>th).astype(int)\n",
    "\n",
    "    fpr_train, tpr_train, _ = roc_curve(y_train,y_train_pred)\n",
    "    roc_auc_train = auc(fpr_train, tpr_train)\n",
    "    acc_train = accuracy_score(y_train, y_train_pred_labels)\n",
    "\n",
    "    fpr_test, tpr_test, _ = roc_curve(y_test,y_test_pred)\n",
    "    roc_auc_test = auc(fpr_test, tpr_test)\n",
    "    acc_test = accuracy_score(y_test, y_test_pred_labels)\n",
    "\n",
    "    ax.plot(fpr_train, tpr_train)\n",
    "    ax.plot(fpr_test, tpr_test)\n",
    "\n",
    "    ax.plot([0, 1], [0, 1], 'k--')\n",
    "\n",
    "    ax.set_xlim([0.0, 1.0])\n",
    "    ax.set_ylim([0.0, 1.05])\n",
    "    ax.set_xlabel('False Positive Rate')\n",
    "    ax.set_ylabel('True Positive Rate')\n",
    "    ax.set_title('ROC curve')\n",
    "    \n",
    "    train_text = 'train acc = {:.3f}, auc = {:.2f}'.format(acc_train, roc_auc_train)\n",
    "    test_text = 'test acc = {:.3f}, auc = {:.4f}'.format(acc_test, roc_auc_test)\n",
    "    ax.legend([train_text, test_text])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 118,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['DelqCycle_std', 'DelqCycle_month_3', 'DelqCycle_month_1',\n",
       "       'DelqCycle_month_2', 'DelqCycle_month_6'], dtype=object)"
      ]
     },
     "execution_count": 118,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import warnings\n",
    "warnings.simplefilter(action='ignore', category=(UserWarning,RuntimeWarning))\n",
    "from sklearn.feature_selection import SelectKBest, f_classif\n",
    "from sklearn import preprocessing\n",
    "\n",
    "scaler90 = preprocessing.MinMaxScaler()\n",
    "scaler45 = preprocessing.MinMaxScaler()\n",
    "scalerraw = preprocessing.MinMaxScaler()\n",
    "\n",
    "selector90 = SelectKBest(f_classif, 90)\n",
    "selector45 = SelectKBest(f_classif, 90)\n",
    "\n",
    "selector90.fit(X, y)\n",
    "selector45.fit(X, y)\n",
    "\n",
    "top_indices90 = np.nan_to_num(selector90.scores_).argsort()[-90:][::-1]\n",
    "top_indices45 = np.nan_to_num(selector45.scores_).argsort()[-45:][::-1]\n",
    "\n",
    "selector90.scores_[top_indices90]\n",
    "selector45.scores_[top_indices45]\n",
    "\n",
    "X90_idx = X.columns[top_indices90]\n",
    "X45_idx = X.columns[top_indices45]\n",
    "\n",
    "predict_X90_idx = X.columns[top_indices90]\n",
    "predict_X45_idx = X.columns[top_indices45]\n",
    "\n",
    "\n",
    "\n",
    "X90 = X[X90_idx]\n",
    "X45 = X[X45_idx]\n",
    "\n",
    "scaler90.fit(X90)\n",
    "scaler45.fit(X45)\n",
    "scalerraw.fit(df.drop(df[['Default','CreditLimit_cat']],1))\n",
    "\n",
    "np_scaled_X90 = scaler90.transform(X90)\n",
    "np_scaled_X45 = scaler45.transform(X45)\n",
    "\n",
    "predict_X90 = predict_X[X90_idx]\n",
    "predict_X45 = predict_X[X45_idx]\n",
    "np_scaled_predict_X90 = scaler90.transform(predict_X90)\n",
    "np_scaled_predict_X45 = scaler45.transform(predict_X45)\n",
    "\n",
    "np_raw_X = np.array(df.drop(df[['Default','CreditLimit_cat']],1))\n",
    "np_rawpredict_X = np.array(df_predict.drop('CreditLimit_cat',1))\n",
    "np_scaled_raw_X = scalerraw.transform(df.drop(df[['Default','CreditLimit_cat']],1))\n",
    "np_scaled_rawpredict_X = scalerraw.transform(df_predict.drop('CreditLimit_cat',1))\n",
    "\n",
    "np_X90 = X90.values\n",
    "np_X45 = X45.values\n",
    "np_predict_X90 = predict_X90.values\n",
    "np_predict_X45 = predict_X45.values\n",
    "np_y = y.values"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "4\n"
     ]
    }
   ],
   "source": [
    "from sklearn.model_selection import KFold # import KFold\n",
    "\n",
    "kf = KFold(n_splits=4) # Define the split - into 2 folds \n",
    "kf.get_n_splits(np_scaled_X90) # returns the number of splitting iterations in the cross-validator\n",
    "\n",
    "print(kf.get_n_splits(np_scaled_X90))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Did k=1\n",
      "Did k=3\n",
      "Did k=7\n",
      "Did k=1\n",
      "Did k=3\n",
      "Did k=7\n",
      "Did k=1\n",
      "Did k=3\n",
      "Did k=7\n"
     ]
    }
   ],
   "source": [
    "from sklearn.neighbors import KNeighborsClassifier\n",
    "train_preds_df = pd.DataFrame().reindex(index=range(0,11900))\n",
    "test_preds_df = pd.DataFrame()\n",
    "temp_test_preds_df = pd.DataFrame()\n",
    "\n",
    "kk90 = [1,3,7]\n",
    "kk45 = [1,3,7]\n",
    "rawkk = [1,3,7]\n",
    "\n",
    "kf.get_n_splits(np_scaled_X90)\n",
    "for k in kk90:\n",
    "    count = 0\n",
    "    for train_index, test_index in kf.split(np_scaled_X90):\n",
    "        KFold_X_train, KFold_X_test = np_scaled_X90[train_index], np_scaled_X90[test_index]\n",
    "        KFold_y_train, KFold_y_test = np_y[train_index], np_y[test_index]\n",
    "    \n",
    "        knn = KNeighborsClassifier(n_neighbors=k)\n",
    "        knn.fit(KFold_X_train, KFold_y_train)\n",
    "    \n",
    "        train_pred = knn.predict_proba(KFold_X_test)\n",
    "        test_pred = knn.predict_proba(np_scaled_predict_X90)\n",
    "                \n",
    "        name = 'scaled_X90_k{}'.format(k)\n",
    "        temp_name = 'temp_scaled_X90_k{}_{}'.format(k,count)\n",
    "    \n",
    "        train_preds_df.loc[test_index,name] = train_pred[:, 1].tolist()\n",
    "        temp_test_preds_df[temp_name] = test_pred[:, 1].tolist()\n",
    "        count += 1\n",
    "    test_preds_df[name] = 0.25*temp_test_preds_df['temp_scaled_X90_k{}_0'.format(k)] + 0.25*temp_test_preds_df['temp_scaled_X90_k{}_1'.format(k)] + 0.25*temp_test_preds_df['temp_scaled_X90_k{}_2'.format(k)] + 0.25*temp_test_preds_df['temp_scaled_X90_k{}_3'.format(k)]\n",
    "    print('Did k={}'.format(k))\n",
    "\n",
    "for k in kk45:\n",
    "    count = 0\n",
    "    for train_index, test_index in kf.split(np_scaled_X45):\n",
    "        KFold_X_train, KFold_X_test = np_scaled_X45[train_index], np_scaled_X45[test_index]\n",
    "        KFold_y_train, KFold_y_test = np_y[train_index], np_y[test_index]\n",
    "    \n",
    "        knn = KNeighborsClassifier(n_neighbors=k)\n",
    "        knn.fit(KFold_X_train, KFold_y_train)\n",
    "    \n",
    "        train_pred = knn.predict_proba(KFold_X_test)\n",
    "        test_pred = knn.predict_proba(np_scaled_predict_X45)\n",
    "               \n",
    "        name = 'scaled_X45_k{}'.format(k)\n",
    "        temp_name = 'temp_scaled_X45_k{}_{}'.format(k,count)\n",
    "    \n",
    "        train_preds_df.loc[test_index,name] = train_pred[:, 1].tolist()\n",
    "        temp_test_preds_df[temp_name] = test_pred[:, 1].tolist()\n",
    "        count += 1\n",
    "    test_preds_df[name] = 0.25*temp_test_preds_df['temp_scaled_X45_k{}_0'.format(k)] + 0.25*temp_test_preds_df['temp_scaled_X45_k{}_1'.format(k)] + 0.25*temp_test_preds_df['temp_scaled_X45_k{}_2'.format(k)] + 0.25*temp_test_preds_df['temp_scaled_X45_k{}_3'.format(k)]\n",
    "    print('Did k={}'.format(k))\n",
    "\n",
    "for k in rawkk:\n",
    "    count = 0\n",
    "    for train_index, test_index in kf.split(np_scaled_raw_X):\n",
    "        KFold_X_train, KFold_X_test = np_scaled_raw_X[train_index], np_scaled_raw_X[test_index]\n",
    "        KFold_y_train, KFold_y_test = np_y[train_index], np_y[test_index]\n",
    "    \n",
    "        knn = KNeighborsClassifier(n_neighbors=k)\n",
    "        knn.fit(KFold_X_train, KFold_y_train)\n",
    "    \n",
    "        train_pred = knn.predict_proba(KFold_X_test)\n",
    "        test_pred = knn.predict_proba(np_scaled_rawpredict_X)\n",
    "        \n",
    "        \n",
    "        name = 'scaled_rawX_k{}'.format(k)\n",
    "        temp_name = 'temp_scaled_rawX_k{}_{}'.format(k,count)\n",
    "    \n",
    "        train_preds_df.loc[test_index,name] = train_pred[:, 1].tolist()\n",
    "        temp_test_preds_df[temp_name] = test_pred[:, 1].tolist()\n",
    "        count += 1\n",
    "    test_preds_df[name] = 0.25*temp_test_preds_df['temp_scaled_rawX_k{}_0'.format(k)] + 0.25*temp_test_preds_df['temp_scaled_rawX_k{}_1'.format(k)] + 0.25*temp_test_preds_df['temp_scaled_rawX_k{}_2'.format(k)] + 0.25*temp_test_preds_df['temp_scaled_rawX_k{}_3'.format(k)]\n",
    "    print('Did k={}'.format(k))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.ensemble import RandomForestClassifier\n",
    "from sklearn.metrics import roc_curve, auc, roc_auc_score, log_loss, accuracy_score\n",
    "\n",
    "rf = RandomForestClassifier(bootstrap = False,\n",
    "    max_depth= 15,\n",
    "    max_features= 8,\n",
    "    min_samples_leaf= 2,\n",
    "    min_samples_split=2,\n",
    "    n_estimators= 302)\n",
    "\n",
    "count = 0\n",
    "for train_index, test_index in kf.split(np_scaled_raw_X):\n",
    "    KFold_X_train, KFold_X_test = np_scaled_raw_X[train_index], np_scaled_raw_X[test_index]\n",
    "    KFold_y_train, KFold_y_test = np_y[train_index], np_y[test_index]\n",
    "\n",
    "    rf.fit(KFold_X_train, KFold_y_train)\n",
    "    \n",
    "    train_pred = rf.predict_proba(KFold_X_test)\n",
    "    test_pred = rf.predict_proba(np_scaled_rawpredict_X)\n",
    "                \n",
    "    name = 'scaled_rawX_rf'\n",
    "    temp_name = 'temp_scaled_rawX_{}'.format(count)\n",
    "    \n",
    "    train_preds_df.loc[test_index,name] = train_pred[:, 1].tolist()\n",
    "    temp_test_preds_df[temp_name] = test_pred[:, 1].tolist()\n",
    "    count += 1\n",
    "test_preds_df[name] = 0.25*temp_test_preds_df['temp_scaled_rawX_0'] + 0.25*temp_test_preds_df['temp_scaled_rawX_1'] + 0.25*temp_test_preds_df['temp_scaled_rawX_2'] + 0.25*temp_test_preds_df['temp_scaled_rawX_3']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "c:\\users\\marcp\\appdata\\local\\programs\\python\\python36\\lib\\site-packages\\sklearn\\cross_validation.py:41: DeprecationWarning: This module was deprecated in version 0.18 in favor of the model_selection module into which all the refactored classes and functions are moved. Also note that the interface of the new CV iterators are different from that of this module. This module will be removed in 0.20.\n",
      "  \"This module will be removed in 0.20.\", DeprecationWarning)\n",
      "c:\\users\\marcp\\appdata\\local\\programs\\python\\python36\\lib\\site-packages\\sklearn\\grid_search.py:42: DeprecationWarning: This module was deprecated in version 0.18 in favor of the model_selection module into which all the refactored classes and functions are moved. This module will be removed in 0.20.\n",
      "  DeprecationWarning)\n"
     ]
    }
   ],
   "source": [
    "import xgboost as xgb\n",
    "from sklearn.metrics import log_loss, accuracy_score\n",
    "from sklearn.cross_validation import cross_val_score, train_test_split\n",
    "from sklearn import cross_validation, metrics\n",
    "from sklearn.grid_search import GridSearchCV   #Perforing grid search\n",
    "from xgboost.sklearn import XGBClassifier\n",
    "\n",
    "import matplotlib.pylab as plt\n",
    "%matplotlib inline\n",
    "from matplotlib.pylab import rcParams\n",
    "\n",
    "rcParams['figure.figsize'] = 12, 4"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 171,
   "metadata": {},
   "outputs": [],
   "source": [
    "def modelfit(alg, xinput, yinput, predictors, useTrainCV=True, cv_folds=5, early_stopping_rounds=50):\n",
    "\n",
    "    if useTrainCV:\n",
    "        xgb_param = alg.get_xgb_params()\n",
    "        xgtrain = xgb.DMatrix(xinput.values, label=yinput.values)\n",
    "        cvresult = xgb.cv(xgb_param, xgtrain, num_boost_round=alg.get_params()['n_estimators'], nfold=cv_folds,\n",
    "            metrics='auc', early_stopping_rounds=early_stopping_rounds, verbose_eval=True,  stratified=False)\n",
    "        alg.set_params(n_estimators=cvresult.shape[0])\n",
    "    \n",
    "    #Fit the algorithm on the data\n",
    "    alg.fit(xinput.values, yinput.values,eval_metric='auc')\n",
    "        \n",
    "    #Predict training set:\n",
    "    dtrain_predictions = alg.predict(xinput.values)\n",
    "    dtrain_predprob = alg.predict_proba(xinput.values)[:,1]\n",
    "    \n",
    "    best_auc_mean = cvresult['test-auc-mean'].iloc[alg.get_params()['n_estimators']-1]\n",
    "    \n",
    "    #Print model report:\n",
    "    print(\"\\nModel Report\")\n",
    "    print(\"Model best iteration : {} with an auc score of : {}\".format(alg.get_params()['n_estimators'], best_auc_mean))\n",
    "    print(\"Accuracy : {}\".format(metrics.accuracy_score(yinput.values, dtrain_predictions)))\n",
    "    print(\"AUC Score (Train): {}\".format(metrics.roc_auc_score(yinput, dtrain_predprob)))  \n",
    "                    \n",
    "    #feat_imp = pd.Series(alg.booster().get_fscore()).sort_values(ascending=False))\n",
    "    feat_imp = pd.Series(alg.get_booster().get_score(importance_type='weight')).sort_values(ascending=False)\n",
    "    feat_imp.plot(kind='bar', title='Feature Importances')\n",
    "    plt.ylabel('Feature Importance Score')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\ttrain-auc:0.84041+0.00837578\ttest-auc:0.831235+0.0206979\n",
      "[1]\ttrain-auc:0.865834+0.00323774\ttest-auc:0.854236+0.0072206\n",
      "[2]\ttrain-auc:0.872772+0.00504304\ttest-auc:0.862214+0.00795916\n",
      "[3]\ttrain-auc:0.876391+0.00575325\ttest-auc:0.864848+0.00684078\n",
      "[4]\ttrain-auc:0.878437+0.00569263\ttest-auc:0.867236+0.0078524\n",
      "[5]\ttrain-auc:0.881614+0.00390053\ttest-auc:0.870857+0.00738543\n",
      "[6]\ttrain-auc:0.882388+0.00442334\ttest-auc:0.871624+0.00779807\n",
      "[7]\ttrain-auc:0.88345+0.00428323\ttest-auc:0.873122+0.00920093\n",
      "[8]\ttrain-auc:0.883802+0.00391835\ttest-auc:0.873671+0.00925437\n",
      "[9]\ttrain-auc:0.8852+0.00218254\ttest-auc:0.87559+0.00814721\n",
      "[10]\ttrain-auc:0.885359+0.00219326\ttest-auc:0.875611+0.00818884\n",
      "[11]\ttrain-auc:0.886277+0.0009512\ttest-auc:0.876527+0.00725696\n",
      "[12]\ttrain-auc:0.886355+0.00104416\ttest-auc:0.876559+0.00694595\n",
      "[13]\ttrain-auc:0.886524+0.000954742\ttest-auc:0.876623+0.00710094\n",
      "[14]\ttrain-auc:0.88699+0.000955335\ttest-auc:0.877486+0.00660711\n",
      "[15]\ttrain-auc:0.887234+0.000774784\ttest-auc:0.877659+0.00657558\n",
      "[16]\ttrain-auc:0.887852+0.0007577\ttest-auc:0.87787+0.0065155\n",
      "[17]\ttrain-auc:0.888064+0.000741281\ttest-auc:0.877916+0.00659423\n",
      "[18]\ttrain-auc:0.888382+0.000956006\ttest-auc:0.878154+0.00636885\n",
      "[19]\ttrain-auc:0.888348+0.00100189\ttest-auc:0.878469+0.00594973\n",
      "[20]\ttrain-auc:0.888674+0.00102031\ttest-auc:0.878392+0.00573982\n",
      "[21]\ttrain-auc:0.888751+0.00110665\ttest-auc:0.878683+0.00584135\n",
      "[22]\ttrain-auc:0.888832+0.00120182\ttest-auc:0.878615+0.00587867\n",
      "[23]\ttrain-auc:0.889031+0.00128798\ttest-auc:0.879012+0.00581035\n",
      "[24]\ttrain-auc:0.889034+0.00129696\ttest-auc:0.878905+0.00593266\n",
      "[25]\ttrain-auc:0.889161+0.00143221\ttest-auc:0.879318+0.0061351\n",
      "[26]\ttrain-auc:0.889419+0.00134514\ttest-auc:0.879829+0.00576504\n",
      "[27]\ttrain-auc:0.889629+0.00109741\ttest-auc:0.87988+0.005917\n",
      "[28]\ttrain-auc:0.889688+0.00114743\ttest-auc:0.879831+0.00598953\n",
      "[29]\ttrain-auc:0.889731+0.00117149\ttest-auc:0.880176+0.00601457\n",
      "[30]\ttrain-auc:0.889812+0.00125486\ttest-auc:0.880195+0.0060386\n",
      "[31]\ttrain-auc:0.889974+0.00117808\ttest-auc:0.880258+0.00605944\n",
      "[32]\ttrain-auc:0.89011+0.00104661\ttest-auc:0.88036+0.00620772\n",
      "[33]\ttrain-auc:0.890315+0.000881113\ttest-auc:0.880743+0.00580711\n",
      "[34]\ttrain-auc:0.890449+0.000884061\ttest-auc:0.880665+0.00551123\n",
      "[35]\ttrain-auc:0.890623+0.000978568\ttest-auc:0.880833+0.00561655\n",
      "[36]\ttrain-auc:0.890694+0.000962493\ttest-auc:0.880916+0.00564171\n",
      "[37]\ttrain-auc:0.890815+0.000979822\ttest-auc:0.880861+0.00586144\n",
      "[38]\ttrain-auc:0.890908+0.00102449\ttest-auc:0.880975+0.00585436\n",
      "[39]\ttrain-auc:0.890918+0.000992734\ttest-auc:0.881078+0.00596552\n",
      "[40]\ttrain-auc:0.891085+0.00097584\ttest-auc:0.881131+0.00585002\n",
      "[41]\ttrain-auc:0.891129+0.000998294\ttest-auc:0.88104+0.00587259\n",
      "[42]\ttrain-auc:0.89138+0.000999145\ttest-auc:0.881428+0.00578753\n",
      "[43]\ttrain-auc:0.891587+0.000960662\ttest-auc:0.881413+0.00571957\n",
      "[44]\ttrain-auc:0.89166+0.000983077\ttest-auc:0.881607+0.00571399\n",
      "[45]\ttrain-auc:0.891688+0.000951621\ttest-auc:0.881658+0.00579495\n",
      "[46]\ttrain-auc:0.8918+0.000911516\ttest-auc:0.881637+0.0058462\n",
      "[47]\ttrain-auc:0.891966+0.000846623\ttest-auc:0.881789+0.00568583\n",
      "[48]\ttrain-auc:0.892079+0.000912401\ttest-auc:0.881831+0.00561762\n",
      "[49]\ttrain-auc:0.892134+0.000955698\ttest-auc:0.881855+0.00571751\n",
      "[50]\ttrain-auc:0.892177+0.000912202\ttest-auc:0.881749+0.00573375\n",
      "[51]\ttrain-auc:0.892259+0.000902189\ttest-auc:0.881783+0.00571289\n",
      "[52]\ttrain-auc:0.892312+0.000926949\ttest-auc:0.881881+0.00572518\n",
      "[53]\ttrain-auc:0.892436+0.000837578\ttest-auc:0.881855+0.00557523\n",
      "[54]\ttrain-auc:0.892591+0.00105701\ttest-auc:0.882132+0.00559798\n",
      "[55]\ttrain-auc:0.892673+0.00107206\ttest-auc:0.882158+0.00566224\n",
      "[56]\ttrain-auc:0.89277+0.0010937\ttest-auc:0.882192+0.00560609\n",
      "[57]\ttrain-auc:0.892812+0.00108408\ttest-auc:0.882235+0.0055078\n",
      "[58]\ttrain-auc:0.893015+0.00123465\ttest-auc:0.882536+0.00545722\n",
      "[59]\ttrain-auc:0.893137+0.00122866\ttest-auc:0.882558+0.00533463\n",
      "[60]\ttrain-auc:0.893353+0.00122712\ttest-auc:0.882626+0.00529082\n",
      "[61]\ttrain-auc:0.893358+0.00122244\ttest-auc:0.882612+0.00517476\n",
      "[62]\ttrain-auc:0.893432+0.00121294\ttest-auc:0.882594+0.00517842\n",
      "[63]\ttrain-auc:0.893464+0.00112246\ttest-auc:0.882648+0.00538531\n",
      "[64]\ttrain-auc:0.893496+0.00112269\ttest-auc:0.882557+0.00541964\n",
      "[65]\ttrain-auc:0.893561+0.00115303\ttest-auc:0.882665+0.00541926\n",
      "[66]\ttrain-auc:0.893632+0.00120993\ttest-auc:0.882779+0.00531736\n",
      "[67]\ttrain-auc:0.893736+0.00124331\ttest-auc:0.882856+0.0053801\n",
      "[68]\ttrain-auc:0.893769+0.00120251\ttest-auc:0.882791+0.00532752\n",
      "[69]\ttrain-auc:0.893817+0.00113615\ttest-auc:0.882857+0.00534061\n",
      "[70]\ttrain-auc:0.893909+0.00117104\ttest-auc:0.88284+0.0053379\n",
      "[71]\ttrain-auc:0.894006+0.00114265\ttest-auc:0.882927+0.00525413\n",
      "[72]\ttrain-auc:0.894075+0.00114998\ttest-auc:0.882869+0.00522349\n",
      "[73]\ttrain-auc:0.89412+0.00114305\ttest-auc:0.882967+0.00515067\n",
      "[74]\ttrain-auc:0.894157+0.0011269\ttest-auc:0.882991+0.00516937\n",
      "[75]\ttrain-auc:0.89421+0.0011178\ttest-auc:0.883015+0.00516542\n",
      "[76]\ttrain-auc:0.894251+0.0011312\ttest-auc:0.883009+0.00515156\n",
      "[77]\ttrain-auc:0.894357+0.00112849\ttest-auc:0.883031+0.00516539\n",
      "[78]\ttrain-auc:0.894405+0.00111936\ttest-auc:0.883068+0.00522691\n",
      "[79]\ttrain-auc:0.894434+0.00109193\ttest-auc:0.883095+0.00524582\n",
      "[80]\ttrain-auc:0.894546+0.00107582\ttest-auc:0.88328+0.00522295\n",
      "[81]\ttrain-auc:0.894574+0.00110581\ttest-auc:0.88324+0.00522253\n",
      "[82]\ttrain-auc:0.894662+0.00102511\ttest-auc:0.883261+0.00513577\n",
      "[83]\ttrain-auc:0.894843+0.0011522\ttest-auc:0.883394+0.00516087\n",
      "[84]\ttrain-auc:0.894885+0.00115601\ttest-auc:0.883547+0.00515039\n",
      "[85]\ttrain-auc:0.894962+0.00111688\ttest-auc:0.88363+0.00510955\n",
      "[86]\ttrain-auc:0.895253+0.000826606\ttest-auc:0.883826+0.0053757\n",
      "[87]\ttrain-auc:0.89534+0.000790385\ttest-auc:0.883851+0.00537313\n",
      "[88]\ttrain-auc:0.895403+0.000758599\ttest-auc:0.883897+0.00538757\n",
      "[89]\ttrain-auc:0.895485+0.000770383\ttest-auc:0.883893+0.00538553\n",
      "[90]\ttrain-auc:0.895504+0.000755287\ttest-auc:0.883953+0.00535427\n",
      "[91]\ttrain-auc:0.895578+0.000733423\ttest-auc:0.883967+0.00535214\n",
      "[92]\ttrain-auc:0.895642+0.000720258\ttest-auc:0.883936+0.00534915\n",
      "[93]\ttrain-auc:0.895714+0.000696312\ttest-auc:0.883957+0.00537773\n",
      "[94]\ttrain-auc:0.895762+0.000705378\ttest-auc:0.884222+0.00518371\n",
      "[95]\ttrain-auc:0.895783+0.000709473\ttest-auc:0.884245+0.00516988\n",
      "[96]\ttrain-auc:0.895866+0.000699908\ttest-auc:0.88425+0.00516919\n",
      "[97]\ttrain-auc:0.895915+0.000674487\ttest-auc:0.884324+0.00508559\n",
      "[98]\ttrain-auc:0.896077+0.000639121\ttest-auc:0.884338+0.0050675\n",
      "[99]\ttrain-auc:0.896336+0.000941055\ttest-auc:0.884459+0.00507154\n",
      "[100]\ttrain-auc:0.896383+0.000881549\ttest-auc:0.884484+0.00510665\n",
      "[101]\ttrain-auc:0.896517+0.00096669\ttest-auc:0.884458+0.00502293\n",
      "[102]\ttrain-auc:0.896586+0.000945622\ttest-auc:0.884538+0.00500946\n",
      "[103]\ttrain-auc:0.896906+0.000885157\ttest-auc:0.884623+0.00496547\n",
      "[104]\ttrain-auc:0.896975+0.000880716\ttest-auc:0.884685+0.00495412\n",
      "[105]\ttrain-auc:0.897146+0.000840684\ttest-auc:0.884906+0.00476962\n",
      "[106]\ttrain-auc:0.897242+0.000805123\ttest-auc:0.884893+0.0047983\n",
      "[107]\ttrain-auc:0.897346+0.000720039\ttest-auc:0.884927+0.00475474\n",
      "[108]\ttrain-auc:0.897377+0.000741514\ttest-auc:0.884969+0.00476934\n",
      "[109]\ttrain-auc:0.89763+0.000665168\ttest-auc:0.885064+0.00471742\n",
      "[110]\ttrain-auc:0.897731+0.00064224\ttest-auc:0.885032+0.00471728\n",
      "[111]\ttrain-auc:0.897827+0.000659363\ttest-auc:0.885052+0.00471783\n",
      "[112]\ttrain-auc:0.897869+0.000657047\ttest-auc:0.885+0.00473748\n",
      "[113]\ttrain-auc:0.897965+0.000604931\ttest-auc:0.885125+0.00499658\n",
      "[114]\ttrain-auc:0.898008+0.000609929\ttest-auc:0.885208+0.00512854\n",
      "[115]\ttrain-auc:0.898078+0.000634024\ttest-auc:0.885335+0.00514283\n",
      "[116]\ttrain-auc:0.898127+0.000652275\ttest-auc:0.885338+0.0051266\n",
      "[117]\ttrain-auc:0.89816+0.000642777\ttest-auc:0.885324+0.00512182\n",
      "[118]\ttrain-auc:0.898226+0.000714287\ttest-auc:0.8854+0.00511425\n",
      "[119]\ttrain-auc:0.898287+0.000713159\ttest-auc:0.885442+0.00514165\n",
      "[120]\ttrain-auc:0.89836+0.000712772\ttest-auc:0.885492+0.00513518\n",
      "[121]\ttrain-auc:0.898464+0.0007398\ttest-auc:0.885639+0.00511809\n",
      "[122]\ttrain-auc:0.898608+0.000910956\ttest-auc:0.885555+0.00511486\n",
      "[123]\ttrain-auc:0.898688+0.000887619\ttest-auc:0.885651+0.00503607\n",
      "[124]\ttrain-auc:0.898778+0.000892739\ttest-auc:0.88576+0.00492015\n",
      "[125]\ttrain-auc:0.898808+0.000898636\ttest-auc:0.885802+0.00487642\n",
      "[126]\ttrain-auc:0.898934+0.00089084\ttest-auc:0.885811+0.00488438\n",
      "[127]\ttrain-auc:0.899026+0.000892823\ttest-auc:0.885851+0.00488194\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[128]\ttrain-auc:0.899114+0.000889262\ttest-auc:0.885998+0.00481678\n",
      "[129]\ttrain-auc:0.899245+0.000874921\ttest-auc:0.886203+0.0047003\n",
      "[130]\ttrain-auc:0.899308+0.00086589\ttest-auc:0.886228+0.00466434\n",
      "[131]\ttrain-auc:0.89932+0.000908758\ttest-auc:0.886313+0.00462745\n",
      "[132]\ttrain-auc:0.899397+0.000916357\ttest-auc:0.886365+0.0046816\n",
      "[133]\ttrain-auc:0.89945+0.000911702\ttest-auc:0.886375+0.00472905\n",
      "[134]\ttrain-auc:0.899516+0.000907538\ttest-auc:0.886416+0.00474952\n",
      "[135]\ttrain-auc:0.899609+0.000917232\ttest-auc:0.886487+0.00474608\n",
      "[136]\ttrain-auc:0.899681+0.00093925\ttest-auc:0.886438+0.00472234\n",
      "[137]\ttrain-auc:0.899713+0.000948172\ttest-auc:0.886448+0.00469779\n",
      "[138]\ttrain-auc:0.899753+0.000950918\ttest-auc:0.886552+0.00486496\n",
      "[139]\ttrain-auc:0.899774+0.000929964\ttest-auc:0.886664+0.00486914\n",
      "[140]\ttrain-auc:0.899834+0.000978759\ttest-auc:0.886681+0.00486805\n",
      "[141]\ttrain-auc:0.899972+0.000912937\ttest-auc:0.886758+0.00476035\n",
      "[142]\ttrain-auc:0.900014+0.000894289\ttest-auc:0.88687+0.00480098\n",
      "[143]\ttrain-auc:0.900153+0.000909022\ttest-auc:0.886928+0.00479571\n",
      "[144]\ttrain-auc:0.900206+0.000909074\ttest-auc:0.88697+0.00473041\n",
      "[145]\ttrain-auc:0.900294+0.000924044\ttest-auc:0.887013+0.00471385\n",
      "[146]\ttrain-auc:0.900359+0.000923789\ttest-auc:0.887037+0.0046217\n",
      "[147]\ttrain-auc:0.900416+0.000891501\ttest-auc:0.887158+0.00453671\n",
      "[148]\ttrain-auc:0.900586+0.000939677\ttest-auc:0.887462+0.00428174\n",
      "[149]\ttrain-auc:0.900647+0.000948774\ttest-auc:0.887472+0.00427841\n",
      "[150]\ttrain-auc:0.900685+0.000941964\ttest-auc:0.887493+0.00426788\n",
      "[151]\ttrain-auc:0.900756+0.000908108\ttest-auc:0.887661+0.00424052\n",
      "[152]\ttrain-auc:0.900814+0.000912275\ttest-auc:0.887701+0.00425726\n",
      "[153]\ttrain-auc:0.900906+0.000953184\ttest-auc:0.887786+0.00431232\n",
      "[154]\ttrain-auc:0.900968+0.000918155\ttest-auc:0.887855+0.00430398\n",
      "[155]\ttrain-auc:0.901022+0.000905302\ttest-auc:0.887905+0.00424643\n",
      "[156]\ttrain-auc:0.901082+0.000894631\ttest-auc:0.887898+0.00423021\n",
      "[157]\ttrain-auc:0.901127+0.000883794\ttest-auc:0.887929+0.00423598\n",
      "[158]\ttrain-auc:0.901185+0.000882462\ttest-auc:0.887971+0.00427123\n",
      "[159]\ttrain-auc:0.901297+0.000849433\ttest-auc:0.887923+0.00429269\n",
      "[160]\ttrain-auc:0.901364+0.000821968\ttest-auc:0.887946+0.00426046\n",
      "[161]\ttrain-auc:0.901407+0.000847891\ttest-auc:0.887996+0.00419465\n",
      "[162]\ttrain-auc:0.901475+0.000824209\ttest-auc:0.888047+0.00417567\n",
      "[163]\ttrain-auc:0.901536+0.000844672\ttest-auc:0.888145+0.00409716\n",
      "[164]\ttrain-auc:0.90164+0.000833605\ttest-auc:0.88824+0.00405589\n",
      "[165]\ttrain-auc:0.901681+0.000845539\ttest-auc:0.88826+0.00403522\n",
      "[166]\ttrain-auc:0.90173+0.0008686\ttest-auc:0.888324+0.00404659\n",
      "[167]\ttrain-auc:0.901812+0.000897482\ttest-auc:0.888356+0.00407853\n",
      "[168]\ttrain-auc:0.901885+0.000889465\ttest-auc:0.888365+0.00410252\n",
      "[169]\ttrain-auc:0.901955+0.000883848\ttest-auc:0.888299+0.00412965\n",
      "[170]\ttrain-auc:0.90202+0.000893029\ttest-auc:0.88837+0.00413172\n",
      "[171]\ttrain-auc:0.902138+0.000886849\ttest-auc:0.888391+0.00410021\n",
      "[172]\ttrain-auc:0.902197+0.000903375\ttest-auc:0.888459+0.00409727\n",
      "[173]\ttrain-auc:0.902232+0.000897626\ttest-auc:0.888523+0.00411\n",
      "[174]\ttrain-auc:0.90231+0.000923111\ttest-auc:0.888632+0.00404232\n",
      "[175]\ttrain-auc:0.902393+0.000903911\ttest-auc:0.888636+0.00403843\n",
      "[176]\ttrain-auc:0.902494+0.000886654\ttest-auc:0.88876+0.00404024\n",
      "[177]\ttrain-auc:0.902535+0.000887282\ttest-auc:0.888772+0.00402677\n",
      "[178]\ttrain-auc:0.902597+0.000879442\ttest-auc:0.888807+0.00401063\n",
      "[179]\ttrain-auc:0.902622+0.000872261\ttest-auc:0.888849+0.00402879\n",
      "[180]\ttrain-auc:0.902655+0.000848341\ttest-auc:0.888859+0.00404063\n",
      "[181]\ttrain-auc:0.902734+0.000838235\ttest-auc:0.888868+0.00400483\n",
      "[182]\ttrain-auc:0.902799+0.000856608\ttest-auc:0.888838+0.00398459\n",
      "[183]\ttrain-auc:0.902942+0.000911278\ttest-auc:0.888912+0.00395622\n",
      "[184]\ttrain-auc:0.902998+0.000871173\ttest-auc:0.888963+0.00393289\n",
      "[185]\ttrain-auc:0.903049+0.000834096\ttest-auc:0.88912+0.00411247\n",
      "[186]\ttrain-auc:0.903088+0.000833785\ttest-auc:0.88911+0.00409331\n",
      "[187]\ttrain-auc:0.903145+0.000823456\ttest-auc:0.889099+0.00411709\n",
      "[188]\ttrain-auc:0.903186+0.000813993\ttest-auc:0.889156+0.00409908\n",
      "[189]\ttrain-auc:0.903241+0.000808837\ttest-auc:0.889193+0.0040932\n",
      "[190]\ttrain-auc:0.90326+0.000800412\ttest-auc:0.889189+0.0041042\n",
      "[191]\ttrain-auc:0.903325+0.000792872\ttest-auc:0.889216+0.00408587\n",
      "[192]\ttrain-auc:0.903394+0.000789557\ttest-auc:0.889236+0.00409245\n",
      "[193]\ttrain-auc:0.903461+0.000785352\ttest-auc:0.889226+0.00412216\n",
      "[194]\ttrain-auc:0.903551+0.000814052\ttest-auc:0.88933+0.00405957\n",
      "[195]\ttrain-auc:0.903625+0.000813279\ttest-auc:0.889367+0.00404019\n",
      "[196]\ttrain-auc:0.903657+0.000820034\ttest-auc:0.889387+0.00404757\n",
      "[197]\ttrain-auc:0.903711+0.000826192\ttest-auc:0.889403+0.00402964\n",
      "[198]\ttrain-auc:0.903784+0.000812566\ttest-auc:0.889405+0.00399223\n",
      "[199]\ttrain-auc:0.903889+0.000799291\ttest-auc:0.889384+0.00397081\n",
      "[200]\ttrain-auc:0.90395+0.000800041\ttest-auc:0.889418+0.00394849\n",
      "[201]\ttrain-auc:0.903996+0.000792908\ttest-auc:0.889432+0.00392119\n",
      "[202]\ttrain-auc:0.904024+0.000781205\ttest-auc:0.889475+0.00390868\n",
      "[203]\ttrain-auc:0.904064+0.000772126\ttest-auc:0.889412+0.00386268\n",
      "[204]\ttrain-auc:0.904127+0.000781755\ttest-auc:0.889415+0.00383889\n",
      "[205]\ttrain-auc:0.904159+0.00080322\ttest-auc:0.889421+0.00383295\n",
      "[206]\ttrain-auc:0.904248+0.000813362\ttest-auc:0.889484+0.00381042\n",
      "[207]\ttrain-auc:0.904298+0.000780411\ttest-auc:0.889503+0.00379487\n",
      "[208]\ttrain-auc:0.904341+0.00074579\ttest-auc:0.88952+0.00378509\n",
      "[209]\ttrain-auc:0.904398+0.000739183\ttest-auc:0.889535+0.00377975\n",
      "[210]\ttrain-auc:0.904454+0.000739704\ttest-auc:0.889592+0.00375661\n",
      "[211]\ttrain-auc:0.90453+0.000758763\ttest-auc:0.889621+0.00372803\n",
      "[212]\ttrain-auc:0.904573+0.000741626\ttest-auc:0.88964+0.0037164\n",
      "[213]\ttrain-auc:0.90462+0.000745698\ttest-auc:0.88964+0.00372327\n",
      "[214]\ttrain-auc:0.904673+0.000755015\ttest-auc:0.889679+0.00370084\n",
      "[215]\ttrain-auc:0.904722+0.000740715\ttest-auc:0.889702+0.00370659\n",
      "[216]\ttrain-auc:0.904794+0.000779769\ttest-auc:0.88974+0.00369369\n",
      "[217]\ttrain-auc:0.904845+0.000772535\ttest-auc:0.889761+0.0037014\n",
      "[218]\ttrain-auc:0.904927+0.000761046\ttest-auc:0.889792+0.00370793\n",
      "[219]\ttrain-auc:0.90498+0.000764731\ttest-auc:0.889812+0.00373486\n",
      "[220]\ttrain-auc:0.905045+0.000751967\ttest-auc:0.889825+0.00375035\n",
      "[221]\ttrain-auc:0.905087+0.000743209\ttest-auc:0.889832+0.00379254\n",
      "[222]\ttrain-auc:0.905126+0.000752336\ttest-auc:0.889868+0.00373705\n",
      "[223]\ttrain-auc:0.905175+0.000742336\ttest-auc:0.889909+0.00372207\n",
      "[224]\ttrain-auc:0.905216+0.000739559\ttest-auc:0.889896+0.00374823\n",
      "[225]\ttrain-auc:0.905281+0.000742859\ttest-auc:0.88992+0.00372445\n",
      "[226]\ttrain-auc:0.905326+0.000744057\ttest-auc:0.889925+0.00371139\n",
      "[227]\ttrain-auc:0.905412+0.000702233\ttest-auc:0.89001+0.00377374\n",
      "[228]\ttrain-auc:0.905471+0.000692918\ttest-auc:0.890046+0.00378875\n",
      "[229]\ttrain-auc:0.905515+0.000678157\ttest-auc:0.89008+0.00380321\n",
      "[230]\ttrain-auc:0.905561+0.000682361\ttest-auc:0.890077+0.00381381\n",
      "[231]\ttrain-auc:0.905614+0.000673185\ttest-auc:0.890116+0.0037773\n",
      "[232]\ttrain-auc:0.905674+0.000696999\ttest-auc:0.890122+0.00376639\n",
      "[233]\ttrain-auc:0.905719+0.000722137\ttest-auc:0.890152+0.00373589\n",
      "[234]\ttrain-auc:0.905759+0.000725411\ttest-auc:0.890169+0.00371875\n",
      "[235]\ttrain-auc:0.905795+0.000733922\ttest-auc:0.89016+0.00371904\n",
      "[236]\ttrain-auc:0.905842+0.000734887\ttest-auc:0.890161+0.00369261\n",
      "[237]\ttrain-auc:0.905912+0.000698559\ttest-auc:0.890199+0.00366923\n",
      "[238]\ttrain-auc:0.905963+0.000687355\ttest-auc:0.890222+0.00366697\n",
      "[239]\ttrain-auc:0.906+0.000690831\ttest-auc:0.890238+0.00367363\n",
      "[240]\ttrain-auc:0.906047+0.000684826\ttest-auc:0.89024+0.00370566\n",
      "[241]\ttrain-auc:0.906072+0.000682963\ttest-auc:0.890234+0.00373504\n",
      "[242]\ttrain-auc:0.906107+0.0006739\ttest-auc:0.890264+0.00375426\n",
      "[243]\ttrain-auc:0.906187+0.000692809\ttest-auc:0.890317+0.00373236\n",
      "[244]\ttrain-auc:0.90624+0.000721271\ttest-auc:0.890328+0.00374228\n",
      "[245]\ttrain-auc:0.906306+0.000704239\ttest-auc:0.890324+0.00372356\n",
      "[246]\ttrain-auc:0.90635+0.000721434\ttest-auc:0.89037+0.00374472\n",
      "[247]\ttrain-auc:0.906428+0.000717445\ttest-auc:0.890366+0.00373633\n",
      "[248]\ttrain-auc:0.906488+0.000701037\ttest-auc:0.89039+0.00375225\n",
      "[249]\ttrain-auc:0.906559+0.000709595\ttest-auc:0.890443+0.00377888\n",
      "[250]\ttrain-auc:0.906638+0.000714673\ttest-auc:0.890469+0.00376766\n",
      "[251]\ttrain-auc:0.906692+0.000736234\ttest-auc:0.890499+0.00377848\n",
      "[252]\ttrain-auc:0.906755+0.000731325\ttest-auc:0.890505+0.0037526\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[253]\ttrain-auc:0.906832+0.000708735\ttest-auc:0.890533+0.00372\n",
      "[254]\ttrain-auc:0.906909+0.00071503\ttest-auc:0.890587+0.00373244\n",
      "[255]\ttrain-auc:0.906953+0.000695949\ttest-auc:0.89059+0.00372953\n",
      "[256]\ttrain-auc:0.907033+0.000669187\ttest-auc:0.890605+0.00370874\n",
      "[257]\ttrain-auc:0.9071+0.000693013\ttest-auc:0.89062+0.00371688\n",
      "[258]\ttrain-auc:0.907159+0.000671504\ttest-auc:0.890625+0.00363898\n",
      "[259]\ttrain-auc:0.907202+0.000661356\ttest-auc:0.890617+0.00365216\n",
      "[260]\ttrain-auc:0.907269+0.000664629\ttest-auc:0.890669+0.00365724\n",
      "[261]\ttrain-auc:0.907319+0.000667782\ttest-auc:0.890648+0.00364148\n",
      "[262]\ttrain-auc:0.90738+0.000672823\ttest-auc:0.890692+0.00361117\n",
      "[263]\ttrain-auc:0.907459+0.00064001\ttest-auc:0.890694+0.00361401\n",
      "[264]\ttrain-auc:0.907508+0.000622373\ttest-auc:0.890761+0.00359537\n",
      "[265]\ttrain-auc:0.90756+0.000624809\ttest-auc:0.890751+0.00356814\n",
      "[266]\ttrain-auc:0.907617+0.000599505\ttest-auc:0.890758+0.00354586\n",
      "[267]\ttrain-auc:0.907668+0.000619389\ttest-auc:0.890763+0.00356195\n",
      "[268]\ttrain-auc:0.90773+0.00062392\ttest-auc:0.890756+0.00355729\n",
      "[269]\ttrain-auc:0.907791+0.000605697\ttest-auc:0.890753+0.00355456\n",
      "[270]\ttrain-auc:0.907842+0.000613898\ttest-auc:0.890781+0.00356324\n",
      "[271]\ttrain-auc:0.90788+0.000606867\ttest-auc:0.890803+0.00353305\n",
      "[272]\ttrain-auc:0.907962+0.000622786\ttest-auc:0.890855+0.00354271\n",
      "[273]\ttrain-auc:0.908028+0.000594711\ttest-auc:0.890874+0.00355005\n",
      "[274]\ttrain-auc:0.908092+0.000574913\ttest-auc:0.890887+0.00351322\n",
      "[275]\ttrain-auc:0.908141+0.000575253\ttest-auc:0.890898+0.00352025\n",
      "[276]\ttrain-auc:0.908195+0.000590752\ttest-auc:0.890934+0.00352382\n",
      "[277]\ttrain-auc:0.908249+0.000585369\ttest-auc:0.890957+0.00350701\n",
      "[278]\ttrain-auc:0.908323+0.000575301\ttest-auc:0.891009+0.00353774\n",
      "[279]\ttrain-auc:0.908398+0.000592779\ttest-auc:0.891094+0.00350482\n",
      "[280]\ttrain-auc:0.908463+0.000606515\ttest-auc:0.891121+0.00351359\n",
      "[281]\ttrain-auc:0.90853+0.000607197\ttest-auc:0.891112+0.00350662\n",
      "[282]\ttrain-auc:0.908576+0.000602992\ttest-auc:0.891104+0.00353147\n",
      "[283]\ttrain-auc:0.908634+0.000630031\ttest-auc:0.891115+0.00351272\n",
      "[284]\ttrain-auc:0.908679+0.000640456\ttest-auc:0.891149+0.00349607\n",
      "[285]\ttrain-auc:0.908733+0.000633873\ttest-auc:0.89116+0.00347848\n",
      "[286]\ttrain-auc:0.908802+0.000630869\ttest-auc:0.891314+0.00343125\n",
      "[287]\ttrain-auc:0.908842+0.00061193\ttest-auc:0.891329+0.00343483\n",
      "[288]\ttrain-auc:0.908896+0.000611106\ttest-auc:0.891369+0.00344302\n",
      "[289]\ttrain-auc:0.908942+0.000600877\ttest-auc:0.891412+0.0034268\n",
      "[290]\ttrain-auc:0.908997+0.00060776\ttest-auc:0.891433+0.00341052\n",
      "[291]\ttrain-auc:0.909042+0.0006109\ttest-auc:0.89146+0.00339258\n",
      "[292]\ttrain-auc:0.909106+0.00061156\ttest-auc:0.891515+0.00338476\n",
      "[293]\ttrain-auc:0.909138+0.000619781\ttest-auc:0.891531+0.00340907\n",
      "[294]\ttrain-auc:0.909192+0.000630401\ttest-auc:0.89156+0.00340589\n",
      "[295]\ttrain-auc:0.909246+0.000633681\ttest-auc:0.891566+0.00337693\n",
      "[296]\ttrain-auc:0.909279+0.000639598\ttest-auc:0.891599+0.00336465\n",
      "[297]\ttrain-auc:0.909348+0.000647715\ttest-auc:0.891618+0.00339266\n",
      "[298]\ttrain-auc:0.909398+0.000639221\ttest-auc:0.891622+0.00337346\n",
      "[299]\ttrain-auc:0.90944+0.000631523\ttest-auc:0.891635+0.0033941\n",
      "[300]\ttrain-auc:0.909501+0.000630508\ttest-auc:0.891634+0.00337984\n",
      "[301]\ttrain-auc:0.909542+0.000644202\ttest-auc:0.891621+0.00338159\n",
      "[302]\ttrain-auc:0.909591+0.000656337\ttest-auc:0.891632+0.00336685\n",
      "[303]\ttrain-auc:0.909659+0.000630844\ttest-auc:0.891675+0.00338632\n",
      "[304]\ttrain-auc:0.909687+0.000624827\ttest-auc:0.891698+0.00338484\n",
      "[305]\ttrain-auc:0.909731+0.000636132\ttest-auc:0.891703+0.00339141\n",
      "[306]\ttrain-auc:0.909774+0.000644971\ttest-auc:0.891712+0.00341617\n",
      "[307]\ttrain-auc:0.909837+0.000656787\ttest-auc:0.891745+0.00341699\n",
      "[308]\ttrain-auc:0.909898+0.000663949\ttest-auc:0.89176+0.00344139\n",
      "[309]\ttrain-auc:0.909948+0.000659385\ttest-auc:0.891757+0.00343847\n",
      "[310]\ttrain-auc:0.910014+0.000677038\ttest-auc:0.891795+0.0034153\n",
      "[311]\ttrain-auc:0.910055+0.000664819\ttest-auc:0.891836+0.00341808\n",
      "[312]\ttrain-auc:0.910109+0.000670575\ttest-auc:0.891871+0.00338198\n",
      "[313]\ttrain-auc:0.910158+0.000664414\ttest-auc:0.89194+0.00336275\n",
      "[314]\ttrain-auc:0.910206+0.000652942\ttest-auc:0.891968+0.00337689\n",
      "[315]\ttrain-auc:0.910248+0.000653022\ttest-auc:0.891966+0.00336469\n",
      "[316]\ttrain-auc:0.910296+0.000632326\ttest-auc:0.891978+0.00336145\n",
      "[317]\ttrain-auc:0.910336+0.000639538\ttest-auc:0.891991+0.00337077\n",
      "[318]\ttrain-auc:0.910374+0.000638933\ttest-auc:0.892025+0.00336968\n",
      "[319]\ttrain-auc:0.910424+0.000647434\ttest-auc:0.892054+0.00335585\n",
      "[320]\ttrain-auc:0.910496+0.000628048\ttest-auc:0.892058+0.00332811\n",
      "[321]\ttrain-auc:0.910548+0.000617083\ttest-auc:0.892071+0.00330212\n",
      "[322]\ttrain-auc:0.910617+0.000593992\ttest-auc:0.892127+0.00328993\n",
      "[323]\ttrain-auc:0.910676+0.000605854\ttest-auc:0.892155+0.00330313\n",
      "[324]\ttrain-auc:0.910723+0.000603774\ttest-auc:0.892151+0.00329388\n",
      "[325]\ttrain-auc:0.910773+0.000582252\ttest-auc:0.892155+0.00327184\n",
      "[326]\ttrain-auc:0.910839+0.000569212\ttest-auc:0.89218+0.00329881\n",
      "[327]\ttrain-auc:0.910887+0.000566054\ttest-auc:0.892178+0.0033137\n",
      "[328]\ttrain-auc:0.910943+0.000554345\ttest-auc:0.892224+0.00329954\n",
      "[329]\ttrain-auc:0.911002+0.000549818\ttest-auc:0.892244+0.00333131\n",
      "[330]\ttrain-auc:0.911071+0.000558058\ttest-auc:0.892296+0.00331449\n",
      "[331]\ttrain-auc:0.911116+0.000552509\ttest-auc:0.892296+0.0033078\n",
      "[332]\ttrain-auc:0.911165+0.000565396\ttest-auc:0.892318+0.00332114\n",
      "[333]\ttrain-auc:0.911219+0.000558717\ttest-auc:0.892338+0.00332639\n",
      "[334]\ttrain-auc:0.911261+0.00054591\ttest-auc:0.892388+0.0032814\n",
      "[335]\ttrain-auc:0.911319+0.000553812\ttest-auc:0.892379+0.00324796\n",
      "[336]\ttrain-auc:0.91136+0.000546069\ttest-auc:0.892374+0.00324696\n",
      "[337]\ttrain-auc:0.911403+0.000543957\ttest-auc:0.892396+0.00324648\n",
      "[338]\ttrain-auc:0.911453+0.000545557\ttest-auc:0.892411+0.00322435\n",
      "[339]\ttrain-auc:0.911491+0.000543771\ttest-auc:0.892458+0.00323128\n",
      "[340]\ttrain-auc:0.911525+0.000538897\ttest-auc:0.892477+0.00323119\n",
      "[341]\ttrain-auc:0.911569+0.000534942\ttest-auc:0.892482+0.00324082\n",
      "[342]\ttrain-auc:0.911618+0.000529524\ttest-auc:0.89249+0.00325617\n",
      "[343]\ttrain-auc:0.911662+0.000523869\ttest-auc:0.892515+0.00323869\n",
      "[344]\ttrain-auc:0.911713+0.000526271\ttest-auc:0.892512+0.00323653\n",
      "[345]\ttrain-auc:0.911775+0.000532406\ttest-auc:0.892529+0.00326577\n",
      "[346]\ttrain-auc:0.911819+0.000551049\ttest-auc:0.892517+0.00326745\n",
      "[347]\ttrain-auc:0.911879+0.000544177\ttest-auc:0.892573+0.00327445\n",
      "[348]\ttrain-auc:0.91193+0.000545295\ttest-auc:0.892588+0.00328238\n",
      "[349]\ttrain-auc:0.911977+0.000534303\ttest-auc:0.892614+0.0032359\n",
      "[350]\ttrain-auc:0.912034+0.000537399\ttest-auc:0.892649+0.00323197\n",
      "[351]\ttrain-auc:0.912084+0.000550078\ttest-auc:0.892655+0.00324095\n",
      "[352]\ttrain-auc:0.912131+0.000552093\ttest-auc:0.892675+0.00321672\n",
      "[353]\ttrain-auc:0.912165+0.000550184\ttest-auc:0.892665+0.00324062\n",
      "[354]\ttrain-auc:0.912224+0.000563448\ttest-auc:0.892693+0.00326032\n",
      "[355]\ttrain-auc:0.912274+0.000576332\ttest-auc:0.8927+0.0032656\n",
      "[356]\ttrain-auc:0.912302+0.000573897\ttest-auc:0.892716+0.00327593\n",
      "[357]\ttrain-auc:0.912344+0.000575145\ttest-auc:0.892699+0.00325944\n",
      "[358]\ttrain-auc:0.912392+0.000557735\ttest-auc:0.892742+0.00323313\n",
      "[359]\ttrain-auc:0.912432+0.00054124\ttest-auc:0.892761+0.00324759\n",
      "[360]\ttrain-auc:0.912486+0.000508491\ttest-auc:0.892807+0.00327984\n",
      "[361]\ttrain-auc:0.912534+0.000522272\ttest-auc:0.892805+0.00328171\n",
      "[362]\ttrain-auc:0.912564+0.000534356\ttest-auc:0.89281+0.00328009\n",
      "[363]\ttrain-auc:0.912609+0.000544292\ttest-auc:0.892837+0.00325835\n",
      "[364]\ttrain-auc:0.912654+0.000530194\ttest-auc:0.892861+0.00326315\n",
      "[365]\ttrain-auc:0.912701+0.000525743\ttest-auc:0.892834+0.00327497\n",
      "[366]\ttrain-auc:0.912743+0.000524927\ttest-auc:0.892834+0.00326528\n",
      "[367]\ttrain-auc:0.912789+0.000507835\ttest-auc:0.892854+0.00327305\n",
      "[368]\ttrain-auc:0.912841+0.000491603\ttest-auc:0.892892+0.00329492\n",
      "[369]\ttrain-auc:0.912895+0.000480883\ttest-auc:0.892902+0.0032922\n",
      "[370]\ttrain-auc:0.912944+0.000472097\ttest-auc:0.892896+0.00329546\n",
      "[371]\ttrain-auc:0.912977+0.000466164\ttest-auc:0.892916+0.0033066\n",
      "[372]\ttrain-auc:0.913032+0.000463812\ttest-auc:0.892925+0.00331017\n",
      "[373]\ttrain-auc:0.913095+0.000467018\ttest-auc:0.892928+0.00332236\n",
      "[374]\ttrain-auc:0.913139+0.000462442\ttest-auc:0.892917+0.00334046\n",
      "[375]\ttrain-auc:0.913176+0.000473439\ttest-auc:0.892932+0.00332589\n",
      "[376]\ttrain-auc:0.913223+0.00048464\ttest-auc:0.892956+0.00330526\n",
      "[377]\ttrain-auc:0.913266+0.000490662\ttest-auc:0.892949+0.0033032\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[378]\ttrain-auc:0.913335+0.000489633\ttest-auc:0.892979+0.00330669\n",
      "[379]\ttrain-auc:0.913374+0.000480823\ttest-auc:0.892979+0.00330312\n",
      "[380]\ttrain-auc:0.913432+0.000461039\ttest-auc:0.892996+0.00329119\n",
      "[381]\ttrain-auc:0.913482+0.000448228\ttest-auc:0.893023+0.00333245\n",
      "[382]\ttrain-auc:0.913545+0.000453501\ttest-auc:0.893039+0.00333271\n",
      "[383]\ttrain-auc:0.913584+0.000441656\ttest-auc:0.893062+0.0033631\n",
      "[384]\ttrain-auc:0.913618+0.000454964\ttest-auc:0.893063+0.00337478\n",
      "[385]\ttrain-auc:0.913684+0.000437387\ttest-auc:0.893071+0.00333341\n",
      "[386]\ttrain-auc:0.91373+0.000436509\ttest-auc:0.893087+0.00334075\n",
      "[387]\ttrain-auc:0.913761+0.000438864\ttest-auc:0.893075+0.00333892\n",
      "[388]\ttrain-auc:0.9138+0.000458407\ttest-auc:0.893047+0.00334441\n",
      "[389]\ttrain-auc:0.913844+0.000456467\ttest-auc:0.893052+0.00332382\n",
      "[390]\ttrain-auc:0.913904+0.000441415\ttest-auc:0.893084+0.00331318\n",
      "[391]\ttrain-auc:0.913934+0.000427829\ttest-auc:0.893102+0.00329778\n",
      "[392]\ttrain-auc:0.913968+0.000421444\ttest-auc:0.893116+0.00328518\n",
      "[393]\ttrain-auc:0.914014+0.000428623\ttest-auc:0.89309+0.00326084\n",
      "[394]\ttrain-auc:0.914056+0.00044101\ttest-auc:0.893122+0.00324352\n",
      "[395]\ttrain-auc:0.914109+0.00044396\ttest-auc:0.893134+0.00323969\n",
      "[396]\ttrain-auc:0.914154+0.000453731\ttest-auc:0.893155+0.00322306\n",
      "[397]\ttrain-auc:0.914185+0.000458668\ttest-auc:0.89316+0.00322131\n",
      "[398]\ttrain-auc:0.914225+0.000453496\ttest-auc:0.893181+0.00321914\n",
      "[399]\ttrain-auc:0.914261+0.000446019\ttest-auc:0.893177+0.00322047\n",
      "[400]\ttrain-auc:0.914308+0.00044992\ttest-auc:0.893189+0.0032253\n",
      "[401]\ttrain-auc:0.914357+0.000451318\ttest-auc:0.893201+0.0032156\n",
      "[402]\ttrain-auc:0.914396+0.000442269\ttest-auc:0.893242+0.00322283\n",
      "[403]\ttrain-auc:0.91444+0.000447805\ttest-auc:0.893248+0.00320976\n",
      "[404]\ttrain-auc:0.914495+0.000446611\ttest-auc:0.893238+0.00321712\n",
      "[405]\ttrain-auc:0.914534+0.000451874\ttest-auc:0.893262+0.00324977\n",
      "[406]\ttrain-auc:0.914574+0.000449246\ttest-auc:0.893286+0.00322362\n",
      "[407]\ttrain-auc:0.914628+0.000458563\ttest-auc:0.893284+0.00321978\n",
      "[408]\ttrain-auc:0.914658+0.000461177\ttest-auc:0.89329+0.0032144\n",
      "[409]\ttrain-auc:0.914703+0.000453812\ttest-auc:0.893284+0.00320166\n",
      "[410]\ttrain-auc:0.914747+0.000453187\ttest-auc:0.8933+0.00318078\n",
      "[411]\ttrain-auc:0.914793+0.000462611\ttest-auc:0.893317+0.00316239\n",
      "[412]\ttrain-auc:0.914834+0.000464084\ttest-auc:0.893323+0.00317492\n",
      "[413]\ttrain-auc:0.914889+0.000461689\ttest-auc:0.893313+0.00316507\n",
      "[414]\ttrain-auc:0.914945+0.000464429\ttest-auc:0.893317+0.0031682\n",
      "[415]\ttrain-auc:0.915+0.00048115\ttest-auc:0.893337+0.00317645\n",
      "[416]\ttrain-auc:0.915038+0.000489594\ttest-auc:0.893353+0.00320103\n",
      "[417]\ttrain-auc:0.915102+0.000496902\ttest-auc:0.893377+0.00318041\n",
      "[418]\ttrain-auc:0.915147+0.000505398\ttest-auc:0.893368+0.00318315\n",
      "[419]\ttrain-auc:0.915202+0.000518296\ttest-auc:0.893344+0.00318702\n",
      "[420]\ttrain-auc:0.915251+0.000528107\ttest-auc:0.893331+0.00318965\n",
      "[421]\ttrain-auc:0.915302+0.000547426\ttest-auc:0.893334+0.00320924\n",
      "[422]\ttrain-auc:0.915341+0.000544859\ttest-auc:0.893369+0.00320373\n",
      "[423]\ttrain-auc:0.915398+0.000543081\ttest-auc:0.893382+0.0031818\n",
      "[424]\ttrain-auc:0.915446+0.00053195\ttest-auc:0.893386+0.00318173\n",
      "[425]\ttrain-auc:0.915495+0.000543276\ttest-auc:0.893406+0.00320502\n",
      "[426]\ttrain-auc:0.91554+0.000560877\ttest-auc:0.893439+0.00320609\n",
      "[427]\ttrain-auc:0.915576+0.000558635\ttest-auc:0.893461+0.00322263\n",
      "[428]\ttrain-auc:0.915628+0.000579384\ttest-auc:0.893486+0.00317884\n",
      "[429]\ttrain-auc:0.915664+0.000575248\ttest-auc:0.893507+0.003185\n",
      "[430]\ttrain-auc:0.915703+0.000567989\ttest-auc:0.893529+0.00318321\n",
      "[431]\ttrain-auc:0.915753+0.00057853\ttest-auc:0.893531+0.00316814\n",
      "[432]\ttrain-auc:0.915798+0.000573069\ttest-auc:0.893519+0.00313588\n",
      "[433]\ttrain-auc:0.915836+0.000570985\ttest-auc:0.893543+0.00312572\n",
      "[434]\ttrain-auc:0.915892+0.000567974\ttest-auc:0.893528+0.0031398\n",
      "[435]\ttrain-auc:0.915933+0.000570012\ttest-auc:0.893548+0.00315748\n",
      "[436]\ttrain-auc:0.915992+0.000571156\ttest-auc:0.89355+0.00317164\n",
      "[437]\ttrain-auc:0.916027+0.000551771\ttest-auc:0.893554+0.00316864\n",
      "[438]\ttrain-auc:0.916082+0.00054562\ttest-auc:0.893563+0.00317372\n",
      "[439]\ttrain-auc:0.916117+0.000539057\ttest-auc:0.893565+0.0031672\n",
      "[440]\ttrain-auc:0.91616+0.000544501\ttest-auc:0.893616+0.00316183\n",
      "[441]\ttrain-auc:0.916205+0.000538297\ttest-auc:0.893633+0.00317558\n",
      "[442]\ttrain-auc:0.916238+0.000549336\ttest-auc:0.893623+0.00316572\n",
      "[443]\ttrain-auc:0.916275+0.000561799\ttest-auc:0.89367+0.00316463\n",
      "[444]\ttrain-auc:0.916317+0.000551761\ttest-auc:0.893695+0.00315508\n",
      "[445]\ttrain-auc:0.916339+0.000547834\ttest-auc:0.893704+0.00312794\n",
      "[446]\ttrain-auc:0.916371+0.000548717\ttest-auc:0.893723+0.00313525\n",
      "[447]\ttrain-auc:0.916418+0.000534743\ttest-auc:0.893759+0.00314953\n",
      "[448]\ttrain-auc:0.916458+0.000527519\ttest-auc:0.893768+0.00312962\n",
      "[449]\ttrain-auc:0.916493+0.000518903\ttest-auc:0.893796+0.00310858\n",
      "[450]\ttrain-auc:0.916523+0.000526737\ttest-auc:0.893825+0.00308746\n",
      "[451]\ttrain-auc:0.916562+0.000530979\ttest-auc:0.893849+0.00308568\n",
      "[452]\ttrain-auc:0.916614+0.000535193\ttest-auc:0.893871+0.00308348\n",
      "[453]\ttrain-auc:0.916659+0.000522659\ttest-auc:0.893886+0.003093\n",
      "[454]\ttrain-auc:0.916696+0.000532981\ttest-auc:0.893899+0.00309803\n",
      "[455]\ttrain-auc:0.91673+0.000535859\ttest-auc:0.893914+0.00308056\n",
      "[456]\ttrain-auc:0.916779+0.000525432\ttest-auc:0.893903+0.00307763\n",
      "[457]\ttrain-auc:0.916823+0.000526211\ttest-auc:0.893919+0.00309067\n",
      "[458]\ttrain-auc:0.916852+0.000526275\ttest-auc:0.893927+0.00308458\n",
      "[459]\ttrain-auc:0.916906+0.000523996\ttest-auc:0.893948+0.00309326\n",
      "[460]\ttrain-auc:0.916952+0.000521054\ttest-auc:0.893959+0.00306697\n",
      "[461]\ttrain-auc:0.916989+0.000522172\ttest-auc:0.893997+0.00308792\n",
      "[462]\ttrain-auc:0.917039+0.000531855\ttest-auc:0.894011+0.00309383\n",
      "[463]\ttrain-auc:0.917071+0.000538433\ttest-auc:0.894032+0.00307438\n",
      "[464]\ttrain-auc:0.917112+0.000546173\ttest-auc:0.893999+0.00306057\n",
      "[465]\ttrain-auc:0.917145+0.000548862\ttest-auc:0.89403+0.00305069\n",
      "[466]\ttrain-auc:0.917181+0.000536684\ttest-auc:0.894049+0.00303486\n",
      "[467]\ttrain-auc:0.917225+0.000542651\ttest-auc:0.894107+0.00302414\n",
      "[468]\ttrain-auc:0.91727+0.000545876\ttest-auc:0.89412+0.00300747\n",
      "[469]\ttrain-auc:0.917315+0.000545497\ttest-auc:0.894113+0.00301481\n",
      "[470]\ttrain-auc:0.917348+0.000545002\ttest-auc:0.89413+0.00299993\n",
      "[471]\ttrain-auc:0.917391+0.0005576\ttest-auc:0.894136+0.00300812\n",
      "[472]\ttrain-auc:0.917426+0.000566205\ttest-auc:0.894152+0.00299337\n",
      "[473]\ttrain-auc:0.917465+0.000560811\ttest-auc:0.894139+0.00297526\n",
      "[474]\ttrain-auc:0.917495+0.000563972\ttest-auc:0.894164+0.00297506\n",
      "[475]\ttrain-auc:0.917534+0.000575346\ttest-auc:0.89417+0.00296696\n",
      "[476]\ttrain-auc:0.917576+0.000579654\ttest-auc:0.894173+0.00295486\n",
      "[477]\ttrain-auc:0.91763+0.000580915\ttest-auc:0.894173+0.00294958\n",
      "[478]\ttrain-auc:0.917668+0.000594884\ttest-auc:0.894187+0.002969\n",
      "[479]\ttrain-auc:0.917703+0.000592705\ttest-auc:0.894193+0.00296075\n",
      "[480]\ttrain-auc:0.917752+0.00059588\ttest-auc:0.894217+0.00300334\n",
      "[481]\ttrain-auc:0.917794+0.000601886\ttest-auc:0.89423+0.00300084\n",
      "[482]\ttrain-auc:0.917833+0.000599114\ttest-auc:0.894235+0.00298262\n",
      "[483]\ttrain-auc:0.917884+0.000602014\ttest-auc:0.89425+0.0029907\n",
      "[484]\ttrain-auc:0.917916+0.000606266\ttest-auc:0.894262+0.0030024\n",
      "[485]\ttrain-auc:0.91794+0.000598539\ttest-auc:0.89425+0.0029716\n",
      "[486]\ttrain-auc:0.917975+0.000601596\ttest-auc:0.894259+0.00298816\n",
      "[487]\ttrain-auc:0.918022+0.000598326\ttest-auc:0.894267+0.00299376\n",
      "[488]\ttrain-auc:0.918067+0.000601891\ttest-auc:0.894299+0.0029892\n",
      "[489]\ttrain-auc:0.918108+0.000605953\ttest-auc:0.894288+0.00300019\n",
      "[490]\ttrain-auc:0.918147+0.000593107\ttest-auc:0.894303+0.00299654\n",
      "[491]\ttrain-auc:0.918207+0.000588869\ttest-auc:0.894311+0.00299245\n",
      "[492]\ttrain-auc:0.918251+0.00058809\ttest-auc:0.894304+0.00296584\n",
      "[493]\ttrain-auc:0.918295+0.00057102\ttest-auc:0.894308+0.00296359\n",
      "[494]\ttrain-auc:0.91834+0.000577333\ttest-auc:0.894317+0.00295549\n",
      "[495]\ttrain-auc:0.91838+0.00058315\ttest-auc:0.894324+0.00295096\n",
      "[496]\ttrain-auc:0.918416+0.000575894\ttest-auc:0.894352+0.00293725\n",
      "[497]\ttrain-auc:0.918455+0.000576467\ttest-auc:0.89435+0.00294894\n",
      "[498]\ttrain-auc:0.91849+0.000576646\ttest-auc:0.894362+0.00294363\n",
      "[499]\ttrain-auc:0.918532+0.000584766\ttest-auc:0.89436+0.00292263\n",
      "[500]\ttrain-auc:0.91857+0.000588941\ttest-auc:0.894393+0.00291354\n",
      "[501]\ttrain-auc:0.91862+0.0005843\ttest-auc:0.894407+0.00292177\n",
      "[502]\ttrain-auc:0.91866+0.000589477\ttest-auc:0.894426+0.00292238\n",
      "[503]\ttrain-auc:0.918695+0.000585153\ttest-auc:0.894431+0.00289765\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[504]\ttrain-auc:0.918739+0.000586991\ttest-auc:0.894409+0.00289824\n",
      "[505]\ttrain-auc:0.91878+0.000580305\ttest-auc:0.894417+0.00289538\n",
      "[506]\ttrain-auc:0.918818+0.00057091\ttest-auc:0.894415+0.00292387\n",
      "[507]\ttrain-auc:0.91886+0.000572939\ttest-auc:0.894435+0.00293064\n",
      "[508]\ttrain-auc:0.918906+0.000569761\ttest-auc:0.894455+0.00293286\n",
      "[509]\ttrain-auc:0.918942+0.000562845\ttest-auc:0.894436+0.00290622\n",
      "[510]\ttrain-auc:0.918996+0.000553901\ttest-auc:0.894453+0.00291462\n",
      "[511]\ttrain-auc:0.919021+0.000558694\ttest-auc:0.894468+0.00292806\n",
      "[512]\ttrain-auc:0.919055+0.000562027\ttest-auc:0.894485+0.00291906\n",
      "[513]\ttrain-auc:0.919095+0.00056676\ttest-auc:0.894477+0.00292097\n",
      "[514]\ttrain-auc:0.919138+0.000572588\ttest-auc:0.894496+0.00293994\n",
      "[515]\ttrain-auc:0.919161+0.000582197\ttest-auc:0.894496+0.00293892\n",
      "[516]\ttrain-auc:0.919202+0.000580525\ttest-auc:0.894485+0.00296057\n",
      "[517]\ttrain-auc:0.91926+0.000590497\ttest-auc:0.894465+0.00296886\n",
      "[518]\ttrain-auc:0.919306+0.000589101\ttest-auc:0.894449+0.00299151\n",
      "[519]\ttrain-auc:0.919337+0.000590165\ttest-auc:0.894429+0.00299399\n",
      "[520]\ttrain-auc:0.919379+0.000597769\ttest-auc:0.894441+0.00298624\n",
      "[521]\ttrain-auc:0.919413+0.000611646\ttest-auc:0.894447+0.00297843\n",
      "[522]\ttrain-auc:0.919456+0.000608957\ttest-auc:0.894453+0.00295692\n",
      "[523]\ttrain-auc:0.919507+0.000613159\ttest-auc:0.894466+0.00293425\n",
      "[524]\ttrain-auc:0.919559+0.000607947\ttest-auc:0.894478+0.00290492\n",
      "[525]\ttrain-auc:0.919616+0.000615172\ttest-auc:0.894449+0.00290058\n",
      "[526]\ttrain-auc:0.919655+0.000616096\ttest-auc:0.89448+0.00288712\n",
      "[527]\ttrain-auc:0.919679+0.000612734\ttest-auc:0.894449+0.00289754\n",
      "[528]\ttrain-auc:0.919713+0.000603634\ttest-auc:0.894463+0.00288874\n",
      "[529]\ttrain-auc:0.919757+0.000610946\ttest-auc:0.894461+0.00287813\n",
      "[530]\ttrain-auc:0.919783+0.000613186\ttest-auc:0.894474+0.00288401\n",
      "[531]\ttrain-auc:0.919818+0.000601207\ttest-auc:0.894484+0.00289318\n",
      "[532]\ttrain-auc:0.919866+0.000600525\ttest-auc:0.894455+0.00290303\n",
      "[533]\ttrain-auc:0.9199+0.000586535\ttest-auc:0.894468+0.00290737\n",
      "[534]\ttrain-auc:0.919936+0.000580762\ttest-auc:0.894474+0.0028873\n",
      "[535]\ttrain-auc:0.919972+0.000567898\ttest-auc:0.894494+0.00287937\n",
      "[536]\ttrain-auc:0.920004+0.000560163\ttest-auc:0.894487+0.00290087\n",
      "[537]\ttrain-auc:0.920043+0.000570183\ttest-auc:0.894481+0.00291229\n",
      "[538]\ttrain-auc:0.920089+0.000567187\ttest-auc:0.894478+0.00292171\n",
      "[539]\ttrain-auc:0.920134+0.000570943\ttest-auc:0.894486+0.0029216\n",
      "[540]\ttrain-auc:0.920181+0.000581296\ttest-auc:0.894484+0.00292489\n",
      "[541]\ttrain-auc:0.920237+0.00057821\ttest-auc:0.894492+0.00292756\n",
      "[542]\ttrain-auc:0.920273+0.000583735\ttest-auc:0.894508+0.00291049\n",
      "[543]\ttrain-auc:0.920304+0.000582558\ttest-auc:0.894518+0.00289353\n",
      "[544]\ttrain-auc:0.920338+0.000577585\ttest-auc:0.894506+0.00290582\n",
      "[545]\ttrain-auc:0.920375+0.000575842\ttest-auc:0.894514+0.00288782\n",
      "[546]\ttrain-auc:0.920412+0.000561811\ttest-auc:0.89454+0.00289956\n",
      "[547]\ttrain-auc:0.920456+0.000551971\ttest-auc:0.894541+0.00289015\n",
      "[548]\ttrain-auc:0.920484+0.000550668\ttest-auc:0.894537+0.00288523\n",
      "[549]\ttrain-auc:0.920534+0.000554894\ttest-auc:0.894558+0.00289089\n",
      "[550]\ttrain-auc:0.920575+0.000564862\ttest-auc:0.894565+0.00289743\n",
      "[551]\ttrain-auc:0.920609+0.000565954\ttest-auc:0.894554+0.00288746\n",
      "[552]\ttrain-auc:0.920654+0.000558847\ttest-auc:0.894556+0.00287744\n",
      "[553]\ttrain-auc:0.920692+0.000565314\ttest-auc:0.894558+0.00285624\n",
      "[554]\ttrain-auc:0.920737+0.000571492\ttest-auc:0.894568+0.00285798\n",
      "[555]\ttrain-auc:0.920774+0.000574514\ttest-auc:0.894578+0.00287077\n",
      "[556]\ttrain-auc:0.920814+0.000569174\ttest-auc:0.8946+0.00286839\n",
      "[557]\ttrain-auc:0.92086+0.000571445\ttest-auc:0.894598+0.00285073\n",
      "[558]\ttrain-auc:0.920897+0.000575444\ttest-auc:0.894603+0.00286008\n",
      "[559]\ttrain-auc:0.920934+0.000594518\ttest-auc:0.894613+0.00285722\n",
      "[560]\ttrain-auc:0.920965+0.000598195\ttest-auc:0.89461+0.00284824\n",
      "[561]\ttrain-auc:0.920992+0.000584755\ttest-auc:0.894607+0.00284333\n",
      "[562]\ttrain-auc:0.921032+0.000571356\ttest-auc:0.894612+0.00283525\n",
      "[563]\ttrain-auc:0.921061+0.000573474\ttest-auc:0.894618+0.00282728\n",
      "[564]\ttrain-auc:0.921106+0.000570222\ttest-auc:0.894636+0.00283097\n",
      "[565]\ttrain-auc:0.921149+0.000568938\ttest-auc:0.894634+0.00284777\n",
      "[566]\ttrain-auc:0.921183+0.000576557\ttest-auc:0.894649+0.00282174\n",
      "[567]\ttrain-auc:0.921235+0.000574783\ttest-auc:0.89465+0.00282665\n",
      "[568]\ttrain-auc:0.921281+0.000568955\ttest-auc:0.894652+0.00283343\n",
      "[569]\ttrain-auc:0.921323+0.000579921\ttest-auc:0.894643+0.00282569\n",
      "[570]\ttrain-auc:0.921373+0.000590144\ttest-auc:0.894652+0.00281485\n",
      "[571]\ttrain-auc:0.921414+0.000586078\ttest-auc:0.89469+0.00283732\n",
      "[572]\ttrain-auc:0.92144+0.000596055\ttest-auc:0.894692+0.00283956\n",
      "[573]\ttrain-auc:0.921484+0.000595943\ttest-auc:0.894709+0.00282891\n",
      "[574]\ttrain-auc:0.921524+0.000591462\ttest-auc:0.89472+0.00282386\n",
      "[575]\ttrain-auc:0.921549+0.000585547\ttest-auc:0.89474+0.00280057\n",
      "[576]\ttrain-auc:0.921587+0.000598136\ttest-auc:0.894732+0.00277959\n",
      "[577]\ttrain-auc:0.921614+0.000596466\ttest-auc:0.894748+0.00278053\n",
      "[578]\ttrain-auc:0.921655+0.000579645\ttest-auc:0.89476+0.00279846\n",
      "[579]\ttrain-auc:0.921686+0.0005801\ttest-auc:0.894753+0.00278496\n",
      "[580]\ttrain-auc:0.921738+0.000584877\ttest-auc:0.894759+0.00278478\n",
      "[581]\ttrain-auc:0.921779+0.000578131\ttest-auc:0.894773+0.0027833\n",
      "[582]\ttrain-auc:0.921805+0.000572363\ttest-auc:0.894766+0.00279369\n",
      "[583]\ttrain-auc:0.921838+0.000572637\ttest-auc:0.894746+0.00277766\n",
      "[584]\ttrain-auc:0.921881+0.000572866\ttest-auc:0.894729+0.00279701\n",
      "[585]\ttrain-auc:0.92191+0.000564302\ttest-auc:0.894723+0.00278955\n",
      "[586]\ttrain-auc:0.921944+0.000565025\ttest-auc:0.894728+0.00276974\n",
      "[587]\ttrain-auc:0.921988+0.000575227\ttest-auc:0.894739+0.00276901\n",
      "[588]\ttrain-auc:0.922038+0.000565658\ttest-auc:0.894747+0.00276549\n",
      "[589]\ttrain-auc:0.922073+0.000565162\ttest-auc:0.894751+0.00277858\n",
      "[590]\ttrain-auc:0.9221+0.000561256\ttest-auc:0.894734+0.00277879\n",
      "[591]\ttrain-auc:0.922132+0.000553285\ttest-auc:0.894721+0.0027974\n",
      "[592]\ttrain-auc:0.922164+0.000561794\ttest-auc:0.894733+0.00280392\n",
      "[593]\ttrain-auc:0.922201+0.000545696\ttest-auc:0.894745+0.00282322\n",
      "[594]\ttrain-auc:0.922243+0.000544692\ttest-auc:0.894747+0.00281568\n",
      "[595]\ttrain-auc:0.92227+0.000556581\ttest-auc:0.89476+0.00280969\n",
      "[596]\ttrain-auc:0.922311+0.000553745\ttest-auc:0.894778+0.00279756\n",
      "[597]\ttrain-auc:0.922342+0.000559385\ttest-auc:0.894767+0.00280353\n",
      "[598]\ttrain-auc:0.922376+0.000564767\ttest-auc:0.894763+0.00282424\n",
      "[599]\ttrain-auc:0.922419+0.00055063\ttest-auc:0.894765+0.002812\n",
      "[600]\ttrain-auc:0.922457+0.0005611\ttest-auc:0.894771+0.00279447\n",
      "[601]\ttrain-auc:0.92249+0.000556105\ttest-auc:0.894788+0.00280963\n",
      "[602]\ttrain-auc:0.92252+0.000560781\ttest-auc:0.894811+0.00278749\n",
      "[603]\ttrain-auc:0.92256+0.000557931\ttest-auc:0.894793+0.00278169\n",
      "[604]\ttrain-auc:0.922597+0.00056558\ttest-auc:0.894781+0.002802\n",
      "[605]\ttrain-auc:0.922631+0.000563739\ttest-auc:0.894797+0.00280828\n",
      "[606]\ttrain-auc:0.922659+0.000579439\ttest-auc:0.894776+0.00280314\n",
      "[607]\ttrain-auc:0.922702+0.000572578\ttest-auc:0.894789+0.00282163\n",
      "[608]\ttrain-auc:0.922734+0.000577807\ttest-auc:0.89478+0.00281678\n",
      "[609]\ttrain-auc:0.922776+0.000586768\ttest-auc:0.894783+0.00283617\n",
      "[610]\ttrain-auc:0.922815+0.000578052\ttest-auc:0.894805+0.00285074\n",
      "[611]\ttrain-auc:0.922853+0.000576562\ttest-auc:0.894822+0.00285725\n",
      "[612]\ttrain-auc:0.922897+0.000576229\ttest-auc:0.894833+0.00285898\n",
      "[613]\ttrain-auc:0.922929+0.00057083\ttest-auc:0.894845+0.00286774\n",
      "[614]\ttrain-auc:0.922971+0.00056462\ttest-auc:0.894856+0.00286112\n",
      "[615]\ttrain-auc:0.923006+0.000567992\ttest-auc:0.894861+0.0028498\n",
      "[616]\ttrain-auc:0.923046+0.000564694\ttest-auc:0.894874+0.00283543\n",
      "[617]\ttrain-auc:0.923094+0.000558273\ttest-auc:0.894884+0.00283291\n",
      "[618]\ttrain-auc:0.923128+0.000569322\ttest-auc:0.894892+0.00284088\n",
      "[619]\ttrain-auc:0.923168+0.00057894\ttest-auc:0.894899+0.00283568\n",
      "[620]\ttrain-auc:0.92321+0.000581471\ttest-auc:0.894904+0.00283444\n",
      "[621]\ttrain-auc:0.923247+0.00058519\ttest-auc:0.894915+0.00282721\n",
      "[622]\ttrain-auc:0.923287+0.000586918\ttest-auc:0.894933+0.00285438\n",
      "[623]\ttrain-auc:0.92333+0.000579764\ttest-auc:0.894908+0.00281996\n",
      "[624]\ttrain-auc:0.923376+0.000588964\ttest-auc:0.894907+0.00279483\n",
      "[625]\ttrain-auc:0.923417+0.000594818\ttest-auc:0.894912+0.00280376\n",
      "[626]\ttrain-auc:0.923457+0.000581313\ttest-auc:0.894911+0.00279371\n",
      "[627]\ttrain-auc:0.923505+0.000579213\ttest-auc:0.894923+0.00282255\n",
      "[628]\ttrain-auc:0.92354+0.000580431\ttest-auc:0.89495+0.00283706\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[629]\ttrain-auc:0.923584+0.000572179\ttest-auc:0.894951+0.00282889\n",
      "[630]\ttrain-auc:0.923615+0.00057532\ttest-auc:0.894939+0.00284918\n",
      "[631]\ttrain-auc:0.92365+0.000574959\ttest-auc:0.894908+0.00284333\n",
      "[632]\ttrain-auc:0.923699+0.00057509\ttest-auc:0.894901+0.00282305\n",
      "[633]\ttrain-auc:0.923733+0.000578968\ttest-auc:0.894908+0.00281164\n",
      "[634]\ttrain-auc:0.923763+0.000576948\ttest-auc:0.894908+0.00281535\n",
      "[635]\ttrain-auc:0.923786+0.00058238\ttest-auc:0.894936+0.00281712\n",
      "[636]\ttrain-auc:0.923823+0.000577584\ttest-auc:0.894922+0.00280306\n",
      "[637]\ttrain-auc:0.923861+0.000578198\ttest-auc:0.894892+0.00280046\n",
      "[638]\ttrain-auc:0.923879+0.000586445\ttest-auc:0.894905+0.00278918\n",
      "[639]\ttrain-auc:0.923905+0.00059052\ttest-auc:0.894898+0.00279426\n",
      "[640]\ttrain-auc:0.923952+0.000599872\ttest-auc:0.894895+0.00280679\n",
      "[641]\ttrain-auc:0.923989+0.000599588\ttest-auc:0.894906+0.00278291\n",
      "[642]\ttrain-auc:0.924028+0.000598315\ttest-auc:0.894901+0.00278207\n",
      "[643]\ttrain-auc:0.924057+0.000592276\ttest-auc:0.894905+0.00278853\n",
      "[644]\ttrain-auc:0.924105+0.00059962\ttest-auc:0.894922+0.00278032\n",
      "[645]\ttrain-auc:0.924136+0.000608819\ttest-auc:0.894925+0.00277823\n",
      "[646]\ttrain-auc:0.924186+0.000612098\ttest-auc:0.894896+0.0027637\n",
      "[647]\ttrain-auc:0.924232+0.000610392\ttest-auc:0.894881+0.00275464\n",
      "[648]\ttrain-auc:0.924273+0.00060851\ttest-auc:0.894879+0.00274508\n",
      "[649]\ttrain-auc:0.924297+0.000606707\ttest-auc:0.894882+0.00274617\n",
      "[650]\ttrain-auc:0.924329+0.000618145\ttest-auc:0.894879+0.00273706\n",
      "[651]\ttrain-auc:0.924361+0.000629551\ttest-auc:0.89488+0.00275203\n",
      "[652]\ttrain-auc:0.92439+0.000637515\ttest-auc:0.894888+0.00275235\n",
      "[653]\ttrain-auc:0.924417+0.000632328\ttest-auc:0.894902+0.00274525\n",
      "[654]\ttrain-auc:0.924456+0.000635443\ttest-auc:0.894924+0.00273322\n",
      "[655]\ttrain-auc:0.924496+0.000651972\ttest-auc:0.8949+0.00273724\n",
      "[656]\ttrain-auc:0.924517+0.000641664\ttest-auc:0.89492+0.00274745\n",
      "[657]\ttrain-auc:0.924548+0.000641682\ttest-auc:0.894909+0.00275606\n",
      "[658]\ttrain-auc:0.924592+0.00063927\ttest-auc:0.894895+0.00274718\n",
      "[659]\ttrain-auc:0.924631+0.000643608\ttest-auc:0.894902+0.00273981\n",
      "[660]\ttrain-auc:0.924671+0.000651162\ttest-auc:0.894915+0.00273259\n",
      "[661]\ttrain-auc:0.924705+0.000642612\ttest-auc:0.894912+0.00273684\n",
      "[662]\ttrain-auc:0.924744+0.000644433\ttest-auc:0.894917+0.00276036\n",
      "[663]\ttrain-auc:0.924782+0.000645497\ttest-auc:0.894925+0.0027526\n",
      "[664]\ttrain-auc:0.924801+0.000630548\ttest-auc:0.894922+0.002737\n",
      "[665]\ttrain-auc:0.924828+0.000627599\ttest-auc:0.89495+0.00273902\n",
      "[666]\ttrain-auc:0.924867+0.000631909\ttest-auc:0.894964+0.00272646\n",
      "[667]\ttrain-auc:0.924894+0.000631951\ttest-auc:0.894967+0.00273353\n",
      "[668]\ttrain-auc:0.924937+0.000643524\ttest-auc:0.894949+0.00274715\n",
      "[669]\ttrain-auc:0.924988+0.000632324\ttest-auc:0.894949+0.00274982\n",
      "[670]\ttrain-auc:0.925022+0.000633975\ttest-auc:0.894928+0.0027611\n",
      "[671]\ttrain-auc:0.925062+0.00064098\ttest-auc:0.89494+0.00277464\n",
      "[672]\ttrain-auc:0.925101+0.000651917\ttest-auc:0.894948+0.00277785\n",
      "[673]\ttrain-auc:0.925144+0.000649619\ttest-auc:0.894955+0.00278538\n",
      "[674]\ttrain-auc:0.925178+0.000642428\ttest-auc:0.894947+0.00278942\n",
      "[675]\ttrain-auc:0.925213+0.000643618\ttest-auc:0.894956+0.00278136\n",
      "[676]\ttrain-auc:0.925252+0.000648315\ttest-auc:0.894957+0.00277812\n",
      "[677]\ttrain-auc:0.925281+0.00065429\ttest-auc:0.894968+0.00278553\n",
      "[678]\ttrain-auc:0.925322+0.000651487\ttest-auc:0.894986+0.00279211\n",
      "[679]\ttrain-auc:0.925353+0.000647262\ttest-auc:0.895011+0.00278769\n",
      "[680]\ttrain-auc:0.925381+0.000656974\ttest-auc:0.895012+0.00278097\n",
      "[681]\ttrain-auc:0.925409+0.000642959\ttest-auc:0.895009+0.0027626\n",
      "[682]\ttrain-auc:0.925453+0.000652797\ttest-auc:0.895033+0.00274706\n",
      "[683]\ttrain-auc:0.9255+0.000653827\ttest-auc:0.895032+0.00273671\n",
      "[684]\ttrain-auc:0.925538+0.000663554\ttest-auc:0.895032+0.00274035\n",
      "[685]\ttrain-auc:0.925558+0.000655397\ttest-auc:0.895036+0.00274687\n",
      "[686]\ttrain-auc:0.925594+0.000649142\ttest-auc:0.895047+0.00272898\n",
      "[687]\ttrain-auc:0.92563+0.000658934\ttest-auc:0.895065+0.002719\n",
      "[688]\ttrain-auc:0.925669+0.000646422\ttest-auc:0.895076+0.00273403\n",
      "[689]\ttrain-auc:0.925697+0.000646268\ttest-auc:0.895088+0.00273599\n",
      "[690]\ttrain-auc:0.925727+0.000640765\ttest-auc:0.895086+0.00273316\n",
      "[691]\ttrain-auc:0.925766+0.000653973\ttest-auc:0.895089+0.00273403\n",
      "[692]\ttrain-auc:0.925797+0.000647366\ttest-auc:0.895087+0.0027198\n",
      "[693]\ttrain-auc:0.925832+0.000658287\ttest-auc:0.895096+0.00273722\n",
      "[694]\ttrain-auc:0.925872+0.000659117\ttest-auc:0.895093+0.00274201\n",
      "[695]\ttrain-auc:0.925909+0.000662884\ttest-auc:0.895096+0.00273508\n",
      "[696]\ttrain-auc:0.925943+0.000665954\ttest-auc:0.895101+0.00274649\n",
      "[697]\ttrain-auc:0.925986+0.000657122\ttest-auc:0.8951+0.00273143\n",
      "[698]\ttrain-auc:0.926025+0.000655428\ttest-auc:0.895104+0.00271766\n",
      "[699]\ttrain-auc:0.926058+0.000661663\ttest-auc:0.895109+0.00274625\n",
      "[700]\ttrain-auc:0.926094+0.000654936\ttest-auc:0.895106+0.00275537\n",
      "[701]\ttrain-auc:0.926117+0.000654005\ttest-auc:0.895102+0.00274854\n",
      "[702]\ttrain-auc:0.926155+0.000649482\ttest-auc:0.895118+0.00276436\n",
      "[703]\ttrain-auc:0.926188+0.000657566\ttest-auc:0.895105+0.00276645\n",
      "[704]\ttrain-auc:0.92622+0.000649901\ttest-auc:0.895113+0.00275891\n",
      "[705]\ttrain-auc:0.926254+0.000652375\ttest-auc:0.895136+0.00275585\n",
      "[706]\ttrain-auc:0.926273+0.000664994\ttest-auc:0.895131+0.00276114\n",
      "[707]\ttrain-auc:0.926298+0.000675233\ttest-auc:0.895129+0.0027622\n",
      "[708]\ttrain-auc:0.926331+0.000680137\ttest-auc:0.895124+0.0027742\n",
      "[709]\ttrain-auc:0.926367+0.000675784\ttest-auc:0.895118+0.00279382\n",
      "[710]\ttrain-auc:0.9264+0.000682878\ttest-auc:0.895105+0.00277514\n",
      "[711]\ttrain-auc:0.92642+0.000679909\ttest-auc:0.8951+0.00275571\n",
      "[712]\ttrain-auc:0.926446+0.000682916\ttest-auc:0.895137+0.00274212\n",
      "[713]\ttrain-auc:0.926473+0.000682809\ttest-auc:0.895131+0.00275147\n",
      "[714]\ttrain-auc:0.926504+0.000687172\ttest-auc:0.895131+0.00275488\n",
      "[715]\ttrain-auc:0.926539+0.000683549\ttest-auc:0.895136+0.00276613\n",
      "[716]\ttrain-auc:0.926575+0.000671013\ttest-auc:0.895127+0.00276832\n",
      "[717]\ttrain-auc:0.926611+0.000663827\ttest-auc:0.895123+0.00275113\n",
      "[718]\ttrain-auc:0.926646+0.000662248\ttest-auc:0.89514+0.00274324\n",
      "[719]\ttrain-auc:0.926688+0.000670075\ttest-auc:0.895137+0.0027359\n",
      "[720]\ttrain-auc:0.926727+0.000669801\ttest-auc:0.895152+0.00272278\n",
      "[721]\ttrain-auc:0.926756+0.000674324\ttest-auc:0.895173+0.00273042\n",
      "[722]\ttrain-auc:0.926795+0.000676202\ttest-auc:0.895167+0.00272678\n",
      "[723]\ttrain-auc:0.92682+0.000673917\ttest-auc:0.895179+0.0027209\n",
      "[724]\ttrain-auc:0.926852+0.000668016\ttest-auc:0.895206+0.00274062\n",
      "[725]\ttrain-auc:0.926892+0.000673871\ttest-auc:0.89521+0.00273221\n",
      "[726]\ttrain-auc:0.926925+0.000674316\ttest-auc:0.895204+0.00272305\n",
      "[727]\ttrain-auc:0.926961+0.000682521\ttest-auc:0.8952+0.00272639\n",
      "[728]\ttrain-auc:0.926992+0.000681349\ttest-auc:0.895205+0.00275056\n",
      "[729]\ttrain-auc:0.927019+0.000675817\ttest-auc:0.895228+0.00277019\n",
      "[730]\ttrain-auc:0.92706+0.000691473\ttest-auc:0.895225+0.00276865\n",
      "[731]\ttrain-auc:0.927099+0.000688937\ttest-auc:0.895238+0.00277418\n",
      "[732]\ttrain-auc:0.927135+0.00068373\ttest-auc:0.895242+0.00277066\n",
      "[733]\ttrain-auc:0.927174+0.000675036\ttest-auc:0.895249+0.00278446\n",
      "[734]\ttrain-auc:0.927205+0.000688972\ttest-auc:0.89523+0.00279117\n",
      "[735]\ttrain-auc:0.927246+0.000693362\ttest-auc:0.895256+0.00280782\n",
      "[736]\ttrain-auc:0.927286+0.000683223\ttest-auc:0.895256+0.00280382\n",
      "[737]\ttrain-auc:0.927323+0.000678979\ttest-auc:0.895251+0.00280451\n",
      "[738]\ttrain-auc:0.927354+0.000681658\ttest-auc:0.895242+0.00280485\n",
      "[739]\ttrain-auc:0.927385+0.000678985\ttest-auc:0.895235+0.00278527\n",
      "[740]\ttrain-auc:0.927418+0.000686908\ttest-auc:0.895233+0.00279045\n",
      "[741]\ttrain-auc:0.927465+0.000691525\ttest-auc:0.895246+0.00278949\n",
      "[742]\ttrain-auc:0.927491+0.00068912\ttest-auc:0.895247+0.00278682\n",
      "[743]\ttrain-auc:0.927516+0.000683847\ttest-auc:0.895263+0.00279091\n",
      "[744]\ttrain-auc:0.92755+0.000691363\ttest-auc:0.895281+0.00278744\n",
      "[745]\ttrain-auc:0.927592+0.000684398\ttest-auc:0.895296+0.00277325\n",
      "[746]\ttrain-auc:0.927624+0.000696152\ttest-auc:0.895284+0.00278825\n",
      "[747]\ttrain-auc:0.927662+0.000692041\ttest-auc:0.895302+0.00278648\n",
      "[748]\ttrain-auc:0.927703+0.00069493\ttest-auc:0.895306+0.00279075\n",
      "[749]\ttrain-auc:0.927745+0.000685773\ttest-auc:0.895307+0.00281499\n",
      "[750]\ttrain-auc:0.927785+0.000689825\ttest-auc:0.895341+0.00282021\n",
      "[751]\ttrain-auc:0.927819+0.000684479\ttest-auc:0.895351+0.0028184\n",
      "[752]\ttrain-auc:0.927863+0.000690943\ttest-auc:0.895332+0.00281995\n",
      "[753]\ttrain-auc:0.927895+0.000695682\ttest-auc:0.895306+0.00282871\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[754]\ttrain-auc:0.927934+0.000692587\ttest-auc:0.895313+0.00282172\n",
      "[755]\ttrain-auc:0.927967+0.00068877\ttest-auc:0.895307+0.00280444\n",
      "[756]\ttrain-auc:0.927996+0.000684555\ttest-auc:0.895315+0.00280928\n",
      "[757]\ttrain-auc:0.928034+0.000688221\ttest-auc:0.895339+0.00281854\n",
      "[758]\ttrain-auc:0.928071+0.000690306\ttest-auc:0.895316+0.0028203\n",
      "[759]\ttrain-auc:0.928092+0.000687511\ttest-auc:0.89533+0.00281921\n",
      "[760]\ttrain-auc:0.928121+0.000691997\ttest-auc:0.895332+0.00281158\n",
      "[761]\ttrain-auc:0.92816+0.000709036\ttest-auc:0.895307+0.00281561\n",
      "[762]\ttrain-auc:0.928207+0.000710396\ttest-auc:0.895323+0.00280065\n",
      "[763]\ttrain-auc:0.928251+0.000709103\ttest-auc:0.895323+0.00278859\n",
      "[764]\ttrain-auc:0.928276+0.000702868\ttest-auc:0.895327+0.00280953\n",
      "[765]\ttrain-auc:0.928316+0.000698148\ttest-auc:0.895339+0.00282679\n",
      "[766]\ttrain-auc:0.928355+0.000700949\ttest-auc:0.895327+0.00284842\n",
      "[767]\ttrain-auc:0.928386+0.000691814\ttest-auc:0.895316+0.0028423\n",
      "[768]\ttrain-auc:0.928427+0.000705243\ttest-auc:0.895319+0.00284112\n",
      "[769]\ttrain-auc:0.928462+0.000692604\ttest-auc:0.895316+0.00284412\n",
      "[770]\ttrain-auc:0.928491+0.000689214\ttest-auc:0.895322+0.00283792\n",
      "[771]\ttrain-auc:0.928531+0.000680783\ttest-auc:0.895307+0.00282077\n",
      "[772]\ttrain-auc:0.928562+0.000669978\ttest-auc:0.895319+0.00283415\n",
      "[773]\ttrain-auc:0.928593+0.000667041\ttest-auc:0.895314+0.00284528\n",
      "[774]\ttrain-auc:0.928622+0.000665454\ttest-auc:0.895332+0.00284773\n",
      "[775]\ttrain-auc:0.928658+0.000661636\ttest-auc:0.895326+0.00284629\n",
      "[776]\ttrain-auc:0.928687+0.000660505\ttest-auc:0.895325+0.00283889\n",
      "[777]\ttrain-auc:0.928719+0.000660565\ttest-auc:0.895326+0.0028543\n",
      "[778]\ttrain-auc:0.928754+0.000651101\ttest-auc:0.895331+0.00286517\n",
      "[779]\ttrain-auc:0.92879+0.0006417\ttest-auc:0.895325+0.00287314\n",
      "[780]\ttrain-auc:0.928827+0.000651689\ttest-auc:0.895317+0.00287079\n",
      "[781]\ttrain-auc:0.928853+0.000651154\ttest-auc:0.895296+0.00287876\n",
      "[782]\ttrain-auc:0.928885+0.000645521\ttest-auc:0.895304+0.00287303\n",
      "[783]\ttrain-auc:0.928914+0.000643053\ttest-auc:0.89527+0.00287012\n",
      "[784]\ttrain-auc:0.928943+0.000634056\ttest-auc:0.895271+0.00287703\n",
      "[785]\ttrain-auc:0.928975+0.000635698\ttest-auc:0.89526+0.00286741\n",
      "[786]\ttrain-auc:0.929011+0.000637079\ttest-auc:0.895266+0.00287956\n",
      "[787]\ttrain-auc:0.929041+0.000633637\ttest-auc:0.895272+0.00286334\n",
      "[788]\ttrain-auc:0.929084+0.000630478\ttest-auc:0.89527+0.00284815\n",
      "[789]\ttrain-auc:0.929119+0.000634448\ttest-auc:0.895282+0.00286294\n",
      "[790]\ttrain-auc:0.929144+0.0006373\ttest-auc:0.8953+0.00286809\n",
      "[791]\ttrain-auc:0.929176+0.000633687\ttest-auc:0.89531+0.00285893\n",
      "[792]\ttrain-auc:0.929208+0.000627806\ttest-auc:0.895299+0.00284092\n",
      "[793]\ttrain-auc:0.929242+0.000635407\ttest-auc:0.895299+0.00284016\n",
      "[794]\ttrain-auc:0.929264+0.000634299\ttest-auc:0.895323+0.00284867\n",
      "[795]\ttrain-auc:0.929294+0.000640675\ttest-auc:0.895315+0.00284443\n",
      "[796]\ttrain-auc:0.929327+0.000628499\ttest-auc:0.895315+0.00283717\n",
      "[797]\ttrain-auc:0.929364+0.000625311\ttest-auc:0.895326+0.0028524\n",
      "[798]\ttrain-auc:0.929398+0.000624446\ttest-auc:0.895294+0.0028566\n",
      "[799]\ttrain-auc:0.929446+0.000619156\ttest-auc:0.895271+0.00287904\n",
      "[800]\ttrain-auc:0.929481+0.000616669\ttest-auc:0.895274+0.00288283\n",
      "[801]\ttrain-auc:0.929517+0.000615986\ttest-auc:0.895264+0.00288194\n",
      "[802]\ttrain-auc:0.929547+0.000623374\ttest-auc:0.895273+0.00288574\n",
      "[803]\ttrain-auc:0.929578+0.000625437\ttest-auc:0.89529+0.00288041\n",
      "[804]\ttrain-auc:0.92961+0.000635277\ttest-auc:0.895271+0.00287108\n",
      "[805]\ttrain-auc:0.929634+0.000636159\ttest-auc:0.895272+0.00286756\n",
      "[806]\ttrain-auc:0.929666+0.000643842\ttest-auc:0.895279+0.00288421\n",
      "[807]\ttrain-auc:0.929714+0.000637645\ttest-auc:0.895289+0.00289136\n",
      "[808]\ttrain-auc:0.92975+0.000647265\ttest-auc:0.89529+0.00291211\n",
      "[809]\ttrain-auc:0.929792+0.000657952\ttest-auc:0.895308+0.00290038\n",
      "[810]\ttrain-auc:0.929828+0.000661197\ttest-auc:0.895337+0.00288582\n",
      "[811]\ttrain-auc:0.929867+0.000651719\ttest-auc:0.89533+0.00288227\n",
      "[812]\ttrain-auc:0.929916+0.00064741\ttest-auc:0.895338+0.00287204\n",
      "[813]\ttrain-auc:0.929953+0.000639904\ttest-auc:0.895337+0.0028577\n",
      "[814]\ttrain-auc:0.929995+0.000641744\ttest-auc:0.895321+0.00285358\n",
      "[815]\ttrain-auc:0.930037+0.000640371\ttest-auc:0.895319+0.00286715\n",
      "[816]\ttrain-auc:0.930075+0.000643909\ttest-auc:0.895318+0.00286654\n",
      "[817]\ttrain-auc:0.930099+0.000660018\ttest-auc:0.895306+0.0028715\n",
      "[818]\ttrain-auc:0.930133+0.000665151\ttest-auc:0.895308+0.00290149\n",
      "[819]\ttrain-auc:0.930166+0.000661091\ttest-auc:0.895302+0.00290497\n",
      "[820]\ttrain-auc:0.930199+0.000663008\ttest-auc:0.895337+0.00290542\n",
      "[821]\ttrain-auc:0.93023+0.000650813\ttest-auc:0.895346+0.00289019\n",
      "[822]\ttrain-auc:0.930262+0.000656161\ttest-auc:0.895336+0.00288454\n",
      "[823]\ttrain-auc:0.930285+0.000665593\ttest-auc:0.895332+0.00289633\n",
      "[824]\ttrain-auc:0.930316+0.000659272\ttest-auc:0.89532+0.00290224\n",
      "[825]\ttrain-auc:0.930348+0.000667233\ttest-auc:0.895319+0.00291847\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "c:\\users\\marcp\\appdata\\local\\programs\\python\\python36\\lib\\site-packages\\sklearn\\preprocessing\\label.py:151: DeprecationWarning: The truth value of an empty array is ambiguous. Returning False, but in future this will result in an error. Use `array.size > 0` to check that an array is not empty.\n",
      "  if diff:\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Model Report\n",
      "Model best iteration : 752 with an auc score of : 0.8953514\n",
      "Accuracy : 0.8835854341736694\n",
      "AUC Score (Train): 0.9233707524984536\n",
      "[0]\ttrain-auc:0.838087+0.00808447\ttest-auc:0.826074+0.0150769\n",
      "[1]\ttrain-auc:0.85974+0.00785694\ttest-auc:0.84396+0.00938236\n",
      "[2]\ttrain-auc:0.869581+0.00324606\ttest-auc:0.855716+0.00429737\n",
      "[3]\ttrain-auc:0.87269+0.00238235\ttest-auc:0.860191+0.0062837\n",
      "[4]\ttrain-auc:0.874398+0.00289603\ttest-auc:0.862946+0.00564782\n",
      "[5]\ttrain-auc:0.876619+0.00230877\ttest-auc:0.865262+0.00581342\n",
      "[6]\ttrain-auc:0.87831+0.00258148\ttest-auc:0.866418+0.00520433\n",
      "[7]\ttrain-auc:0.878998+0.00250715\ttest-auc:0.867184+0.00499557\n",
      "[8]\ttrain-auc:0.879774+0.00263939\ttest-auc:0.868232+0.00468111\n",
      "[9]\ttrain-auc:0.880108+0.00263922\ttest-auc:0.868717+0.0043513\n",
      "[10]\ttrain-auc:0.880404+0.00261838\ttest-auc:0.869629+0.00400691\n",
      "[11]\ttrain-auc:0.880604+0.00252975\ttest-auc:0.869287+0.00396029\n",
      "[12]\ttrain-auc:0.880925+0.00244371\ttest-auc:0.869609+0.00406797\n",
      "[13]\ttrain-auc:0.880879+0.00258814\ttest-auc:0.869309+0.0040564\n",
      "[14]\ttrain-auc:0.881027+0.00249875\ttest-auc:0.869819+0.0046893\n",
      "[15]\ttrain-auc:0.881082+0.00241033\ttest-auc:0.869798+0.00461516\n",
      "[16]\ttrain-auc:0.881391+0.00224482\ttest-auc:0.869759+0.00483024\n",
      "[17]\ttrain-auc:0.881345+0.00213269\ttest-auc:0.870052+0.00476861\n",
      "[18]\ttrain-auc:0.881576+0.0020378\ttest-auc:0.870139+0.00494755\n",
      "[19]\ttrain-auc:0.88152+0.00211184\ttest-auc:0.870427+0.00505642\n",
      "[20]\ttrain-auc:0.881852+0.0021405\ttest-auc:0.870505+0.00500896\n",
      "[21]\ttrain-auc:0.882098+0.00217671\ttest-auc:0.870521+0.00492014\n",
      "[22]\ttrain-auc:0.882254+0.0022028\ttest-auc:0.870574+0.00468996\n",
      "[23]\ttrain-auc:0.882435+0.00226763\ttest-auc:0.87048+0.00478941\n",
      "[24]\ttrain-auc:0.882569+0.00232329\ttest-auc:0.870706+0.00478947\n",
      "[25]\ttrain-auc:0.882664+0.00232006\ttest-auc:0.87063+0.00497121\n",
      "[26]\ttrain-auc:0.882859+0.00227864\ttest-auc:0.870819+0.00475025\n",
      "[27]\ttrain-auc:0.882968+0.00233331\ttest-auc:0.870862+0.00464806\n",
      "[28]\ttrain-auc:0.883091+0.00216678\ttest-auc:0.87117+0.00462235\n",
      "[29]\ttrain-auc:0.8832+0.00211324\ttest-auc:0.871353+0.00488076\n",
      "[30]\ttrain-auc:0.883378+0.00207076\ttest-auc:0.871458+0.00483547\n",
      "[31]\ttrain-auc:0.883481+0.0021209\ttest-auc:0.871518+0.00483444\n",
      "[32]\ttrain-auc:0.883549+0.00210324\ttest-auc:0.871496+0.0047756\n",
      "[33]\ttrain-auc:0.883601+0.00198421\ttest-auc:0.871457+0.0048178\n",
      "[34]\ttrain-auc:0.883632+0.00196635\ttest-auc:0.871408+0.00488114\n",
      "[35]\ttrain-auc:0.883866+0.00190777\ttest-auc:0.871396+0.00508804\n",
      "[36]\ttrain-auc:0.884008+0.00196222\ttest-auc:0.871332+0.00526008\n",
      "[37]\ttrain-auc:0.884043+0.00197494\ttest-auc:0.871361+0.00512085\n",
      "[38]\ttrain-auc:0.884147+0.00203518\ttest-auc:0.871331+0.00516182\n",
      "[39]\ttrain-auc:0.88415+0.00196718\ttest-auc:0.871366+0.00520808\n",
      "[40]\ttrain-auc:0.884339+0.0021216\ttest-auc:0.871608+0.00513806\n",
      "[41]\ttrain-auc:0.884429+0.00208763\ttest-auc:0.871899+0.00480924\n",
      "[42]\ttrain-auc:0.884466+0.00199322\ttest-auc:0.871909+0.00502671\n",
      "[43]\ttrain-auc:0.884517+0.00205969\ttest-auc:0.872184+0.00489102\n",
      "[44]\ttrain-auc:0.884458+0.00204524\ttest-auc:0.872323+0.00513347\n",
      "[45]\ttrain-auc:0.884557+0.00203123\ttest-auc:0.872357+0.00516143\n",
      "[46]\ttrain-auc:0.88458+0.00201731\ttest-auc:0.872489+0.00529578\n",
      "[47]\ttrain-auc:0.884677+0.00199931\ttest-auc:0.872569+0.00519925\n",
      "[48]\ttrain-auc:0.884773+0.00202845\ttest-auc:0.872658+0.00514398\n",
      "[49]\ttrain-auc:0.884834+0.00199758\ttest-auc:0.872717+0.00524659\n",
      "[50]\ttrain-auc:0.884903+0.00200818\ttest-auc:0.872836+0.00541487\n",
      "[51]\ttrain-auc:0.884967+0.00192783\ttest-auc:0.872761+0.00536236\n",
      "[52]\ttrain-auc:0.885052+0.0018578\ttest-auc:0.872945+0.00549171\n",
      "[53]\ttrain-auc:0.885196+0.00183591\ttest-auc:0.873025+0.00559109\n",
      "[54]\ttrain-auc:0.885266+0.00184441\ttest-auc:0.873008+0.00559529\n",
      "[55]\ttrain-auc:0.885345+0.00185031\ttest-auc:0.873128+0.00546359\n",
      "[56]\ttrain-auc:0.885968+0.00191898\ttest-auc:0.87333+0.00575105\n",
      "[57]\ttrain-auc:0.886043+0.00189811\ttest-auc:0.873307+0.00588073\n",
      "[58]\ttrain-auc:0.886081+0.00189672\ttest-auc:0.873324+0.00584302\n",
      "[59]\ttrain-auc:0.886196+0.00196294\ttest-auc:0.873292+0.00594667\n",
      "[60]\ttrain-auc:0.886356+0.00200081\ttest-auc:0.873243+0.00606649\n",
      "[61]\ttrain-auc:0.886479+0.00199383\ttest-auc:0.873251+0.00623421\n",
      "[62]\ttrain-auc:0.886514+0.0019984\ttest-auc:0.873313+0.00629612\n",
      "[63]\ttrain-auc:0.886577+0.0020322\ttest-auc:0.87344+0.00613019\n",
      "[64]\ttrain-auc:0.886652+0.00203653\ttest-auc:0.873407+0.00625181\n",
      "[65]\ttrain-auc:0.88674+0.00198523\ttest-auc:0.873728+0.00658634\n",
      "[66]\ttrain-auc:0.886989+0.00191333\ttest-auc:0.87374+0.0066144\n",
      "[67]\ttrain-auc:0.887084+0.00191409\ttest-auc:0.873792+0.00654813\n",
      "[68]\ttrain-auc:0.887143+0.00190064\ttest-auc:0.873796+0.00652184\n",
      "[69]\ttrain-auc:0.887171+0.00192107\ttest-auc:0.873854+0.00652257\n",
      "[70]\ttrain-auc:0.887218+0.0019018\ttest-auc:0.873945+0.00655368\n",
      "[71]\ttrain-auc:0.887248+0.00185385\ttest-auc:0.874007+0.00660375\n",
      "[72]\ttrain-auc:0.887281+0.00183566\ttest-auc:0.874032+0.0065502\n",
      "[73]\ttrain-auc:0.887368+0.00185321\ttest-auc:0.874065+0.006516\n",
      "[74]\ttrain-auc:0.887444+0.00184159\ttest-auc:0.874068+0.00655696\n",
      "[75]\ttrain-auc:0.887503+0.00187173\ttest-auc:0.874029+0.00668261\n",
      "[76]\ttrain-auc:0.887492+0.00193594\ttest-auc:0.87396+0.00665456\n",
      "[77]\ttrain-auc:0.887612+0.00194848\ttest-auc:0.874031+0.00671296\n",
      "[78]\ttrain-auc:0.88768+0.0018898\ttest-auc:0.874056+0.00667212\n",
      "[79]\ttrain-auc:0.88774+0.00189986\ttest-auc:0.874109+0.00669171\n",
      "[80]\ttrain-auc:0.887864+0.00192637\ttest-auc:0.874139+0.00664207\n",
      "[81]\ttrain-auc:0.887926+0.0019301\ttest-auc:0.874233+0.00668028\n",
      "[82]\ttrain-auc:0.888022+0.00196698\ttest-auc:0.874335+0.00668857\n",
      "[83]\ttrain-auc:0.888048+0.00197451\ttest-auc:0.874405+0.00662902\n",
      "[84]\ttrain-auc:0.888071+0.00195537\ttest-auc:0.874493+0.00658517\n",
      "[85]\ttrain-auc:0.888127+0.00198967\ttest-auc:0.874596+0.00657156\n",
      "[86]\ttrain-auc:0.88819+0.00199573\ttest-auc:0.874652+0.00659533\n",
      "[87]\ttrain-auc:0.888308+0.00197564\ttest-auc:0.874727+0.00660857\n",
      "[88]\ttrain-auc:0.888791+0.00248205\ttest-auc:0.875483+0.00591687\n",
      "[89]\ttrain-auc:0.888848+0.00247036\ttest-auc:0.875503+0.00589329\n",
      "[90]\ttrain-auc:0.888893+0.00243385\ttest-auc:0.875538+0.0059118\n",
      "[91]\ttrain-auc:0.889069+0.00232116\ttest-auc:0.875708+0.00609469\n",
      "[92]\ttrain-auc:0.889169+0.00233593\ttest-auc:0.875806+0.00611862\n",
      "[93]\ttrain-auc:0.889264+0.00234938\ttest-auc:0.875859+0.0061409\n",
      "[94]\ttrain-auc:0.889318+0.00233243\ttest-auc:0.875842+0.00614355\n",
      "[95]\ttrain-auc:0.889344+0.00233396\ttest-auc:0.875834+0.00616263\n",
      "[96]\ttrain-auc:0.88956+0.00230756\ttest-auc:0.875789+0.00613601\n",
      "[97]\ttrain-auc:0.889602+0.0023109\ttest-auc:0.875826+0.0060718\n",
      "[98]\ttrain-auc:0.889682+0.00234725\ttest-auc:0.875846+0.00607189\n",
      "[99]\ttrain-auc:0.889764+0.00231331\ttest-auc:0.876055+0.00606355\n",
      "[100]\ttrain-auc:0.889814+0.00235657\ttest-auc:0.876076+0.00605735\n",
      "[101]\ttrain-auc:0.889851+0.00231806\ttest-auc:0.876115+0.00607033\n",
      "[102]\ttrain-auc:0.889964+0.00232767\ttest-auc:0.876289+0.00603024\n",
      "[103]\ttrain-auc:0.890531+0.00266939\ttest-auc:0.876545+0.00595631\n",
      "[104]\ttrain-auc:0.891046+0.00209081\ttest-auc:0.876805+0.00630429\n",
      "[105]\ttrain-auc:0.891137+0.00205992\ttest-auc:0.876797+0.00626913\n",
      "[106]\ttrain-auc:0.891345+0.00187678\ttest-auc:0.876826+0.00629871\n",
      "[107]\ttrain-auc:0.891799+0.00145978\ttest-auc:0.876897+0.00586549\n",
      "[108]\ttrain-auc:0.891887+0.00148999\ttest-auc:0.876963+0.00584625\n",
      "[109]\ttrain-auc:0.891913+0.00149964\ttest-auc:0.876977+0.00589502\n",
      "[110]\ttrain-auc:0.891977+0.00150194\ttest-auc:0.877004+0.00587129\n",
      "[111]\ttrain-auc:0.892025+0.00150122\ttest-auc:0.876986+0.00586471\n",
      "[112]\ttrain-auc:0.892063+0.00150258\ttest-auc:0.877036+0.00582671\n",
      "[113]\ttrain-auc:0.892109+0.00147801\ttest-auc:0.877115+0.00590043\n",
      "[114]\ttrain-auc:0.892145+0.0014839\ttest-auc:0.877141+0.00591013\n",
      "[115]\ttrain-auc:0.892206+0.001484\ttest-auc:0.877365+0.00566337\n",
      "[116]\ttrain-auc:0.892263+0.00146873\ttest-auc:0.877354+0.00570711\n",
      "[117]\ttrain-auc:0.892308+0.00148984\ttest-auc:0.87742+0.00567384\n",
      "[118]\ttrain-auc:0.892341+0.00147707\ttest-auc:0.877382+0.00571245\n",
      "[119]\ttrain-auc:0.892403+0.00146072\ttest-auc:0.877447+0.0057091\n",
      "[120]\ttrain-auc:0.892512+0.00147174\ttest-auc:0.877441+0.00574654\n",
      "[121]\ttrain-auc:0.892605+0.00149742\ttest-auc:0.877577+0.00559171\n",
      "[122]\ttrain-auc:0.892752+0.00164097\ttest-auc:0.877759+0.0059169\n",
      "[123]\ttrain-auc:0.892779+0.00164777\ttest-auc:0.877765+0.00589835\n",
      "[124]\ttrain-auc:0.892818+0.00163631\ttest-auc:0.877756+0.00590974\n",
      "[125]\ttrain-auc:0.892843+0.00169718\ttest-auc:0.877827+0.00589767\n",
      "[126]\ttrain-auc:0.892943+0.0016003\ttest-auc:0.87782+0.00579875\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[127]\ttrain-auc:0.893036+0.00161839\ttest-auc:0.877771+0.0058439\n",
      "[128]\ttrain-auc:0.893085+0.00157399\ttest-auc:0.877852+0.00583415\n",
      "[129]\ttrain-auc:0.893263+0.00151504\ttest-auc:0.877982+0.00596754\n",
      "[130]\ttrain-auc:0.893358+0.00145696\ttest-auc:0.878004+0.0059915\n",
      "[131]\ttrain-auc:0.893445+0.00150463\ttest-auc:0.878027+0.00595158\n",
      "[132]\ttrain-auc:0.893434+0.00146885\ttest-auc:0.878032+0.00596895\n",
      "[133]\ttrain-auc:0.893608+0.00137635\ttest-auc:0.87841+0.00578934\n",
      "[134]\ttrain-auc:0.893722+0.00139007\ttest-auc:0.878407+0.00580606\n",
      "[135]\ttrain-auc:0.893769+0.00140552\ttest-auc:0.878453+0.00580357\n",
      "[136]\ttrain-auc:0.893878+0.00143402\ttest-auc:0.878381+0.005637\n",
      "[137]\ttrain-auc:0.893925+0.00142999\ttest-auc:0.878372+0.00573743\n",
      "[138]\ttrain-auc:0.893968+0.00143911\ttest-auc:0.87834+0.00570022\n",
      "[139]\ttrain-auc:0.894051+0.00141669\ttest-auc:0.878389+0.00573539\n",
      "[140]\ttrain-auc:0.894149+0.00143759\ttest-auc:0.878368+0.00574396\n",
      "[141]\ttrain-auc:0.894263+0.00150863\ttest-auc:0.878615+0.00557696\n",
      "[142]\ttrain-auc:0.894296+0.00150441\ttest-auc:0.878625+0.00561928\n",
      "[143]\ttrain-auc:0.894373+0.0015378\ttest-auc:0.878672+0.00569828\n",
      "[144]\ttrain-auc:0.894438+0.00155933\ttest-auc:0.878711+0.0056291\n",
      "[145]\ttrain-auc:0.894514+0.00154442\ttest-auc:0.878686+0.00552825\n",
      "[146]\ttrain-auc:0.894641+0.00157353\ttest-auc:0.878717+0.0055082\n",
      "[147]\ttrain-auc:0.894719+0.00155942\ttest-auc:0.878817+0.00551516\n",
      "[148]\ttrain-auc:0.894769+0.0015519\ttest-auc:0.878874+0.00552435\n",
      "[149]\ttrain-auc:0.894881+0.00154425\ttest-auc:0.87887+0.00555678\n",
      "[150]\ttrain-auc:0.894937+0.0015494\ttest-auc:0.878841+0.00551368\n",
      "[151]\ttrain-auc:0.895004+0.00153421\ttest-auc:0.87903+0.0053498\n",
      "[152]\ttrain-auc:0.895049+0.00151906\ttest-auc:0.879039+0.005392\n",
      "[153]\ttrain-auc:0.895123+0.00151269\ttest-auc:0.879031+0.00541355\n",
      "[154]\ttrain-auc:0.895173+0.00151852\ttest-auc:0.879035+0.00543651\n",
      "[155]\ttrain-auc:0.895275+0.00151638\ttest-auc:0.879153+0.00537375\n",
      "[156]\ttrain-auc:0.895328+0.00149558\ttest-auc:0.879146+0.00538772\n",
      "[157]\ttrain-auc:0.895384+0.00151243\ttest-auc:0.879347+0.00553107\n",
      "[158]\ttrain-auc:0.895481+0.001555\ttest-auc:0.879355+0.00552163\n",
      "[159]\ttrain-auc:0.895553+0.00153461\ttest-auc:0.879385+0.0055845\n",
      "[160]\ttrain-auc:0.895609+0.00152211\ttest-auc:0.879395+0.0056556\n",
      "[161]\ttrain-auc:0.895674+0.0015115\ttest-auc:0.879425+0.00569433\n",
      "[162]\ttrain-auc:0.89579+0.0014622\ttest-auc:0.879414+0.00563415\n",
      "[163]\ttrain-auc:0.895823+0.00146435\ttest-auc:0.879454+0.00567249\n",
      "[164]\ttrain-auc:0.895999+0.00162231\ttest-auc:0.879507+0.00565368\n",
      "[165]\ttrain-auc:0.896063+0.00158982\ttest-auc:0.879583+0.00566998\n",
      "[166]\ttrain-auc:0.896144+0.00160924\ttest-auc:0.879602+0.00570218\n",
      "[167]\ttrain-auc:0.896201+0.00161154\ttest-auc:0.879627+0.00570324\n",
      "[168]\ttrain-auc:0.896293+0.00159357\ttest-auc:0.879857+0.00565719\n",
      "[169]\ttrain-auc:0.896395+0.00157034\ttest-auc:0.879798+0.00569037\n",
      "[170]\ttrain-auc:0.896393+0.001599\ttest-auc:0.879694+0.00574543\n",
      "[171]\ttrain-auc:0.896449+0.0015882\ttest-auc:0.879794+0.00578562\n",
      "[172]\ttrain-auc:0.896515+0.00159525\ttest-auc:0.87989+0.0058119\n",
      "[173]\ttrain-auc:0.896573+0.00158681\ttest-auc:0.879962+0.0057661\n",
      "[174]\ttrain-auc:0.896651+0.00156619\ttest-auc:0.880017+0.00564502\n",
      "[175]\ttrain-auc:0.896715+0.00156669\ttest-auc:0.880054+0.00567303\n",
      "[176]\ttrain-auc:0.896821+0.00153711\ttest-auc:0.880035+0.00571108\n",
      "[177]\ttrain-auc:0.896885+0.00154731\ttest-auc:0.880064+0.00568954\n",
      "[178]\ttrain-auc:0.896974+0.00150541\ttest-auc:0.880142+0.00565334\n",
      "[179]\ttrain-auc:0.897032+0.00150332\ttest-auc:0.880223+0.00562452\n",
      "[180]\ttrain-auc:0.897151+0.001463\ttest-auc:0.880321+0.005653\n",
      "[181]\ttrain-auc:0.897215+0.00146125\ttest-auc:0.880386+0.00564488\n",
      "[182]\ttrain-auc:0.897279+0.00144714\ttest-auc:0.880474+0.0056714\n",
      "[183]\ttrain-auc:0.897344+0.00146366\ttest-auc:0.880616+0.00571633\n",
      "[184]\ttrain-auc:0.897388+0.0014597\ttest-auc:0.880629+0.00564925\n",
      "[185]\ttrain-auc:0.897459+0.00144144\ttest-auc:0.880669+0.005636\n",
      "[186]\ttrain-auc:0.897521+0.0014425\ttest-auc:0.880721+0.00564783\n",
      "[187]\ttrain-auc:0.897577+0.00143109\ttest-auc:0.880684+0.00563657\n",
      "[188]\ttrain-auc:0.897625+0.00143595\ttest-auc:0.880729+0.00557905\n",
      "[189]\ttrain-auc:0.897676+0.00144621\ttest-auc:0.880765+0.00557246\n",
      "[190]\ttrain-auc:0.897736+0.00142049\ttest-auc:0.880879+0.00553411\n",
      "[191]\ttrain-auc:0.897761+0.00144317\ttest-auc:0.880914+0.00552262\n",
      "[192]\ttrain-auc:0.897807+0.0014122\ttest-auc:0.880948+0.00548592\n",
      "[193]\ttrain-auc:0.897857+0.00141253\ttest-auc:0.880989+0.00548275\n",
      "[194]\ttrain-auc:0.897956+0.0013909\ttest-auc:0.88107+0.00552036\n",
      "[195]\ttrain-auc:0.898012+0.00138056\ttest-auc:0.881079+0.00548814\n",
      "[196]\ttrain-auc:0.898103+0.00136817\ttest-auc:0.881132+0.00556008\n",
      "[197]\ttrain-auc:0.898176+0.00134779\ttest-auc:0.881181+0.00556587\n",
      "[198]\ttrain-auc:0.89825+0.00137982\ttest-auc:0.881193+0.00555579\n",
      "[199]\ttrain-auc:0.898321+0.00139263\ttest-auc:0.881228+0.00554809\n",
      "[200]\ttrain-auc:0.898383+0.0013982\ttest-auc:0.881214+0.00551115\n",
      "[201]\ttrain-auc:0.898416+0.00138452\ttest-auc:0.88119+0.00550428\n",
      "[202]\ttrain-auc:0.898459+0.00137741\ttest-auc:0.881198+0.00548037\n",
      "[203]\ttrain-auc:0.898513+0.00135145\ttest-auc:0.881173+0.00552226\n",
      "[204]\ttrain-auc:0.898579+0.00134013\ttest-auc:0.881206+0.00559279\n",
      "[205]\ttrain-auc:0.898627+0.00135508\ttest-auc:0.881217+0.00559463\n",
      "[206]\ttrain-auc:0.898705+0.00137128\ttest-auc:0.881326+0.00557871\n",
      "[207]\ttrain-auc:0.898739+0.00138581\ttest-auc:0.881403+0.00560809\n",
      "[208]\ttrain-auc:0.898814+0.00137877\ttest-auc:0.881421+0.00563687\n",
      "[209]\ttrain-auc:0.898872+0.00137725\ttest-auc:0.881424+0.00560444\n",
      "[210]\ttrain-auc:0.898915+0.00137912\ttest-auc:0.881448+0.00561589\n",
      "[211]\ttrain-auc:0.898967+0.0013798\ttest-auc:0.881419+0.00558366\n",
      "[212]\ttrain-auc:0.898991+0.00134175\ttest-auc:0.881465+0.00561662\n",
      "[213]\ttrain-auc:0.899053+0.00131034\ttest-auc:0.881501+0.00564399\n",
      "[214]\ttrain-auc:0.899085+0.00129598\ttest-auc:0.881545+0.0056047\n",
      "[215]\ttrain-auc:0.899141+0.00129338\ttest-auc:0.881545+0.00557364\n",
      "[216]\ttrain-auc:0.899199+0.00129994\ttest-auc:0.881651+0.00560196\n",
      "[217]\ttrain-auc:0.899255+0.00128878\ttest-auc:0.881605+0.00559429\n",
      "[218]\ttrain-auc:0.899339+0.00129648\ttest-auc:0.881641+0.00559537\n",
      "[219]\ttrain-auc:0.899402+0.00127954\ttest-auc:0.881675+0.00559571\n",
      "[220]\ttrain-auc:0.899444+0.00129049\ttest-auc:0.881687+0.0055625\n",
      "[221]\ttrain-auc:0.899489+0.00128687\ttest-auc:0.881781+0.00562966\n",
      "[222]\ttrain-auc:0.899579+0.00125194\ttest-auc:0.88178+0.00564264\n",
      "[223]\ttrain-auc:0.899628+0.00121882\ttest-auc:0.881791+0.005631\n",
      "[224]\ttrain-auc:0.899708+0.00117751\ttest-auc:0.881798+0.00563299\n",
      "[225]\ttrain-auc:0.899787+0.00116218\ttest-auc:0.881811+0.00565062\n",
      "[226]\ttrain-auc:0.899862+0.00118296\ttest-auc:0.881817+0.0056337\n",
      "[227]\ttrain-auc:0.899926+0.00119007\ttest-auc:0.881878+0.00560312\n",
      "[228]\ttrain-auc:0.899972+0.0011815\ttest-auc:0.881902+0.00561295\n",
      "[229]\ttrain-auc:0.900072+0.00126084\ttest-auc:0.881946+0.00572384\n",
      "[230]\ttrain-auc:0.900132+0.0013175\ttest-auc:0.8819+0.00575133\n",
      "[231]\ttrain-auc:0.900205+0.00133761\ttest-auc:0.881914+0.00571812\n",
      "[232]\ttrain-auc:0.900242+0.00135188\ttest-auc:0.881887+0.00576622\n",
      "[233]\ttrain-auc:0.900303+0.00134718\ttest-auc:0.881869+0.00575087\n",
      "[234]\ttrain-auc:0.900379+0.00131946\ttest-auc:0.881945+0.00578048\n",
      "[235]\ttrain-auc:0.900438+0.00132429\ttest-auc:0.881932+0.0057835\n",
      "[236]\ttrain-auc:0.90049+0.0012959\ttest-auc:0.881902+0.00578083\n",
      "[237]\ttrain-auc:0.900523+0.00130205\ttest-auc:0.881955+0.00579598\n",
      "[238]\ttrain-auc:0.90056+0.00129394\ttest-auc:0.882+0.00578001\n",
      "[239]\ttrain-auc:0.900577+0.00129359\ttest-auc:0.882011+0.00577255\n",
      "[240]\ttrain-auc:0.900631+0.00128198\ttest-auc:0.882036+0.00573905\n",
      "[241]\ttrain-auc:0.900678+0.00127829\ttest-auc:0.882038+0.00577618\n",
      "[242]\ttrain-auc:0.900744+0.00123124\ttest-auc:0.882123+0.00577774\n",
      "[243]\ttrain-auc:0.900797+0.00122368\ttest-auc:0.882163+0.00582174\n",
      "[244]\ttrain-auc:0.900863+0.00121001\ttest-auc:0.882212+0.00575775\n",
      "[245]\ttrain-auc:0.900899+0.0012038\ttest-auc:0.882225+0.00575307\n",
      "[246]\ttrain-auc:0.90094+0.00118503\ttest-auc:0.882213+0.00575553\n",
      "[247]\ttrain-auc:0.901006+0.00117629\ttest-auc:0.882252+0.00574765\n",
      "[248]\ttrain-auc:0.901057+0.00119318\ttest-auc:0.882256+0.00577007\n",
      "[249]\ttrain-auc:0.901105+0.00115477\ttest-auc:0.882267+0.00574971\n",
      "[250]\ttrain-auc:0.901172+0.00113394\ttest-auc:0.882308+0.00568663\n",
      "[251]\ttrain-auc:0.901235+0.00113963\ttest-auc:0.882298+0.00568634\n",
      "[252]\ttrain-auc:0.901317+0.00115448\ttest-auc:0.882356+0.00567737\n",
      "[253]\ttrain-auc:0.901371+0.00115276\ttest-auc:0.882366+0.00566617\n",
      "[254]\ttrain-auc:0.90142+0.00115943\ttest-auc:0.882399+0.00565851\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[255]\ttrain-auc:0.901486+0.00114189\ttest-auc:0.882371+0.00560508\n",
      "[256]\ttrain-auc:0.901565+0.00116388\ttest-auc:0.882413+0.0055894\n",
      "[257]\ttrain-auc:0.901635+0.00115921\ttest-auc:0.882452+0.00558976\n",
      "[258]\ttrain-auc:0.901697+0.00114888\ttest-auc:0.882492+0.00561665\n",
      "[259]\ttrain-auc:0.901739+0.00114393\ttest-auc:0.882511+0.00558974\n",
      "[260]\ttrain-auc:0.901795+0.00114021\ttest-auc:0.882539+0.00560907\n",
      "[261]\ttrain-auc:0.901831+0.00114174\ttest-auc:0.882569+0.00562505\n",
      "[262]\ttrain-auc:0.901879+0.0011459\ttest-auc:0.882596+0.0056137\n",
      "[263]\ttrain-auc:0.901917+0.00115137\ttest-auc:0.882582+0.00560371\n",
      "[264]\ttrain-auc:0.901975+0.0011464\ttest-auc:0.882799+0.00570487\n",
      "[265]\ttrain-auc:0.902029+0.00115788\ttest-auc:0.882771+0.00570866\n",
      "[266]\ttrain-auc:0.902077+0.00117679\ttest-auc:0.882802+0.00572814\n",
      "[267]\ttrain-auc:0.902159+0.0011617\ttest-auc:0.882874+0.00569636\n",
      "[268]\ttrain-auc:0.902219+0.00115857\ttest-auc:0.882891+0.00567151\n",
      "[269]\ttrain-auc:0.902263+0.00115575\ttest-auc:0.882947+0.00564813\n",
      "[270]\ttrain-auc:0.9023+0.00115733\ttest-auc:0.882936+0.00562759\n",
      "[271]\ttrain-auc:0.902357+0.00116587\ttest-auc:0.88298+0.0056849\n",
      "[272]\ttrain-auc:0.902466+0.00117202\ttest-auc:0.882969+0.0056987\n",
      "[273]\ttrain-auc:0.902527+0.00116359\ttest-auc:0.882992+0.00568823\n",
      "[274]\ttrain-auc:0.902598+0.00112609\ttest-auc:0.883068+0.00571195\n",
      "[275]\ttrain-auc:0.902654+0.00113084\ttest-auc:0.883059+0.00573556\n",
      "[276]\ttrain-auc:0.902713+0.00114794\ttest-auc:0.883142+0.00576274\n",
      "[277]\ttrain-auc:0.90281+0.0011289\ttest-auc:0.883182+0.00574953\n",
      "[278]\ttrain-auc:0.902866+0.00112188\ttest-auc:0.8832+0.00578542\n",
      "[279]\ttrain-auc:0.90293+0.00114391\ttest-auc:0.883218+0.00581954\n",
      "[280]\ttrain-auc:0.902989+0.00114903\ttest-auc:0.883208+0.00579536\n",
      "[281]\ttrain-auc:0.903032+0.00115012\ttest-auc:0.883229+0.00586346\n",
      "[282]\ttrain-auc:0.903091+0.00116997\ttest-auc:0.883242+0.00588124\n",
      "[283]\ttrain-auc:0.903133+0.00116386\ttest-auc:0.883247+0.00585913\n",
      "[284]\ttrain-auc:0.903209+0.00118972\ttest-auc:0.88323+0.00587475\n",
      "[285]\ttrain-auc:0.903251+0.00118147\ttest-auc:0.883346+0.00581989\n",
      "[286]\ttrain-auc:0.903304+0.00117252\ttest-auc:0.883323+0.00580873\n",
      "[287]\ttrain-auc:0.903356+0.00118605\ttest-auc:0.883312+0.00579917\n",
      "[288]\ttrain-auc:0.903402+0.00118526\ttest-auc:0.883296+0.00577436\n",
      "[289]\ttrain-auc:0.903463+0.00121149\ttest-auc:0.883309+0.00574944\n",
      "[290]\ttrain-auc:0.903533+0.00120922\ttest-auc:0.88339+0.00580442\n",
      "[291]\ttrain-auc:0.903566+0.00120051\ttest-auc:0.883456+0.0057771\n",
      "[292]\ttrain-auc:0.903609+0.00119802\ttest-auc:0.883505+0.00574305\n",
      "[293]\ttrain-auc:0.903652+0.00118582\ttest-auc:0.883557+0.00575875\n",
      "[294]\ttrain-auc:0.903741+0.00119042\ttest-auc:0.883576+0.00572356\n",
      "[295]\ttrain-auc:0.90379+0.0011774\ttest-auc:0.883572+0.00573561\n",
      "[296]\ttrain-auc:0.903839+0.00118856\ttest-auc:0.883585+0.00575564\n",
      "[297]\ttrain-auc:0.903879+0.00120107\ttest-auc:0.883591+0.00577126\n",
      "[298]\ttrain-auc:0.903922+0.00118721\ttest-auc:0.883606+0.00578549\n",
      "[299]\ttrain-auc:0.903977+0.00117252\ttest-auc:0.883621+0.00578003\n",
      "[300]\ttrain-auc:0.904031+0.00115804\ttest-auc:0.883655+0.00581632\n",
      "[301]\ttrain-auc:0.904062+0.00114851\ttest-auc:0.883652+0.00582789\n",
      "[302]\ttrain-auc:0.90411+0.00114682\ttest-auc:0.883672+0.00583609\n",
      "[303]\ttrain-auc:0.90417+0.00116417\ttest-auc:0.883712+0.00583808\n",
      "[304]\ttrain-auc:0.904234+0.00114737\ttest-auc:0.883717+0.0058363\n",
      "[305]\ttrain-auc:0.904308+0.00117011\ttest-auc:0.883763+0.00581958\n",
      "[306]\ttrain-auc:0.904373+0.00117084\ttest-auc:0.883804+0.005816\n",
      "[307]\ttrain-auc:0.904426+0.00116227\ttest-auc:0.883835+0.00588458\n",
      "[308]\ttrain-auc:0.904501+0.00116397\ttest-auc:0.883873+0.00589738\n",
      "[309]\ttrain-auc:0.904565+0.00116928\ttest-auc:0.883861+0.00587848\n",
      "[310]\ttrain-auc:0.904609+0.00116172\ttest-auc:0.8839+0.00582851\n",
      "[311]\ttrain-auc:0.904655+0.00117358\ttest-auc:0.883924+0.00583903\n",
      "[312]\ttrain-auc:0.904711+0.00118307\ttest-auc:0.883973+0.00582411\n",
      "[313]\ttrain-auc:0.904764+0.00118477\ttest-auc:0.883969+0.00581906\n",
      "[314]\ttrain-auc:0.904813+0.00117359\ttest-auc:0.883991+0.00584725\n",
      "[315]\ttrain-auc:0.904846+0.00116111\ttest-auc:0.883986+0.00584044\n",
      "[316]\ttrain-auc:0.904887+0.00117197\ttest-auc:0.884011+0.00584442\n",
      "[317]\ttrain-auc:0.904933+0.00117185\ttest-auc:0.884023+0.00584026\n",
      "[318]\ttrain-auc:0.904978+0.00115471\ttest-auc:0.884053+0.00584722\n",
      "[319]\ttrain-auc:0.905031+0.0011487\ttest-auc:0.884047+0.00580768\n",
      "[320]\ttrain-auc:0.905092+0.00115253\ttest-auc:0.884094+0.00580818\n",
      "[321]\ttrain-auc:0.905173+0.00115027\ttest-auc:0.884111+0.00579315\n",
      "[322]\ttrain-auc:0.905215+0.00116066\ttest-auc:0.884119+0.00578905\n",
      "[323]\ttrain-auc:0.905267+0.00115605\ttest-auc:0.884117+0.00577183\n",
      "[324]\ttrain-auc:0.905329+0.00114076\ttest-auc:0.884169+0.00577206\n",
      "[325]\ttrain-auc:0.905387+0.00113689\ttest-auc:0.884225+0.00576528\n",
      "[326]\ttrain-auc:0.905436+0.00112775\ttest-auc:0.88419+0.00575723\n",
      "[327]\ttrain-auc:0.905499+0.00110728\ttest-auc:0.884238+0.00576102\n",
      "[328]\ttrain-auc:0.905534+0.00111414\ttest-auc:0.884253+0.00576656\n",
      "[329]\ttrain-auc:0.90559+0.00109793\ttest-auc:0.884253+0.00572669\n",
      "[330]\ttrain-auc:0.905654+0.00113589\ttest-auc:0.884267+0.00571404\n",
      "[331]\ttrain-auc:0.905692+0.00113017\ttest-auc:0.884311+0.00573112\n",
      "[332]\ttrain-auc:0.90576+0.00113874\ttest-auc:0.884336+0.00570579\n",
      "[333]\ttrain-auc:0.9058+0.0011439\ttest-auc:0.884318+0.00569825\n",
      "[334]\ttrain-auc:0.905851+0.00114813\ttest-auc:0.884356+0.00569454\n",
      "[335]\ttrain-auc:0.9059+0.00115697\ttest-auc:0.88436+0.0056908\n",
      "[336]\ttrain-auc:0.90594+0.00115174\ttest-auc:0.884392+0.00569946\n",
      "[337]\ttrain-auc:0.905994+0.00113545\ttest-auc:0.884411+0.00570077\n",
      "[338]\ttrain-auc:0.90604+0.00113148\ttest-auc:0.884422+0.0057012\n",
      "[339]\ttrain-auc:0.90611+0.00112442\ttest-auc:0.884419+0.00572393\n",
      "[340]\ttrain-auc:0.906159+0.00112417\ttest-auc:0.884415+0.00569096\n",
      "[341]\ttrain-auc:0.90621+0.00111825\ttest-auc:0.884434+0.00564272\n",
      "[342]\ttrain-auc:0.906297+0.00112036\ttest-auc:0.884435+0.00566485\n",
      "[343]\ttrain-auc:0.906341+0.00112369\ttest-auc:0.884448+0.00565587\n",
      "[344]\ttrain-auc:0.906392+0.00112963\ttest-auc:0.88445+0.00565606\n",
      "[345]\ttrain-auc:0.906441+0.00110683\ttest-auc:0.884445+0.00562556\n",
      "[346]\ttrain-auc:0.906498+0.00109583\ttest-auc:0.884433+0.00562275\n",
      "[347]\ttrain-auc:0.906558+0.0010875\ttest-auc:0.884454+0.00561794\n",
      "[348]\ttrain-auc:0.906611+0.00108039\ttest-auc:0.884488+0.00565476\n",
      "[349]\ttrain-auc:0.906664+0.00106118\ttest-auc:0.88451+0.00562705\n",
      "[350]\ttrain-auc:0.90673+0.00104882\ttest-auc:0.884561+0.00560911\n",
      "[351]\ttrain-auc:0.906787+0.00106288\ttest-auc:0.884577+0.00560696\n",
      "[352]\ttrain-auc:0.906836+0.00105824\ttest-auc:0.884602+0.00559545\n",
      "[353]\ttrain-auc:0.906897+0.0010502\ttest-auc:0.884651+0.00555409\n",
      "[354]\ttrain-auc:0.906945+0.00104487\ttest-auc:0.884701+0.00559085\n",
      "[355]\ttrain-auc:0.906996+0.00102738\ttest-auc:0.884678+0.00557187\n",
      "[356]\ttrain-auc:0.907054+0.00104638\ttest-auc:0.88468+0.00559398\n",
      "[357]\ttrain-auc:0.907096+0.00104072\ttest-auc:0.884656+0.00561026\n",
      "[358]\ttrain-auc:0.90716+0.00105536\ttest-auc:0.884671+0.00561913\n",
      "[359]\ttrain-auc:0.907208+0.00104957\ttest-auc:0.884713+0.00559628\n",
      "[360]\ttrain-auc:0.907276+0.00104512\ttest-auc:0.884675+0.00565729\n",
      "[361]\ttrain-auc:0.90733+0.00105417\ttest-auc:0.884693+0.00563114\n",
      "[362]\ttrain-auc:0.907374+0.00103889\ttest-auc:0.884677+0.00563912\n",
      "[363]\ttrain-auc:0.907432+0.00105348\ttest-auc:0.884696+0.00561663\n",
      "[364]\ttrain-auc:0.907483+0.00106513\ttest-auc:0.884733+0.00559969\n",
      "[365]\ttrain-auc:0.907535+0.00106205\ttest-auc:0.884754+0.00559157\n",
      "[366]\ttrain-auc:0.907585+0.0010375\ttest-auc:0.884734+0.00555629\n",
      "[367]\ttrain-auc:0.907635+0.00104089\ttest-auc:0.884688+0.0055636\n",
      "[368]\ttrain-auc:0.907693+0.0010354\ttest-auc:0.884708+0.00555676\n",
      "[369]\ttrain-auc:0.90776+0.00102602\ttest-auc:0.884745+0.00551054\n",
      "[370]\ttrain-auc:0.907814+0.00102214\ttest-auc:0.884755+0.00552834\n",
      "[371]\ttrain-auc:0.907858+0.00100718\ttest-auc:0.884756+0.00553962\n",
      "[372]\ttrain-auc:0.907916+0.00100082\ttest-auc:0.884744+0.00554268\n",
      "[373]\ttrain-auc:0.907982+0.000999223\ttest-auc:0.884744+0.00550807\n",
      "[374]\ttrain-auc:0.908035+0.000978192\ttest-auc:0.884745+0.00550554\n",
      "[375]\ttrain-auc:0.908081+0.000977515\ttest-auc:0.88478+0.00544067\n",
      "[376]\ttrain-auc:0.908141+0.000994547\ttest-auc:0.884777+0.00547633\n",
      "[377]\ttrain-auc:0.908188+0.000985715\ttest-auc:0.884799+0.00543737\n",
      "[378]\ttrain-auc:0.908242+0.000991451\ttest-auc:0.884804+0.00545367\n",
      "[379]\ttrain-auc:0.908285+0.000995039\ttest-auc:0.884782+0.00546058\n",
      "[380]\ttrain-auc:0.908322+0.000986984\ttest-auc:0.884824+0.00545675\n",
      "[381]\ttrain-auc:0.90837+0.000988128\ttest-auc:0.88484+0.00546052\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[382]\ttrain-auc:0.908428+0.000982331\ttest-auc:0.884871+0.00549297\n",
      "[383]\ttrain-auc:0.908482+0.000990093\ttest-auc:0.884874+0.00546798\n",
      "[384]\ttrain-auc:0.908523+0.00098618\ttest-auc:0.884873+0.00545132\n",
      "[385]\ttrain-auc:0.908573+0.00097275\ttest-auc:0.88489+0.00547866\n",
      "[386]\ttrain-auc:0.908618+0.00098529\ttest-auc:0.884901+0.00549216\n",
      "[387]\ttrain-auc:0.908661+0.000984958\ttest-auc:0.884906+0.00552295\n",
      "[388]\ttrain-auc:0.908715+0.000972349\ttest-auc:0.884913+0.00551388\n",
      "[389]\ttrain-auc:0.908771+0.00097414\ttest-auc:0.884911+0.00550465\n",
      "[390]\ttrain-auc:0.908837+0.000990673\ttest-auc:0.884922+0.00550137\n",
      "[391]\ttrain-auc:0.908889+0.000984706\ttest-auc:0.884948+0.00551092\n",
      "[392]\ttrain-auc:0.908932+0.000992476\ttest-auc:0.884995+0.00548931\n",
      "[393]\ttrain-auc:0.908972+0.00101034\ttest-auc:0.885008+0.00547581\n",
      "[394]\ttrain-auc:0.909009+0.00100949\ttest-auc:0.885013+0.00545128\n",
      "[395]\ttrain-auc:0.909059+0.000999925\ttest-auc:0.885035+0.00544317\n",
      "[396]\ttrain-auc:0.909114+0.000986681\ttest-auc:0.885058+0.00542165\n",
      "[397]\ttrain-auc:0.909145+0.000987013\ttest-auc:0.885106+0.00543115\n",
      "[398]\ttrain-auc:0.90919+0.000975922\ttest-auc:0.885114+0.0054133\n",
      "[399]\ttrain-auc:0.909243+0.000968363\ttest-auc:0.885131+0.00547621\n",
      "[400]\ttrain-auc:0.909299+0.000957073\ttest-auc:0.885156+0.00550332\n",
      "[401]\ttrain-auc:0.909342+0.000964247\ttest-auc:0.885138+0.00554848\n",
      "[402]\ttrain-auc:0.909402+0.000976162\ttest-auc:0.88515+0.00552522\n",
      "[403]\ttrain-auc:0.909462+0.000984066\ttest-auc:0.885171+0.00553055\n",
      "[404]\ttrain-auc:0.909509+0.00100066\ttest-auc:0.885172+0.00554291\n",
      "[405]\ttrain-auc:0.909551+0.00100457\ttest-auc:0.88521+0.00552133\n",
      "[406]\ttrain-auc:0.909613+0.00101747\ttest-auc:0.885244+0.00550265\n",
      "[407]\ttrain-auc:0.909675+0.0010178\ttest-auc:0.885269+0.00545372\n",
      "[408]\ttrain-auc:0.909727+0.0010368\ttest-auc:0.885295+0.00544466\n",
      "[409]\ttrain-auc:0.909781+0.00102474\ttest-auc:0.885315+0.00544005\n",
      "[410]\ttrain-auc:0.909835+0.001022\ttest-auc:0.885329+0.00545471\n",
      "[411]\ttrain-auc:0.909881+0.00101987\ttest-auc:0.885372+0.005448\n",
      "[412]\ttrain-auc:0.90993+0.00101846\ttest-auc:0.885362+0.00546257\n",
      "[413]\ttrain-auc:0.90999+0.00100827\ttest-auc:0.885402+0.00546706\n",
      "[414]\ttrain-auc:0.910051+0.00103292\ttest-auc:0.885429+0.00542414\n",
      "[415]\ttrain-auc:0.910121+0.00104144\ttest-auc:0.88544+0.00540806\n",
      "[416]\ttrain-auc:0.910156+0.00105094\ttest-auc:0.885455+0.00541486\n",
      "[417]\ttrain-auc:0.910207+0.00107259\ttest-auc:0.885476+0.00540299\n",
      "[418]\ttrain-auc:0.910258+0.00109117\ttest-auc:0.88549+0.00540636\n",
      "[419]\ttrain-auc:0.910316+0.00109803\ttest-auc:0.885497+0.00538205\n",
      "[420]\ttrain-auc:0.910373+0.00108583\ttest-auc:0.885516+0.00540557\n",
      "[421]\ttrain-auc:0.910419+0.00108038\ttest-auc:0.885516+0.00543146\n",
      "[422]\ttrain-auc:0.91046+0.00108327\ttest-auc:0.885537+0.0054431\n",
      "[423]\ttrain-auc:0.910509+0.00108862\ttest-auc:0.885522+0.00544116\n",
      "[424]\ttrain-auc:0.910541+0.00108468\ttest-auc:0.885527+0.00544451\n",
      "[425]\ttrain-auc:0.91057+0.0010779\ttest-auc:0.885566+0.0054655\n",
      "[426]\ttrain-auc:0.910639+0.00109613\ttest-auc:0.885594+0.00543129\n",
      "[427]\ttrain-auc:0.910692+0.00108766\ttest-auc:0.885597+0.0054172\n",
      "[428]\ttrain-auc:0.910729+0.00109203\ttest-auc:0.885622+0.00540249\n",
      "[429]\ttrain-auc:0.910774+0.00108663\ttest-auc:0.885645+0.0054257\n",
      "[430]\ttrain-auc:0.910832+0.00108947\ttest-auc:0.885645+0.00541357\n",
      "[431]\ttrain-auc:0.910881+0.00107869\ttest-auc:0.88568+0.00543671\n",
      "[432]\ttrain-auc:0.910921+0.0010862\ttest-auc:0.885673+0.00541676\n",
      "[433]\ttrain-auc:0.91097+0.00108995\ttest-auc:0.885675+0.00541722\n",
      "[434]\ttrain-auc:0.911017+0.0010943\ttest-auc:0.885684+0.00539771\n",
      "[435]\ttrain-auc:0.911084+0.00109504\ttest-auc:0.885645+0.00541983\n",
      "[436]\ttrain-auc:0.911142+0.00109654\ttest-auc:0.885634+0.005422\n",
      "[437]\ttrain-auc:0.911184+0.00110043\ttest-auc:0.885669+0.00540253\n",
      "[438]\ttrain-auc:0.911231+0.00108284\ttest-auc:0.885691+0.00537873\n",
      "[439]\ttrain-auc:0.911266+0.00107884\ttest-auc:0.885694+0.00536883\n",
      "[440]\ttrain-auc:0.911314+0.00106822\ttest-auc:0.885703+0.00533411\n",
      "[441]\ttrain-auc:0.911359+0.00106668\ttest-auc:0.885762+0.00536332\n",
      "[442]\ttrain-auc:0.911394+0.00106385\ttest-auc:0.885781+0.00535319\n",
      "[443]\ttrain-auc:0.911448+0.00106183\ttest-auc:0.885785+0.00532886\n",
      "[444]\ttrain-auc:0.911494+0.00105128\ttest-auc:0.885781+0.00533557\n",
      "[445]\ttrain-auc:0.911534+0.0010678\ttest-auc:0.885788+0.00533565\n",
      "[446]\ttrain-auc:0.911585+0.00106685\ttest-auc:0.8858+0.00532069\n",
      "[447]\ttrain-auc:0.911629+0.00107021\ttest-auc:0.885835+0.00530746\n",
      "[448]\ttrain-auc:0.911682+0.00107658\ttest-auc:0.885825+0.00530611\n",
      "[449]\ttrain-auc:0.911728+0.00110051\ttest-auc:0.885852+0.00527427\n",
      "[450]\ttrain-auc:0.911761+0.00109497\ttest-auc:0.885879+0.00524458\n",
      "[451]\ttrain-auc:0.911796+0.00109479\ttest-auc:0.885864+0.00525368\n",
      "[452]\ttrain-auc:0.911836+0.00109435\ttest-auc:0.885864+0.00526691\n",
      "[453]\ttrain-auc:0.911888+0.00108082\ttest-auc:0.885877+0.00525\n",
      "[454]\ttrain-auc:0.911938+0.0010861\ttest-auc:0.885918+0.00525931\n",
      "[455]\ttrain-auc:0.911975+0.00107751\ttest-auc:0.885935+0.00525454\n",
      "[456]\ttrain-auc:0.912023+0.00108916\ttest-auc:0.88594+0.00525272\n",
      "[457]\ttrain-auc:0.912086+0.00108346\ttest-auc:0.885947+0.00521532\n",
      "[458]\ttrain-auc:0.912143+0.00107136\ttest-auc:0.885944+0.0052198\n",
      "[459]\ttrain-auc:0.912189+0.00106468\ttest-auc:0.885975+0.00519515\n",
      "[460]\ttrain-auc:0.912243+0.00105921\ttest-auc:0.88598+0.0051759\n",
      "[461]\ttrain-auc:0.912299+0.0010596\ttest-auc:0.885986+0.00514995\n",
      "[462]\ttrain-auc:0.912344+0.00103765\ttest-auc:0.886002+0.00514208\n",
      "[463]\ttrain-auc:0.912388+0.00104803\ttest-auc:0.886015+0.00515277\n",
      "[464]\ttrain-auc:0.912453+0.0010478\ttest-auc:0.886004+0.00517633\n",
      "[465]\ttrain-auc:0.912497+0.00105085\ttest-auc:0.885999+0.00516444\n",
      "[466]\ttrain-auc:0.912533+0.001052\ttest-auc:0.886007+0.00515127\n",
      "[467]\ttrain-auc:0.912586+0.00103489\ttest-auc:0.886031+0.00515176\n",
      "[468]\ttrain-auc:0.912613+0.00103444\ttest-auc:0.886046+0.00518144\n",
      "[469]\ttrain-auc:0.912666+0.00101688\ttest-auc:0.886055+0.00517554\n",
      "[470]\ttrain-auc:0.912708+0.00100644\ttest-auc:0.886049+0.00517531\n",
      "[471]\ttrain-auc:0.912736+0.00101004\ttest-auc:0.886058+0.00516569\n",
      "[472]\ttrain-auc:0.912784+0.000990414\ttest-auc:0.886084+0.0051715\n",
      "[473]\ttrain-auc:0.912842+0.000992529\ttest-auc:0.886109+0.00515904\n",
      "[474]\ttrain-auc:0.912891+0.000991226\ttest-auc:0.886083+0.00513204\n",
      "[475]\ttrain-auc:0.912928+0.000981733\ttest-auc:0.886093+0.00513814\n",
      "[476]\ttrain-auc:0.912976+0.000995227\ttest-auc:0.886103+0.0051131\n",
      "[477]\ttrain-auc:0.913023+0.000983611\ttest-auc:0.886109+0.00511728\n",
      "[478]\ttrain-auc:0.913057+0.000987833\ttest-auc:0.886132+0.00510341\n",
      "[479]\ttrain-auc:0.913107+0.00099202\ttest-auc:0.886125+0.00510646\n",
      "[480]\ttrain-auc:0.91317+0.000980171\ttest-auc:0.886127+0.00512566\n",
      "[481]\ttrain-auc:0.913213+0.000988065\ttest-auc:0.88613+0.00514072\n",
      "[482]\ttrain-auc:0.913259+0.000993482\ttest-auc:0.886158+0.00512361\n",
      "[483]\ttrain-auc:0.9133+0.00098633\ttest-auc:0.886198+0.00509806\n",
      "[484]\ttrain-auc:0.913336+0.000997031\ttest-auc:0.886199+0.00507539\n",
      "[485]\ttrain-auc:0.913382+0.00100256\ttest-auc:0.886227+0.00505805\n",
      "[486]\ttrain-auc:0.913427+0.0010151\ttest-auc:0.886248+0.00505439\n",
      "[487]\ttrain-auc:0.913461+0.00100995\ttest-auc:0.886258+0.00503568\n",
      "[488]\ttrain-auc:0.913499+0.00102231\ttest-auc:0.88627+0.00502014\n",
      "[489]\ttrain-auc:0.913542+0.0010319\ttest-auc:0.886272+0.00505497\n",
      "[490]\ttrain-auc:0.913584+0.00103863\ttest-auc:0.88629+0.00503844\n",
      "[491]\ttrain-auc:0.913628+0.00105249\ttest-auc:0.88629+0.00503509\n",
      "[492]\ttrain-auc:0.913685+0.00104798\ttest-auc:0.886299+0.00504142\n",
      "[493]\ttrain-auc:0.913742+0.00103783\ttest-auc:0.886314+0.00503677\n",
      "[494]\ttrain-auc:0.913794+0.0010389\ttest-auc:0.886323+0.00503525\n",
      "[495]\ttrain-auc:0.913838+0.00103827\ttest-auc:0.88634+0.00501327\n",
      "[496]\ttrain-auc:0.913877+0.00104567\ttest-auc:0.886377+0.00499746\n",
      "[497]\ttrain-auc:0.913906+0.00103708\ttest-auc:0.886376+0.00499165\n",
      "[498]\ttrain-auc:0.913953+0.00102541\ttest-auc:0.88641+0.00498347\n",
      "[499]\ttrain-auc:0.913999+0.00103856\ttest-auc:0.886401+0.00498509\n",
      "[500]\ttrain-auc:0.91405+0.00102638\ttest-auc:0.886391+0.00500011\n",
      "[501]\ttrain-auc:0.914099+0.00101131\ttest-auc:0.886401+0.0050033\n",
      "[502]\ttrain-auc:0.91415+0.00101164\ttest-auc:0.88643+0.00500934\n",
      "[503]\ttrain-auc:0.91419+0.00101302\ttest-auc:0.886461+0.00500541\n",
      "[504]\ttrain-auc:0.91424+0.000999733\ttest-auc:0.886483+0.00501493\n",
      "[505]\ttrain-auc:0.914274+0.00101347\ttest-auc:0.886503+0.00502168\n",
      "[506]\ttrain-auc:0.914303+0.00101499\ttest-auc:0.886513+0.00501702\n",
      "[507]\ttrain-auc:0.914348+0.0010199\ttest-auc:0.88656+0.00499757\n",
      "[508]\ttrain-auc:0.914392+0.00101666\ttest-auc:0.886561+0.00499971\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[509]\ttrain-auc:0.914429+0.00102003\ttest-auc:0.886566+0.00501795\n",
      "[510]\ttrain-auc:0.914476+0.00102454\ttest-auc:0.886565+0.00502073\n",
      "[511]\ttrain-auc:0.91452+0.00102437\ttest-auc:0.886569+0.00502949\n",
      "[512]\ttrain-auc:0.914566+0.00102669\ttest-auc:0.886581+0.00502302\n",
      "[513]\ttrain-auc:0.914621+0.00103095\ttest-auc:0.886583+0.00501164\n",
      "[514]\ttrain-auc:0.914666+0.00104732\ttest-auc:0.886608+0.00500536\n",
      "[515]\ttrain-auc:0.914712+0.00104547\ttest-auc:0.886595+0.00499366\n",
      "[516]\ttrain-auc:0.914757+0.00102443\ttest-auc:0.886626+0.00497409\n",
      "[517]\ttrain-auc:0.914806+0.00100284\ttest-auc:0.886618+0.004961\n",
      "[518]\ttrain-auc:0.914848+0.000992916\ttest-auc:0.886638+0.00494663\n",
      "[519]\ttrain-auc:0.914873+0.000986571\ttest-auc:0.886668+0.00494845\n",
      "[520]\ttrain-auc:0.914924+0.00097653\ttest-auc:0.886683+0.00495049\n",
      "[521]\ttrain-auc:0.914979+0.000972323\ttest-auc:0.886702+0.0049643\n",
      "[522]\ttrain-auc:0.915035+0.000980582\ttest-auc:0.886695+0.00497646\n",
      "[523]\ttrain-auc:0.915063+0.000983645\ttest-auc:0.886696+0.00498347\n",
      "[524]\ttrain-auc:0.915119+0.00098173\ttest-auc:0.886682+0.00496887\n",
      "[525]\ttrain-auc:0.915167+0.000981198\ttest-auc:0.886698+0.0049892\n",
      "[526]\ttrain-auc:0.915207+0.000994086\ttest-auc:0.886718+0.00500122\n",
      "[527]\ttrain-auc:0.915224+0.00100161\ttest-auc:0.886724+0.00499765\n",
      "[528]\ttrain-auc:0.915274+0.000989955\ttest-auc:0.886747+0.00498974\n",
      "[529]\ttrain-auc:0.915334+0.00100566\ttest-auc:0.886761+0.00500372\n",
      "[530]\ttrain-auc:0.915367+0.00100416\ttest-auc:0.886772+0.00499616\n",
      "[531]\ttrain-auc:0.915399+0.000997209\ttest-auc:0.88678+0.00500553\n",
      "[532]\ttrain-auc:0.915428+0.000993882\ttest-auc:0.886784+0.00499779\n",
      "[533]\ttrain-auc:0.915459+0.000987783\ttest-auc:0.886794+0.00498894\n",
      "[534]\ttrain-auc:0.915502+0.00100244\ttest-auc:0.886787+0.00498449\n",
      "[535]\ttrain-auc:0.915537+0.00101412\ttest-auc:0.886788+0.00497322\n",
      "[536]\ttrain-auc:0.915573+0.00100964\ttest-auc:0.886791+0.00500425\n",
      "[537]\ttrain-auc:0.915616+0.00101814\ttest-auc:0.886797+0.00501262\n",
      "[538]\ttrain-auc:0.915665+0.00101421\ttest-auc:0.886808+0.00503939\n",
      "[539]\ttrain-auc:0.915712+0.00102277\ttest-auc:0.886812+0.00502162\n",
      "[540]\ttrain-auc:0.915764+0.00103139\ttest-auc:0.886785+0.00500744\n",
      "[541]\ttrain-auc:0.915819+0.00101425\ttest-auc:0.886769+0.00498121\n",
      "[542]\ttrain-auc:0.915861+0.00100028\ttest-auc:0.886785+0.00495771\n",
      "[543]\ttrain-auc:0.915911+0.000994577\ttest-auc:0.886801+0.0049711\n",
      "[544]\ttrain-auc:0.915944+0.000997775\ttest-auc:0.88681+0.0049626\n",
      "[545]\ttrain-auc:0.915994+0.000990901\ttest-auc:0.886847+0.00496771\n",
      "[546]\ttrain-auc:0.916039+0.000990281\ttest-auc:0.886851+0.00495986\n",
      "[547]\ttrain-auc:0.91609+0.000992359\ttest-auc:0.886829+0.00494125\n",
      "[548]\ttrain-auc:0.916141+0.000998139\ttest-auc:0.886806+0.0049522\n",
      "[549]\ttrain-auc:0.916184+0.000989908\ttest-auc:0.886819+0.00496223\n",
      "[550]\ttrain-auc:0.916223+0.000985376\ttest-auc:0.886834+0.00498209\n",
      "[551]\ttrain-auc:0.916251+0.000980369\ttest-auc:0.886839+0.00500162\n",
      "[552]\ttrain-auc:0.91628+0.000960991\ttest-auc:0.886824+0.00499988\n",
      "[553]\ttrain-auc:0.916318+0.00097093\ttest-auc:0.886851+0.00499351\n",
      "[554]\ttrain-auc:0.916357+0.000976388\ttest-auc:0.886843+0.00498979\n",
      "[555]\ttrain-auc:0.916394+0.000975463\ttest-auc:0.886859+0.00500758\n",
      "[556]\ttrain-auc:0.916424+0.00097704\ttest-auc:0.886859+0.00499649\n",
      "[557]\ttrain-auc:0.916467+0.000973603\ttest-auc:0.886846+0.00501134\n",
      "[558]\ttrain-auc:0.916504+0.000974242\ttest-auc:0.886855+0.00502821\n",
      "[559]\ttrain-auc:0.916549+0.000983244\ttest-auc:0.886891+0.00502687\n",
      "[560]\ttrain-auc:0.916584+0.000986383\ttest-auc:0.886892+0.00501553\n",
      "[561]\ttrain-auc:0.916628+0.000971297\ttest-auc:0.886861+0.00500264\n",
      "[562]\ttrain-auc:0.916673+0.000972526\ttest-auc:0.886876+0.00502033\n",
      "[563]\ttrain-auc:0.916716+0.000965126\ttest-auc:0.886879+0.00501483\n",
      "[564]\ttrain-auc:0.916755+0.00097827\ttest-auc:0.886927+0.00499476\n",
      "[565]\ttrain-auc:0.9168+0.000989908\ttest-auc:0.88691+0.00497714\n",
      "[566]\ttrain-auc:0.916846+0.000994335\ttest-auc:0.886898+0.0049457\n",
      "[567]\ttrain-auc:0.916894+0.000989434\ttest-auc:0.886913+0.00496451\n",
      "[568]\ttrain-auc:0.916927+0.000983954\ttest-auc:0.886916+0.0049521\n",
      "[569]\ttrain-auc:0.916968+0.00099496\ttest-auc:0.8869+0.00495975\n",
      "[570]\ttrain-auc:0.917005+0.000995622\ttest-auc:0.886865+0.0049517\n",
      "[571]\ttrain-auc:0.91704+0.000997052\ttest-auc:0.886876+0.00495039\n",
      "[572]\ttrain-auc:0.917076+0.000983831\ttest-auc:0.886887+0.00492757\n",
      "[573]\ttrain-auc:0.917109+0.000976436\ttest-auc:0.886878+0.00492251\n",
      "[574]\ttrain-auc:0.917143+0.00097456\ttest-auc:0.886871+0.00494545\n",
      "[575]\ttrain-auc:0.917175+0.000968762\ttest-auc:0.886889+0.0049418\n",
      "[576]\ttrain-auc:0.917209+0.0009695\ttest-auc:0.886897+0.0049446\n",
      "[577]\ttrain-auc:0.917248+0.000968745\ttest-auc:0.886894+0.00494812\n",
      "[578]\ttrain-auc:0.917285+0.000975478\ttest-auc:0.886894+0.00493596\n",
      "[579]\ttrain-auc:0.917323+0.000981871\ttest-auc:0.886893+0.00493052\n",
      "[580]\ttrain-auc:0.917356+0.000969459\ttest-auc:0.886905+0.00494246\n",
      "[581]\ttrain-auc:0.917398+0.000971733\ttest-auc:0.886914+0.00493025\n",
      "[582]\ttrain-auc:0.917438+0.00096392\ttest-auc:0.886904+0.00493685\n",
      "[583]\ttrain-auc:0.917479+0.000949564\ttest-auc:0.886914+0.00494107\n",
      "[584]\ttrain-auc:0.917517+0.000937555\ttest-auc:0.886919+0.00493005\n",
      "[585]\ttrain-auc:0.917542+0.0009483\ttest-auc:0.88693+0.00492534\n",
      "[586]\ttrain-auc:0.91757+0.000946415\ttest-auc:0.886919+0.00493084\n",
      "[587]\ttrain-auc:0.917633+0.000930851\ttest-auc:0.886905+0.00492158\n",
      "[588]\ttrain-auc:0.91766+0.000938134\ttest-auc:0.88688+0.00491094\n",
      "[589]\ttrain-auc:0.917702+0.000938686\ttest-auc:0.886885+0.00490281\n",
      "[590]\ttrain-auc:0.917726+0.000947212\ttest-auc:0.886886+0.00491756\n",
      "[591]\ttrain-auc:0.917761+0.000952788\ttest-auc:0.886888+0.00491263\n",
      "[592]\ttrain-auc:0.9178+0.000952901\ttest-auc:0.886889+0.00488972\n",
      "[593]\ttrain-auc:0.91783+0.000952303\ttest-auc:0.886856+0.00491117\n",
      "[594]\ttrain-auc:0.917859+0.00094377\ttest-auc:0.886823+0.00491561\n",
      "[595]\ttrain-auc:0.9179+0.000935056\ttest-auc:0.886841+0.00492104\n",
      "[596]\ttrain-auc:0.917943+0.000941672\ttest-auc:0.886872+0.00490999\n",
      "[597]\ttrain-auc:0.917991+0.00093865\ttest-auc:0.886875+0.00492144\n",
      "[598]\ttrain-auc:0.918027+0.000946858\ttest-auc:0.886869+0.00493693\n",
      "[599]\ttrain-auc:0.918058+0.000949946\ttest-auc:0.88687+0.00494872\n",
      "[600]\ttrain-auc:0.918102+0.00095851\ttest-auc:0.8869+0.00492789\n",
      "[601]\ttrain-auc:0.91813+0.000953714\ttest-auc:0.886887+0.00494762\n",
      "[602]\ttrain-auc:0.918171+0.000955814\ttest-auc:0.88688+0.00495169\n",
      "[603]\ttrain-auc:0.91821+0.000948117\ttest-auc:0.886892+0.00494866\n",
      "[604]\ttrain-auc:0.918235+0.000953863\ttest-auc:0.886883+0.00496561\n",
      "[605]\ttrain-auc:0.918276+0.000965383\ttest-auc:0.886882+0.00496998\n",
      "[606]\ttrain-auc:0.918329+0.000963348\ttest-auc:0.886885+0.0049825\n",
      "[607]\ttrain-auc:0.918368+0.000977755\ttest-auc:0.886884+0.00497007\n",
      "[608]\ttrain-auc:0.918415+0.000971021\ttest-auc:0.886911+0.00497888\n",
      "[609]\ttrain-auc:0.918457+0.000973263\ttest-auc:0.886903+0.00494995\n",
      "[610]\ttrain-auc:0.918493+0.00096287\ttest-auc:0.886905+0.00496645\n",
      "[611]\ttrain-auc:0.918534+0.000954518\ttest-auc:0.886904+0.00495402\n",
      "[612]\ttrain-auc:0.918574+0.000953865\ttest-auc:0.886902+0.00495267\n",
      "[613]\ttrain-auc:0.9186+0.000951392\ttest-auc:0.886895+0.004945\n",
      "[614]\ttrain-auc:0.918634+0.00094744\ttest-auc:0.88691+0.00495281\n",
      "[615]\ttrain-auc:0.918656+0.000944445\ttest-auc:0.886926+0.00496776\n",
      "[616]\ttrain-auc:0.9187+0.000948058\ttest-auc:0.886942+0.00497032\n",
      "[617]\ttrain-auc:0.918745+0.000938023\ttest-auc:0.886942+0.00496768\n",
      "[618]\ttrain-auc:0.918788+0.000927082\ttest-auc:0.886964+0.00498177\n",
      "[619]\ttrain-auc:0.918826+0.000920396\ttest-auc:0.886968+0.00496714\n",
      "[620]\ttrain-auc:0.918865+0.000922139\ttest-auc:0.886971+0.00497102\n",
      "[621]\ttrain-auc:0.91891+0.00092414\ttest-auc:0.886985+0.0049631\n",
      "[622]\ttrain-auc:0.918941+0.000930424\ttest-auc:0.886992+0.00496077\n",
      "[623]\ttrain-auc:0.918964+0.000923975\ttest-auc:0.886974+0.00497015\n",
      "[624]\ttrain-auc:0.919005+0.00093217\ttest-auc:0.886986+0.00496766\n",
      "[625]\ttrain-auc:0.919055+0.000930366\ttest-auc:0.886994+0.00497859\n",
      "[626]\ttrain-auc:0.91909+0.000934428\ttest-auc:0.886994+0.00496787\n",
      "[627]\ttrain-auc:0.919134+0.000935732\ttest-auc:0.887011+0.00497951\n",
      "[628]\ttrain-auc:0.919179+0.000951208\ttest-auc:0.887013+0.004981\n",
      "[629]\ttrain-auc:0.919222+0.000953782\ttest-auc:0.887004+0.0049879\n",
      "[630]\ttrain-auc:0.919274+0.000961966\ttest-auc:0.887035+0.00498359\n",
      "[631]\ttrain-auc:0.919312+0.000963933\ttest-auc:0.887015+0.00498609\n",
      "[632]\ttrain-auc:0.919341+0.000964055\ttest-auc:0.887031+0.00498415\n",
      "[633]\ttrain-auc:0.91938+0.000960933\ttest-auc:0.88702+0.00497583\n",
      "[634]\ttrain-auc:0.919413+0.000966411\ttest-auc:0.887018+0.00497394\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[635]\ttrain-auc:0.919451+0.000978835\ttest-auc:0.887+0.00497427\n",
      "[636]\ttrain-auc:0.919489+0.00097138\ttest-auc:0.886998+0.00496535\n",
      "[637]\ttrain-auc:0.919529+0.00096622\ttest-auc:0.88701+0.00495204\n",
      "[638]\ttrain-auc:0.919572+0.000975907\ttest-auc:0.887003+0.00496846\n",
      "[639]\ttrain-auc:0.919612+0.000972945\ttest-auc:0.886994+0.00495079\n",
      "[640]\ttrain-auc:0.919641+0.000971424\ttest-auc:0.886988+0.00496519\n",
      "[641]\ttrain-auc:0.919692+0.000973451\ttest-auc:0.886998+0.00493775\n",
      "[642]\ttrain-auc:0.919734+0.000980099\ttest-auc:0.886993+0.00492305\n",
      "[643]\ttrain-auc:0.919765+0.000976044\ttest-auc:0.88699+0.00492387\n",
      "[644]\ttrain-auc:0.919799+0.000965995\ttest-auc:0.886979+0.00491525\n",
      "[645]\ttrain-auc:0.919838+0.00096794\ttest-auc:0.886979+0.00491896\n",
      "[646]\ttrain-auc:0.919879+0.000964182\ttest-auc:0.88697+0.0049183\n",
      "[647]\ttrain-auc:0.919912+0.000967629\ttest-auc:0.886985+0.00492357\n",
      "[648]\ttrain-auc:0.919958+0.000973063\ttest-auc:0.887002+0.00490811\n",
      "[649]\ttrain-auc:0.919995+0.000973232\ttest-auc:0.887017+0.00490069\n",
      "[650]\ttrain-auc:0.920031+0.000976753\ttest-auc:0.887021+0.00490587\n",
      "[651]\ttrain-auc:0.920057+0.000977617\ttest-auc:0.887037+0.00490132\n",
      "[652]\ttrain-auc:0.920092+0.000955286\ttest-auc:0.887032+0.00488555\n",
      "[653]\ttrain-auc:0.920144+0.000961582\ttest-auc:0.887054+0.00488821\n",
      "[654]\ttrain-auc:0.920201+0.000957128\ttest-auc:0.887054+0.00488822\n",
      "[655]\ttrain-auc:0.920242+0.000961457\ttest-auc:0.887048+0.00487995\n",
      "[656]\ttrain-auc:0.920263+0.000970233\ttest-auc:0.887067+0.00486958\n",
      "[657]\ttrain-auc:0.920307+0.000977408\ttest-auc:0.88708+0.0048952\n",
      "[658]\ttrain-auc:0.920347+0.000970823\ttest-auc:0.887076+0.004914\n",
      "[659]\ttrain-auc:0.920404+0.000974898\ttest-auc:0.887068+0.00491689\n",
      "[660]\ttrain-auc:0.920448+0.000983937\ttest-auc:0.88707+0.00493474\n",
      "[661]\ttrain-auc:0.920479+0.000983142\ttest-auc:0.887078+0.00490774\n",
      "[662]\ttrain-auc:0.920522+0.000981488\ttest-auc:0.887099+0.0049143\n",
      "[663]\ttrain-auc:0.920572+0.000983198\ttest-auc:0.887114+0.00490718\n",
      "[664]\ttrain-auc:0.920622+0.000979205\ttest-auc:0.887104+0.00494108\n",
      "[665]\ttrain-auc:0.920652+0.000975186\ttest-auc:0.887112+0.00495337\n",
      "[666]\ttrain-auc:0.920709+0.000972417\ttest-auc:0.887084+0.00492739\n",
      "[667]\ttrain-auc:0.920748+0.000976023\ttest-auc:0.887091+0.00491271\n",
      "[668]\ttrain-auc:0.920796+0.000973672\ttest-auc:0.8871+0.00490768\n",
      "[669]\ttrain-auc:0.920845+0.000984299\ttest-auc:0.887129+0.0049133\n",
      "[670]\ttrain-auc:0.9209+0.000978636\ttest-auc:0.887144+0.00490118\n",
      "[671]\ttrain-auc:0.92093+0.000972659\ttest-auc:0.887142+0.00491695\n",
      "[672]\ttrain-auc:0.920976+0.000979495\ttest-auc:0.887146+0.00491533\n",
      "[673]\ttrain-auc:0.921012+0.000978706\ttest-auc:0.887145+0.00491778\n",
      "[674]\ttrain-auc:0.921052+0.000961401\ttest-auc:0.887175+0.00493145\n",
      "[675]\ttrain-auc:0.921083+0.000965982\ttest-auc:0.887187+0.00492712\n",
      "[676]\ttrain-auc:0.921108+0.000960951\ttest-auc:0.887193+0.00494502\n",
      "[677]\ttrain-auc:0.921165+0.000966203\ttest-auc:0.887207+0.00493042\n",
      "[678]\ttrain-auc:0.921198+0.000968371\ttest-auc:0.887211+0.00491307\n",
      "[679]\ttrain-auc:0.921244+0.000969791\ttest-auc:0.887234+0.00489854\n",
      "[680]\ttrain-auc:0.921274+0.00095968\ttest-auc:0.887226+0.00489936\n",
      "[681]\ttrain-auc:0.921304+0.000951636\ttest-auc:0.887238+0.0048837\n",
      "[682]\ttrain-auc:0.921345+0.000959993\ttest-auc:0.88721+0.0048846\n",
      "[683]\ttrain-auc:0.921379+0.000959984\ttest-auc:0.887194+0.00487678\n",
      "[684]\ttrain-auc:0.921418+0.000955742\ttest-auc:0.887194+0.00487091\n",
      "[685]\ttrain-auc:0.92146+0.000945655\ttest-auc:0.887196+0.00488741\n",
      "[686]\ttrain-auc:0.921491+0.000948582\ttest-auc:0.88722+0.00488465\n",
      "[687]\ttrain-auc:0.921542+0.000956961\ttest-auc:0.887222+0.00491323\n",
      "[688]\ttrain-auc:0.921581+0.000949296\ttest-auc:0.887241+0.00491114\n",
      "[689]\ttrain-auc:0.921616+0.000939301\ttest-auc:0.88722+0.00488846\n",
      "[690]\ttrain-auc:0.921648+0.000937182\ttest-auc:0.887234+0.00488677\n",
      "[691]\ttrain-auc:0.921686+0.000933672\ttest-auc:0.887243+0.00487216\n",
      "[692]\ttrain-auc:0.921722+0.000928541\ttest-auc:0.887245+0.00487374\n",
      "[693]\ttrain-auc:0.92175+0.000931351\ttest-auc:0.887275+0.00488244\n",
      "[694]\ttrain-auc:0.92178+0.000933246\ttest-auc:0.887267+0.00489016\n",
      "[695]\ttrain-auc:0.921821+0.000934608\ttest-auc:0.88728+0.00487139\n",
      "[696]\ttrain-auc:0.921857+0.000930054\ttest-auc:0.887296+0.00488975\n",
      "[697]\ttrain-auc:0.92189+0.000923798\ttest-auc:0.887306+0.00487363\n",
      "[698]\ttrain-auc:0.92193+0.000914253\ttest-auc:0.887298+0.0048489\n",
      "[699]\ttrain-auc:0.921984+0.000914798\ttest-auc:0.887298+0.00486611\n",
      "[700]\ttrain-auc:0.922022+0.000912624\ttest-auc:0.887276+0.0048864\n",
      "[701]\ttrain-auc:0.922052+0.000906213\ttest-auc:0.88728+0.00488705\n",
      "[702]\ttrain-auc:0.922087+0.000915475\ttest-auc:0.887292+0.00487417\n",
      "[703]\ttrain-auc:0.922109+0.000916835\ttest-auc:0.887274+0.00489195\n",
      "[704]\ttrain-auc:0.922144+0.000902667\ttest-auc:0.887266+0.0048896\n",
      "[705]\ttrain-auc:0.922182+0.000885887\ttest-auc:0.887242+0.00485443\n",
      "[706]\ttrain-auc:0.922227+0.000869475\ttest-auc:0.887237+0.00481797\n",
      "[707]\ttrain-auc:0.922264+0.000876223\ttest-auc:0.887258+0.00482246\n",
      "[708]\ttrain-auc:0.922297+0.000871944\ttest-auc:0.887261+0.00481951\n",
      "[709]\ttrain-auc:0.922334+0.000868579\ttest-auc:0.887263+0.00481413\n",
      "[710]\ttrain-auc:0.922368+0.000872479\ttest-auc:0.887249+0.00480923\n",
      "[711]\ttrain-auc:0.922404+0.000865201\ttest-auc:0.88723+0.00480703\n",
      "[712]\ttrain-auc:0.922453+0.000878412\ttest-auc:0.887213+0.00479975\n",
      "[713]\ttrain-auc:0.922503+0.000878375\ttest-auc:0.887205+0.00480728\n",
      "[714]\ttrain-auc:0.922549+0.000873427\ttest-auc:0.887217+0.00482097\n",
      "[715]\ttrain-auc:0.922591+0.000870804\ttest-auc:0.887221+0.00483498\n",
      "[716]\ttrain-auc:0.922636+0.000878807\ttest-auc:0.887243+0.00480352\n",
      "[717]\ttrain-auc:0.922665+0.000879955\ttest-auc:0.887275+0.00481298\n",
      "[718]\ttrain-auc:0.922697+0.00087295\ttest-auc:0.887271+0.00483376\n",
      "[719]\ttrain-auc:0.922738+0.000867597\ttest-auc:0.887294+0.00481172\n",
      "[720]\ttrain-auc:0.922786+0.000862188\ttest-auc:0.88728+0.00479926\n",
      "[721]\ttrain-auc:0.922817+0.000869436\ttest-auc:0.887287+0.00480463\n",
      "[722]\ttrain-auc:0.922865+0.000875985\ttest-auc:0.887271+0.00481391\n",
      "[723]\ttrain-auc:0.922905+0.000862758\ttest-auc:0.887282+0.00481588\n",
      "[724]\ttrain-auc:0.922937+0.000857812\ttest-auc:0.887269+0.00480805\n",
      "[725]\ttrain-auc:0.922967+0.000857582\ttest-auc:0.887265+0.00482263\n",
      "[726]\ttrain-auc:0.922999+0.000855365\ttest-auc:0.887247+0.0048148\n",
      "[727]\ttrain-auc:0.923031+0.000863763\ttest-auc:0.887242+0.00481919\n",
      "[728]\ttrain-auc:0.923053+0.000869353\ttest-auc:0.887245+0.00480889\n",
      "[729]\ttrain-auc:0.923095+0.000870141\ttest-auc:0.887231+0.00481989\n",
      "[730]\ttrain-auc:0.923132+0.000858327\ttest-auc:0.88725+0.0048141\n",
      "[731]\ttrain-auc:0.923166+0.000853115\ttest-auc:0.887242+0.00480208\n",
      "[732]\ttrain-auc:0.923217+0.000855064\ttest-auc:0.887254+0.00479675\n",
      "[733]\ttrain-auc:0.923253+0.000864447\ttest-auc:0.88727+0.00480867\n",
      "[734]\ttrain-auc:0.923283+0.000857273\ttest-auc:0.887258+0.00480024\n",
      "[735]\ttrain-auc:0.923322+0.000850601\ttest-auc:0.887238+0.00482007\n",
      "[736]\ttrain-auc:0.923369+0.000839773\ttest-auc:0.887231+0.0048018\n",
      "[737]\ttrain-auc:0.92341+0.000828326\ttest-auc:0.887208+0.0048003\n",
      "[738]\ttrain-auc:0.92346+0.000823898\ttest-auc:0.88723+0.00477802\n",
      "[739]\ttrain-auc:0.923502+0.000835456\ttest-auc:0.887241+0.0047519\n",
      "[740]\ttrain-auc:0.923542+0.000840462\ttest-auc:0.887248+0.00474471\n",
      "[741]\ttrain-auc:0.923577+0.000847146\ttest-auc:0.887245+0.00476348\n",
      "[742]\ttrain-auc:0.92361+0.00084983\ttest-auc:0.887242+0.0047682\n",
      "[743]\ttrain-auc:0.923642+0.000850174\ttest-auc:0.887241+0.00477161\n",
      "[744]\ttrain-auc:0.923682+0.000849745\ttest-auc:0.887225+0.00476849\n",
      "[745]\ttrain-auc:0.92373+0.000842086\ttest-auc:0.887231+0.00474678\n",
      "[746]\ttrain-auc:0.923762+0.000845573\ttest-auc:0.887228+0.00474505\n",
      "[747]\ttrain-auc:0.923818+0.000851935\ttest-auc:0.887215+0.00475735\n",
      "[748]\ttrain-auc:0.923861+0.000854759\ttest-auc:0.887196+0.00476073\n",
      "[749]\ttrain-auc:0.923899+0.00085743\ttest-auc:0.887187+0.00473909\n",
      "[750]\ttrain-auc:0.923935+0.00085685\ttest-auc:0.887198+0.00473953\n",
      "[751]\ttrain-auc:0.923975+0.000856513\ttest-auc:0.887189+0.00472018\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "c:\\users\\marcp\\appdata\\local\\programs\\python\\python36\\lib\\site-packages\\sklearn\\preprocessing\\label.py:151: DeprecationWarning: The truth value of an empty array is ambiguous. Returning False, but in future this will result in an error. Use `array.size > 0` to check that an array is not empty.\n",
      "  if diff:\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Model Report\n",
      "Model best iteration : 752 with an auc score of : 0.8871886\n",
      "Accuracy : 0.8869467787114846\n",
      "AUC Score (Train): 0.9192540033979861\n",
      "[0]\ttrain-auc:0.842724+0.00509527\ttest-auc:0.835831+0.00982548\n",
      "[1]\ttrain-auc:0.857922+0.00882646\ttest-auc:0.848747+0.0148563\n",
      "[2]\ttrain-auc:0.868524+0.00185765\ttest-auc:0.861458+0.00656284\n",
      "[3]\ttrain-auc:0.871609+0.00366349\ttest-auc:0.863606+0.00547768\n",
      "[4]\ttrain-auc:0.873416+0.00365932\ttest-auc:0.86552+0.00640302\n",
      "[5]\ttrain-auc:0.876137+0.00361087\ttest-auc:0.866611+0.00477905\n",
      "[6]\ttrain-auc:0.877445+0.00251355\ttest-auc:0.868157+0.00659411\n",
      "[7]\ttrain-auc:0.878175+0.0024001\ttest-auc:0.870268+0.00556263\n",
      "[8]\ttrain-auc:0.879099+0.00233621\ttest-auc:0.871039+0.00591809\n",
      "[9]\ttrain-auc:0.879441+0.00210449\ttest-auc:0.872081+0.00633287\n",
      "[10]\ttrain-auc:0.879646+0.00208826\ttest-auc:0.87193+0.00609045\n",
      "[11]\ttrain-auc:0.879989+0.00176711\ttest-auc:0.871999+0.00604162\n",
      "[12]\ttrain-auc:0.880149+0.00185037\ttest-auc:0.871864+0.00583929\n",
      "[13]\ttrain-auc:0.880563+0.00174751\ttest-auc:0.872547+0.00568618\n",
      "[14]\ttrain-auc:0.880847+0.0016972\ttest-auc:0.872687+0.00521733\n",
      "[15]\ttrain-auc:0.881056+0.00158792\ttest-auc:0.873029+0.00469522\n",
      "[16]\ttrain-auc:0.881272+0.00141496\ttest-auc:0.873198+0.00452033\n",
      "[17]\ttrain-auc:0.881465+0.0012959\ttest-auc:0.873217+0.00438249\n",
      "[18]\ttrain-auc:0.882029+0.00101645\ttest-auc:0.87396+0.00394669\n",
      "[19]\ttrain-auc:0.882534+0.0012223\ttest-auc:0.874265+0.00412361\n",
      "[20]\ttrain-auc:0.882531+0.00129677\ttest-auc:0.8745+0.00442186\n",
      "[21]\ttrain-auc:0.882569+0.00131846\ttest-auc:0.874405+0.0041691\n",
      "[22]\ttrain-auc:0.882763+0.00132862\ttest-auc:0.874421+0.00433537\n",
      "[23]\ttrain-auc:0.882816+0.00147527\ttest-auc:0.874536+0.00429588\n",
      "[24]\ttrain-auc:0.882973+0.00167291\ttest-auc:0.874613+0.0042482\n",
      "[25]\ttrain-auc:0.883069+0.00155165\ttest-auc:0.874344+0.00425881\n",
      "[26]\ttrain-auc:0.883352+0.00152878\ttest-auc:0.874419+0.0042037\n",
      "[27]\ttrain-auc:0.883376+0.00167567\ttest-auc:0.874382+0.00431733\n",
      "[28]\ttrain-auc:0.883545+0.0016051\ttest-auc:0.874414+0.0042144\n",
      "[29]\ttrain-auc:0.88356+0.00164952\ttest-auc:0.874531+0.00414364\n",
      "[30]\ttrain-auc:0.883622+0.00160104\ttest-auc:0.874567+0.00398892\n",
      "[31]\ttrain-auc:0.883762+0.0016339\ttest-auc:0.874664+0.00403226\n",
      "[32]\ttrain-auc:0.883892+0.0016454\ttest-auc:0.87474+0.00394124\n",
      "[33]\ttrain-auc:0.884005+0.00170986\ttest-auc:0.874742+0.00400692\n",
      "[34]\ttrain-auc:0.884088+0.00167654\ttest-auc:0.874841+0.00410232\n",
      "[35]\ttrain-auc:0.884272+0.00166928\ttest-auc:0.874907+0.00409138\n",
      "[36]\ttrain-auc:0.884783+0.00114481\ttest-auc:0.875867+0.00430481\n",
      "[37]\ttrain-auc:0.884855+0.00112728\ttest-auc:0.875996+0.00425388\n",
      "[38]\ttrain-auc:0.884956+0.00114198\ttest-auc:0.876115+0.00414541\n",
      "[39]\ttrain-auc:0.885004+0.00117404\ttest-auc:0.876215+0.00414179\n",
      "[40]\ttrain-auc:0.885071+0.00107975\ttest-auc:0.876235+0.00411769\n",
      "[41]\ttrain-auc:0.88509+0.00109994\ttest-auc:0.876366+0.00392219\n",
      "[42]\ttrain-auc:0.885204+0.00104627\ttest-auc:0.876347+0.0041328\n",
      "[43]\ttrain-auc:0.885263+0.00103241\ttest-auc:0.876423+0.00404116\n",
      "[44]\ttrain-auc:0.885363+0.00101597\ttest-auc:0.876546+0.00416315\n",
      "[45]\ttrain-auc:0.885457+0.00103271\ttest-auc:0.876657+0.00429901\n",
      "[46]\ttrain-auc:0.885664+0.000876539\ttest-auc:0.876797+0.00448501\n",
      "[47]\ttrain-auc:0.885785+0.000834176\ttest-auc:0.876851+0.00460706\n",
      "[48]\ttrain-auc:0.885871+0.000878679\ttest-auc:0.876776+0.00454588\n",
      "[49]\ttrain-auc:0.886029+0.000782113\ttest-auc:0.876753+0.00442275\n",
      "[50]\ttrain-auc:0.886083+0.000760035\ttest-auc:0.876845+0.00445858\n",
      "[51]\ttrain-auc:0.886166+0.00074765\ttest-auc:0.876913+0.00444776\n",
      "[52]\ttrain-auc:0.886205+0.000774182\ttest-auc:0.876889+0.0044756\n",
      "[53]\ttrain-auc:0.886309+0.000796178\ttest-auc:0.876967+0.00452512\n",
      "[54]\ttrain-auc:0.886357+0.000794185\ttest-auc:0.876992+0.00442734\n",
      "[55]\ttrain-auc:0.886416+0.000849658\ttest-auc:0.876988+0.0044228\n",
      "[56]\ttrain-auc:0.886556+0.00088904\ttest-auc:0.876974+0.00448623\n",
      "[57]\ttrain-auc:0.886626+0.000905895\ttest-auc:0.877023+0.00458965\n",
      "[58]\ttrain-auc:0.886664+0.00085027\ttest-auc:0.877172+0.00461185\n",
      "[59]\ttrain-auc:0.886747+0.000813862\ttest-auc:0.877175+0.00451558\n",
      "[60]\ttrain-auc:0.886991+0.000932341\ttest-auc:0.877159+0.00459927\n",
      "[61]\ttrain-auc:0.887078+0.000881924\ttest-auc:0.877273+0.00467491\n",
      "[62]\ttrain-auc:0.887161+0.000911486\ttest-auc:0.877279+0.00468425\n",
      "[63]\ttrain-auc:0.887253+0.000872908\ttest-auc:0.877406+0.00473722\n",
      "[64]\ttrain-auc:0.887332+0.000927074\ttest-auc:0.877462+0.00468331\n",
      "[65]\ttrain-auc:0.887415+0.000919215\ttest-auc:0.87749+0.00480148\n",
      "[66]\ttrain-auc:0.887582+0.000877238\ttest-auc:0.877395+0.00473118\n",
      "[67]\ttrain-auc:0.888023+0.00142975\ttest-auc:0.877645+0.00445778\n",
      "[68]\ttrain-auc:0.888101+0.00138873\ttest-auc:0.877692+0.00448347\n",
      "[69]\ttrain-auc:0.88854+0.00105058\ttest-auc:0.87795+0.00484329\n",
      "[70]\ttrain-auc:0.888637+0.0011522\ttest-auc:0.877932+0.00479675\n",
      "[71]\ttrain-auc:0.888724+0.00111214\ttest-auc:0.878107+0.0049937\n",
      "[72]\ttrain-auc:0.888776+0.00111023\ttest-auc:0.878124+0.00504919\n",
      "[73]\ttrain-auc:0.888837+0.0011092\ttest-auc:0.878149+0.00508152\n",
      "[74]\ttrain-auc:0.888898+0.00106892\ttest-auc:0.878248+0.00512151\n",
      "[75]\ttrain-auc:0.888928+0.00108846\ttest-auc:0.878264+0.00514639\n",
      "[76]\ttrain-auc:0.889028+0.00116344\ttest-auc:0.878298+0.00518881\n",
      "[77]\ttrain-auc:0.88909+0.00113859\ttest-auc:0.878351+0.00513631\n",
      "[78]\ttrain-auc:0.889163+0.00114\ttest-auc:0.878388+0.00512292\n",
      "[79]\ttrain-auc:0.889231+0.00111681\ttest-auc:0.878428+0.00513578\n",
      "[80]\ttrain-auc:0.889312+0.00109826\ttest-auc:0.878574+0.0050991\n",
      "[81]\ttrain-auc:0.889757+0.00114716\ttest-auc:0.879028+0.00513808\n",
      "[82]\ttrain-auc:0.889821+0.00115789\ttest-auc:0.879147+0.00511884\n",
      "[83]\ttrain-auc:0.889847+0.00111938\ttest-auc:0.879115+0.00511382\n",
      "[84]\ttrain-auc:0.889926+0.00110594\ttest-auc:0.879438+0.00521088\n",
      "[85]\ttrain-auc:0.889984+0.00109957\ttest-auc:0.879481+0.00519755\n",
      "[86]\ttrain-auc:0.890156+0.00105358\ttest-auc:0.879464+0.00523923\n",
      "[87]\ttrain-auc:0.89016+0.00109698\ttest-auc:0.879514+0.00534635\n",
      "[88]\ttrain-auc:0.890174+0.00109243\ttest-auc:0.879531+0.00535112\n",
      "[89]\ttrain-auc:0.890515+0.000798135\ttest-auc:0.879831+0.00556991\n",
      "[90]\ttrain-auc:0.890585+0.00083258\ttest-auc:0.879922+0.00549368\n",
      "[91]\ttrain-auc:0.890635+0.000843066\ttest-auc:0.87989+0.00551594\n",
      "[92]\ttrain-auc:0.890717+0.000811868\ttest-auc:0.879842+0.00551908\n",
      "[93]\ttrain-auc:0.890763+0.000777646\ttest-auc:0.879865+0.00552106\n",
      "[94]\ttrain-auc:0.890989+0.000741052\ttest-auc:0.879844+0.00547594\n",
      "[95]\ttrain-auc:0.891047+0.000748918\ttest-auc:0.879904+0.00545433\n",
      "[96]\ttrain-auc:0.891097+0.000803827\ttest-auc:0.879955+0.00538859\n",
      "[97]\ttrain-auc:0.891148+0.000790712\ttest-auc:0.879969+0.00542429\n",
      "[98]\ttrain-auc:0.891203+0.000789932\ttest-auc:0.879968+0.00545154\n",
      "[99]\ttrain-auc:0.891283+0.000791911\ttest-auc:0.880028+0.00537449\n",
      "[100]\ttrain-auc:0.891342+0.000751868\ttest-auc:0.8801+0.00537951\n",
      "[101]\ttrain-auc:0.891453+0.000696024\ttest-auc:0.880215+0.00544088\n",
      "[102]\ttrain-auc:0.891716+0.000685977\ttest-auc:0.88064+0.00470538\n",
      "[103]\ttrain-auc:0.891762+0.000671921\ttest-auc:0.880608+0.00470499\n",
      "[104]\ttrain-auc:0.891852+0.000637532\ttest-auc:0.880714+0.0047838\n",
      "[105]\ttrain-auc:0.891923+0.000611387\ttest-auc:0.880743+0.0048073\n",
      "[106]\ttrain-auc:0.892015+0.000637073\ttest-auc:0.880737+0.00483588\n",
      "[107]\ttrain-auc:0.892077+0.000608658\ttest-auc:0.880753+0.00489603\n",
      "[108]\ttrain-auc:0.892157+0.000589801\ttest-auc:0.880768+0.00485763\n",
      "[109]\ttrain-auc:0.892231+0.000574223\ttest-auc:0.880769+0.00486197\n",
      "[110]\ttrain-auc:0.892325+0.000580281\ttest-auc:0.880814+0.00488259\n",
      "[111]\ttrain-auc:0.892406+0.000586855\ttest-auc:0.880884+0.00485044\n",
      "[112]\ttrain-auc:0.892433+0.000589369\ttest-auc:0.880946+0.00483503\n",
      "[113]\ttrain-auc:0.892496+0.000588526\ttest-auc:0.880979+0.00485999\n",
      "[114]\ttrain-auc:0.89257+0.000591801\ttest-auc:0.881028+0.00487005\n",
      "[115]\ttrain-auc:0.892646+0.000558495\ttest-auc:0.880963+0.00480245\n",
      "[116]\ttrain-auc:0.892715+0.000556095\ttest-auc:0.880985+0.0047718\n",
      "[117]\ttrain-auc:0.892752+0.000568266\ttest-auc:0.880991+0.0048195\n",
      "[118]\ttrain-auc:0.892808+0.000562485\ttest-auc:0.880988+0.00482084\n",
      "[119]\ttrain-auc:0.892882+0.000523318\ttest-auc:0.88097+0.00479373\n",
      "[120]\ttrain-auc:0.89298+0.000520712\ttest-auc:0.880986+0.00481044\n",
      "[121]\ttrain-auc:0.893051+0.000511783\ttest-auc:0.880996+0.00484325\n",
      "[122]\ttrain-auc:0.89312+0.000510856\ttest-auc:0.881135+0.00482773\n",
      "[123]\ttrain-auc:0.893186+0.000521116\ttest-auc:0.881213+0.00485645\n",
      "[124]\ttrain-auc:0.893253+0.000541117\ttest-auc:0.881218+0.00484513\n",
      "[125]\ttrain-auc:0.89328+0.000540214\ttest-auc:0.881247+0.00482582\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[126]\ttrain-auc:0.8934+0.000657315\ttest-auc:0.88122+0.00483738\n",
      "[127]\ttrain-auc:0.893474+0.000660359\ttest-auc:0.881302+0.00487929\n",
      "[128]\ttrain-auc:0.893518+0.000643736\ttest-auc:0.881308+0.00487083\n",
      "[129]\ttrain-auc:0.893586+0.000629398\ttest-auc:0.881335+0.0048841\n",
      "[130]\ttrain-auc:0.893619+0.000601145\ttest-auc:0.881381+0.00496069\n",
      "[131]\ttrain-auc:0.893672+0.000558694\ttest-auc:0.881359+0.00500946\n",
      "[132]\ttrain-auc:0.893712+0.000558562\ttest-auc:0.881407+0.00509756\n",
      "[133]\ttrain-auc:0.893765+0.000546263\ttest-auc:0.881348+0.00507155\n",
      "[134]\ttrain-auc:0.893962+0.000655633\ttest-auc:0.881469+0.00487147\n",
      "[135]\ttrain-auc:0.893993+0.000678591\ttest-auc:0.881516+0.00488131\n",
      "[136]\ttrain-auc:0.894063+0.000699178\ttest-auc:0.881525+0.00486353\n",
      "[137]\ttrain-auc:0.894143+0.000694959\ttest-auc:0.881545+0.00488122\n",
      "[138]\ttrain-auc:0.894205+0.000727879\ttest-auc:0.881571+0.00486212\n",
      "[139]\ttrain-auc:0.894257+0.00074156\ttest-auc:0.881572+0.00492594\n",
      "[140]\ttrain-auc:0.894322+0.000758698\ttest-auc:0.88154+0.00508209\n",
      "[141]\ttrain-auc:0.894435+0.000812929\ttest-auc:0.881838+0.00515721\n",
      "[142]\ttrain-auc:0.894488+0.000862664\ttest-auc:0.881898+0.00516126\n",
      "[143]\ttrain-auc:0.89455+0.000854106\ttest-auc:0.88191+0.00519772\n",
      "[144]\ttrain-auc:0.894629+0.000905255\ttest-auc:0.881917+0.00518703\n",
      "[145]\ttrain-auc:0.894677+0.000936644\ttest-auc:0.881962+0.00513252\n",
      "[146]\ttrain-auc:0.894878+0.000966294\ttest-auc:0.882249+0.00473821\n",
      "[147]\ttrain-auc:0.894922+0.000971139\ttest-auc:0.882209+0.00477552\n",
      "[148]\ttrain-auc:0.894981+0.00100435\ttest-auc:0.882307+0.0048002\n",
      "[149]\ttrain-auc:0.895025+0.000974863\ttest-auc:0.882392+0.00470042\n",
      "[150]\ttrain-auc:0.895081+0.000964113\ttest-auc:0.882391+0.00470237\n",
      "[151]\ttrain-auc:0.895156+0.000980316\ttest-auc:0.882428+0.004705\n",
      "[152]\ttrain-auc:0.895177+0.000982759\ttest-auc:0.882447+0.00469237\n",
      "[153]\ttrain-auc:0.895256+0.00101226\ttest-auc:0.882493+0.00478867\n",
      "[154]\ttrain-auc:0.895331+0.000984395\ttest-auc:0.882507+0.00484916\n",
      "[155]\ttrain-auc:0.895364+0.000964363\ttest-auc:0.882535+0.00485466\n",
      "[156]\ttrain-auc:0.895411+0.000975648\ttest-auc:0.882582+0.00485299\n",
      "[157]\ttrain-auc:0.895463+0.000976596\ttest-auc:0.88272+0.00461632\n",
      "[158]\ttrain-auc:0.895508+0.000984666\ttest-auc:0.88278+0.00461354\n",
      "[159]\ttrain-auc:0.895566+0.00098278\ttest-auc:0.882768+0.00457827\n",
      "[160]\ttrain-auc:0.895661+0.00101404\ttest-auc:0.882776+0.00458023\n",
      "[161]\ttrain-auc:0.895747+0.000981597\ttest-auc:0.882823+0.00465392\n",
      "[162]\ttrain-auc:0.8958+0.000981687\ttest-auc:0.882842+0.00464278\n",
      "[163]\ttrain-auc:0.895846+0.000993349\ttest-auc:0.882846+0.00478748\n",
      "[164]\ttrain-auc:0.895902+0.000993925\ttest-auc:0.882891+0.00475221\n",
      "[165]\ttrain-auc:0.895985+0.0009847\ttest-auc:0.882921+0.0046933\n",
      "[166]\ttrain-auc:0.896054+0.000983496\ttest-auc:0.882962+0.00472401\n",
      "[167]\ttrain-auc:0.896105+0.000988591\ttest-auc:0.882999+0.00471104\n",
      "[168]\ttrain-auc:0.896157+0.00099472\ttest-auc:0.883009+0.00470795\n",
      "[169]\ttrain-auc:0.896193+0.000983343\ttest-auc:0.883012+0.00474021\n",
      "[170]\ttrain-auc:0.896243+0.000985984\ttest-auc:0.882967+0.00484856\n",
      "[171]\ttrain-auc:0.896314+0.000958226\ttest-auc:0.88295+0.00485095\n",
      "[172]\ttrain-auc:0.896351+0.000959508\ttest-auc:0.882965+0.00487808\n",
      "[173]\ttrain-auc:0.896409+0.000963026\ttest-auc:0.883008+0.00486304\n",
      "[174]\ttrain-auc:0.896505+0.000899553\ttest-auc:0.883047+0.00491692\n",
      "[175]\ttrain-auc:0.896541+0.000903086\ttest-auc:0.88307+0.00491321\n",
      "[176]\ttrain-auc:0.896622+0.000913587\ttest-auc:0.8832+0.00473442\n",
      "[177]\ttrain-auc:0.896691+0.000878835\ttest-auc:0.88328+0.00466328\n",
      "[178]\ttrain-auc:0.896759+0.000886821\ttest-auc:0.883278+0.0046719\n",
      "[179]\ttrain-auc:0.896813+0.000883005\ttest-auc:0.883288+0.0046241\n",
      "[180]\ttrain-auc:0.896869+0.000895348\ttest-auc:0.883278+0.00462254\n",
      "[181]\ttrain-auc:0.896942+0.00089436\ttest-auc:0.883312+0.00463931\n",
      "[182]\ttrain-auc:0.897008+0.000915761\ttest-auc:0.883362+0.00466173\n",
      "[183]\ttrain-auc:0.897064+0.000918052\ttest-auc:0.883405+0.00469924\n",
      "[184]\ttrain-auc:0.897134+0.000893104\ttest-auc:0.883398+0.00473987\n",
      "[185]\ttrain-auc:0.897197+0.000897759\ttest-auc:0.88342+0.00476611\n",
      "[186]\ttrain-auc:0.89729+0.000797428\ttest-auc:0.883524+0.00485432\n",
      "[187]\ttrain-auc:0.897316+0.000808157\ttest-auc:0.883603+0.00482043\n",
      "[188]\ttrain-auc:0.897416+0.000845844\ttest-auc:0.883579+0.00482285\n",
      "[189]\ttrain-auc:0.897477+0.000878555\ttest-auc:0.883658+0.00477918\n",
      "[190]\ttrain-auc:0.897515+0.00087218\ttest-auc:0.883699+0.0047496\n",
      "[191]\ttrain-auc:0.897585+0.000873472\ttest-auc:0.883712+0.0048147\n",
      "[192]\ttrain-auc:0.897654+0.000870387\ttest-auc:0.88369+0.00486658\n",
      "[193]\ttrain-auc:0.897699+0.000845802\ttest-auc:0.883687+0.00484515\n",
      "[194]\ttrain-auc:0.897763+0.000909356\ttest-auc:0.883701+0.004889\n",
      "[195]\ttrain-auc:0.897817+0.00092385\ttest-auc:0.883676+0.00488217\n",
      "[196]\ttrain-auc:0.897884+0.000892041\ttest-auc:0.883778+0.00480979\n",
      "[197]\ttrain-auc:0.897939+0.000897803\ttest-auc:0.883814+0.00483961\n",
      "[198]\ttrain-auc:0.898023+0.000909262\ttest-auc:0.883843+0.00484334\n",
      "[199]\ttrain-auc:0.898142+0.000895903\ttest-auc:0.883863+0.00484728\n",
      "[200]\ttrain-auc:0.898184+0.000882203\ttest-auc:0.88391+0.00483357\n",
      "[201]\ttrain-auc:0.898212+0.000881597\ttest-auc:0.883923+0.00487644\n",
      "[202]\ttrain-auc:0.898237+0.000877595\ttest-auc:0.883954+0.00491618\n",
      "[203]\ttrain-auc:0.89829+0.000885377\ttest-auc:0.883978+0.00492985\n",
      "[204]\ttrain-auc:0.898338+0.000904661\ttest-auc:0.884025+0.00494108\n",
      "[205]\ttrain-auc:0.898385+0.000891697\ttest-auc:0.884033+0.0049494\n",
      "[206]\ttrain-auc:0.898432+0.000909467\ttest-auc:0.884044+0.00495013\n",
      "[207]\ttrain-auc:0.89848+0.000904332\ttest-auc:0.88409+0.00491186\n",
      "[208]\ttrain-auc:0.898549+0.000850381\ttest-auc:0.88409+0.00491018\n",
      "[209]\ttrain-auc:0.898568+0.000875996\ttest-auc:0.884107+0.00492609\n",
      "[210]\ttrain-auc:0.898639+0.000847363\ttest-auc:0.884142+0.00490511\n",
      "[211]\ttrain-auc:0.898681+0.000839336\ttest-auc:0.884151+0.00490766\n",
      "[212]\ttrain-auc:0.898747+0.000795436\ttest-auc:0.884113+0.0049073\n",
      "[213]\ttrain-auc:0.898796+0.000766348\ttest-auc:0.884172+0.00492566\n",
      "[214]\ttrain-auc:0.898869+0.000766587\ttest-auc:0.884222+0.00490921\n",
      "[215]\ttrain-auc:0.898953+0.000780269\ttest-auc:0.884282+0.00489585\n",
      "[216]\ttrain-auc:0.898994+0.00078874\ttest-auc:0.884298+0.00486618\n",
      "[217]\ttrain-auc:0.899036+0.000775101\ttest-auc:0.884319+0.00485726\n",
      "[218]\ttrain-auc:0.899105+0.000758105\ttest-auc:0.884307+0.00485164\n",
      "[219]\ttrain-auc:0.899183+0.000764456\ttest-auc:0.884291+0.00485807\n",
      "[220]\ttrain-auc:0.899224+0.00076303\ttest-auc:0.884332+0.00481106\n",
      "[221]\ttrain-auc:0.899308+0.000741878\ttest-auc:0.884312+0.00479418\n",
      "[222]\ttrain-auc:0.899391+0.000754049\ttest-auc:0.884294+0.00476569\n",
      "[223]\ttrain-auc:0.899436+0.000749245\ttest-auc:0.884297+0.00480663\n",
      "[224]\ttrain-auc:0.899472+0.000731297\ttest-auc:0.884315+0.00479493\n",
      "[225]\ttrain-auc:0.899541+0.000706248\ttest-auc:0.884319+0.00477788\n",
      "[226]\ttrain-auc:0.899592+0.000713924\ttest-auc:0.884427+0.00466769\n",
      "[227]\ttrain-auc:0.899635+0.000729613\ttest-auc:0.884404+0.0047154\n",
      "[228]\ttrain-auc:0.89969+0.000725458\ttest-auc:0.884439+0.00471056\n",
      "[229]\ttrain-auc:0.899733+0.000704542\ttest-auc:0.88444+0.00470727\n",
      "[230]\ttrain-auc:0.899775+0.000687409\ttest-auc:0.884406+0.00472024\n",
      "[231]\ttrain-auc:0.899831+0.000673731\ttest-auc:0.884454+0.00472577\n",
      "[232]\ttrain-auc:0.899884+0.000658081\ttest-auc:0.884527+0.00468637\n",
      "[233]\ttrain-auc:0.899925+0.000648466\ttest-auc:0.884557+0.00469145\n",
      "[234]\ttrain-auc:0.899981+0.000650418\ttest-auc:0.884588+0.00470803\n",
      "[235]\ttrain-auc:0.900026+0.000647841\ttest-auc:0.884587+0.00470583\n",
      "[236]\ttrain-auc:0.90007+0.000638168\ttest-auc:0.884629+0.00471397\n",
      "[237]\ttrain-auc:0.900143+0.000634028\ttest-auc:0.884634+0.00469603\n",
      "[238]\ttrain-auc:0.900189+0.000627483\ttest-auc:0.884672+0.00470685\n",
      "[239]\ttrain-auc:0.900222+0.000634905\ttest-auc:0.88469+0.00471182\n",
      "[240]\ttrain-auc:0.900303+0.000589694\ttest-auc:0.884716+0.00465009\n",
      "[241]\ttrain-auc:0.900334+0.000589535\ttest-auc:0.884765+0.00465452\n",
      "[242]\ttrain-auc:0.900374+0.000583861\ttest-auc:0.884773+0.00466521\n",
      "[243]\ttrain-auc:0.900434+0.000591916\ttest-auc:0.884793+0.00471709\n",
      "[244]\ttrain-auc:0.90049+0.000590683\ttest-auc:0.884798+0.00473136\n",
      "[245]\ttrain-auc:0.900542+0.000577691\ttest-auc:0.884821+0.00475462\n",
      "[246]\ttrain-auc:0.900579+0.000585283\ttest-auc:0.884827+0.0047497\n",
      "[247]\ttrain-auc:0.900628+0.000591472\ttest-auc:0.884854+0.00474986\n",
      "[248]\ttrain-auc:0.900702+0.000609631\ttest-auc:0.884886+0.00477678\n",
      "[249]\ttrain-auc:0.90077+0.000620477\ttest-auc:0.88489+0.00474708\n",
      "[250]\ttrain-auc:0.900797+0.000609289\ttest-auc:0.884929+0.00474866\n",
      "[251]\ttrain-auc:0.900849+0.000597606\ttest-auc:0.884941+0.00476079\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[252]\ttrain-auc:0.90092+0.000636536\ttest-auc:0.884941+0.00477286\n",
      "[253]\ttrain-auc:0.900964+0.000647442\ttest-auc:0.884962+0.00476956\n",
      "[254]\ttrain-auc:0.901024+0.000641883\ttest-auc:0.884958+0.0046711\n",
      "[255]\ttrain-auc:0.901067+0.000630763\ttest-auc:0.884999+0.00467622\n",
      "[256]\ttrain-auc:0.901139+0.000642571\ttest-auc:0.884998+0.00472402\n",
      "[257]\ttrain-auc:0.901184+0.000649245\ttest-auc:0.885014+0.00472945\n",
      "[258]\ttrain-auc:0.901223+0.000626694\ttest-auc:0.885027+0.00468544\n",
      "[259]\ttrain-auc:0.901279+0.00062786\ttest-auc:0.885043+0.00468469\n",
      "[260]\ttrain-auc:0.901336+0.000605881\ttest-auc:0.885095+0.00475109\n",
      "[261]\ttrain-auc:0.901381+0.000590158\ttest-auc:0.885116+0.00477178\n",
      "[262]\ttrain-auc:0.901428+0.000585659\ttest-auc:0.885117+0.00479927\n",
      "[263]\ttrain-auc:0.901496+0.00059499\ttest-auc:0.88514+0.00483203\n",
      "[264]\ttrain-auc:0.901551+0.000605622\ttest-auc:0.885166+0.00488344\n",
      "[265]\ttrain-auc:0.901588+0.000609584\ttest-auc:0.885181+0.00487392\n",
      "[266]\ttrain-auc:0.901641+0.000605957\ttest-auc:0.885202+0.00479373\n",
      "[267]\ttrain-auc:0.901691+0.000612951\ttest-auc:0.88521+0.00482963\n",
      "[268]\ttrain-auc:0.901739+0.000613122\ttest-auc:0.885229+0.00484558\n",
      "[269]\ttrain-auc:0.901785+0.000602835\ttest-auc:0.885254+0.00483798\n",
      "[270]\ttrain-auc:0.90184+0.000606513\ttest-auc:0.885287+0.00483283\n",
      "[271]\ttrain-auc:0.901876+0.000613541\ttest-auc:0.885293+0.00483408\n",
      "[272]\ttrain-auc:0.901919+0.000599209\ttest-auc:0.885303+0.00484243\n",
      "[273]\ttrain-auc:0.901987+0.000589029\ttest-auc:0.885293+0.00484529\n",
      "[274]\ttrain-auc:0.902058+0.000578212\ttest-auc:0.885302+0.00479963\n",
      "[275]\ttrain-auc:0.902103+0.000580093\ttest-auc:0.885308+0.00480607\n",
      "[276]\ttrain-auc:0.902159+0.000600047\ttest-auc:0.885342+0.00474943\n",
      "[277]\ttrain-auc:0.902208+0.00060937\ttest-auc:0.885365+0.00476869\n",
      "[278]\ttrain-auc:0.902246+0.000614857\ttest-auc:0.88544+0.00478359\n",
      "[279]\ttrain-auc:0.902291+0.000616075\ttest-auc:0.885469+0.00477856\n",
      "[280]\ttrain-auc:0.902334+0.000606615\ttest-auc:0.885491+0.00476135\n",
      "[281]\ttrain-auc:0.902401+0.000586956\ttest-auc:0.885484+0.00476417\n",
      "[282]\ttrain-auc:0.902447+0.000580781\ttest-auc:0.885508+0.00475341\n",
      "[283]\ttrain-auc:0.90251+0.000587758\ttest-auc:0.88554+0.00469117\n",
      "[284]\ttrain-auc:0.902567+0.000586273\ttest-auc:0.885539+0.00466245\n",
      "[285]\ttrain-auc:0.902618+0.000584493\ttest-auc:0.885521+0.00467461\n",
      "[286]\ttrain-auc:0.90266+0.000587827\ttest-auc:0.885563+0.00468225\n",
      "[287]\ttrain-auc:0.902713+0.000602218\ttest-auc:0.885573+0.00469616\n",
      "[288]\ttrain-auc:0.902759+0.000588635\ttest-auc:0.885566+0.00470744\n",
      "[289]\ttrain-auc:0.902791+0.000581212\ttest-auc:0.885569+0.00472336\n",
      "[290]\ttrain-auc:0.902826+0.000566096\ttest-auc:0.885568+0.00469889\n",
      "[291]\ttrain-auc:0.902876+0.000565939\ttest-auc:0.885593+0.00467979\n",
      "[292]\ttrain-auc:0.902926+0.000569042\ttest-auc:0.885608+0.00467667\n",
      "[293]\ttrain-auc:0.902959+0.000550565\ttest-auc:0.885615+0.00470722\n",
      "[294]\ttrain-auc:0.902998+0.000550413\ttest-auc:0.885647+0.00472045\n",
      "[295]\ttrain-auc:0.903069+0.000555891\ttest-auc:0.885664+0.00475429\n",
      "[296]\ttrain-auc:0.903113+0.000561382\ttest-auc:0.885664+0.00473173\n",
      "[297]\ttrain-auc:0.903176+0.000568823\ttest-auc:0.885693+0.00471939\n",
      "[298]\ttrain-auc:0.903222+0.000585895\ttest-auc:0.885688+0.00474229\n",
      "[299]\ttrain-auc:0.903263+0.000587683\ttest-auc:0.885737+0.00471083\n",
      "[300]\ttrain-auc:0.903316+0.000578564\ttest-auc:0.885747+0.0046965\n",
      "[301]\ttrain-auc:0.903381+0.000590629\ttest-auc:0.885747+0.00470176\n",
      "[302]\ttrain-auc:0.903421+0.000589448\ttest-auc:0.885745+0.00469589\n",
      "[303]\ttrain-auc:0.903459+0.000603889\ttest-auc:0.885735+0.00467156\n",
      "[304]\ttrain-auc:0.903514+0.000608467\ttest-auc:0.885772+0.00464026\n",
      "[305]\ttrain-auc:0.903556+0.00062026\ttest-auc:0.88581+0.00468824\n",
      "[306]\ttrain-auc:0.903617+0.000619266\ttest-auc:0.885825+0.00467846\n",
      "[307]\ttrain-auc:0.903657+0.000625022\ttest-auc:0.885828+0.00467189\n",
      "[308]\ttrain-auc:0.9037+0.000621262\ttest-auc:0.885856+0.00465068\n",
      "[309]\ttrain-auc:0.903742+0.000633981\ttest-auc:0.885898+0.00464587\n",
      "[310]\ttrain-auc:0.903807+0.000632237\ttest-auc:0.885928+0.0046302\n",
      "[311]\ttrain-auc:0.903856+0.000620655\ttest-auc:0.885985+0.00457131\n",
      "[312]\ttrain-auc:0.903911+0.000632938\ttest-auc:0.886004+0.00456442\n",
      "[313]\ttrain-auc:0.903962+0.000649658\ttest-auc:0.886023+0.0045382\n",
      "[314]\ttrain-auc:0.904001+0.00065221\ttest-auc:0.886034+0.00454192\n",
      "[315]\ttrain-auc:0.904067+0.000659484\ttest-auc:0.886066+0.00450313\n",
      "[316]\ttrain-auc:0.904103+0.000656047\ttest-auc:0.886038+0.00447506\n",
      "[317]\ttrain-auc:0.904143+0.000646996\ttest-auc:0.886026+0.00451385\n",
      "[318]\ttrain-auc:0.904184+0.000643349\ttest-auc:0.886042+0.00454366\n",
      "[319]\ttrain-auc:0.904242+0.000624053\ttest-auc:0.886075+0.00453382\n",
      "[320]\ttrain-auc:0.904277+0.000617633\ttest-auc:0.886066+0.00451218\n",
      "[321]\ttrain-auc:0.904327+0.00062187\ttest-auc:0.88609+0.00452951\n",
      "[322]\ttrain-auc:0.904387+0.000636519\ttest-auc:0.8861+0.00452924\n",
      "[323]\ttrain-auc:0.904425+0.000634489\ttest-auc:0.886103+0.00450152\n",
      "[324]\ttrain-auc:0.904484+0.000643855\ttest-auc:0.886099+0.00449785\n",
      "[325]\ttrain-auc:0.904527+0.000655682\ttest-auc:0.886122+0.00453414\n",
      "[326]\ttrain-auc:0.904564+0.000647613\ttest-auc:0.886126+0.00450161\n",
      "[327]\ttrain-auc:0.904624+0.000656395\ttest-auc:0.886119+0.00453322\n",
      "[328]\ttrain-auc:0.904673+0.000658616\ttest-auc:0.886149+0.00448664\n",
      "[329]\ttrain-auc:0.904731+0.000656579\ttest-auc:0.886158+0.00447892\n",
      "[330]\ttrain-auc:0.90477+0.000653514\ttest-auc:0.886186+0.00448111\n",
      "[331]\ttrain-auc:0.904812+0.000656075\ttest-auc:0.88617+0.00450819\n",
      "[332]\ttrain-auc:0.90487+0.000665359\ttest-auc:0.886162+0.00450616\n",
      "[333]\ttrain-auc:0.904919+0.000667276\ttest-auc:0.886198+0.00446772\n",
      "[334]\ttrain-auc:0.904974+0.000647744\ttest-auc:0.886248+0.00444766\n",
      "[335]\ttrain-auc:0.905014+0.000655859\ttest-auc:0.886263+0.00443597\n",
      "[336]\ttrain-auc:0.905066+0.000669512\ttest-auc:0.886262+0.00443186\n",
      "[337]\ttrain-auc:0.905118+0.000679526\ttest-auc:0.886273+0.00443058\n",
      "[338]\ttrain-auc:0.90516+0.000693223\ttest-auc:0.886293+0.00443606\n",
      "[339]\ttrain-auc:0.905215+0.000687383\ttest-auc:0.886357+0.00446018\n",
      "[340]\ttrain-auc:0.905272+0.000683073\ttest-auc:0.886344+0.00442623\n",
      "[341]\ttrain-auc:0.905327+0.000677436\ttest-auc:0.886364+0.00437085\n",
      "[342]\ttrain-auc:0.905381+0.000674299\ttest-auc:0.886374+0.00435961\n",
      "[343]\ttrain-auc:0.905427+0.00068348\ttest-auc:0.886392+0.00431233\n",
      "[344]\ttrain-auc:0.905481+0.00068666\ttest-auc:0.886406+0.00427343\n",
      "[345]\ttrain-auc:0.90555+0.000690692\ttest-auc:0.886427+0.00427832\n",
      "[346]\ttrain-auc:0.905587+0.000702492\ttest-auc:0.886434+0.00427377\n",
      "[347]\ttrain-auc:0.905643+0.000714089\ttest-auc:0.886464+0.00426745\n",
      "[348]\ttrain-auc:0.905697+0.000690727\ttest-auc:0.886502+0.00428809\n",
      "[349]\ttrain-auc:0.905737+0.0006955\ttest-auc:0.886515+0.00427675\n",
      "[350]\ttrain-auc:0.905779+0.000676725\ttest-auc:0.886542+0.00430517\n",
      "[351]\ttrain-auc:0.905824+0.000662129\ttest-auc:0.886589+0.00429234\n",
      "[352]\ttrain-auc:0.90587+0.000671349\ttest-auc:0.886603+0.00429445\n",
      "[353]\ttrain-auc:0.905935+0.000678885\ttest-auc:0.886628+0.00426505\n",
      "[354]\ttrain-auc:0.905983+0.000680555\ttest-auc:0.886644+0.00430256\n",
      "[355]\ttrain-auc:0.906023+0.000685484\ttest-auc:0.886657+0.00426403\n",
      "[356]\ttrain-auc:0.906072+0.000689698\ttest-auc:0.886649+0.0043032\n",
      "[357]\ttrain-auc:0.906112+0.000681718\ttest-auc:0.886653+0.00430701\n",
      "[358]\ttrain-auc:0.906157+0.000677729\ttest-auc:0.886666+0.00430627\n",
      "[359]\ttrain-auc:0.906204+0.000677758\ttest-auc:0.88669+0.00429975\n",
      "[360]\ttrain-auc:0.906254+0.000666656\ttest-auc:0.886712+0.00427133\n",
      "[361]\ttrain-auc:0.906297+0.000671656\ttest-auc:0.886707+0.00428164\n",
      "[362]\ttrain-auc:0.906336+0.000673903\ttest-auc:0.886707+0.00428569\n",
      "[363]\ttrain-auc:0.906376+0.000690387\ttest-auc:0.886717+0.00427292\n",
      "[364]\ttrain-auc:0.906425+0.000705562\ttest-auc:0.88673+0.00426115\n",
      "[365]\ttrain-auc:0.906466+0.000722741\ttest-auc:0.886771+0.00425078\n",
      "[366]\ttrain-auc:0.906539+0.000706094\ttest-auc:0.886779+0.0042223\n",
      "[367]\ttrain-auc:0.906577+0.00069613\ttest-auc:0.886785+0.00421565\n",
      "[368]\ttrain-auc:0.906621+0.000683763\ttest-auc:0.886796+0.00422042\n",
      "[369]\ttrain-auc:0.906673+0.000682144\ttest-auc:0.8868+0.00421201\n",
      "[370]\ttrain-auc:0.906719+0.000678137\ttest-auc:0.886826+0.00419764\n",
      "[371]\ttrain-auc:0.906764+0.000667556\ttest-auc:0.886868+0.00419181\n",
      "[372]\ttrain-auc:0.906805+0.00065121\ttest-auc:0.886886+0.00416878\n",
      "[373]\ttrain-auc:0.906847+0.00064015\ttest-auc:0.88694+0.00417598\n",
      "[374]\ttrain-auc:0.906888+0.000642197\ttest-auc:0.886935+0.00417907\n",
      "[375]\ttrain-auc:0.906921+0.000638515\ttest-auc:0.886957+0.00416911\n",
      "[376]\ttrain-auc:0.906969+0.000639084\ttest-auc:0.88696+0.00415735\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[377]\ttrain-auc:0.907022+0.000634542\ttest-auc:0.887+0.00413196\n",
      "[378]\ttrain-auc:0.907064+0.000623277\ttest-auc:0.887012+0.00410876\n",
      "[379]\ttrain-auc:0.907119+0.000620684\ttest-auc:0.886984+0.0041268\n",
      "[380]\ttrain-auc:0.907164+0.000633173\ttest-auc:0.886993+0.00413963\n",
      "[381]\ttrain-auc:0.907209+0.000618653\ttest-auc:0.887022+0.00412384\n",
      "[382]\ttrain-auc:0.907266+0.000603249\ttest-auc:0.887012+0.00412555\n",
      "[383]\ttrain-auc:0.907332+0.000602358\ttest-auc:0.88703+0.00415044\n",
      "[384]\ttrain-auc:0.907369+0.000604673\ttest-auc:0.887056+0.00416028\n",
      "[385]\ttrain-auc:0.907428+0.000597103\ttest-auc:0.887086+0.00412409\n",
      "[386]\ttrain-auc:0.907472+0.000580588\ttest-auc:0.887065+0.00411287\n",
      "[387]\ttrain-auc:0.907513+0.000576626\ttest-auc:0.887082+0.00414031\n",
      "[388]\ttrain-auc:0.907559+0.000568265\ttest-auc:0.887086+0.00413404\n",
      "[389]\ttrain-auc:0.907598+0.000558907\ttest-auc:0.887101+0.00412247\n",
      "[390]\ttrain-auc:0.907652+0.000560634\ttest-auc:0.887118+0.00413627\n",
      "[391]\ttrain-auc:0.907687+0.000562319\ttest-auc:0.887109+0.00411018\n",
      "[392]\ttrain-auc:0.907739+0.00055077\ttest-auc:0.887141+0.00412779\n",
      "[393]\ttrain-auc:0.907784+0.00055504\ttest-auc:0.887153+0.00411864\n",
      "[394]\ttrain-auc:0.907822+0.000547849\ttest-auc:0.887154+0.00409033\n",
      "[395]\ttrain-auc:0.907864+0.000539633\ttest-auc:0.887167+0.00407638\n",
      "[396]\ttrain-auc:0.907899+0.000547656\ttest-auc:0.887177+0.00406536\n",
      "[397]\ttrain-auc:0.907957+0.000540373\ttest-auc:0.887196+0.00406848\n",
      "[398]\ttrain-auc:0.908008+0.000545769\ttest-auc:0.887201+0.00406667\n",
      "[399]\ttrain-auc:0.908048+0.000557362\ttest-auc:0.88723+0.00405144\n",
      "[400]\ttrain-auc:0.908088+0.000554296\ttest-auc:0.887227+0.00407202\n",
      "[401]\ttrain-auc:0.908136+0.000546292\ttest-auc:0.887239+0.00409925\n",
      "[402]\ttrain-auc:0.908181+0.000546118\ttest-auc:0.887236+0.00408542\n",
      "[403]\ttrain-auc:0.908226+0.000536526\ttest-auc:0.887248+0.00407731\n",
      "[404]\ttrain-auc:0.908261+0.000542778\ttest-auc:0.887273+0.00405324\n",
      "[405]\ttrain-auc:0.908303+0.000550588\ttest-auc:0.887273+0.00407916\n",
      "[406]\ttrain-auc:0.908356+0.00055917\ttest-auc:0.887291+0.0040767\n",
      "[407]\ttrain-auc:0.908404+0.000552885\ttest-auc:0.887308+0.00402793\n",
      "[408]\ttrain-auc:0.908452+0.000544243\ttest-auc:0.887318+0.00400427\n",
      "[409]\ttrain-auc:0.908493+0.000546307\ttest-auc:0.887332+0.00400207\n",
      "[410]\ttrain-auc:0.908529+0.000547477\ttest-auc:0.887356+0.00399264\n",
      "[411]\ttrain-auc:0.908577+0.000543654\ttest-auc:0.887363+0.00403537\n",
      "[412]\ttrain-auc:0.908614+0.000549587\ttest-auc:0.887364+0.00404125\n",
      "[413]\ttrain-auc:0.908675+0.000559891\ttest-auc:0.88738+0.00407494\n",
      "[414]\ttrain-auc:0.908719+0.000565916\ttest-auc:0.887383+0.00405482\n",
      "[415]\ttrain-auc:0.908764+0.000556647\ttest-auc:0.887394+0.00402136\n",
      "[416]\ttrain-auc:0.908807+0.000563384\ttest-auc:0.88742+0.00402373\n",
      "[417]\ttrain-auc:0.908851+0.000567165\ttest-auc:0.887428+0.00402049\n",
      "[418]\ttrain-auc:0.908885+0.000568749\ttest-auc:0.887435+0.00401801\n",
      "[419]\ttrain-auc:0.90894+0.000573364\ttest-auc:0.887415+0.00402402\n",
      "[420]\ttrain-auc:0.908972+0.000574978\ttest-auc:0.887448+0.00404217\n",
      "[421]\ttrain-auc:0.909022+0.000567364\ttest-auc:0.887465+0.00406052\n",
      "[422]\ttrain-auc:0.909061+0.00056073\ttest-auc:0.88748+0.00404968\n",
      "[423]\ttrain-auc:0.909121+0.000552247\ttest-auc:0.887506+0.00403475\n",
      "[424]\ttrain-auc:0.909147+0.000551177\ttest-auc:0.887511+0.00404941\n",
      "[425]\ttrain-auc:0.909184+0.000559125\ttest-auc:0.8875+0.00405866\n",
      "[426]\ttrain-auc:0.909227+0.000554056\ttest-auc:0.887523+0.00404586\n",
      "[427]\ttrain-auc:0.909284+0.000539835\ttest-auc:0.887528+0.00405544\n",
      "[428]\ttrain-auc:0.909323+0.000548525\ttest-auc:0.887558+0.00404117\n",
      "[429]\ttrain-auc:0.90936+0.000558143\ttest-auc:0.887552+0.00404013\n",
      "[430]\ttrain-auc:0.909391+0.00056767\ttest-auc:0.88757+0.00402657\n",
      "[431]\ttrain-auc:0.909446+0.000561105\ttest-auc:0.887591+0.00399325\n",
      "[432]\ttrain-auc:0.909488+0.00056531\ttest-auc:0.887604+0.00399482\n",
      "[433]\ttrain-auc:0.909533+0.00055816\ttest-auc:0.887604+0.00401873\n",
      "[434]\ttrain-auc:0.909588+0.000564859\ttest-auc:0.887628+0.00400807\n",
      "[435]\ttrain-auc:0.909635+0.000577402\ttest-auc:0.887669+0.00403389\n",
      "[436]\ttrain-auc:0.909683+0.000575205\ttest-auc:0.887679+0.00403699\n",
      "[437]\ttrain-auc:0.909726+0.000568514\ttest-auc:0.88767+0.00401026\n",
      "[438]\ttrain-auc:0.909769+0.000563538\ttest-auc:0.88767+0.00399196\n",
      "[439]\ttrain-auc:0.909799+0.000566128\ttest-auc:0.887689+0.00401286\n",
      "[440]\ttrain-auc:0.90984+0.000551542\ttest-auc:0.887686+0.00400698\n",
      "[441]\ttrain-auc:0.909874+0.000557813\ttest-auc:0.887688+0.00400823\n",
      "[442]\ttrain-auc:0.909898+0.000547958\ttest-auc:0.88769+0.00402611\n",
      "[443]\ttrain-auc:0.909938+0.000531244\ttest-auc:0.887735+0.00401572\n",
      "[444]\ttrain-auc:0.909984+0.000520523\ttest-auc:0.887743+0.00400467\n",
      "[445]\ttrain-auc:0.910025+0.000512428\ttest-auc:0.887744+0.00402304\n",
      "[446]\ttrain-auc:0.91006+0.00050511\ttest-auc:0.887747+0.00403436\n",
      "[447]\ttrain-auc:0.9101+0.000496104\ttest-auc:0.887762+0.00401228\n",
      "[448]\ttrain-auc:0.910156+0.000494201\ttest-auc:0.887785+0.00401835\n",
      "[449]\ttrain-auc:0.91021+0.00049814\ttest-auc:0.887782+0.0040356\n",
      "[450]\ttrain-auc:0.910247+0.000499308\ttest-auc:0.887804+0.00400216\n",
      "[451]\ttrain-auc:0.910287+0.00050592\ttest-auc:0.887826+0.00399954\n",
      "[452]\ttrain-auc:0.910323+0.000517501\ttest-auc:0.887824+0.00398325\n",
      "[453]\ttrain-auc:0.910356+0.000516622\ttest-auc:0.887826+0.00399329\n",
      "[454]\ttrain-auc:0.910389+0.000525284\ttest-auc:0.887846+0.00398188\n",
      "[455]\ttrain-auc:0.910437+0.000534546\ttest-auc:0.887879+0.00398057\n",
      "[456]\ttrain-auc:0.910471+0.000548481\ttest-auc:0.887888+0.00399913\n",
      "[457]\ttrain-auc:0.910521+0.000549764\ttest-auc:0.887894+0.00400198\n",
      "[458]\ttrain-auc:0.910568+0.000548276\ttest-auc:0.887914+0.00401017\n",
      "[459]\ttrain-auc:0.910608+0.000546939\ttest-auc:0.887933+0.00399523\n",
      "[460]\ttrain-auc:0.910655+0.000533396\ttest-auc:0.887958+0.00399058\n",
      "[461]\ttrain-auc:0.910689+0.000536234\ttest-auc:0.888004+0.00397145\n",
      "[462]\ttrain-auc:0.910736+0.000536513\ttest-auc:0.888016+0.00395911\n",
      "[463]\ttrain-auc:0.910763+0.000544583\ttest-auc:0.888025+0.00393974\n",
      "[464]\ttrain-auc:0.910816+0.000532974\ttest-auc:0.88803+0.00395168\n",
      "[465]\ttrain-auc:0.910853+0.000529193\ttest-auc:0.888023+0.00395132\n",
      "[466]\ttrain-auc:0.910894+0.000552472\ttest-auc:0.888023+0.0039621\n",
      "[467]\ttrain-auc:0.910941+0.000542208\ttest-auc:0.888037+0.0039445\n",
      "[468]\ttrain-auc:0.91097+0.00054472\ttest-auc:0.888043+0.00394503\n",
      "[469]\ttrain-auc:0.911009+0.00055733\ttest-auc:0.888049+0.00392527\n",
      "[470]\ttrain-auc:0.911038+0.000546568\ttest-auc:0.888041+0.00391133\n",
      "[471]\ttrain-auc:0.911074+0.000557983\ttest-auc:0.88804+0.00390373\n",
      "[472]\ttrain-auc:0.911106+0.000558686\ttest-auc:0.888035+0.00388841\n",
      "[473]\ttrain-auc:0.911151+0.000553486\ttest-auc:0.888034+0.00392243\n",
      "[474]\ttrain-auc:0.911199+0.000561409\ttest-auc:0.888031+0.0039058\n",
      "[475]\ttrain-auc:0.911222+0.000555232\ttest-auc:0.888064+0.00391825\n",
      "[476]\ttrain-auc:0.911273+0.000546582\ttest-auc:0.888073+0.00390684\n",
      "[477]\ttrain-auc:0.911309+0.000541053\ttest-auc:0.888093+0.00391151\n",
      "[478]\ttrain-auc:0.911346+0.000554231\ttest-auc:0.888087+0.00390398\n",
      "[479]\ttrain-auc:0.911383+0.000565995\ttest-auc:0.888099+0.00391152\n",
      "[480]\ttrain-auc:0.911427+0.000553695\ttest-auc:0.888094+0.00393952\n",
      "[481]\ttrain-auc:0.91147+0.000564838\ttest-auc:0.888093+0.00393237\n",
      "[482]\ttrain-auc:0.911505+0.000561772\ttest-auc:0.888114+0.00394107\n",
      "[483]\ttrain-auc:0.911544+0.000559482\ttest-auc:0.888128+0.00392384\n",
      "[484]\ttrain-auc:0.911571+0.000553982\ttest-auc:0.888126+0.00393148\n",
      "[485]\ttrain-auc:0.911606+0.000551717\ttest-auc:0.888134+0.00393576\n",
      "[486]\ttrain-auc:0.911631+0.000550768\ttest-auc:0.888131+0.00396997\n",
      "[487]\ttrain-auc:0.911687+0.000546019\ttest-auc:0.888123+0.00395891\n",
      "[488]\ttrain-auc:0.911718+0.000541125\ttest-auc:0.888096+0.00395323\n",
      "[489]\ttrain-auc:0.911761+0.000541093\ttest-auc:0.888093+0.00397047\n",
      "[490]\ttrain-auc:0.911805+0.000551721\ttest-auc:0.888129+0.00396863\n",
      "[491]\ttrain-auc:0.911841+0.000549863\ttest-auc:0.888131+0.00395954\n",
      "[492]\ttrain-auc:0.911874+0.00056538\ttest-auc:0.888135+0.00395798\n",
      "[493]\ttrain-auc:0.911906+0.0005638\ttest-auc:0.88812+0.0039894\n",
      "[494]\ttrain-auc:0.91195+0.000557932\ttest-auc:0.888129+0.00399378\n",
      "[495]\ttrain-auc:0.91198+0.000546517\ttest-auc:0.888111+0.00397942\n",
      "[496]\ttrain-auc:0.912016+0.000553114\ttest-auc:0.888101+0.00395937\n",
      "[497]\ttrain-auc:0.912055+0.000549169\ttest-auc:0.888128+0.00396603\n",
      "[498]\ttrain-auc:0.91212+0.000561653\ttest-auc:0.888155+0.00396134\n",
      "[499]\ttrain-auc:0.912163+0.000564303\ttest-auc:0.888178+0.00399276\n",
      "[500]\ttrain-auc:0.9122+0.000570478\ttest-auc:0.888193+0.00399312\n",
      "[501]\ttrain-auc:0.912224+0.000573228\ttest-auc:0.888219+0.00400566\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[502]\ttrain-auc:0.912261+0.000575114\ttest-auc:0.888233+0.00400196\n",
      "[503]\ttrain-auc:0.912296+0.000579849\ttest-auc:0.888221+0.00401295\n",
      "[504]\ttrain-auc:0.91234+0.000592399\ttest-auc:0.888219+0.00401159\n",
      "[505]\ttrain-auc:0.912378+0.000577713\ttest-auc:0.888228+0.0039966\n",
      "[506]\ttrain-auc:0.912401+0.000575954\ttest-auc:0.888245+0.00398229\n",
      "[507]\ttrain-auc:0.912451+0.000577619\ttest-auc:0.888245+0.00397713\n",
      "[508]\ttrain-auc:0.912494+0.000567589\ttest-auc:0.88824+0.00396207\n",
      "[509]\ttrain-auc:0.912536+0.000570584\ttest-auc:0.888251+0.00396123\n",
      "[510]\ttrain-auc:0.912588+0.000564969\ttest-auc:0.888236+0.00397357\n",
      "[511]\ttrain-auc:0.912628+0.000558806\ttest-auc:0.88825+0.00399795\n",
      "[512]\ttrain-auc:0.912675+0.000558447\ttest-auc:0.888246+0.00398033\n",
      "[513]\ttrain-auc:0.91271+0.000551926\ttest-auc:0.888266+0.00398259\n",
      "[514]\ttrain-auc:0.912744+0.000559072\ttest-auc:0.888261+0.00397376\n",
      "[515]\ttrain-auc:0.912783+0.000569016\ttest-auc:0.888307+0.00395866\n",
      "[516]\ttrain-auc:0.912823+0.000574095\ttest-auc:0.888303+0.00396907\n",
      "[517]\ttrain-auc:0.912863+0.000563464\ttest-auc:0.888303+0.00397162\n",
      "[518]\ttrain-auc:0.912904+0.000564866\ttest-auc:0.888311+0.00394663\n",
      "[519]\ttrain-auc:0.912944+0.000570843\ttest-auc:0.888325+0.00395274\n",
      "[520]\ttrain-auc:0.912984+0.000579704\ttest-auc:0.888324+0.00394402\n",
      "[521]\ttrain-auc:0.91302+0.000589213\ttest-auc:0.888309+0.0039687\n",
      "[522]\ttrain-auc:0.913058+0.000591088\ttest-auc:0.888312+0.00396181\n",
      "[523]\ttrain-auc:0.913096+0.000590441\ttest-auc:0.888334+0.00394889\n",
      "[524]\ttrain-auc:0.913136+0.000580784\ttest-auc:0.888355+0.00396278\n",
      "[525]\ttrain-auc:0.913169+0.000585912\ttest-auc:0.888337+0.00395865\n",
      "[526]\ttrain-auc:0.913214+0.000590568\ttest-auc:0.888367+0.00394939\n",
      "[527]\ttrain-auc:0.913257+0.000599196\ttest-auc:0.888367+0.00392898\n",
      "[528]\ttrain-auc:0.9133+0.000615314\ttest-auc:0.888393+0.00392679\n",
      "[529]\ttrain-auc:0.91333+0.000616028\ttest-auc:0.888398+0.00392259\n",
      "[530]\ttrain-auc:0.913365+0.000629695\ttest-auc:0.888376+0.00393103\n",
      "[531]\ttrain-auc:0.913395+0.000626632\ttest-auc:0.888361+0.00392334\n",
      "[532]\ttrain-auc:0.913424+0.000616928\ttest-auc:0.888367+0.00392408\n",
      "[533]\ttrain-auc:0.913474+0.000627079\ttest-auc:0.888388+0.00392881\n",
      "[534]\ttrain-auc:0.913508+0.000629015\ttest-auc:0.888364+0.00394085\n",
      "[535]\ttrain-auc:0.913549+0.000618504\ttest-auc:0.888368+0.00391968\n",
      "[536]\ttrain-auc:0.913589+0.000625706\ttest-auc:0.888381+0.00391795\n",
      "[537]\ttrain-auc:0.913622+0.000627402\ttest-auc:0.888402+0.0039016\n",
      "[538]\ttrain-auc:0.913662+0.000640561\ttest-auc:0.888412+0.00390477\n",
      "[539]\ttrain-auc:0.913687+0.000631334\ttest-auc:0.88841+0.00392869\n",
      "[540]\ttrain-auc:0.91372+0.000622585\ttest-auc:0.888416+0.00393193\n",
      "[541]\ttrain-auc:0.913762+0.000617702\ttest-auc:0.888428+0.00391103\n",
      "[542]\ttrain-auc:0.913805+0.000626802\ttest-auc:0.888447+0.00391961\n",
      "[543]\ttrain-auc:0.913838+0.00063388\ttest-auc:0.888436+0.00390639\n",
      "[544]\ttrain-auc:0.913864+0.000640412\ttest-auc:0.888467+0.00389732\n",
      "[545]\ttrain-auc:0.913883+0.000638958\ttest-auc:0.888445+0.00388088\n",
      "[546]\ttrain-auc:0.913936+0.000636106\ttest-auc:0.888445+0.00387556\n",
      "[547]\ttrain-auc:0.913987+0.000632212\ttest-auc:0.888462+0.00387004\n",
      "[548]\ttrain-auc:0.914024+0.000633463\ttest-auc:0.888465+0.00385765\n",
      "[549]\ttrain-auc:0.914068+0.000632427\ttest-auc:0.888497+0.00384868\n",
      "[550]\ttrain-auc:0.914108+0.000627905\ttest-auc:0.888526+0.00386072\n",
      "[551]\ttrain-auc:0.914141+0.000623571\ttest-auc:0.888509+0.003879\n",
      "[552]\ttrain-auc:0.914176+0.000617182\ttest-auc:0.888537+0.00387333\n",
      "[553]\ttrain-auc:0.914214+0.000629094\ttest-auc:0.888533+0.00387185\n",
      "[554]\ttrain-auc:0.914249+0.000633454\ttest-auc:0.888552+0.00387125\n",
      "[555]\ttrain-auc:0.914289+0.000636153\ttest-auc:0.888547+0.00385951\n",
      "[556]\ttrain-auc:0.91433+0.000642382\ttest-auc:0.888565+0.00383376\n",
      "[557]\ttrain-auc:0.914365+0.000635629\ttest-auc:0.888585+0.00385192\n",
      "[558]\ttrain-auc:0.914405+0.000635492\ttest-auc:0.888597+0.0038411\n",
      "[559]\ttrain-auc:0.914442+0.000636267\ttest-auc:0.888624+0.00385115\n",
      "[560]\ttrain-auc:0.914482+0.000635791\ttest-auc:0.888612+0.00383576\n",
      "[561]\ttrain-auc:0.91451+0.000639921\ttest-auc:0.888598+0.0038213\n",
      "[562]\ttrain-auc:0.914558+0.000637963\ttest-auc:0.888581+0.00382546\n",
      "[563]\ttrain-auc:0.914589+0.000641952\ttest-auc:0.888582+0.00384859\n",
      "[564]\ttrain-auc:0.914634+0.000647786\ttest-auc:0.888595+0.00385122\n",
      "[565]\ttrain-auc:0.914672+0.000645053\ttest-auc:0.888589+0.00384251\n",
      "[566]\ttrain-auc:0.91472+0.000646731\ttest-auc:0.888576+0.00383895\n",
      "[567]\ttrain-auc:0.914747+0.00065643\ttest-auc:0.888577+0.00383207\n",
      "[568]\ttrain-auc:0.914788+0.000660717\ttest-auc:0.888579+0.00382663\n",
      "[569]\ttrain-auc:0.914828+0.000656893\ttest-auc:0.888608+0.00383688\n",
      "[570]\ttrain-auc:0.914866+0.000655154\ttest-auc:0.888591+0.00384734\n",
      "[571]\ttrain-auc:0.914889+0.000656335\ttest-auc:0.888602+0.00384335\n",
      "[572]\ttrain-auc:0.914935+0.000649638\ttest-auc:0.888591+0.00383328\n",
      "[573]\ttrain-auc:0.914983+0.000644061\ttest-auc:0.888605+0.00384477\n",
      "[574]\ttrain-auc:0.915014+0.00064958\ttest-auc:0.888611+0.00383061\n",
      "[575]\ttrain-auc:0.915046+0.000649372\ttest-auc:0.888608+0.0038392\n",
      "[576]\ttrain-auc:0.915073+0.000660784\ttest-auc:0.888618+0.00383026\n",
      "[577]\ttrain-auc:0.915109+0.000647516\ttest-auc:0.888617+0.00383525\n",
      "[578]\ttrain-auc:0.915142+0.000658918\ttest-auc:0.888614+0.00383288\n",
      "[579]\ttrain-auc:0.915176+0.00064993\ttest-auc:0.888648+0.00384798\n",
      "[580]\ttrain-auc:0.915211+0.000653125\ttest-auc:0.888636+0.00381876\n",
      "[581]\ttrain-auc:0.915247+0.000654705\ttest-auc:0.88864+0.00381584\n",
      "[582]\ttrain-auc:0.915285+0.000653882\ttest-auc:0.888677+0.00380298\n",
      "[583]\ttrain-auc:0.915313+0.000662231\ttest-auc:0.888669+0.00380558\n",
      "[584]\ttrain-auc:0.915344+0.000669972\ttest-auc:0.88869+0.00381651\n",
      "[585]\ttrain-auc:0.915374+0.00068078\ttest-auc:0.888704+0.00382563\n",
      "[586]\ttrain-auc:0.915406+0.000679542\ttest-auc:0.888745+0.0038215\n",
      "[587]\ttrain-auc:0.915436+0.000672906\ttest-auc:0.888732+0.00383521\n",
      "[588]\ttrain-auc:0.915484+0.000667119\ttest-auc:0.88874+0.00382095\n",
      "[589]\ttrain-auc:0.915523+0.000672018\ttest-auc:0.88873+0.00381064\n",
      "[590]\ttrain-auc:0.915552+0.000665681\ttest-auc:0.888719+0.00382413\n",
      "[591]\ttrain-auc:0.915592+0.000657755\ttest-auc:0.888731+0.00381229\n",
      "[592]\ttrain-auc:0.915634+0.000655925\ttest-auc:0.888752+0.00380698\n",
      "[593]\ttrain-auc:0.915653+0.000655364\ttest-auc:0.888763+0.0038206\n",
      "[594]\ttrain-auc:0.915684+0.000649302\ttest-auc:0.888739+0.00383244\n",
      "[595]\ttrain-auc:0.915711+0.000652646\ttest-auc:0.888745+0.00382262\n",
      "[596]\ttrain-auc:0.915738+0.000656363\ttest-auc:0.888744+0.00381152\n",
      "[597]\ttrain-auc:0.915763+0.000654465\ttest-auc:0.888752+0.00379116\n",
      "[598]\ttrain-auc:0.915792+0.000653205\ttest-auc:0.888749+0.00377915\n",
      "[599]\ttrain-auc:0.915822+0.000656656\ttest-auc:0.888744+0.00380185\n",
      "[600]\ttrain-auc:0.915863+0.000649925\ttest-auc:0.888749+0.00378438\n",
      "[601]\ttrain-auc:0.915898+0.000636313\ttest-auc:0.888757+0.00377805\n",
      "[602]\ttrain-auc:0.915947+0.000636129\ttest-auc:0.888733+0.00377234\n",
      "[603]\ttrain-auc:0.915971+0.000630363\ttest-auc:0.888732+0.00376068\n",
      "[604]\ttrain-auc:0.915999+0.000626702\ttest-auc:0.888757+0.003756\n",
      "[605]\ttrain-auc:0.916034+0.00063217\ttest-auc:0.88876+0.00376171\n",
      "[606]\ttrain-auc:0.916073+0.000629711\ttest-auc:0.888767+0.00375365\n",
      "[607]\ttrain-auc:0.916096+0.000629999\ttest-auc:0.888782+0.00376118\n",
      "[608]\ttrain-auc:0.916131+0.000635485\ttest-auc:0.888773+0.00375672\n",
      "[609]\ttrain-auc:0.91617+0.00063914\ttest-auc:0.888779+0.00375441\n",
      "[610]\ttrain-auc:0.916205+0.000625987\ttest-auc:0.888795+0.00377347\n",
      "[611]\ttrain-auc:0.916238+0.000626432\ttest-auc:0.888791+0.0037453\n",
      "[612]\ttrain-auc:0.916282+0.000634397\ttest-auc:0.888791+0.0037563\n",
      "[613]\ttrain-auc:0.916317+0.000644608\ttest-auc:0.888785+0.00373003\n",
      "[614]\ttrain-auc:0.916353+0.000646736\ttest-auc:0.8888+0.00374161\n",
      "[615]\ttrain-auc:0.916398+0.000646222\ttest-auc:0.888812+0.0037473\n",
      "[616]\ttrain-auc:0.916428+0.00063802\ttest-auc:0.888812+0.00375217\n",
      "[617]\ttrain-auc:0.916466+0.000625938\ttest-auc:0.888807+0.00375477\n",
      "[618]\ttrain-auc:0.91651+0.000629308\ttest-auc:0.8888+0.00376985\n",
      "[619]\ttrain-auc:0.916535+0.000625591\ttest-auc:0.888808+0.00375175\n",
      "[620]\ttrain-auc:0.916558+0.000626669\ttest-auc:0.888824+0.00374189\n",
      "[621]\ttrain-auc:0.916597+0.000617605\ttest-auc:0.888834+0.0037277\n",
      "[622]\ttrain-auc:0.916637+0.000622182\ttest-auc:0.888831+0.00372827\n",
      "[623]\ttrain-auc:0.916657+0.000625096\ttest-auc:0.888848+0.00372238\n",
      "[624]\ttrain-auc:0.916703+0.000627565\ttest-auc:0.888843+0.00374216\n",
      "[625]\ttrain-auc:0.916753+0.000628272\ttest-auc:0.888868+0.00371141\n",
      "[626]\ttrain-auc:0.916791+0.000628084\ttest-auc:0.888869+0.00372544\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[627]\ttrain-auc:0.916819+0.000629274\ttest-auc:0.888865+0.00374457\n",
      "[628]\ttrain-auc:0.916851+0.000631138\ttest-auc:0.888873+0.00372413\n",
      "[629]\ttrain-auc:0.916877+0.000630367\ttest-auc:0.888882+0.0037091\n",
      "[630]\ttrain-auc:0.916916+0.000622252\ttest-auc:0.88889+0.00370162\n",
      "[631]\ttrain-auc:0.916954+0.000613294\ttest-auc:0.888898+0.0037148\n",
      "[632]\ttrain-auc:0.91698+0.0006221\ttest-auc:0.888899+0.00371531\n",
      "[633]\ttrain-auc:0.91701+0.000614261\ttest-auc:0.888901+0.00372077\n",
      "[634]\ttrain-auc:0.917034+0.00062675\ttest-auc:0.888906+0.0037136\n",
      "[635]\ttrain-auc:0.917071+0.000625667\ttest-auc:0.888895+0.00371437\n",
      "[636]\ttrain-auc:0.917104+0.000619771\ttest-auc:0.888903+0.00372977\n",
      "[637]\ttrain-auc:0.917143+0.000626138\ttest-auc:0.888914+0.00372616\n",
      "[638]\ttrain-auc:0.917181+0.000631432\ttest-auc:0.888916+0.00372873\n",
      "[639]\ttrain-auc:0.917215+0.000631899\ttest-auc:0.888953+0.00373222\n",
      "[640]\ttrain-auc:0.917249+0.000632238\ttest-auc:0.888954+0.00371523\n",
      "[641]\ttrain-auc:0.917281+0.000635161\ttest-auc:0.88897+0.0037203\n",
      "[642]\ttrain-auc:0.917321+0.000623481\ttest-auc:0.888969+0.00371014\n",
      "[643]\ttrain-auc:0.917352+0.000619319\ttest-auc:0.888953+0.00370293\n",
      "[644]\ttrain-auc:0.917386+0.00061525\ttest-auc:0.888967+0.00371622\n",
      "[645]\ttrain-auc:0.917426+0.000620288\ttest-auc:0.888968+0.00372445\n",
      "[646]\ttrain-auc:0.917454+0.000618358\ttest-auc:0.888962+0.0037439\n",
      "[647]\ttrain-auc:0.917496+0.000614963\ttest-auc:0.888945+0.00373722\n",
      "[648]\ttrain-auc:0.917533+0.000615962\ttest-auc:0.888943+0.00372867\n",
      "[649]\ttrain-auc:0.91757+0.000619292\ttest-auc:0.888969+0.00370678\n",
      "[650]\ttrain-auc:0.917607+0.000620371\ttest-auc:0.888954+0.00370285\n",
      "[651]\ttrain-auc:0.917639+0.000631502\ttest-auc:0.888965+0.00368622\n",
      "[652]\ttrain-auc:0.917658+0.000631817\ttest-auc:0.88896+0.00370576\n",
      "[653]\ttrain-auc:0.917691+0.000634518\ttest-auc:0.888958+0.00371901\n",
      "[654]\ttrain-auc:0.917725+0.000641576\ttest-auc:0.888964+0.00371819\n",
      "[655]\ttrain-auc:0.917757+0.000640192\ttest-auc:0.888977+0.00372182\n",
      "[656]\ttrain-auc:0.917773+0.000648314\ttest-auc:0.888961+0.00370837\n",
      "[657]\ttrain-auc:0.917807+0.000641075\ttest-auc:0.888964+0.00369771\n",
      "[658]\ttrain-auc:0.91785+0.000653325\ttest-auc:0.888956+0.00368498\n",
      "[659]\ttrain-auc:0.917888+0.000643097\ttest-auc:0.88896+0.00369076\n",
      "[660]\ttrain-auc:0.917907+0.000646875\ttest-auc:0.888966+0.00368921\n",
      "[661]\ttrain-auc:0.917933+0.00065769\ttest-auc:0.888989+0.00367712\n",
      "[662]\ttrain-auc:0.917969+0.000660024\ttest-auc:0.88899+0.00368518\n",
      "[663]\ttrain-auc:0.918014+0.000666466\ttest-auc:0.888991+0.0036866\n",
      "[664]\ttrain-auc:0.918046+0.000668718\ttest-auc:0.889009+0.0036884\n",
      "[665]\ttrain-auc:0.918079+0.000664786\ttest-auc:0.889007+0.00367267\n",
      "[666]\ttrain-auc:0.918124+0.000660107\ttest-auc:0.889024+0.00365721\n",
      "[667]\ttrain-auc:0.918151+0.000672774\ttest-auc:0.889006+0.00366114\n",
      "[668]\ttrain-auc:0.91818+0.000675687\ttest-auc:0.889028+0.00365829\n",
      "[669]\ttrain-auc:0.918213+0.000679116\ttest-auc:0.889052+0.00365993\n",
      "[670]\ttrain-auc:0.918232+0.000683672\ttest-auc:0.889065+0.00364428\n",
      "[671]\ttrain-auc:0.918261+0.000690404\ttest-auc:0.889056+0.00362949\n",
      "[672]\ttrain-auc:0.918296+0.000689209\ttest-auc:0.889064+0.00363551\n",
      "[673]\ttrain-auc:0.918329+0.000679353\ttest-auc:0.889081+0.00363789\n",
      "[674]\ttrain-auc:0.918368+0.000680704\ttest-auc:0.889098+0.00364462\n",
      "[675]\ttrain-auc:0.918401+0.000688285\ttest-auc:0.889103+0.00364268\n",
      "[676]\ttrain-auc:0.918439+0.000686875\ttest-auc:0.8891+0.00364481\n",
      "[677]\ttrain-auc:0.91847+0.00068007\ttest-auc:0.889099+0.00362484\n",
      "[678]\ttrain-auc:0.918502+0.000686669\ttest-auc:0.889118+0.00363929\n",
      "[679]\ttrain-auc:0.918543+0.000694618\ttest-auc:0.889118+0.00363259\n",
      "[680]\ttrain-auc:0.91858+0.00069606\ttest-auc:0.889127+0.00362852\n",
      "[681]\ttrain-auc:0.918603+0.00070134\ttest-auc:0.889124+0.00364407\n",
      "[682]\ttrain-auc:0.918633+0.000696414\ttest-auc:0.889128+0.00364268\n",
      "[683]\ttrain-auc:0.918661+0.000692864\ttest-auc:0.889123+0.00365515\n",
      "[684]\ttrain-auc:0.918705+0.000678355\ttest-auc:0.889114+0.00364802\n",
      "[685]\ttrain-auc:0.918739+0.000677832\ttest-auc:0.889137+0.00363723\n",
      "[686]\ttrain-auc:0.918765+0.000677135\ttest-auc:0.889129+0.00362437\n",
      "[687]\ttrain-auc:0.918813+0.00067554\ttest-auc:0.889153+0.00364787\n",
      "[688]\ttrain-auc:0.918844+0.000674249\ttest-auc:0.88915+0.00364591\n",
      "[689]\ttrain-auc:0.918878+0.000667052\ttest-auc:0.889142+0.0036379\n",
      "[690]\ttrain-auc:0.918905+0.000671452\ttest-auc:0.88914+0.0036497\n",
      "[691]\ttrain-auc:0.918934+0.000667319\ttest-auc:0.889137+0.00365537\n",
      "[692]\ttrain-auc:0.918974+0.000676016\ttest-auc:0.889137+0.00366814\n",
      "[693]\ttrain-auc:0.91902+0.000669586\ttest-auc:0.889106+0.00367212\n",
      "[694]\ttrain-auc:0.919048+0.000662998\ttest-auc:0.88911+0.00368469\n",
      "[695]\ttrain-auc:0.919081+0.000663258\ttest-auc:0.889115+0.00367216\n",
      "[696]\ttrain-auc:0.919115+0.000657706\ttest-auc:0.889125+0.00366852\n",
      "[697]\ttrain-auc:0.919144+0.000648029\ttest-auc:0.889113+0.00365604\n",
      "[698]\ttrain-auc:0.919186+0.000638703\ttest-auc:0.88912+0.00363315\n",
      "[699]\ttrain-auc:0.919232+0.000632231\ttest-auc:0.889101+0.00363998\n",
      "[700]\ttrain-auc:0.919263+0.000614793\ttest-auc:0.889113+0.00365877\n",
      "[701]\ttrain-auc:0.919288+0.000612648\ttest-auc:0.88912+0.00365435\n",
      "[702]\ttrain-auc:0.919327+0.000615118\ttest-auc:0.88913+0.00364442\n",
      "[703]\ttrain-auc:0.919356+0.00061902\ttest-auc:0.889146+0.00362969\n",
      "[704]\ttrain-auc:0.919381+0.000622717\ttest-auc:0.889154+0.00363516\n",
      "[705]\ttrain-auc:0.919414+0.000624451\ttest-auc:0.889159+0.00362761\n",
      "[706]\ttrain-auc:0.919455+0.000637409\ttest-auc:0.889152+0.00362879\n",
      "[707]\ttrain-auc:0.919494+0.000634862\ttest-auc:0.889164+0.00362946\n",
      "[708]\ttrain-auc:0.919533+0.000640181\ttest-auc:0.889161+0.00362029\n",
      "[709]\ttrain-auc:0.919572+0.000638492\ttest-auc:0.889165+0.00360162\n",
      "[710]\ttrain-auc:0.919592+0.000640494\ttest-auc:0.88916+0.00361222\n",
      "[711]\ttrain-auc:0.919623+0.000647968\ttest-auc:0.889148+0.00361103\n",
      "[712]\ttrain-auc:0.919662+0.000661338\ttest-auc:0.889145+0.00360684\n",
      "[713]\ttrain-auc:0.919704+0.000673437\ttest-auc:0.889151+0.00359287\n",
      "[714]\ttrain-auc:0.919737+0.000672795\ttest-auc:0.889162+0.00356717\n",
      "[715]\ttrain-auc:0.919757+0.000670783\ttest-auc:0.889176+0.00356692\n",
      "[716]\ttrain-auc:0.919796+0.000667652\ttest-auc:0.889187+0.00357142\n",
      "[717]\ttrain-auc:0.919851+0.000673072\ttest-auc:0.889174+0.0035377\n",
      "[718]\ttrain-auc:0.91988+0.000658484\ttest-auc:0.889172+0.00352403\n",
      "[719]\ttrain-auc:0.919914+0.000658073\ttest-auc:0.889166+0.0035114\n",
      "[720]\ttrain-auc:0.919952+0.000675254\ttest-auc:0.889163+0.00350711\n",
      "[721]\ttrain-auc:0.919988+0.000679541\ttest-auc:0.889164+0.00349113\n",
      "[722]\ttrain-auc:0.920031+0.000679302\ttest-auc:0.889167+0.00351128\n",
      "[723]\ttrain-auc:0.920064+0.000680381\ttest-auc:0.889166+0.00352777\n",
      "[724]\ttrain-auc:0.920106+0.000685861\ttest-auc:0.889163+0.00352269\n",
      "[725]\ttrain-auc:0.920132+0.000688838\ttest-auc:0.889165+0.00352325\n",
      "[726]\ttrain-auc:0.920167+0.000690693\ttest-auc:0.889149+0.00352737\n",
      "[727]\ttrain-auc:0.920191+0.000696695\ttest-auc:0.889152+0.00353098\n",
      "[728]\ttrain-auc:0.92022+0.00067777\ttest-auc:0.889148+0.0035161\n",
      "[729]\ttrain-auc:0.920255+0.000674808\ttest-auc:0.88915+0.00351208\n",
      "[730]\ttrain-auc:0.920285+0.000668701\ttest-auc:0.889146+0.00352723\n",
      "[731]\ttrain-auc:0.920317+0.000668661\ttest-auc:0.889181+0.00352314\n",
      "[732]\ttrain-auc:0.920342+0.000667076\ttest-auc:0.889176+0.00351841\n",
      "[733]\ttrain-auc:0.920379+0.0006827\ttest-auc:0.889172+0.00353181\n",
      "[734]\ttrain-auc:0.920415+0.000677828\ttest-auc:0.889188+0.00352485\n",
      "[735]\ttrain-auc:0.920446+0.000679502\ttest-auc:0.889202+0.00352464\n",
      "[736]\ttrain-auc:0.920485+0.000694575\ttest-auc:0.889229+0.00350736\n",
      "[737]\ttrain-auc:0.920518+0.000678027\ttest-auc:0.889239+0.00351158\n",
      "[738]\ttrain-auc:0.920558+0.00067504\ttest-auc:0.889256+0.00352728\n",
      "[739]\ttrain-auc:0.920583+0.000681186\ttest-auc:0.889249+0.00353312\n",
      "[740]\ttrain-auc:0.920628+0.000680153\ttest-auc:0.889245+0.00351699\n",
      "[741]\ttrain-auc:0.920666+0.000684498\ttest-auc:0.889241+0.00351937\n",
      "[742]\ttrain-auc:0.920696+0.000681819\ttest-auc:0.889222+0.0035185\n",
      "[743]\ttrain-auc:0.920733+0.000684141\ttest-auc:0.889237+0.00350298\n",
      "[744]\ttrain-auc:0.920763+0.000687481\ttest-auc:0.889248+0.00351296\n",
      "[745]\ttrain-auc:0.9208+0.000688854\ttest-auc:0.889253+0.00351145\n",
      "[746]\ttrain-auc:0.920829+0.000695584\ttest-auc:0.889255+0.00351133\n",
      "[747]\ttrain-auc:0.920861+0.00069666\ttest-auc:0.889251+0.00349696\n",
      "[748]\ttrain-auc:0.920903+0.000689267\ttest-auc:0.889264+0.00350328\n",
      "[749]\ttrain-auc:0.920931+0.000691666\ttest-auc:0.889265+0.00349212\n",
      "[750]\ttrain-auc:0.920975+0.000691232\ttest-auc:0.889278+0.0034701\n",
      "[751]\ttrain-auc:0.921006+0.000685517\ttest-auc:0.889274+0.00349512\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "c:\\users\\marcp\\appdata\\local\\programs\\python\\python36\\lib\\site-packages\\sklearn\\preprocessing\\label.py:151: DeprecationWarning: The truth value of an empty array is ambiguous. Returning False, but in future this will result in an error. Use `array.size > 0` to check that an array is not empty.\n",
      "  if diff:\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Model Report\n",
      "Model best iteration : 752 with an auc score of : 0.889274\n",
      "Accuracy : 0.8692436974789916\n",
      "AUC Score (Train): 0.9164585794736773\n",
      "[0]\ttrain-auc:0.856018+0.00508769\ttest-auc:0.846555+0.00514217\n",
      "[1]\ttrain-auc:0.876492+0.0040933\ttest-auc:0.868626+0.00950545\n",
      "[2]\ttrain-auc:0.881844+0.00147386\ttest-auc:0.876834+0.00914268\n",
      "[3]\ttrain-auc:0.883627+0.00158709\ttest-auc:0.878458+0.00757962\n",
      "[4]\ttrain-auc:0.885621+0.00288655\ttest-auc:0.880634+0.00808356\n",
      "[5]\ttrain-auc:0.887136+0.00218795\ttest-auc:0.881194+0.00782103\n",
      "[6]\ttrain-auc:0.888199+0.00187043\ttest-auc:0.881734+0.0073514\n",
      "[7]\ttrain-auc:0.889321+0.00222624\ttest-auc:0.882661+0.00669089\n",
      "[8]\ttrain-auc:0.890567+0.00199786\ttest-auc:0.88289+0.00708836\n",
      "[9]\ttrain-auc:0.890708+0.0022453\ttest-auc:0.883183+0.0065124\n",
      "[10]\ttrain-auc:0.891143+0.00177699\ttest-auc:0.883097+0.0069654\n",
      "[11]\ttrain-auc:0.891712+0.00184373\ttest-auc:0.883302+0.00645483\n",
      "[12]\ttrain-auc:0.892009+0.00182341\ttest-auc:0.883878+0.00631987\n",
      "[13]\ttrain-auc:0.892009+0.00199319\ttest-auc:0.884348+0.00659057\n",
      "[14]\ttrain-auc:0.892257+0.00175184\ttest-auc:0.884522+0.00693778\n",
      "[15]\ttrain-auc:0.892249+0.00180189\ttest-auc:0.884506+0.00681398\n",
      "[16]\ttrain-auc:0.892368+0.00185131\ttest-auc:0.884485+0.00685039\n",
      "[17]\ttrain-auc:0.892983+0.00184826\ttest-auc:0.884896+0.00643921\n",
      "[18]\ttrain-auc:0.893367+0.00168161\ttest-auc:0.885268+0.00575683\n",
      "[19]\ttrain-auc:0.894165+0.00141063\ttest-auc:0.886203+0.00485409\n",
      "[20]\ttrain-auc:0.894472+0.00128894\ttest-auc:0.886205+0.00486092\n",
      "[21]\ttrain-auc:0.894495+0.00126198\ttest-auc:0.886251+0.00472777\n",
      "[22]\ttrain-auc:0.894689+0.00127982\ttest-auc:0.886307+0.00494145\n",
      "[23]\ttrain-auc:0.89491+0.00117425\ttest-auc:0.886624+0.00479715\n",
      "[24]\ttrain-auc:0.895086+0.00113581\ttest-auc:0.886704+0.00516694\n",
      "[25]\ttrain-auc:0.895509+0.00143242\ttest-auc:0.887174+0.00448123\n",
      "[26]\ttrain-auc:0.895732+0.00152443\ttest-auc:0.887426+0.00425271\n",
      "[27]\ttrain-auc:0.895865+0.00178003\ttest-auc:0.887982+0.00373014\n",
      "[28]\ttrain-auc:0.89591+0.00177139\ttest-auc:0.888078+0.0039444\n",
      "[29]\ttrain-auc:0.89592+0.00174419\ttest-auc:0.888072+0.00398731\n",
      "[30]\ttrain-auc:0.896071+0.00193818\ttest-auc:0.888475+0.00383254\n",
      "[31]\ttrain-auc:0.896211+0.001862\ttest-auc:0.888631+0.00393259\n",
      "[32]\ttrain-auc:0.896383+0.00184512\ttest-auc:0.88913+0.0040671\n",
      "[33]\ttrain-auc:0.896445+0.00183073\ttest-auc:0.889218+0.00413821\n",
      "[34]\ttrain-auc:0.89648+0.00182512\ttest-auc:0.889166+0.00404593\n",
      "[35]\ttrain-auc:0.896639+0.00173813\ttest-auc:0.889259+0.0041008\n",
      "[36]\ttrain-auc:0.897059+0.00190712\ttest-auc:0.889599+0.00354694\n",
      "[37]\ttrain-auc:0.897018+0.00192608\ttest-auc:0.889644+0.00358205\n",
      "[38]\ttrain-auc:0.897056+0.00200085\ttest-auc:0.889642+0.00350767\n",
      "[39]\ttrain-auc:0.897115+0.00197398\ttest-auc:0.889704+0.00357754\n",
      "[40]\ttrain-auc:0.897225+0.00188137\ttest-auc:0.889751+0.00330092\n",
      "[41]\ttrain-auc:0.897205+0.00189592\ttest-auc:0.889649+0.00336477\n",
      "[42]\ttrain-auc:0.897297+0.00188308\ttest-auc:0.889732+0.00346881\n",
      "[43]\ttrain-auc:0.897458+0.00183723\ttest-auc:0.88979+0.00349062\n",
      "[44]\ttrain-auc:0.897578+0.00188153\ttest-auc:0.8898+0.00345786\n",
      "[45]\ttrain-auc:0.897626+0.0018286\ttest-auc:0.889783+0.00355082\n",
      "[46]\ttrain-auc:0.897748+0.00191254\ttest-auc:0.889843+0.00357695\n",
      "[47]\ttrain-auc:0.897813+0.00189959\ttest-auc:0.889792+0.00356182\n",
      "[48]\ttrain-auc:0.897908+0.00198543\ttest-auc:0.889757+0.00355187\n",
      "[49]\ttrain-auc:0.897969+0.0019854\ttest-auc:0.889744+0.00365541\n",
      "[50]\ttrain-auc:0.898236+0.0022111\ttest-auc:0.890259+0.00336438\n",
      "[51]\ttrain-auc:0.898321+0.00216863\ttest-auc:0.890266+0.00332077\n",
      "[52]\ttrain-auc:0.898323+0.00217645\ttest-auc:0.890182+0.00327463\n",
      "[53]\ttrain-auc:0.898356+0.00220173\ttest-auc:0.890199+0.00322939\n",
      "[54]\ttrain-auc:0.898461+0.00220199\ttest-auc:0.890403+0.0031413\n",
      "[55]\ttrain-auc:0.898443+0.0021821\ttest-auc:0.890551+0.00301806\n",
      "[56]\ttrain-auc:0.899203+0.00156534\ttest-auc:0.891731+0.00336093\n",
      "[57]\ttrain-auc:0.899243+0.00159603\ttest-auc:0.891701+0.00336551\n",
      "[58]\ttrain-auc:0.899586+0.00178986\ttest-auc:0.892407+0.00292101\n",
      "[59]\ttrain-auc:0.899559+0.00174893\ttest-auc:0.892419+0.00288175\n",
      "[60]\ttrain-auc:0.899626+0.00176701\ttest-auc:0.892478+0.00291985\n",
      "[61]\ttrain-auc:0.899701+0.0017192\ttest-auc:0.892556+0.00294085\n",
      "[62]\ttrain-auc:0.899771+0.0017381\ttest-auc:0.892582+0.0028766\n",
      "[63]\ttrain-auc:0.899885+0.00178195\ttest-auc:0.892621+0.00287137\n",
      "[64]\ttrain-auc:0.899991+0.00173843\ttest-auc:0.892756+0.00292977\n",
      "[65]\ttrain-auc:0.90004+0.00175652\ttest-auc:0.892684+0.00288797\n",
      "[66]\ttrain-auc:0.900054+0.00169672\ttest-auc:0.892605+0.00279411\n",
      "[67]\ttrain-auc:0.900117+0.00170452\ttest-auc:0.892623+0.00278262\n",
      "[68]\ttrain-auc:0.900122+0.00173481\ttest-auc:0.892582+0.00276559\n",
      "[69]\ttrain-auc:0.900191+0.00169758\ttest-auc:0.892559+0.00282124\n",
      "[70]\ttrain-auc:0.900236+0.0017171\ttest-auc:0.892565+0.00288106\n",
      "[71]\ttrain-auc:0.900324+0.0017405\ttest-auc:0.892578+0.00288791\n",
      "[72]\ttrain-auc:0.900421+0.00171317\ttest-auc:0.892558+0.00290791\n",
      "[73]\ttrain-auc:0.900457+0.00172117\ttest-auc:0.892563+0.00294114\n",
      "[74]\ttrain-auc:0.900659+0.00165775\ttest-auc:0.892697+0.00307372\n",
      "[75]\ttrain-auc:0.900676+0.00164382\ttest-auc:0.89264+0.00313209\n",
      "[76]\ttrain-auc:0.900721+0.00163336\ttest-auc:0.892649+0.00320869\n",
      "[77]\ttrain-auc:0.900763+0.00162232\ttest-auc:0.892665+0.00324435\n",
      "[78]\ttrain-auc:0.900828+0.00156901\ttest-auc:0.892765+0.00333962\n",
      "[79]\ttrain-auc:0.901236+0.000941096\ttest-auc:0.892833+0.00343773\n",
      "[80]\ttrain-auc:0.90133+0.000892831\ttest-auc:0.892909+0.00349074\n",
      "[81]\ttrain-auc:0.901334+0.000921885\ttest-auc:0.892944+0.00341503\n",
      "[82]\ttrain-auc:0.901376+0.000938751\ttest-auc:0.892925+0.00340288\n",
      "[83]\ttrain-auc:0.901423+0.000903509\ttest-auc:0.892931+0.00334146\n",
      "[84]\ttrain-auc:0.901642+0.000753697\ttest-auc:0.893451+0.00404841\n",
      "[85]\ttrain-auc:0.901749+0.000712729\ttest-auc:0.893413+0.00404926\n",
      "[86]\ttrain-auc:0.901789+0.000721136\ttest-auc:0.893382+0.00398473\n",
      "[87]\ttrain-auc:0.901858+0.000702353\ttest-auc:0.893422+0.00399758\n",
      "[88]\ttrain-auc:0.901927+0.000721777\ttest-auc:0.89367+0.00386941\n",
      "[89]\ttrain-auc:0.901965+0.000716858\ttest-auc:0.893732+0.00385421\n",
      "[90]\ttrain-auc:0.902034+0.000686618\ttest-auc:0.893751+0.00391814\n",
      "[91]\ttrain-auc:0.902065+0.000687496\ttest-auc:0.893735+0.00390752\n",
      "[92]\ttrain-auc:0.902135+0.000709286\ttest-auc:0.893794+0.00392449\n",
      "[93]\ttrain-auc:0.90217+0.000724608\ttest-auc:0.893823+0.00389963\n",
      "[94]\ttrain-auc:0.902228+0.000726911\ttest-auc:0.893887+0.00388842\n",
      "[95]\ttrain-auc:0.902288+0.000687203\ttest-auc:0.893952+0.00397243\n",
      "[96]\ttrain-auc:0.902327+0.000675324\ttest-auc:0.893973+0.00393426\n",
      "[97]\ttrain-auc:0.902491+0.000625603\ttest-auc:0.894024+0.00387982\n",
      "[98]\ttrain-auc:0.902586+0.000606712\ttest-auc:0.893986+0.00380414\n",
      "[99]\ttrain-auc:0.902641+0.000632668\ttest-auc:0.894027+0.00384356\n",
      "[100]\ttrain-auc:0.902702+0.000632907\ttest-auc:0.894004+0.0038519\n",
      "[101]\ttrain-auc:0.902736+0.000613278\ttest-auc:0.893973+0.00385965\n",
      "[102]\ttrain-auc:0.902773+0.000569408\ttest-auc:0.893968+0.00388481\n",
      "[103]\ttrain-auc:0.902854+0.000640886\ttest-auc:0.894035+0.00384239\n",
      "[104]\ttrain-auc:0.902906+0.000639501\ttest-auc:0.894028+0.00380685\n",
      "[105]\ttrain-auc:0.902917+0.0006459\ttest-auc:0.893999+0.00377432\n",
      "[106]\ttrain-auc:0.903005+0.000608498\ttest-auc:0.894036+0.00384346\n",
      "[107]\ttrain-auc:0.903068+0.000608595\ttest-auc:0.894095+0.00389802\n",
      "[108]\ttrain-auc:0.903112+0.000608813\ttest-auc:0.894114+0.00394627\n",
      "[109]\ttrain-auc:0.903187+0.000645123\ttest-auc:0.894104+0.0039588\n",
      "[110]\ttrain-auc:0.903315+0.000756482\ttest-auc:0.894103+0.00404052\n",
      "[111]\ttrain-auc:0.903367+0.000772561\ttest-auc:0.89411+0.00405742\n",
      "[112]\ttrain-auc:0.903553+0.000812597\ttest-auc:0.894211+0.00413845\n",
      "[113]\ttrain-auc:0.903755+0.00103553\ttest-auc:0.894304+0.00411309\n",
      "[114]\ttrain-auc:0.903764+0.0010474\ttest-auc:0.894253+0.00401438\n",
      "[115]\ttrain-auc:0.904236+0.000935285\ttest-auc:0.894718+0.00393468\n",
      "[116]\ttrain-auc:0.904279+0.000936345\ttest-auc:0.894747+0.00393592\n",
      "[117]\ttrain-auc:0.90439+0.0010923\ttest-auc:0.894906+0.0038695\n",
      "[118]\ttrain-auc:0.904439+0.00109672\ttest-auc:0.894885+0.00385859\n",
      "[119]\ttrain-auc:0.904518+0.00114207\ttest-auc:0.894905+0.00383915\n",
      "[120]\ttrain-auc:0.90469+0.00116269\ttest-auc:0.894891+0.0038873\n",
      "[121]\ttrain-auc:0.905319+0.00131779\ttest-auc:0.89495+0.00389464\n",
      "[122]\ttrain-auc:0.905388+0.00129774\ttest-auc:0.89497+0.00394443\n",
      "[123]\ttrain-auc:0.905409+0.00131861\ttest-auc:0.895105+0.00407552\n",
      "[124]\ttrain-auc:0.905442+0.0013334\ttest-auc:0.89515+0.00405965\n",
      "[125]\ttrain-auc:0.90548+0.00116901\ttest-auc:0.89531+0.0041265\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[126]\ttrain-auc:0.90565+0.00129402\ttest-auc:0.895311+0.0042318\n",
      "[127]\ttrain-auc:0.905714+0.00132986\ttest-auc:0.895264+0.00424124\n",
      "[128]\ttrain-auc:0.905766+0.00131196\ttest-auc:0.895321+0.00424368\n",
      "[129]\ttrain-auc:0.906016+0.00133504\ttest-auc:0.895351+0.00420625\n",
      "[130]\ttrain-auc:0.906101+0.00134293\ttest-auc:0.895426+0.00418677\n",
      "[131]\ttrain-auc:0.906154+0.00135917\ttest-auc:0.895458+0.00414533\n",
      "[132]\ttrain-auc:0.906173+0.00135722\ttest-auc:0.895493+0.00411552\n",
      "[133]\ttrain-auc:0.906218+0.00133721\ttest-auc:0.895563+0.00423649\n",
      "[134]\ttrain-auc:0.906359+0.00141519\ttest-auc:0.895532+0.00427923\n",
      "[135]\ttrain-auc:0.906399+0.00140661\ttest-auc:0.895554+0.00429219\n",
      "[136]\ttrain-auc:0.90643+0.00137687\ttest-auc:0.895595+0.00431503\n",
      "[137]\ttrain-auc:0.906541+0.00144629\ttest-auc:0.895596+0.00425263\n",
      "[138]\ttrain-auc:0.906574+0.00144054\ttest-auc:0.895592+0.00424112\n",
      "[139]\ttrain-auc:0.906641+0.00146334\ttest-auc:0.895588+0.00423812\n",
      "[140]\ttrain-auc:0.906685+0.00146913\ttest-auc:0.895702+0.00441307\n",
      "[141]\ttrain-auc:0.906712+0.00146676\ttest-auc:0.895758+0.00432712\n",
      "[142]\ttrain-auc:0.906797+0.00146116\ttest-auc:0.895763+0.0044217\n",
      "[143]\ttrain-auc:0.906857+0.00151732\ttest-auc:0.895825+0.00438209\n",
      "[144]\ttrain-auc:0.906862+0.00151214\ttest-auc:0.895811+0.0043845\n",
      "[145]\ttrain-auc:0.906921+0.00150392\ttest-auc:0.89578+0.00440657\n",
      "[146]\ttrain-auc:0.907038+0.0014967\ttest-auc:0.895772+0.00434238\n",
      "[147]\ttrain-auc:0.907065+0.00152657\ttest-auc:0.895687+0.00442492\n",
      "[148]\ttrain-auc:0.907156+0.00151515\ttest-auc:0.895742+0.00455202\n",
      "[149]\ttrain-auc:0.907238+0.00151458\ttest-auc:0.895769+0.00456291\n",
      "[150]\ttrain-auc:0.907297+0.00148541\ttest-auc:0.89583+0.004538\n",
      "[151]\ttrain-auc:0.907318+0.00148211\ttest-auc:0.895867+0.00456811\n",
      "[152]\ttrain-auc:0.907352+0.00146464\ttest-auc:0.895935+0.0046241\n",
      "[153]\ttrain-auc:0.907375+0.00144233\ttest-auc:0.895961+0.00462951\n",
      "[154]\ttrain-auc:0.907436+0.00146035\ttest-auc:0.896222+0.00446736\n",
      "[155]\ttrain-auc:0.907479+0.00147608\ttest-auc:0.896248+0.0044472\n",
      "[156]\ttrain-auc:0.907584+0.00154907\ttest-auc:0.896193+0.00446995\n",
      "[157]\ttrain-auc:0.907616+0.00156099\ttest-auc:0.896369+0.00457774\n",
      "[158]\ttrain-auc:0.907671+0.00157064\ttest-auc:0.896402+0.00457728\n",
      "[159]\ttrain-auc:0.907778+0.00160346\ttest-auc:0.89641+0.00465601\n",
      "[160]\ttrain-auc:0.907849+0.00164587\ttest-auc:0.896333+0.00476023\n",
      "[161]\ttrain-auc:0.907929+0.00160792\ttest-auc:0.896402+0.00480496\n",
      "[162]\ttrain-auc:0.90799+0.00162291\ttest-auc:0.896474+0.00480177\n",
      "[163]\ttrain-auc:0.908038+0.00164065\ttest-auc:0.896533+0.00478344\n",
      "[164]\ttrain-auc:0.908107+0.00165186\ttest-auc:0.896586+0.00475998\n",
      "[165]\ttrain-auc:0.908193+0.00160318\ttest-auc:0.896618+0.00471335\n",
      "[166]\ttrain-auc:0.908271+0.00158946\ttest-auc:0.896639+0.00467417\n",
      "[167]\ttrain-auc:0.908353+0.00156504\ttest-auc:0.896665+0.00464356\n",
      "[168]\ttrain-auc:0.908591+0.00144792\ttest-auc:0.896679+0.00458336\n",
      "[169]\ttrain-auc:0.908723+0.0015564\ttest-auc:0.896701+0.00453457\n",
      "[170]\ttrain-auc:0.908759+0.00157165\ttest-auc:0.896694+0.00452892\n",
      "[171]\ttrain-auc:0.908803+0.00158311\ttest-auc:0.896752+0.00452371\n",
      "[172]\ttrain-auc:0.908842+0.00157277\ttest-auc:0.896739+0.00453779\n",
      "[173]\ttrain-auc:0.908891+0.00157808\ttest-auc:0.896757+0.00456798\n",
      "[174]\ttrain-auc:0.908919+0.00158112\ttest-auc:0.896814+0.00456725\n",
      "[175]\ttrain-auc:0.908948+0.00158165\ttest-auc:0.896848+0.00455826\n",
      "[176]\ttrain-auc:0.90903+0.00162788\ttest-auc:0.896915+0.00464768\n",
      "[177]\ttrain-auc:0.909098+0.00162203\ttest-auc:0.896957+0.00468227\n",
      "[178]\ttrain-auc:0.909145+0.00159467\ttest-auc:0.896974+0.00465353\n",
      "[179]\ttrain-auc:0.909234+0.00159384\ttest-auc:0.896981+0.00462991\n",
      "[180]\ttrain-auc:0.909283+0.00160744\ttest-auc:0.89696+0.00464432\n",
      "[181]\ttrain-auc:0.90932+0.00160627\ttest-auc:0.896956+0.00464493\n",
      "[182]\ttrain-auc:0.90937+0.00163672\ttest-auc:0.89702+0.00478004\n",
      "[183]\ttrain-auc:0.909472+0.00155442\ttest-auc:0.897013+0.00473325\n",
      "[184]\ttrain-auc:0.909491+0.00157488\ttest-auc:0.896998+0.00467087\n",
      "[185]\ttrain-auc:0.909548+0.00158552\ttest-auc:0.896985+0.00466755\n",
      "[186]\ttrain-auc:0.909579+0.00158426\ttest-auc:0.897026+0.00468179\n",
      "[187]\ttrain-auc:0.909621+0.0015688\ttest-auc:0.897085+0.00472573\n",
      "[188]\ttrain-auc:0.9097+0.00153387\ttest-auc:0.897053+0.00468975\n",
      "[189]\ttrain-auc:0.909736+0.00150405\ttest-auc:0.897082+0.00462739\n",
      "[190]\ttrain-auc:0.909786+0.0015231\ttest-auc:0.897062+0.00465684\n",
      "[191]\ttrain-auc:0.909897+0.00150932\ttest-auc:0.897021+0.00461903\n",
      "[192]\ttrain-auc:0.909934+0.00153386\ttest-auc:0.897037+0.00462959\n",
      "[193]\ttrain-auc:0.909983+0.00153837\ttest-auc:0.897069+0.0046443\n",
      "[194]\ttrain-auc:0.910107+0.00157179\ttest-auc:0.897022+0.00466202\n",
      "[195]\ttrain-auc:0.91014+0.00157132\ttest-auc:0.897046+0.00466625\n",
      "[196]\ttrain-auc:0.91019+0.00159076\ttest-auc:0.89701+0.00465377\n",
      "[197]\ttrain-auc:0.910255+0.00158552\ttest-auc:0.897134+0.00463171\n",
      "[198]\ttrain-auc:0.910308+0.00158437\ttest-auc:0.897155+0.00462224\n",
      "[199]\ttrain-auc:0.910361+0.00158225\ttest-auc:0.897108+0.00461326\n",
      "[200]\ttrain-auc:0.910407+0.00159905\ttest-auc:0.897095+0.00461397\n",
      "[201]\ttrain-auc:0.91045+0.00159008\ttest-auc:0.897114+0.00457865\n",
      "[202]\ttrain-auc:0.910499+0.0015803\ttest-auc:0.897171+0.004646\n",
      "[203]\ttrain-auc:0.910549+0.00155017\ttest-auc:0.897241+0.00457561\n",
      "[204]\ttrain-auc:0.910622+0.00154555\ttest-auc:0.897241+0.00458776\n",
      "[205]\ttrain-auc:0.910673+0.00150721\ttest-auc:0.897279+0.00459517\n",
      "[206]\ttrain-auc:0.910715+0.00150426\ttest-auc:0.897319+0.00460283\n",
      "[207]\ttrain-auc:0.910732+0.00147172\ttest-auc:0.897345+0.00458016\n",
      "[208]\ttrain-auc:0.910816+0.00147743\ttest-auc:0.897414+0.0046307\n",
      "[209]\ttrain-auc:0.910855+0.00146688\ttest-auc:0.897446+0.00462709\n",
      "[210]\ttrain-auc:0.910916+0.00144874\ttest-auc:0.897448+0.00461264\n",
      "[211]\ttrain-auc:0.910947+0.00144304\ttest-auc:0.897437+0.00457911\n",
      "[212]\ttrain-auc:0.910992+0.0014425\ttest-auc:0.897528+0.00452781\n",
      "[213]\ttrain-auc:0.911048+0.0014448\ttest-auc:0.897552+0.00454391\n",
      "[214]\ttrain-auc:0.911124+0.00144592\ttest-auc:0.897595+0.00450706\n",
      "[215]\ttrain-auc:0.911163+0.00142741\ttest-auc:0.89762+0.00450147\n",
      "[216]\ttrain-auc:0.911213+0.0014246\ttest-auc:0.89764+0.00452818\n",
      "[217]\ttrain-auc:0.91126+0.00142231\ttest-auc:0.897672+0.00450995\n",
      "[218]\ttrain-auc:0.911315+0.00142817\ttest-auc:0.897692+0.00447334\n",
      "[219]\ttrain-auc:0.911359+0.00141122\ttest-auc:0.897753+0.00435078\n",
      "[220]\ttrain-auc:0.911403+0.00140514\ttest-auc:0.897812+0.00433084\n",
      "[221]\ttrain-auc:0.911454+0.00141674\ttest-auc:0.897795+0.00432528\n",
      "[222]\ttrain-auc:0.911522+0.00138443\ttest-auc:0.89781+0.00438363\n",
      "[223]\ttrain-auc:0.911558+0.00135077\ttest-auc:0.897816+0.00437718\n",
      "[224]\ttrain-auc:0.911613+0.00134025\ttest-auc:0.897853+0.00441171\n",
      "[225]\ttrain-auc:0.911694+0.00133603\ttest-auc:0.897845+0.00443991\n",
      "[226]\ttrain-auc:0.911757+0.00133982\ttest-auc:0.897842+0.00447435\n",
      "[227]\ttrain-auc:0.911803+0.00134296\ttest-auc:0.897875+0.00443699\n",
      "[228]\ttrain-auc:0.911827+0.00133705\ttest-auc:0.897903+0.00444981\n",
      "[229]\ttrain-auc:0.911906+0.00133553\ttest-auc:0.897875+0.00447048\n",
      "[230]\ttrain-auc:0.911944+0.00131816\ttest-auc:0.897878+0.0044976\n",
      "[231]\ttrain-auc:0.911999+0.0013224\ttest-auc:0.897938+0.00447516\n",
      "[232]\ttrain-auc:0.912038+0.0013209\ttest-auc:0.897989+0.00447405\n",
      "[233]\ttrain-auc:0.912078+0.00131679\ttest-auc:0.898021+0.0044871\n",
      "[234]\ttrain-auc:0.912119+0.0013063\ttest-auc:0.89807+0.00452751\n",
      "[235]\ttrain-auc:0.912183+0.00130177\ttest-auc:0.8981+0.00450033\n",
      "[236]\ttrain-auc:0.912258+0.00132472\ttest-auc:0.898135+0.00450321\n",
      "[237]\ttrain-auc:0.912307+0.00131822\ttest-auc:0.89814+0.00451015\n",
      "[238]\ttrain-auc:0.912344+0.00132975\ttest-auc:0.898151+0.00451584\n",
      "[239]\ttrain-auc:0.912416+0.00130942\ttest-auc:0.898198+0.00454353\n",
      "[240]\ttrain-auc:0.912445+0.00131682\ttest-auc:0.898189+0.00452\n",
      "[241]\ttrain-auc:0.91249+0.00129925\ttest-auc:0.898218+0.00451098\n",
      "[242]\ttrain-auc:0.912548+0.00128267\ttest-auc:0.898301+0.00443943\n",
      "[243]\ttrain-auc:0.912591+0.00128036\ttest-auc:0.898315+0.00446343\n",
      "[244]\ttrain-auc:0.912648+0.00129527\ttest-auc:0.898308+0.00445391\n",
      "[245]\ttrain-auc:0.912685+0.00129672\ttest-auc:0.898305+0.00443845\n",
      "[246]\ttrain-auc:0.912725+0.00130351\ttest-auc:0.898377+0.00447139\n",
      "[247]\ttrain-auc:0.912767+0.00128396\ttest-auc:0.898424+0.00450296\n",
      "[248]\ttrain-auc:0.912812+0.00128626\ttest-auc:0.898478+0.00448906\n",
      "[249]\ttrain-auc:0.912889+0.00128843\ttest-auc:0.898506+0.0044588\n",
      "[250]\ttrain-auc:0.912946+0.00128797\ttest-auc:0.898536+0.00443048\n",
      "[251]\ttrain-auc:0.912983+0.00128589\ttest-auc:0.898561+0.00440551\n",
      "[252]\ttrain-auc:0.913031+0.00131009\ttest-auc:0.898581+0.0043898\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[253]\ttrain-auc:0.913082+0.00134399\ttest-auc:0.898594+0.0043996\n",
      "[254]\ttrain-auc:0.913132+0.00136137\ttest-auc:0.89862+0.00442702\n",
      "[255]\ttrain-auc:0.91318+0.00135673\ttest-auc:0.898623+0.00440342\n",
      "[256]\ttrain-auc:0.913218+0.00134813\ttest-auc:0.898629+0.00440414\n",
      "[257]\ttrain-auc:0.913263+0.00133873\ttest-auc:0.898667+0.00438245\n",
      "[258]\ttrain-auc:0.913302+0.00132754\ttest-auc:0.898706+0.00439376\n",
      "[259]\ttrain-auc:0.913356+0.00133581\ttest-auc:0.898726+0.00439138\n",
      "[260]\ttrain-auc:0.91342+0.00135105\ttest-auc:0.898819+0.00431854\n",
      "[261]\ttrain-auc:0.913461+0.00135287\ttest-auc:0.898818+0.00429389\n",
      "[262]\ttrain-auc:0.913511+0.00133427\ttest-auc:0.89886+0.00427124\n",
      "[263]\ttrain-auc:0.913555+0.00133552\ttest-auc:0.898918+0.00428112\n",
      "[264]\ttrain-auc:0.91359+0.00133794\ttest-auc:0.898952+0.0042707\n",
      "[265]\ttrain-auc:0.913647+0.00134753\ttest-auc:0.898964+0.00426563\n",
      "[266]\ttrain-auc:0.913688+0.00133466\ttest-auc:0.898992+0.00429107\n",
      "[267]\ttrain-auc:0.913728+0.00133368\ttest-auc:0.899022+0.00425907\n",
      "[268]\ttrain-auc:0.913758+0.00132703\ttest-auc:0.899039+0.004215\n",
      "[269]\ttrain-auc:0.913804+0.0013257\ttest-auc:0.899084+0.00416096\n",
      "[270]\ttrain-auc:0.913854+0.00132163\ttest-auc:0.899091+0.0041594\n",
      "[271]\ttrain-auc:0.913904+0.00132044\ttest-auc:0.899119+0.00416648\n",
      "[272]\ttrain-auc:0.913932+0.00133449\ttest-auc:0.89912+0.00415235\n",
      "[273]\ttrain-auc:0.913986+0.00134461\ttest-auc:0.899135+0.00414669\n",
      "[274]\ttrain-auc:0.914042+0.00134973\ttest-auc:0.899145+0.00413157\n",
      "[275]\ttrain-auc:0.9141+0.00135194\ttest-auc:0.899169+0.00418905\n",
      "[276]\ttrain-auc:0.914156+0.0013506\ttest-auc:0.899182+0.00419339\n",
      "[277]\ttrain-auc:0.914212+0.00135126\ttest-auc:0.899175+0.00416474\n",
      "[278]\ttrain-auc:0.914271+0.00136676\ttest-auc:0.899166+0.00416835\n",
      "[279]\ttrain-auc:0.914311+0.00137143\ttest-auc:0.899204+0.00415689\n",
      "[280]\ttrain-auc:0.914354+0.00135123\ttest-auc:0.899235+0.00421621\n",
      "[281]\ttrain-auc:0.914389+0.00136893\ttest-auc:0.899279+0.00424499\n",
      "[282]\ttrain-auc:0.914431+0.001371\ttest-auc:0.899287+0.00424546\n",
      "[283]\ttrain-auc:0.914497+0.00137523\ttest-auc:0.899269+0.0042654\n",
      "[284]\ttrain-auc:0.914553+0.00137449\ttest-auc:0.899306+0.00426957\n",
      "[285]\ttrain-auc:0.914607+0.0013733\ttest-auc:0.899343+0.00426686\n",
      "[286]\ttrain-auc:0.91465+0.00138237\ttest-auc:0.899354+0.00424303\n",
      "[287]\ttrain-auc:0.914703+0.00138664\ttest-auc:0.899369+0.00423352\n",
      "[288]\ttrain-auc:0.914762+0.00138455\ttest-auc:0.899392+0.00419053\n",
      "[289]\ttrain-auc:0.914811+0.00138605\ttest-auc:0.89937+0.00422554\n",
      "[290]\ttrain-auc:0.914846+0.00138472\ttest-auc:0.899363+0.00422325\n",
      "[291]\ttrain-auc:0.914899+0.00138276\ttest-auc:0.899417+0.00424998\n",
      "[292]\ttrain-auc:0.914941+0.0013906\ttest-auc:0.899422+0.0042396\n",
      "[293]\ttrain-auc:0.91499+0.00138979\ttest-auc:0.899404+0.00423903\n",
      "[294]\ttrain-auc:0.915035+0.00138933\ttest-auc:0.899415+0.00424189\n",
      "[295]\ttrain-auc:0.915098+0.00138894\ttest-auc:0.899456+0.00424128\n",
      "[296]\ttrain-auc:0.915133+0.00139609\ttest-auc:0.899457+0.00424512\n",
      "[297]\ttrain-auc:0.915169+0.00139919\ttest-auc:0.899451+0.00424073\n",
      "[298]\ttrain-auc:0.915233+0.00139145\ttest-auc:0.899467+0.00429445\n",
      "[299]\ttrain-auc:0.915283+0.00138036\ttest-auc:0.899444+0.00431385\n",
      "[300]\ttrain-auc:0.915327+0.00138563\ttest-auc:0.899462+0.00430739\n",
      "[301]\ttrain-auc:0.915377+0.0013971\ttest-auc:0.899487+0.004301\n",
      "[302]\ttrain-auc:0.91542+0.00138822\ttest-auc:0.89948+0.00430512\n",
      "[303]\ttrain-auc:0.915464+0.00140174\ttest-auc:0.899492+0.0042609\n",
      "[304]\ttrain-auc:0.915502+0.00140626\ttest-auc:0.899512+0.00426682\n",
      "[305]\ttrain-auc:0.915558+0.00142359\ttest-auc:0.899515+0.00423187\n",
      "[306]\ttrain-auc:0.915611+0.00141691\ttest-auc:0.899532+0.00422754\n",
      "[307]\ttrain-auc:0.915651+0.00143145\ttest-auc:0.899536+0.00425727\n",
      "[308]\ttrain-auc:0.915695+0.00141087\ttest-auc:0.899551+0.0042482\n",
      "[309]\ttrain-auc:0.915743+0.00140953\ttest-auc:0.899573+0.00426268\n",
      "[310]\ttrain-auc:0.915802+0.00140835\ttest-auc:0.899626+0.00428007\n",
      "[311]\ttrain-auc:0.915829+0.00139621\ttest-auc:0.899668+0.00427463\n",
      "[312]\ttrain-auc:0.915891+0.00140337\ttest-auc:0.899694+0.00426471\n",
      "[313]\ttrain-auc:0.915936+0.00141018\ttest-auc:0.89971+0.00429576\n",
      "[314]\ttrain-auc:0.916006+0.00144242\ttest-auc:0.899718+0.00428077\n",
      "[315]\ttrain-auc:0.916055+0.00143332\ttest-auc:0.899727+0.00424552\n",
      "[316]\ttrain-auc:0.916098+0.00141909\ttest-auc:0.899745+0.0042591\n",
      "[317]\ttrain-auc:0.916144+0.00141685\ttest-auc:0.899754+0.00424785\n",
      "[318]\ttrain-auc:0.916187+0.00141849\ttest-auc:0.899764+0.00426886\n",
      "[319]\ttrain-auc:0.916253+0.00142869\ttest-auc:0.899802+0.00427391\n",
      "[320]\ttrain-auc:0.916305+0.00145027\ttest-auc:0.899809+0.00424021\n",
      "[321]\ttrain-auc:0.916354+0.00145044\ttest-auc:0.899839+0.00420324\n",
      "[322]\ttrain-auc:0.916393+0.00144766\ttest-auc:0.899852+0.0041968\n",
      "[323]\ttrain-auc:0.916438+0.00143499\ttest-auc:0.899849+0.00421079\n",
      "[324]\ttrain-auc:0.916496+0.00142299\ttest-auc:0.89986+0.00422343\n",
      "[325]\ttrain-auc:0.916542+0.00141964\ttest-auc:0.899854+0.00422403\n",
      "[326]\ttrain-auc:0.916578+0.00142643\ttest-auc:0.899843+0.0042094\n",
      "[327]\ttrain-auc:0.91662+0.00141959\ttest-auc:0.899874+0.00418471\n",
      "[328]\ttrain-auc:0.916671+0.00142336\ttest-auc:0.899903+0.00417638\n",
      "[329]\ttrain-auc:0.916715+0.00142181\ttest-auc:0.899887+0.00417501\n",
      "[330]\ttrain-auc:0.916762+0.00141932\ttest-auc:0.899881+0.00418149\n",
      "[331]\ttrain-auc:0.916802+0.00142379\ttest-auc:0.899904+0.00417857\n",
      "[332]\ttrain-auc:0.916846+0.00142134\ttest-auc:0.899927+0.00419391\n",
      "[333]\ttrain-auc:0.916906+0.00142361\ttest-auc:0.89995+0.00419487\n",
      "[334]\ttrain-auc:0.916942+0.00141121\ttest-auc:0.899932+0.00418649\n",
      "[335]\ttrain-auc:0.916996+0.00138735\ttest-auc:0.899927+0.0041865\n",
      "[336]\ttrain-auc:0.917046+0.00138644\ttest-auc:0.899943+0.00418473\n",
      "[337]\ttrain-auc:0.91708+0.00139111\ttest-auc:0.899975+0.00415926\n",
      "[338]\ttrain-auc:0.917123+0.00142204\ttest-auc:0.899985+0.00414942\n",
      "[339]\ttrain-auc:0.917166+0.00140864\ttest-auc:0.900004+0.0041643\n",
      "[340]\ttrain-auc:0.917227+0.00141195\ttest-auc:0.899992+0.00417768\n",
      "[341]\ttrain-auc:0.917261+0.00141419\ttest-auc:0.900001+0.00415973\n",
      "[342]\ttrain-auc:0.917316+0.00140287\ttest-auc:0.900002+0.00414541\n",
      "[343]\ttrain-auc:0.91736+0.0014075\ttest-auc:0.90002+0.00419954\n",
      "[344]\ttrain-auc:0.917396+0.00141097\ttest-auc:0.90005+0.00421219\n",
      "[345]\ttrain-auc:0.917435+0.00141278\ttest-auc:0.900076+0.0042018\n",
      "[346]\ttrain-auc:0.917474+0.0014099\ttest-auc:0.900097+0.00418488\n",
      "[347]\ttrain-auc:0.917514+0.00140102\ttest-auc:0.900112+0.00418066\n",
      "[348]\ttrain-auc:0.917559+0.00140327\ttest-auc:0.90014+0.00415945\n",
      "[349]\ttrain-auc:0.9176+0.00140003\ttest-auc:0.900154+0.0041751\n",
      "[350]\ttrain-auc:0.917634+0.00141019\ttest-auc:0.900155+0.00418984\n",
      "[351]\ttrain-auc:0.917677+0.00140444\ttest-auc:0.900172+0.00418318\n",
      "[352]\ttrain-auc:0.917717+0.00141649\ttest-auc:0.900191+0.00417778\n",
      "[353]\ttrain-auc:0.917767+0.00141049\ttest-auc:0.900206+0.00417017\n",
      "[354]\ttrain-auc:0.917812+0.0014149\ttest-auc:0.900212+0.00419276\n",
      "[355]\ttrain-auc:0.917858+0.0014034\ttest-auc:0.900226+0.00423362\n",
      "[356]\ttrain-auc:0.917905+0.00141139\ttest-auc:0.900207+0.0042681\n",
      "[357]\ttrain-auc:0.917947+0.00140107\ttest-auc:0.900231+0.00427042\n",
      "[358]\ttrain-auc:0.918011+0.00138001\ttest-auc:0.900277+0.00429169\n",
      "[359]\ttrain-auc:0.91805+0.00137798\ttest-auc:0.900271+0.00432035\n",
      "[360]\ttrain-auc:0.918078+0.00138974\ttest-auc:0.900276+0.00430694\n",
      "[361]\ttrain-auc:0.918129+0.00138786\ttest-auc:0.900296+0.0043302\n",
      "[362]\ttrain-auc:0.918164+0.00138756\ttest-auc:0.900329+0.00431137\n",
      "[363]\ttrain-auc:0.918202+0.00138912\ttest-auc:0.900371+0.00433924\n",
      "[364]\ttrain-auc:0.918234+0.00136794\ttest-auc:0.900387+0.00433554\n",
      "[365]\ttrain-auc:0.918279+0.00137419\ttest-auc:0.900428+0.00435582\n",
      "[366]\ttrain-auc:0.918312+0.00136009\ttest-auc:0.900433+0.00436585\n",
      "[367]\ttrain-auc:0.918361+0.00134911\ttest-auc:0.900448+0.00437693\n",
      "[368]\ttrain-auc:0.918402+0.00135171\ttest-auc:0.900448+0.00436593\n",
      "[369]\ttrain-auc:0.918429+0.00135497\ttest-auc:0.900454+0.00437054\n",
      "[370]\ttrain-auc:0.918466+0.00135031\ttest-auc:0.900508+0.00434319\n",
      "[371]\ttrain-auc:0.918526+0.00134063\ttest-auc:0.900513+0.00435827\n",
      "[372]\ttrain-auc:0.91857+0.00133331\ttest-auc:0.900536+0.00434328\n",
      "[373]\ttrain-auc:0.918625+0.00134009\ttest-auc:0.900551+0.00433598\n",
      "[374]\ttrain-auc:0.918662+0.00133636\ttest-auc:0.900562+0.00433405\n",
      "[375]\ttrain-auc:0.918704+0.00132364\ttest-auc:0.900578+0.00435902\n",
      "[376]\ttrain-auc:0.918764+0.00134394\ttest-auc:0.900578+0.00434726\n",
      "[377]\ttrain-auc:0.918796+0.00134669\ttest-auc:0.900599+0.00435319\n",
      "[378]\ttrain-auc:0.91884+0.00134448\ttest-auc:0.900646+0.00436344\n",
      "[379]\ttrain-auc:0.918889+0.00133007\ttest-auc:0.900684+0.00436773\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[380]\ttrain-auc:0.918918+0.00132442\ttest-auc:0.900691+0.00434758\n",
      "[381]\ttrain-auc:0.918952+0.00133747\ttest-auc:0.900706+0.00433337\n",
      "[382]\ttrain-auc:0.918999+0.0013381\ttest-auc:0.900721+0.00436069\n",
      "[383]\ttrain-auc:0.919039+0.00135251\ttest-auc:0.900709+0.00437696\n",
      "[384]\ttrain-auc:0.919084+0.00135114\ttest-auc:0.900739+0.00438695\n",
      "[385]\ttrain-auc:0.919127+0.00134204\ttest-auc:0.900735+0.00441849\n",
      "[386]\ttrain-auc:0.919177+0.00134859\ttest-auc:0.90077+0.00437172\n",
      "[387]\ttrain-auc:0.919226+0.00135433\ttest-auc:0.900818+0.00437058\n",
      "[388]\ttrain-auc:0.919263+0.00134832\ttest-auc:0.900831+0.00435849\n",
      "[389]\ttrain-auc:0.919308+0.00134095\ttest-auc:0.900831+0.0043609\n",
      "[390]\ttrain-auc:0.919362+0.0013416\ttest-auc:0.900864+0.00436275\n",
      "[391]\ttrain-auc:0.919408+0.00134318\ttest-auc:0.900839+0.00436301\n",
      "[392]\ttrain-auc:0.919448+0.00134144\ttest-auc:0.900871+0.00438133\n",
      "[393]\ttrain-auc:0.919491+0.00134929\ttest-auc:0.900873+0.00439688\n",
      "[394]\ttrain-auc:0.919532+0.00137249\ttest-auc:0.900916+0.00438954\n",
      "[395]\ttrain-auc:0.919577+0.0013635\ttest-auc:0.900935+0.00438628\n",
      "[396]\ttrain-auc:0.919629+0.00136485\ttest-auc:0.900916+0.00441443\n",
      "[397]\ttrain-auc:0.919667+0.00136894\ttest-auc:0.900927+0.0044305\n",
      "[398]\ttrain-auc:0.919717+0.00136618\ttest-auc:0.900902+0.00446894\n",
      "[399]\ttrain-auc:0.919756+0.00137823\ttest-auc:0.900892+0.00448395\n",
      "[400]\ttrain-auc:0.919802+0.00137359\ttest-auc:0.900903+0.00446661\n",
      "[401]\ttrain-auc:0.919843+0.0013753\ttest-auc:0.900894+0.00449772\n",
      "[402]\ttrain-auc:0.919894+0.00137314\ttest-auc:0.900925+0.00452916\n",
      "[403]\ttrain-auc:0.919922+0.00136727\ttest-auc:0.900917+0.0045429\n",
      "[404]\ttrain-auc:0.919961+0.00136939\ttest-auc:0.900942+0.0045435\n",
      "[405]\ttrain-auc:0.920003+0.00135716\ttest-auc:0.900971+0.00455773\n",
      "[406]\ttrain-auc:0.920049+0.00135418\ttest-auc:0.900972+0.00456872\n",
      "[407]\ttrain-auc:0.920086+0.00136892\ttest-auc:0.900982+0.00455762\n",
      "[408]\ttrain-auc:0.920126+0.00137857\ttest-auc:0.900972+0.00454983\n",
      "[409]\ttrain-auc:0.92017+0.001369\ttest-auc:0.900988+0.00455781\n",
      "[410]\ttrain-auc:0.920214+0.00137056\ttest-auc:0.901008+0.00453474\n",
      "[411]\ttrain-auc:0.920248+0.00137974\ttest-auc:0.900989+0.00454438\n",
      "[412]\ttrain-auc:0.920289+0.00136831\ttest-auc:0.901009+0.00454961\n",
      "[413]\ttrain-auc:0.920338+0.00136257\ttest-auc:0.90102+0.00456188\n",
      "[414]\ttrain-auc:0.92037+0.00135904\ttest-auc:0.901008+0.00457918\n",
      "[415]\ttrain-auc:0.920406+0.0013646\ttest-auc:0.901048+0.00456256\n",
      "[416]\ttrain-auc:0.920446+0.00136044\ttest-auc:0.90103+0.00455214\n",
      "[417]\ttrain-auc:0.920487+0.0013459\ttest-auc:0.901049+0.0045529\n",
      "[418]\ttrain-auc:0.92053+0.00132814\ttest-auc:0.90107+0.00454367\n",
      "[419]\ttrain-auc:0.920572+0.00133131\ttest-auc:0.901087+0.00456577\n",
      "[420]\ttrain-auc:0.920601+0.00133153\ttest-auc:0.901089+0.00454239\n",
      "[421]\ttrain-auc:0.920646+0.00134004\ttest-auc:0.901086+0.00453863\n",
      "[422]\ttrain-auc:0.920672+0.00133514\ttest-auc:0.901116+0.00456012\n",
      "[423]\ttrain-auc:0.920698+0.00132955\ttest-auc:0.901147+0.00458438\n",
      "[424]\ttrain-auc:0.920752+0.0013332\ttest-auc:0.901132+0.00459013\n",
      "[425]\ttrain-auc:0.920799+0.00133554\ttest-auc:0.901167+0.00456933\n",
      "[426]\ttrain-auc:0.920824+0.00133994\ttest-auc:0.901169+0.00454294\n",
      "[427]\ttrain-auc:0.920867+0.00134915\ttest-auc:0.901188+0.00453939\n",
      "[428]\ttrain-auc:0.920908+0.00134321\ttest-auc:0.901205+0.00453878\n",
      "[429]\ttrain-auc:0.920947+0.00132944\ttest-auc:0.901209+0.00452575\n",
      "[430]\ttrain-auc:0.920985+0.00132678\ttest-auc:0.901212+0.00450549\n",
      "[431]\ttrain-auc:0.921033+0.00132582\ttest-auc:0.901244+0.00447883\n",
      "[432]\ttrain-auc:0.921071+0.00132582\ttest-auc:0.901233+0.00446818\n",
      "[433]\ttrain-auc:0.921113+0.00132536\ttest-auc:0.901238+0.00445842\n",
      "[434]\ttrain-auc:0.921151+0.00131857\ttest-auc:0.901264+0.00448488\n",
      "[435]\ttrain-auc:0.921193+0.001317\ttest-auc:0.901247+0.00449466\n",
      "[436]\ttrain-auc:0.921223+0.00131225\ttest-auc:0.901293+0.00448144\n",
      "[437]\ttrain-auc:0.921256+0.0013153\ttest-auc:0.901293+0.00450717\n",
      "[438]\ttrain-auc:0.92129+0.00131815\ttest-auc:0.901282+0.0045024\n",
      "[439]\ttrain-auc:0.921331+0.00131392\ttest-auc:0.901287+0.00453341\n",
      "[440]\ttrain-auc:0.921368+0.00130445\ttest-auc:0.901282+0.00455528\n",
      "[441]\ttrain-auc:0.921404+0.00130124\ttest-auc:0.901287+0.00458999\n",
      "[442]\ttrain-auc:0.921435+0.00129645\ttest-auc:0.901262+0.0045802\n",
      "[443]\ttrain-auc:0.921479+0.0012913\ttest-auc:0.901271+0.00458883\n",
      "[444]\ttrain-auc:0.921523+0.00128914\ttest-auc:0.901291+0.00457029\n",
      "[445]\ttrain-auc:0.921567+0.00128919\ttest-auc:0.901306+0.00458884\n",
      "[446]\ttrain-auc:0.921609+0.00129648\ttest-auc:0.901311+0.00458845\n",
      "[447]\ttrain-auc:0.921643+0.0013042\ttest-auc:0.901312+0.00459745\n",
      "[448]\ttrain-auc:0.921681+0.00131224\ttest-auc:0.901292+0.00458077\n",
      "[449]\ttrain-auc:0.921713+0.00132274\ttest-auc:0.901279+0.00459946\n",
      "[450]\ttrain-auc:0.921744+0.00133015\ttest-auc:0.901301+0.00457419\n",
      "[451]\ttrain-auc:0.9218+0.00132562\ttest-auc:0.901289+0.00460396\n",
      "[452]\ttrain-auc:0.921848+0.00130736\ttest-auc:0.901315+0.00460186\n",
      "[453]\ttrain-auc:0.921887+0.00133322\ttest-auc:0.901319+0.00457639\n",
      "[454]\ttrain-auc:0.921928+0.00133028\ttest-auc:0.901317+0.00458231\n",
      "[455]\ttrain-auc:0.921969+0.00132554\ttest-auc:0.901349+0.0046006\n",
      "[456]\ttrain-auc:0.922021+0.00132415\ttest-auc:0.901353+0.00460696\n",
      "[457]\ttrain-auc:0.92205+0.00131721\ttest-auc:0.901364+0.00460777\n",
      "[458]\ttrain-auc:0.922107+0.00130461\ttest-auc:0.901383+0.0045988\n",
      "[459]\ttrain-auc:0.92215+0.00131761\ttest-auc:0.901369+0.00459595\n",
      "[460]\ttrain-auc:0.92218+0.00132054\ttest-auc:0.901358+0.00458146\n",
      "[461]\ttrain-auc:0.922224+0.00133608\ttest-auc:0.901367+0.00459804\n",
      "[462]\ttrain-auc:0.922263+0.00133793\ttest-auc:0.901375+0.00461243\n",
      "[463]\ttrain-auc:0.922313+0.00134361\ttest-auc:0.901374+0.00461143\n",
      "[464]\ttrain-auc:0.922357+0.00135457\ttest-auc:0.901387+0.00460666\n",
      "[465]\ttrain-auc:0.922403+0.00134679\ttest-auc:0.901377+0.0045882\n",
      "[466]\ttrain-auc:0.922439+0.00135595\ttest-auc:0.90138+0.00460165\n",
      "[467]\ttrain-auc:0.922483+0.00135102\ttest-auc:0.901418+0.0046146\n",
      "[468]\ttrain-auc:0.922508+0.00134712\ttest-auc:0.901405+0.00457191\n",
      "[469]\ttrain-auc:0.922544+0.00134369\ttest-auc:0.901407+0.00459012\n",
      "[470]\ttrain-auc:0.922574+0.00134463\ttest-auc:0.901418+0.00458044\n",
      "[471]\ttrain-auc:0.922617+0.00133892\ttest-auc:0.901392+0.00456309\n",
      "[472]\ttrain-auc:0.922665+0.00135252\ttest-auc:0.901409+0.00456439\n",
      "[473]\ttrain-auc:0.922702+0.00134842\ttest-auc:0.901419+0.0045635\n",
      "[474]\ttrain-auc:0.922748+0.0013481\ttest-auc:0.901432+0.0045652\n",
      "[475]\ttrain-auc:0.922785+0.00135106\ttest-auc:0.901442+0.00457024\n",
      "[476]\ttrain-auc:0.922817+0.00135649\ttest-auc:0.901418+0.00457784\n",
      "[477]\ttrain-auc:0.922854+0.00134986\ttest-auc:0.901443+0.00459349\n",
      "[478]\ttrain-auc:0.922888+0.00134911\ttest-auc:0.901461+0.00456834\n",
      "[479]\ttrain-auc:0.922934+0.001341\ttest-auc:0.901467+0.0045797\n",
      "[480]\ttrain-auc:0.92297+0.00134703\ttest-auc:0.901465+0.00457957\n",
      "[481]\ttrain-auc:0.923005+0.00133745\ttest-auc:0.901479+0.0045592\n",
      "[482]\ttrain-auc:0.923045+0.00133969\ttest-auc:0.901488+0.00456047\n",
      "[483]\ttrain-auc:0.923067+0.00133423\ttest-auc:0.901483+0.00458068\n",
      "[484]\ttrain-auc:0.923105+0.00131513\ttest-auc:0.901488+0.00457515\n",
      "[485]\ttrain-auc:0.923148+0.00131744\ttest-auc:0.901507+0.00456717\n",
      "[486]\ttrain-auc:0.923184+0.00130357\ttest-auc:0.901509+0.00457195\n",
      "[487]\ttrain-auc:0.923226+0.00130551\ttest-auc:0.901506+0.00457684\n",
      "[488]\ttrain-auc:0.923271+0.00129885\ttest-auc:0.90151+0.00460513\n",
      "[489]\ttrain-auc:0.923311+0.00129957\ttest-auc:0.901471+0.00459867\n",
      "[490]\ttrain-auc:0.923352+0.00129989\ttest-auc:0.901479+0.00462414\n",
      "[491]\ttrain-auc:0.923384+0.0013026\ttest-auc:0.901499+0.00462579\n",
      "[492]\ttrain-auc:0.923418+0.00129162\ttest-auc:0.901514+0.00462185\n",
      "[493]\ttrain-auc:0.923448+0.00128451\ttest-auc:0.901506+0.00459476\n",
      "[494]\ttrain-auc:0.923487+0.00129992\ttest-auc:0.901524+0.0046011\n",
      "[495]\ttrain-auc:0.92352+0.00129496\ttest-auc:0.901555+0.00460779\n",
      "[496]\ttrain-auc:0.923572+0.00129777\ttest-auc:0.901558+0.00461618\n",
      "[497]\ttrain-auc:0.923601+0.00130051\ttest-auc:0.901581+0.00460021\n",
      "[498]\ttrain-auc:0.923643+0.00130492\ttest-auc:0.901596+0.00458088\n",
      "[499]\ttrain-auc:0.923681+0.0012969\ttest-auc:0.901588+0.00458332\n",
      "[500]\ttrain-auc:0.923725+0.00130012\ttest-auc:0.901591+0.00459957\n",
      "[501]\ttrain-auc:0.923762+0.00129708\ttest-auc:0.901615+0.00459946\n",
      "[502]\ttrain-auc:0.923798+0.0012931\ttest-auc:0.901609+0.00461818\n",
      "[503]\ttrain-auc:0.92383+0.00128095\ttest-auc:0.901631+0.00465178\n",
      "[504]\ttrain-auc:0.923873+0.00128352\ttest-auc:0.901642+0.00464293\n",
      "[505]\ttrain-auc:0.923921+0.00127815\ttest-auc:0.90163+0.00464823\n",
      "[506]\ttrain-auc:0.92395+0.00128564\ttest-auc:0.901635+0.00463071\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[507]\ttrain-auc:0.923992+0.00128825\ttest-auc:0.901634+0.00463799\n",
      "[508]\ttrain-auc:0.924037+0.00129792\ttest-auc:0.901638+0.00464314\n",
      "[509]\ttrain-auc:0.924069+0.00128914\ttest-auc:0.90164+0.0046332\n",
      "[510]\ttrain-auc:0.924103+0.00127821\ttest-auc:0.901641+0.00462731\n",
      "[511]\ttrain-auc:0.924146+0.00126389\ttest-auc:0.901681+0.00463891\n",
      "[512]\ttrain-auc:0.924176+0.0012615\ttest-auc:0.901712+0.00463217\n",
      "[513]\ttrain-auc:0.924224+0.00125107\ttest-auc:0.901717+0.0046269\n",
      "[514]\ttrain-auc:0.924265+0.00124583\ttest-auc:0.901725+0.00463655\n",
      "[515]\ttrain-auc:0.924305+0.00124316\ttest-auc:0.901712+0.00462237\n",
      "[516]\ttrain-auc:0.924345+0.00123278\ttest-auc:0.901715+0.00463823\n",
      "[517]\ttrain-auc:0.92439+0.00122231\ttest-auc:0.901722+0.00464911\n",
      "[518]\ttrain-auc:0.924416+0.00122628\ttest-auc:0.901716+0.00463821\n",
      "[519]\ttrain-auc:0.924447+0.00122497\ttest-auc:0.901738+0.00468489\n",
      "[520]\ttrain-auc:0.924485+0.00122976\ttest-auc:0.901749+0.00469276\n",
      "[521]\ttrain-auc:0.924526+0.00121393\ttest-auc:0.90173+0.00468123\n",
      "[522]\ttrain-auc:0.924561+0.00121418\ttest-auc:0.901762+0.00469534\n",
      "[523]\ttrain-auc:0.924594+0.00121505\ttest-auc:0.901784+0.00467564\n",
      "[524]\ttrain-auc:0.924629+0.00121146\ttest-auc:0.90181+0.00464519\n",
      "[525]\ttrain-auc:0.924659+0.00120327\ttest-auc:0.901801+0.00465301\n",
      "[526]\ttrain-auc:0.924698+0.00120678\ttest-auc:0.901785+0.00463296\n",
      "[527]\ttrain-auc:0.924745+0.0012185\ttest-auc:0.901782+0.00462579\n",
      "[528]\ttrain-auc:0.924788+0.00122248\ttest-auc:0.901772+0.00463381\n",
      "[529]\ttrain-auc:0.924812+0.0012219\ttest-auc:0.901754+0.00464302\n",
      "[530]\ttrain-auc:0.924858+0.00120904\ttest-auc:0.901765+0.00463816\n",
      "[531]\ttrain-auc:0.924899+0.00120508\ttest-auc:0.90178+0.0046348\n",
      "[532]\ttrain-auc:0.924929+0.00119016\ttest-auc:0.901795+0.00463836\n",
      "[533]\ttrain-auc:0.924966+0.00120539\ttest-auc:0.901792+0.00462912\n",
      "[534]\ttrain-auc:0.924998+0.00121009\ttest-auc:0.901787+0.00462175\n",
      "[535]\ttrain-auc:0.925026+0.00120282\ttest-auc:0.901809+0.00461396\n",
      "[536]\ttrain-auc:0.925043+0.00120786\ttest-auc:0.901807+0.00461342\n",
      "[537]\ttrain-auc:0.925083+0.00119506\ttest-auc:0.901833+0.00460764\n",
      "[538]\ttrain-auc:0.925115+0.0011934\ttest-auc:0.901833+0.0046124\n",
      "[539]\ttrain-auc:0.925154+0.0011842\ttest-auc:0.901819+0.00460993\n",
      "[540]\ttrain-auc:0.925188+0.00117611\ttest-auc:0.901826+0.00462829\n",
      "[541]\ttrain-auc:0.925227+0.00116702\ttest-auc:0.901813+0.00462221\n",
      "[542]\ttrain-auc:0.925262+0.00116498\ttest-auc:0.901812+0.00462685\n",
      "[543]\ttrain-auc:0.925301+0.00117409\ttest-auc:0.901828+0.00464829\n",
      "[544]\ttrain-auc:0.925336+0.00117795\ttest-auc:0.901843+0.00465797\n",
      "[545]\ttrain-auc:0.92537+0.00118158\ttest-auc:0.901841+0.00464335\n",
      "[546]\ttrain-auc:0.925387+0.00118013\ttest-auc:0.901832+0.00464136\n",
      "[547]\ttrain-auc:0.925432+0.00117724\ttest-auc:0.901828+0.00461938\n",
      "[548]\ttrain-auc:0.925466+0.00116941\ttest-auc:0.901848+0.00462606\n",
      "[549]\ttrain-auc:0.925503+0.00116374\ttest-auc:0.901847+0.00463023\n",
      "[550]\ttrain-auc:0.925541+0.00117521\ttest-auc:0.901846+0.00463312\n",
      "[551]\ttrain-auc:0.925573+0.00118022\ttest-auc:0.901839+0.00464202\n",
      "[552]\ttrain-auc:0.925614+0.00117909\ttest-auc:0.901828+0.00467697\n",
      "[553]\ttrain-auc:0.925643+0.00117531\ttest-auc:0.901848+0.00467703\n",
      "[554]\ttrain-auc:0.925686+0.00117494\ttest-auc:0.901844+0.00467195\n",
      "[555]\ttrain-auc:0.925717+0.00117574\ttest-auc:0.901821+0.00468145\n",
      "[556]\ttrain-auc:0.925756+0.00117454\ttest-auc:0.901823+0.00466283\n",
      "[557]\ttrain-auc:0.925795+0.00117392\ttest-auc:0.901821+0.00469356\n",
      "[558]\ttrain-auc:0.925842+0.00116444\ttest-auc:0.901849+0.00465518\n",
      "[559]\ttrain-auc:0.925877+0.00116006\ttest-auc:0.901876+0.00464835\n",
      "[560]\ttrain-auc:0.925918+0.00114797\ttest-auc:0.901884+0.00464526\n",
      "[561]\ttrain-auc:0.925944+0.00115719\ttest-auc:0.901865+0.00464261\n",
      "[562]\ttrain-auc:0.925977+0.00114574\ttest-auc:0.901871+0.00466433\n",
      "[563]\ttrain-auc:0.926003+0.00114672\ttest-auc:0.901851+0.00464798\n",
      "[564]\ttrain-auc:0.926045+0.00114134\ttest-auc:0.901883+0.00465696\n",
      "[565]\ttrain-auc:0.926082+0.00113889\ttest-auc:0.901884+0.00465212\n",
      "[566]\ttrain-auc:0.926114+0.00114494\ttest-auc:0.901889+0.00463518\n",
      "[567]\ttrain-auc:0.926141+0.00114233\ttest-auc:0.901898+0.00463105\n",
      "[568]\ttrain-auc:0.92618+0.00114887\ttest-auc:0.901888+0.00462823\n",
      "[569]\ttrain-auc:0.926221+0.0011531\ttest-auc:0.901892+0.00462661\n",
      "[570]\ttrain-auc:0.926266+0.00116123\ttest-auc:0.90187+0.00464923\n",
      "[571]\ttrain-auc:0.926309+0.00116202\ttest-auc:0.901864+0.00464481\n",
      "[572]\ttrain-auc:0.92635+0.00115237\ttest-auc:0.901873+0.00464572\n",
      "[573]\ttrain-auc:0.926392+0.00115221\ttest-auc:0.901884+0.00465813\n",
      "[574]\ttrain-auc:0.926436+0.00115561\ttest-auc:0.901869+0.0046559\n",
      "[575]\ttrain-auc:0.926471+0.00115376\ttest-auc:0.90189+0.00465736\n",
      "[576]\ttrain-auc:0.926504+0.0011567\ttest-auc:0.901911+0.00465596\n",
      "[577]\ttrain-auc:0.926542+0.00116013\ttest-auc:0.901903+0.0046641\n",
      "[578]\ttrain-auc:0.92659+0.00115547\ttest-auc:0.901912+0.00467563\n",
      "[579]\ttrain-auc:0.926613+0.00115261\ttest-auc:0.901918+0.00468398\n",
      "[580]\ttrain-auc:0.926646+0.00114484\ttest-auc:0.901911+0.00470807\n",
      "[581]\ttrain-auc:0.926688+0.00115529\ttest-auc:0.901901+0.00472347\n",
      "[582]\ttrain-auc:0.926718+0.00115088\ttest-auc:0.9019+0.00472563\n",
      "[583]\ttrain-auc:0.926744+0.00114364\ttest-auc:0.901911+0.00473414\n",
      "[584]\ttrain-auc:0.926764+0.00115321\ttest-auc:0.9019+0.00474788\n",
      "[585]\ttrain-auc:0.926798+0.00115956\ttest-auc:0.901901+0.00474492\n",
      "[586]\ttrain-auc:0.926836+0.0011508\ttest-auc:0.901914+0.00475464\n",
      "[587]\ttrain-auc:0.926856+0.00114265\ttest-auc:0.901921+0.00475181\n",
      "[588]\ttrain-auc:0.926902+0.00114327\ttest-auc:0.901924+0.00475661\n",
      "[589]\ttrain-auc:0.92694+0.00114271\ttest-auc:0.901913+0.00476045\n",
      "[590]\ttrain-auc:0.926972+0.0011424\ttest-auc:0.901901+0.00474571\n",
      "[591]\ttrain-auc:0.927008+0.0011526\ttest-auc:0.901889+0.0047437\n",
      "[592]\ttrain-auc:0.927043+0.00113669\ttest-auc:0.901892+0.00474689\n",
      "[593]\ttrain-auc:0.927065+0.00114084\ttest-auc:0.901898+0.00477019\n",
      "[594]\ttrain-auc:0.927105+0.00113167\ttest-auc:0.901893+0.00476898\n",
      "[595]\ttrain-auc:0.927124+0.00113244\ttest-auc:0.901902+0.00475061\n",
      "[596]\ttrain-auc:0.927166+0.00113783\ttest-auc:0.901926+0.00477174\n",
      "[597]\ttrain-auc:0.927186+0.00114541\ttest-auc:0.901939+0.00477001\n",
      "[598]\ttrain-auc:0.92722+0.00114792\ttest-auc:0.901936+0.00478015\n",
      "[599]\ttrain-auc:0.927246+0.00113914\ttest-auc:0.901947+0.0047775\n",
      "[600]\ttrain-auc:0.92728+0.00113892\ttest-auc:0.901939+0.00480276\n",
      "[601]\ttrain-auc:0.927306+0.00115226\ttest-auc:0.901958+0.00479476\n",
      "[602]\ttrain-auc:0.927347+0.00115649\ttest-auc:0.901952+0.00481236\n",
      "[603]\ttrain-auc:0.927396+0.0011524\ttest-auc:0.901942+0.00481913\n",
      "[604]\ttrain-auc:0.927427+0.00115671\ttest-auc:0.90193+0.00478387\n",
      "[605]\ttrain-auc:0.927445+0.00116262\ttest-auc:0.901922+0.00478319\n",
      "[606]\ttrain-auc:0.927482+0.0011607\ttest-auc:0.901931+0.00479333\n",
      "[607]\ttrain-auc:0.927517+0.0011599\ttest-auc:0.901935+0.0047951\n",
      "[608]\ttrain-auc:0.927545+0.0011524\ttest-auc:0.901938+0.00478836\n",
      "[609]\ttrain-auc:0.927583+0.00115557\ttest-auc:0.901971+0.0047734\n",
      "[610]\ttrain-auc:0.927611+0.00114635\ttest-auc:0.901971+0.00476204\n",
      "[611]\ttrain-auc:0.92763+0.00114698\ttest-auc:0.901956+0.00476115\n",
      "[612]\ttrain-auc:0.927671+0.00114863\ttest-auc:0.901961+0.00478985\n",
      "[613]\ttrain-auc:0.927704+0.00114033\ttest-auc:0.901951+0.00478788\n",
      "[614]\ttrain-auc:0.927746+0.00114136\ttest-auc:0.901937+0.00478923\n",
      "[615]\ttrain-auc:0.927783+0.00114898\ttest-auc:0.901931+0.0047932\n",
      "[616]\ttrain-auc:0.92782+0.00115092\ttest-auc:0.901934+0.0047946\n",
      "[617]\ttrain-auc:0.927861+0.00116075\ttest-auc:0.901957+0.00482839\n",
      "[618]\ttrain-auc:0.927891+0.00115714\ttest-auc:0.901945+0.00482752\n",
      "[619]\ttrain-auc:0.927923+0.00116188\ttest-auc:0.901957+0.00483911\n",
      "[620]\ttrain-auc:0.927974+0.00115966\ttest-auc:0.901966+0.00481993\n",
      "[621]\ttrain-auc:0.928009+0.00117093\ttest-auc:0.901971+0.00481096\n",
      "[622]\ttrain-auc:0.928053+0.00118231\ttest-auc:0.901982+0.00484187\n",
      "[623]\ttrain-auc:0.928078+0.00119127\ttest-auc:0.901988+0.00483848\n",
      "[624]\ttrain-auc:0.92811+0.00119387\ttest-auc:0.901991+0.00484128\n",
      "[625]\ttrain-auc:0.928152+0.00119161\ttest-auc:0.901997+0.0048412\n",
      "[626]\ttrain-auc:0.928194+0.00120297\ttest-auc:0.901981+0.00485987\n",
      "[627]\ttrain-auc:0.928232+0.00119884\ttest-auc:0.901985+0.00485255\n",
      "[628]\ttrain-auc:0.928272+0.00119548\ttest-auc:0.901973+0.00486069\n",
      "[629]\ttrain-auc:0.928302+0.0012086\ttest-auc:0.901951+0.00486572\n",
      "[630]\ttrain-auc:0.928328+0.00119876\ttest-auc:0.901957+0.00486261\n",
      "[631]\ttrain-auc:0.928351+0.0011872\ttest-auc:0.901968+0.00488976\n",
      "[632]\ttrain-auc:0.928381+0.00118792\ttest-auc:0.901998+0.00489822\n",
      "[633]\ttrain-auc:0.928422+0.00117733\ttest-auc:0.902015+0.00493119\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[634]\ttrain-auc:0.928453+0.00116948\ttest-auc:0.902013+0.00493753\n",
      "[635]\ttrain-auc:0.928481+0.00116989\ttest-auc:0.902018+0.00495468\n",
      "[636]\ttrain-auc:0.928512+0.00117515\ttest-auc:0.902004+0.00495179\n",
      "[637]\ttrain-auc:0.928552+0.00116251\ttest-auc:0.901998+0.0049517\n",
      "[638]\ttrain-auc:0.928591+0.00116804\ttest-auc:0.902002+0.00494417\n",
      "[639]\ttrain-auc:0.928622+0.00116823\ttest-auc:0.901998+0.0049729\n",
      "[640]\ttrain-auc:0.928651+0.00117017\ttest-auc:0.902005+0.00497098\n",
      "[641]\ttrain-auc:0.928682+0.00116383\ttest-auc:0.902002+0.00497578\n",
      "[642]\ttrain-auc:0.928722+0.00117042\ttest-auc:0.90199+0.00498451\n",
      "[643]\ttrain-auc:0.928748+0.00118103\ttest-auc:0.901978+0.00498496\n",
      "[644]\ttrain-auc:0.928779+0.00119025\ttest-auc:0.901974+0.0049963\n",
      "[645]\ttrain-auc:0.928827+0.00118595\ttest-auc:0.901985+0.00498818\n",
      "[646]\ttrain-auc:0.928865+0.00117702\ttest-auc:0.901998+0.0049688\n",
      "[647]\ttrain-auc:0.928886+0.00118955\ttest-auc:0.901985+0.00496064\n",
      "[648]\ttrain-auc:0.928934+0.00119453\ttest-auc:0.901991+0.00497236\n",
      "[649]\ttrain-auc:0.928966+0.00119399\ttest-auc:0.901984+0.00497464\n",
      "[650]\ttrain-auc:0.929009+0.00119\ttest-auc:0.901988+0.00496713\n",
      "[651]\ttrain-auc:0.929044+0.00118858\ttest-auc:0.902005+0.00494781\n",
      "[652]\ttrain-auc:0.929068+0.00117176\ttest-auc:0.901995+0.00495324\n",
      "[653]\ttrain-auc:0.929119+0.00117485\ttest-auc:0.901987+0.00495662\n",
      "[654]\ttrain-auc:0.929153+0.00116998\ttest-auc:0.901987+0.00495125\n",
      "[655]\ttrain-auc:0.929202+0.0011738\ttest-auc:0.901976+0.00496985\n",
      "[656]\ttrain-auc:0.929236+0.00115433\ttest-auc:0.901968+0.00497053\n",
      "[657]\ttrain-auc:0.929261+0.00115033\ttest-auc:0.901968+0.00497338\n",
      "[658]\ttrain-auc:0.929297+0.00115419\ttest-auc:0.901959+0.00496313\n",
      "[659]\ttrain-auc:0.929338+0.0011516\ttest-auc:0.901965+0.00497844\n",
      "[660]\ttrain-auc:0.929378+0.00114996\ttest-auc:0.901984+0.00497832\n",
      "[661]\ttrain-auc:0.929423+0.00114242\ttest-auc:0.901981+0.00497815\n",
      "[662]\ttrain-auc:0.92946+0.00114101\ttest-auc:0.90197+0.00496666\n",
      "[663]\ttrain-auc:0.929493+0.00114334\ttest-auc:0.901981+0.00498671\n",
      "[664]\ttrain-auc:0.929528+0.00114595\ttest-auc:0.901989+0.00499017\n",
      "[665]\ttrain-auc:0.929565+0.00115127\ttest-auc:0.901997+0.00498952\n",
      "[666]\ttrain-auc:0.929587+0.00114142\ttest-auc:0.902009+0.0050063\n",
      "[667]\ttrain-auc:0.929616+0.00112928\ttest-auc:0.902001+0.00501589\n",
      "[668]\ttrain-auc:0.929652+0.00112992\ttest-auc:0.902031+0.00500618\n",
      "[669]\ttrain-auc:0.929684+0.00113246\ttest-auc:0.902049+0.00501278\n",
      "[670]\ttrain-auc:0.929724+0.00112763\ttest-auc:0.902043+0.00500694\n",
      "[671]\ttrain-auc:0.929758+0.00112571\ttest-auc:0.902036+0.00502013\n",
      "[672]\ttrain-auc:0.929783+0.00113757\ttest-auc:0.902039+0.00500512\n",
      "[673]\ttrain-auc:0.929817+0.00113619\ttest-auc:0.902063+0.00500864\n",
      "[674]\ttrain-auc:0.929854+0.00113347\ttest-auc:0.902069+0.00501052\n",
      "[675]\ttrain-auc:0.929882+0.00114588\ttest-auc:0.902055+0.00500856\n",
      "[676]\ttrain-auc:0.929918+0.00113949\ttest-auc:0.902061+0.00501335\n",
      "[677]\ttrain-auc:0.929953+0.00114929\ttest-auc:0.902072+0.00500615\n",
      "[678]\ttrain-auc:0.929977+0.00114964\ttest-auc:0.902072+0.00501301\n",
      "[679]\ttrain-auc:0.930017+0.00113294\ttest-auc:0.902055+0.00502667\n",
      "[680]\ttrain-auc:0.930037+0.0011196\ttest-auc:0.902059+0.00502037\n",
      "[681]\ttrain-auc:0.930067+0.00112037\ttest-auc:0.902037+0.00501542\n",
      "[682]\ttrain-auc:0.930101+0.00110786\ttest-auc:0.902039+0.00503072\n",
      "[683]\ttrain-auc:0.930133+0.00111824\ttest-auc:0.902038+0.00502266\n",
      "[684]\ttrain-auc:0.930167+0.00112402\ttest-auc:0.902044+0.00501915\n",
      "[685]\ttrain-auc:0.930199+0.00112605\ttest-auc:0.902056+0.00502791\n",
      "[686]\ttrain-auc:0.930237+0.00112631\ttest-auc:0.902088+0.00500611\n",
      "[687]\ttrain-auc:0.930271+0.00112637\ttest-auc:0.902076+0.00501605\n",
      "[688]\ttrain-auc:0.930306+0.00113311\ttest-auc:0.902062+0.00500336\n",
      "[689]\ttrain-auc:0.930329+0.00113833\ttest-auc:0.902067+0.00498892\n",
      "[690]\ttrain-auc:0.930359+0.00114932\ttest-auc:0.902064+0.00499066\n",
      "[691]\ttrain-auc:0.93039+0.00115053\ttest-auc:0.902067+0.00498385\n",
      "[692]\ttrain-auc:0.930419+0.00115516\ttest-auc:0.902097+0.00498884\n",
      "[693]\ttrain-auc:0.930466+0.00114932\ttest-auc:0.902108+0.00497721\n",
      "[694]\ttrain-auc:0.9305+0.00114518\ttest-auc:0.902112+0.00497277\n",
      "[695]\ttrain-auc:0.930531+0.0011521\ttest-auc:0.902106+0.00498086\n",
      "[696]\ttrain-auc:0.930561+0.00116226\ttest-auc:0.9021+0.00499319\n",
      "[697]\ttrain-auc:0.930592+0.00116771\ttest-auc:0.902093+0.00500375\n",
      "[698]\ttrain-auc:0.930636+0.00116179\ttest-auc:0.902105+0.00500776\n",
      "[699]\ttrain-auc:0.930688+0.00115392\ttest-auc:0.902107+0.00499859\n",
      "[700]\ttrain-auc:0.930732+0.00116467\ttest-auc:0.902111+0.00498903\n",
      "[701]\ttrain-auc:0.930759+0.00115961\ttest-auc:0.902121+0.00499463\n",
      "[702]\ttrain-auc:0.930803+0.00117044\ttest-auc:0.902102+0.00499591\n",
      "[703]\ttrain-auc:0.930836+0.00115715\ttest-auc:0.902085+0.0050019\n",
      "[704]\ttrain-auc:0.930854+0.00115479\ttest-auc:0.902099+0.00499177\n",
      "[705]\ttrain-auc:0.930886+0.00115693\ttest-auc:0.902099+0.0049734\n",
      "[706]\ttrain-auc:0.930923+0.00116231\ttest-auc:0.902074+0.00497285\n",
      "[707]\ttrain-auc:0.930959+0.00116029\ttest-auc:0.902054+0.00497346\n",
      "[708]\ttrain-auc:0.930998+0.00116345\ttest-auc:0.902069+0.00496886\n",
      "[709]\ttrain-auc:0.931029+0.00116091\ttest-auc:0.902063+0.00496554\n",
      "[710]\ttrain-auc:0.931057+0.00115419\ttest-auc:0.902066+0.00496727\n",
      "[711]\ttrain-auc:0.931093+0.00115646\ttest-auc:0.902073+0.00497515\n",
      "[712]\ttrain-auc:0.931118+0.00114515\ttest-auc:0.902075+0.00497253\n",
      "[713]\ttrain-auc:0.931152+0.00114089\ttest-auc:0.902074+0.00496814\n",
      "[714]\ttrain-auc:0.931181+0.00113438\ttest-auc:0.902097+0.0049703\n",
      "[715]\ttrain-auc:0.931212+0.00113565\ttest-auc:0.902108+0.00497848\n",
      "[716]\ttrain-auc:0.931248+0.00113314\ttest-auc:0.902111+0.00496457\n",
      "[717]\ttrain-auc:0.93128+0.00113474\ttest-auc:0.90213+0.00494566\n",
      "[718]\ttrain-auc:0.93131+0.00114248\ttest-auc:0.902133+0.00493926\n",
      "[719]\ttrain-auc:0.931349+0.0011461\ttest-auc:0.902126+0.00493538\n",
      "[720]\ttrain-auc:0.931394+0.00114262\ttest-auc:0.902139+0.00494013\n",
      "[721]\ttrain-auc:0.931436+0.00113956\ttest-auc:0.902134+0.00491823\n",
      "[722]\ttrain-auc:0.931475+0.00113127\ttest-auc:0.902129+0.00495664\n",
      "[723]\ttrain-auc:0.931507+0.00111715\ttest-auc:0.902147+0.00496048\n",
      "[724]\ttrain-auc:0.931556+0.00111489\ttest-auc:0.90213+0.0049469\n",
      "[725]\ttrain-auc:0.931594+0.00110545\ttest-auc:0.902128+0.00495225\n",
      "[726]\ttrain-auc:0.93163+0.00111261\ttest-auc:0.902143+0.00494944\n",
      "[727]\ttrain-auc:0.931663+0.00110616\ttest-auc:0.902137+0.00496514\n",
      "[728]\ttrain-auc:0.931693+0.00109831\ttest-auc:0.902129+0.00498715\n",
      "[729]\ttrain-auc:0.931726+0.00109739\ttest-auc:0.902154+0.00499222\n",
      "[730]\ttrain-auc:0.931766+0.00110125\ttest-auc:0.902133+0.00499812\n",
      "[731]\ttrain-auc:0.931797+0.00110018\ttest-auc:0.902136+0.00501091\n",
      "[732]\ttrain-auc:0.931835+0.00109624\ttest-auc:0.902144+0.00499635\n",
      "[733]\ttrain-auc:0.931864+0.0010899\ttest-auc:0.902143+0.00499491\n",
      "[734]\ttrain-auc:0.9319+0.00108703\ttest-auc:0.902136+0.004989\n",
      "[735]\ttrain-auc:0.931944+0.00109476\ttest-auc:0.902133+0.00497805\n",
      "[736]\ttrain-auc:0.931978+0.00108736\ttest-auc:0.902134+0.00497792\n",
      "[737]\ttrain-auc:0.931998+0.0010897\ttest-auc:0.902148+0.00497566\n",
      "[738]\ttrain-auc:0.932036+0.00109247\ttest-auc:0.902149+0.00495559\n",
      "[739]\ttrain-auc:0.932075+0.00109211\ttest-auc:0.902144+0.00494414\n",
      "[740]\ttrain-auc:0.932105+0.00108695\ttest-auc:0.902144+0.00492628\n",
      "[741]\ttrain-auc:0.932138+0.00108494\ttest-auc:0.902163+0.00490301\n",
      "[742]\ttrain-auc:0.932178+0.00109121\ttest-auc:0.902164+0.00491668\n",
      "[743]\ttrain-auc:0.932212+0.00109316\ttest-auc:0.902155+0.00492432\n",
      "[744]\ttrain-auc:0.932243+0.00108107\ttest-auc:0.902182+0.00493287\n",
      "[745]\ttrain-auc:0.93228+0.00108652\ttest-auc:0.902179+0.00494435\n",
      "[746]\ttrain-auc:0.932306+0.00108034\ttest-auc:0.902189+0.00494836\n",
      "[747]\ttrain-auc:0.932346+0.00107877\ttest-auc:0.902188+0.0049374\n",
      "[748]\ttrain-auc:0.932387+0.00108518\ttest-auc:0.902183+0.00494256\n",
      "[749]\ttrain-auc:0.93243+0.0010873\ttest-auc:0.902201+0.00494569\n",
      "[750]\ttrain-auc:0.932454+0.00107339\ttest-auc:0.9022+0.00496312\n",
      "[751]\ttrain-auc:0.932478+0.00108283\ttest-auc:0.902202+0.00496934\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "c:\\users\\marcp\\appdata\\local\\programs\\python\\python36\\lib\\site-packages\\sklearn\\preprocessing\\label.py:151: DeprecationWarning: The truth value of an empty array is ambiguous. Returning False, but in future this will result in an error. Use `array.size > 0` to check that an array is not empty.\n",
      "  if diff:\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Model Report\n",
      "Model best iteration : 752 with an auc score of : 0.9022024\n",
      "Accuracy : 0.8890756302521008\n",
      "AUC Score (Train): 0.9286149958966906\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "xgb_first = XGBClassifier(\n",
    " learning_rate =0.01,\n",
    " n_estimators=3000,\n",
    " max_depth=3,\n",
    " min_child_weight=4,\n",
    " gamma=0.35,\n",
    " subsample=0.65,\n",
    " colsample_bytree=0.75,\n",
    " reg_alpha=0.00009,\n",
    " objective= 'binary:logistic',\n",
    " nthread=4,\n",
    " scale_pos_weight=1)\n",
    "\n",
    "predictors = [x for x in X90.columns]\n",
    "count = 0\n",
    "\n",
    "for train_index, test_index in kf.split(np_scaled_X90):\n",
    "    KFold_X_train, KFold_X_test = np_scaled_X90[train_index], np_scaled_X90[test_index]\n",
    "    KFold_y_train, KFold_y_test = np_y[train_index], np_y[test_index]\n",
    "    \n",
    "    KFold_X_train_df = pd.DataFrame(KFold_X_train.tolist())\n",
    "    KFold_y_train_df = pd.DataFrame(KFold_y_train.tolist())\n",
    "    KFold_X_test_df = pd.DataFrame(KFold_X_test.tolist())\n",
    "    KFold_y_test_df = pd.DataFrame(KFold_y_test.tolist())\n",
    "    \n",
    "    modelfit(xgb_first, KFold_X_train_df, KFold_y_train_df, predictors)\n",
    "    \n",
    "    train_pred = xgb_first.predict_proba(KFold_X_test)\n",
    "    test_pred = xgb_first.predict_proba(np_scaled_predict_X90)\n",
    "                \n",
    "    name = 'scaled_rawX_xgb'\n",
    "    temp_name = 'temp_scaled_rawX_{}'.format(count)\n",
    "    \n",
    "    train_preds_df.loc[test_index,name] = train_pred[:, 1].tolist()\n",
    "    temp_test_preds_df[temp_name] = test_pred[:, 1].tolist()\n",
    "    count += 1\n",
    "test_preds_df[name] = 0.25*temp_test_preds_df['temp_scaled_rawX_0'] + 0.25*temp_test_preds_df['temp_scaled_rawX_1'] + 0.25*temp_test_preds_df['temp_scaled_rawX_2'] + 0.25*temp_test_preds_df['temp_scaled_rawX_3']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "from sklearn import linear_model\n",
    "\n",
    "regr = linear_model.LogisticRegression()\n",
    "\n",
    "count = 0\n",
    "for train_index, test_index in kf.split(np_scaled_raw_X):\n",
    "    KFold_X_train, KFold_X_test = np_scaled_raw_X[train_index], np_scaled_raw_X[test_index]\n",
    "    KFold_y_train, KFold_y_test = np_y[train_index], np_y[test_index]\n",
    "\n",
    "    regr.fit(KFold_X_train, KFold_y_train)\n",
    "    \n",
    "    train_pred = regr.predict_proba(KFold_X_test)\n",
    "    test_pred = regr.predict_proba(np_scaled_rawpredict_X)\n",
    "                \n",
    "    name = 'scaled_X_regr'\n",
    "    temp_name = 'temp_scaled_rawX_{}'.format(count)\n",
    "    \n",
    "    train_preds_df.loc[test_index,name] = train_pred[:, 1].tolist()\n",
    "    temp_test_preds_df[temp_name] = test_pred[:, 1].tolist()\n",
    "    count += 1\n",
    "test_preds_df[name] = 0.25*temp_test_preds_df['temp_scaled_rawX_0'] + 0.25*temp_test_preds_df['temp_scaled_rawX_1'] + 0.25*temp_test_preds_df['temp_scaled_rawX_2'] + 0.25*temp_test_preds_df['temp_scaled_rawX_3']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [],
   "source": [
    "import lightgbm as lgb\n",
    "from sklearn.model_selection import KFold, cross_val_score, train_test_split\n",
    "\n",
    "model_lgb = lgb.LGBMRegressor(objective='regression',num_leaves=4,\n",
    "                              learning_rate=0.05, n_estimators=700,\n",
    "                              max_bin = 55, bagging_fraction = 0.8,\n",
    "                              bagging_freq = 5, feature_fraction = 0.2319,\n",
    "                              feature_fraction_seed=9, bagging_seed=9,\n",
    "                              min_data_in_leaf =6, min_sum_hessian_in_leaf = 11)\n",
    "\n",
    "count = 0\n",
    "for train_index, test_index in kf.split(np_scaled_raw_X):\n",
    "    KFold_X_train, KFold_X_test = np_scaled_raw_X[train_index], np_scaled_raw_X[test_index]\n",
    "    KFold_y_train, KFold_y_test = np_y[train_index], np_y[test_index]\n",
    "\n",
    "    model_lgb.fit(KFold_X_train, KFold_y_train)\n",
    "    \n",
    "    train_pred = model_lgb.predict(KFold_X_test)\n",
    "    test_pred = model_lgb.predict(np_scaled_rawpredict_X)\n",
    "                \n",
    "    name = 'scaled_X_lgb'\n",
    "    temp_name = 'temp_scaled_rawX_{}'.format(count)\n",
    "    \n",
    "    train_preds_df.loc[test_index,name] = train_pred#[:, 0].tolist()\n",
    "    temp_test_preds_df[temp_name] = test_pred#[:, 0].tolist()\n",
    "    count += 1\n",
    "test_preds_df[name] = 0.25*temp_test_preds_df['temp_scaled_rawX_0'] + 0.25*temp_test_preds_df['temp_scaled_rawX_1'] + 0.25*temp_test_preds_df['temp_scaled_rawX_2'] + 0.25*temp_test_preds_df['temp_scaled_rawX_3']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      " Fold 1 - Run 1\n",
      "\n",
      "Train on 8925 samples, validate on 2975 samples\n",
      "Epoch 1/5000\n",
      " - 2s - loss: 0.5120 - acc: 0.7767 - val_loss: 0.4802 - val_acc: 0.7892\n",
      "roc_auc: 0.88254 - roc_auc_val: 0.87055 - norm_gini: 0.76508 - norm_gini_val: 0.74111          \n",
      "\n",
      "Epoch 00001: norm_gini_val improved from -inf to 0.74111, saving model to keras-5fold-run-01-v1-fold-01-run-01.check\n",
      "Epoch 2/5000\n",
      " - 1s - loss: 0.3676 - acc: 0.8445 - val_loss: 0.3359 - val_acc: 0.8508\n",
      "roc_auc: 0.89082 - roc_auc_val: 0.87445 - norm_gini: 0.78164 - norm_gini_val: 0.74891          \n",
      "\n",
      "Epoch 00002: norm_gini_val improved from 0.74111 to 0.74891, saving model to keras-5fold-run-01-v1-fold-01-run-01.check\n",
      "Epoch 3/5000\n",
      " - 1s - loss: 0.3409 - acc: 0.8519 - val_loss: 0.3313 - val_acc: 0.8561\n",
      "roc_auc: 0.8953 - roc_auc_val: 0.87832 - norm_gini: 0.79059 - norm_gini_val: 0.75664          \n",
      "\n",
      "Epoch 00003: norm_gini_val improved from 0.74891 to 0.75664, saving model to keras-5fold-run-01-v1-fold-01-run-01.check\n",
      "Epoch 4/5000\n",
      " - 1s - loss: 0.3335 - acc: 0.8467 - val_loss: 0.3373 - val_acc: 0.8501\n",
      "roc_auc: 0.89673 - roc_auc_val: 0.87664 - norm_gini: 0.79346 - norm_gini_val: 0.75327          \n",
      "\n",
      "Epoch 00004: norm_gini_val did not improve from 0.75664\n",
      "Epoch 5/5000\n",
      " - 1s - loss: 0.3317 - acc: 0.8466 - val_loss: 0.3251 - val_acc: 0.8561\n",
      "roc_auc: 0.90127 - roc_auc_val: 0.88364 - norm_gini: 0.80255 - norm_gini_val: 0.76728          \n",
      "\n",
      "Epoch 00005: norm_gini_val improved from 0.75664 to 0.76728, saving model to keras-5fold-run-01-v1-fold-01-run-01.check\n",
      "Epoch 6/5000\n",
      " - 1s - loss: 0.3253 - acc: 0.8557 - val_loss: 0.3230 - val_acc: 0.8578\n",
      "roc_auc: 0.90239 - roc_auc_val: 0.88457 - norm_gini: 0.80478 - norm_gini_val: 0.76915          \n",
      "\n",
      "Epoch 00006: norm_gini_val improved from 0.76728 to 0.76915, saving model to keras-5fold-run-01-v1-fold-01-run-01.check\n",
      "Epoch 7/5000\n",
      " - 1s - loss: 0.3195 - acc: 0.8550 - val_loss: 0.3268 - val_acc: 0.8555\n",
      "roc_auc: 0.90343 - roc_auc_val: 0.88055 - norm_gini: 0.80685 - norm_gini_val: 0.7611          \n",
      "\n",
      "Epoch 00007: norm_gini_val did not improve from 0.76915\n",
      "Epoch 8/5000\n",
      " - 1s - loss: 0.3219 - acc: 0.8541 - val_loss: 0.3236 - val_acc: 0.8541\n",
      "roc_auc: 0.90458 - roc_auc_val: 0.88529 - norm_gini: 0.80917 - norm_gini_val: 0.77057          \n",
      "\n",
      "Epoch 00008: norm_gini_val improved from 0.76915 to 0.77057, saving model to keras-5fold-run-01-v1-fold-01-run-01.check\n",
      "Epoch 9/5000\n",
      " - 1s - loss: 0.3172 - acc: 0.8543 - val_loss: 0.3360 - val_acc: 0.8548\n",
      "roc_auc: 0.90411 - roc_auc_val: 0.88297 - norm_gini: 0.80822 - norm_gini_val: 0.76594          \n",
      "\n",
      "Epoch 00009: norm_gini_val did not improve from 0.77057\n",
      "Epoch 10/5000\n",
      " - 1s - loss: 0.3140 - acc: 0.8597 - val_loss: 0.3298 - val_acc: 0.8514\n",
      "roc_auc: 0.90532 - roc_auc_val: 0.88154 - norm_gini: 0.81064 - norm_gini_val: 0.76307          \n",
      "\n",
      "Epoch 00010: norm_gini_val did not improve from 0.77057\n",
      "Epoch 11/5000\n",
      " - 1s - loss: 0.3185 - acc: 0.8559 - val_loss: 0.3224 - val_acc: 0.8555\n",
      "roc_auc: 0.9061 - roc_auc_val: 0.88532 - norm_gini: 0.8122 - norm_gini_val: 0.77064          \n",
      "\n",
      "Epoch 00011: norm_gini_val improved from 0.77057 to 0.77064, saving model to keras-5fold-run-01-v1-fold-01-run-01.check\n",
      "Epoch 12/5000\n",
      " - 1s - loss: 0.3142 - acc: 0.8584 - val_loss: 0.3286 - val_acc: 0.8555\n",
      "roc_auc: 0.9068 - roc_auc_val: 0.88154 - norm_gini: 0.81361 - norm_gini_val: 0.76308          \n",
      "\n",
      "Epoch 00012: norm_gini_val did not improve from 0.77064\n",
      "Epoch 13/5000\n",
      " - 1s - loss: 0.3155 - acc: 0.8554 - val_loss: 0.3243 - val_acc: 0.8568\n",
      "roc_auc: 0.90739 - roc_auc_val: 0.88256 - norm_gini: 0.81479 - norm_gini_val: 0.76512          \n",
      "\n",
      "Epoch 00013: norm_gini_val did not improve from 0.77064\n",
      "Epoch 14/5000\n",
      " - 1s - loss: 0.3143 - acc: 0.8582 - val_loss: 0.3225 - val_acc: 0.8531\n",
      "roc_auc: 0.9085 - roc_auc_val: 0.8845 - norm_gini: 0.81699 - norm_gini_val: 0.76899          \n",
      "\n",
      "Epoch 00014: norm_gini_val did not improve from 0.77064\n",
      "Epoch 15/5000\n",
      " - 1s - loss: 0.3093 - acc: 0.8590 - val_loss: 0.3299 - val_acc: 0.8538\n",
      "roc_auc: 0.90728 - roc_auc_val: 0.87972 - norm_gini: 0.81455 - norm_gini_val: 0.75944          \n",
      "\n",
      "Epoch 00015: norm_gini_val did not improve from 0.77064\n",
      "Epoch 16/5000\n",
      " - 1s - loss: 0.3129 - acc: 0.8573 - val_loss: 0.3372 - val_acc: 0.8585\n",
      "roc_auc: 0.90793 - roc_auc_val: 0.87904 - norm_gini: 0.81586 - norm_gini_val: 0.75808          \n",
      "\n",
      "Epoch 00016: norm_gini_val did not improve from 0.77064\n",
      "Epoch 17/5000\n",
      " - 1s - loss: 0.3115 - acc: 0.8554 - val_loss: 0.3293 - val_acc: 0.8538\n",
      "roc_auc: 0.90673 - roc_auc_val: 0.8817 - norm_gini: 0.81345 - norm_gini_val: 0.7634          \n",
      "\n",
      "Epoch 00017: norm_gini_val did not improve from 0.77064\n",
      "Epoch 18/5000\n",
      " - 1s - loss: 0.3092 - acc: 0.8583 - val_loss: 0.3527 - val_acc: 0.8487\n",
      "roc_auc: 0.9058 - roc_auc_val: 0.88418 - norm_gini: 0.8116 - norm_gini_val: 0.76836          \n",
      "\n",
      "Epoch 00018: norm_gini_val did not improve from 0.77064\n",
      "Epoch 19/5000\n",
      " - 1s - loss: 0.3084 - acc: 0.8603 - val_loss: 0.3276 - val_acc: 0.8558\n",
      "roc_auc: 0.90962 - roc_auc_val: 0.88417 - norm_gini: 0.81924 - norm_gini_val: 0.76834          \n",
      "\n",
      "Epoch 00019: norm_gini_val did not improve from 0.77064\n",
      "Epoch 20/5000\n",
      " - 1s - loss: 0.3100 - acc: 0.8576 - val_loss: 0.3269 - val_acc: 0.8582\n",
      "roc_auc: 0.90967 - roc_auc_val: 0.88058 - norm_gini: 0.81934 - norm_gini_val: 0.76116          \n",
      "\n",
      "Epoch 00020: norm_gini_val did not improve from 0.77064\n",
      "Epoch 21/5000\n",
      " - 1s - loss: 0.3102 - acc: 0.8595 - val_loss: 0.3243 - val_acc: 0.8582\n",
      "roc_auc: 0.91065 - roc_auc_val: 0.88366 - norm_gini: 0.8213 - norm_gini_val: 0.76733          \n",
      "\n",
      "Epoch 00021: norm_gini_val did not improve from 0.77064\n",
      "Epoch 22/5000\n",
      " - 1s - loss: 0.3079 - acc: 0.8593 - val_loss: 0.3247 - val_acc: 0.8558\n",
      "roc_auc: 0.91 - roc_auc_val: 0.88468 - norm_gini: 0.82 - norm_gini_val: 0.76937          \n",
      "\n",
      "Epoch 00022: norm_gini_val did not improve from 0.77064\n",
      "Epoch 23/5000\n",
      " - 1s - loss: 0.3061 - acc: 0.8604 - val_loss: 0.3268 - val_acc: 0.8588\n",
      "roc_auc: 0.91118 - roc_auc_val: 0.88375 - norm_gini: 0.82235 - norm_gini_val: 0.7675          \n",
      "\n",
      "Epoch 00023: norm_gini_val did not improve from 0.77064\n",
      "Epoch 24/5000\n",
      " - 1s - loss: 0.3039 - acc: 0.8631 - val_loss: 0.3413 - val_acc: 0.8578\n",
      "roc_auc: 0.90468 - roc_auc_val: 0.87627 - norm_gini: 0.80936 - norm_gini_val: 0.75254          \n",
      "\n",
      "Epoch 00024: norm_gini_val did not improve from 0.77064\n",
      "Epoch 25/5000\n",
      " - 1s - loss: 0.3069 - acc: 0.8594 - val_loss: 0.3233 - val_acc: 0.8582\n",
      "roc_auc: 0.91529 - roc_auc_val: 0.88415 - norm_gini: 0.83058 - norm_gini_val: 0.7683          \n",
      "\n",
      "Epoch 00025: norm_gini_val did not improve from 0.77064\n",
      "Epoch 26/5000\n",
      " - 1s - loss: 0.3041 - acc: 0.8648 - val_loss: 0.3301 - val_acc: 0.8555\n",
      "roc_auc: 0.91363 - roc_auc_val: 0.87914 - norm_gini: 0.82727 - norm_gini_val: 0.75827          \n",
      "\n",
      "Epoch 00026: norm_gini_val did not improve from 0.77064\n",
      "Epoch 27/5000\n",
      " - 1s - loss: 0.2995 - acc: 0.8641 - val_loss: 0.3246 - val_acc: 0.8568\n",
      "roc_auc: 0.91619 - roc_auc_val: 0.88258 - norm_gini: 0.83237 - norm_gini_val: 0.76515          \n",
      "\n",
      "Epoch 00027: norm_gini_val did not improve from 0.77064\n",
      "Epoch 28/5000\n",
      " - 1s - loss: 0.3014 - acc: 0.8603 - val_loss: 0.3281 - val_acc: 0.8571\n",
      "roc_auc: 0.91567 - roc_auc_val: 0.88485 - norm_gini: 0.83134 - norm_gini_val: 0.76971          \n",
      "\n",
      "Epoch 00028: norm_gini_val did not improve from 0.77064\n",
      "Epoch 29/5000\n",
      " - 1s - loss: 0.3029 - acc: 0.8605 - val_loss: 0.3261 - val_acc: 0.8551\n",
      "roc_auc: 0.91523 - roc_auc_val: 0.88447 - norm_gini: 0.83047 - norm_gini_val: 0.76894          \n",
      "\n",
      "Epoch 00029: norm_gini_val did not improve from 0.77064\n",
      "Epoch 30/5000\n",
      " - 1s - loss: 0.3031 - acc: 0.8639 - val_loss: 0.3316 - val_acc: 0.8524\n",
      "roc_auc: 0.91418 - roc_auc_val: 0.88259 - norm_gini: 0.82837 - norm_gini_val: 0.76519          \n",
      "\n",
      "Epoch 00030: norm_gini_val did not improve from 0.77064\n",
      "Epoch 31/5000\n",
      " - 1s - loss: 0.3039 - acc: 0.8618 - val_loss: 0.3344 - val_acc: 0.8524\n",
      "roc_auc: 0.91268 - roc_auc_val: 0.88062 - norm_gini: 0.82536 - norm_gini_val: 0.76124          \n",
      "\n",
      "Epoch 00031: norm_gini_val did not improve from 0.77064\n",
      "Epoch 00031: early stopping\n",
      "\n",
      " Fold 1 Run 1 Log-loss: 0.32239\n",
      " Fold 1 Run 1 AUC: 0.88532\n",
      " Fold 1 Run 1 normalized gini: 0.77064\n",
      "\n",
      " Fold 1 - Run 2\n",
      "\n",
      "Train on 8925 samples, validate on 2975 samples\n",
      "Epoch 1/5000\n",
      " - 2s - loss: 0.5082 - acc: 0.7736 - val_loss: 0.3993 - val_acc: 0.8407\n",
      "roc_auc: 0.87875 - roc_auc_val: 0.86682 - norm_gini: 0.75749 - norm_gini_val: 0.73364          \n",
      "\n",
      "Epoch 00001: norm_gini_val improved from -inf to 0.73364, saving model to keras-5fold-run-01-v1-fold-01-run-02.check\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 2/5000\n",
      " - 1s - loss: 0.3668 - acc: 0.8421 - val_loss: 0.3718 - val_acc: 0.8461\n",
      "roc_auc: 0.88265 - roc_auc_val: 0.86215 - norm_gini: 0.76529 - norm_gini_val: 0.72429          \n",
      "\n",
      "Epoch 00002: norm_gini_val did not improve from 0.73364\n",
      "Epoch 3/5000\n",
      " - 1s - loss: 0.3453 - acc: 0.8482 - val_loss: 0.3284 - val_acc: 0.8531\n",
      "roc_auc: 0.89384 - roc_auc_val: 0.87874 - norm_gini: 0.78768 - norm_gini_val: 0.75747          \n",
      "\n",
      "Epoch 00003: norm_gini_val improved from 0.73364 to 0.75747, saving model to keras-5fold-run-01-v1-fold-01-run-02.check\n",
      "Epoch 4/5000\n",
      " - 1s - loss: 0.3318 - acc: 0.8541 - val_loss: 0.3286 - val_acc: 0.8545\n",
      "roc_auc: 0.89947 - roc_auc_val: 0.88033 - norm_gini: 0.79894 - norm_gini_val: 0.76066          \n",
      "\n",
      "Epoch 00004: norm_gini_val improved from 0.75747 to 0.76066, saving model to keras-5fold-run-01-v1-fold-01-run-02.check\n",
      "Epoch 5/5000\n",
      " - 1s - loss: 0.3308 - acc: 0.8510 - val_loss: 0.3290 - val_acc: 0.8538\n",
      "roc_auc: 0.89822 - roc_auc_val: 0.88039 - norm_gini: 0.79644 - norm_gini_val: 0.76078          \n",
      "\n",
      "Epoch 00005: norm_gini_val improved from 0.76066 to 0.76078, saving model to keras-5fold-run-01-v1-fold-01-run-02.check\n",
      "Epoch 6/5000\n",
      " - 1s - loss: 0.3260 - acc: 0.8474 - val_loss: 0.3393 - val_acc: 0.8538\n",
      "roc_auc: 0.89863 - roc_auc_val: 0.88313 - norm_gini: 0.79726 - norm_gini_val: 0.76626          \n",
      "\n",
      "Epoch 00006: norm_gini_val improved from 0.76078 to 0.76626, saving model to keras-5fold-run-01-v1-fold-01-run-02.check\n",
      "Epoch 7/5000\n",
      " - 1s - loss: 0.3232 - acc: 0.8524 - val_loss: 0.3399 - val_acc: 0.8531\n",
      "roc_auc: 0.90136 - roc_auc_val: 0.87772 - norm_gini: 0.80273 - norm_gini_val: 0.75544          \n",
      "\n",
      "Epoch 00007: norm_gini_val did not improve from 0.76626\n",
      "Epoch 8/5000\n",
      " - 1s - loss: 0.3215 - acc: 0.8529 - val_loss: 0.3306 - val_acc: 0.8501\n",
      "roc_auc: 0.90267 - roc_auc_val: 0.88297 - norm_gini: 0.80535 - norm_gini_val: 0.76595          \n",
      "\n",
      "Epoch 00008: norm_gini_val did not improve from 0.76626\n",
      "Epoch 9/5000\n",
      " - 1s - loss: 0.3218 - acc: 0.8527 - val_loss: 0.3244 - val_acc: 0.8534\n",
      "roc_auc: 0.90316 - roc_auc_val: 0.8836 - norm_gini: 0.80632 - norm_gini_val: 0.76719          \n",
      "\n",
      "Epoch 00009: norm_gini_val improved from 0.76626 to 0.76719, saving model to keras-5fold-run-01-v1-fold-01-run-02.check\n",
      "Epoch 10/5000\n",
      " - 1s - loss: 0.3222 - acc: 0.8552 - val_loss: 0.3248 - val_acc: 0.8565\n",
      "roc_auc: 0.90381 - roc_auc_val: 0.88347 - norm_gini: 0.80763 - norm_gini_val: 0.76693          \n",
      "\n",
      "Epoch 00010: norm_gini_val did not improve from 0.76719\n",
      "Epoch 11/5000\n",
      " - 1s - loss: 0.3179 - acc: 0.8559 - val_loss: 0.3317 - val_acc: 0.8548\n",
      "roc_auc: 0.90587 - roc_auc_val: 0.8819 - norm_gini: 0.81175 - norm_gini_val: 0.76381          \n",
      "\n",
      "Epoch 00011: norm_gini_val did not improve from 0.76719\n",
      "Epoch 12/5000\n",
      " - 1s - loss: 0.3135 - acc: 0.8571 - val_loss: 0.3268 - val_acc: 0.8555\n",
      "roc_auc: 0.90594 - roc_auc_val: 0.88188 - norm_gini: 0.81188 - norm_gini_val: 0.76375          \n",
      "\n",
      "Epoch 00012: norm_gini_val did not improve from 0.76719\n",
      "Epoch 13/5000\n",
      " - 1s - loss: 0.3130 - acc: 0.8562 - val_loss: 0.3207 - val_acc: 0.8575\n",
      "roc_auc: 0.90769 - roc_auc_val: 0.88598 - norm_gini: 0.81539 - norm_gini_val: 0.77197          \n",
      "\n",
      "Epoch 00013: norm_gini_val improved from 0.76719 to 0.77197, saving model to keras-5fold-run-01-v1-fold-01-run-02.check\n",
      "Epoch 14/5000\n",
      " - 1s - loss: 0.3124 - acc: 0.8585 - val_loss: 0.3746 - val_acc: 0.8370\n",
      "roc_auc: 0.90386 - roc_auc_val: 0.87993 - norm_gini: 0.80772 - norm_gini_val: 0.75986          \n",
      "\n",
      "Epoch 00014: norm_gini_val did not improve from 0.77197\n",
      "Epoch 15/5000\n",
      " - 1s - loss: 0.3110 - acc: 0.8586 - val_loss: 0.3220 - val_acc: 0.8568\n",
      "roc_auc: 0.90671 - roc_auc_val: 0.88699 - norm_gini: 0.81343 - norm_gini_val: 0.77398          \n",
      "\n",
      "Epoch 00015: norm_gini_val improved from 0.77197 to 0.77398, saving model to keras-5fold-run-01-v1-fold-01-run-02.check\n",
      "Epoch 16/5000\n",
      " - 1s - loss: 0.3154 - acc: 0.8611 - val_loss: 0.3284 - val_acc: 0.8521\n",
      "roc_auc: 0.90665 - roc_auc_val: 0.88455 - norm_gini: 0.8133 - norm_gini_val: 0.7691          \n",
      "\n",
      "Epoch 00016: norm_gini_val did not improve from 0.77398\n",
      "Epoch 17/5000\n",
      " - 1s - loss: 0.3086 - acc: 0.8597 - val_loss: 0.3237 - val_acc: 0.8545\n",
      "roc_auc: 0.90753 - roc_auc_val: 0.88564 - norm_gini: 0.81506 - norm_gini_val: 0.77127          \n",
      "\n",
      "Epoch 00017: norm_gini_val did not improve from 0.77398\n",
      "Epoch 18/5000\n",
      " - 1s - loss: 0.3104 - acc: 0.8573 - val_loss: 0.3189 - val_acc: 0.8575\n",
      "roc_auc: 0.9102 - roc_auc_val: 0.88776 - norm_gini: 0.82041 - norm_gini_val: 0.77553          \n",
      "\n",
      "Epoch 00018: norm_gini_val improved from 0.77398 to 0.77553, saving model to keras-5fold-run-01-v1-fold-01-run-02.check\n",
      "Epoch 19/5000\n",
      " - 1s - loss: 0.3106 - acc: 0.8574 - val_loss: 0.3212 - val_acc: 0.8568\n",
      "roc_auc: 0.91131 - roc_auc_val: 0.8861 - norm_gini: 0.82262 - norm_gini_val: 0.7722          \n",
      "\n",
      "Epoch 00019: norm_gini_val did not improve from 0.77553\n",
      "Epoch 20/5000\n",
      " - 1s - loss: 0.3111 - acc: 0.8630 - val_loss: 0.3303 - val_acc: 0.8491\n",
      "roc_auc: 0.90801 - roc_auc_val: 0.88694 - norm_gini: 0.81603 - norm_gini_val: 0.77388          \n",
      "\n",
      "Epoch 00020: norm_gini_val did not improve from 0.77553\n",
      "Epoch 21/5000\n",
      " - 1s - loss: 0.3077 - acc: 0.8608 - val_loss: 0.3245 - val_acc: 0.8545\n",
      "roc_auc: 0.9109 - roc_auc_val: 0.88599 - norm_gini: 0.8218 - norm_gini_val: 0.77198          \n",
      "\n",
      "Epoch 00021: norm_gini_val did not improve from 0.77553\n",
      "Epoch 22/5000\n",
      " - 1s - loss: 0.3081 - acc: 0.8625 - val_loss: 0.3270 - val_acc: 0.8561\n",
      "roc_auc: 0.91168 - roc_auc_val: 0.88479 - norm_gini: 0.82336 - norm_gini_val: 0.76957          \n",
      "\n",
      "Epoch 00022: norm_gini_val did not improve from 0.77553\n",
      "Epoch 23/5000\n",
      " - 1s - loss: 0.3062 - acc: 0.8598 - val_loss: 0.3310 - val_acc: 0.8575\n",
      "roc_auc: 0.91077 - roc_auc_val: 0.88408 - norm_gini: 0.82153 - norm_gini_val: 0.76815          \n",
      "\n",
      "Epoch 00023: norm_gini_val did not improve from 0.77553\n",
      "Epoch 24/5000\n",
      " - 1s - loss: 0.3076 - acc: 0.8604 - val_loss: 0.3182 - val_acc: 0.8565\n",
      "roc_auc: 0.91246 - roc_auc_val: 0.89014 - norm_gini: 0.82492 - norm_gini_val: 0.78027          \n",
      "\n",
      "Epoch 00024: norm_gini_val improved from 0.77553 to 0.78027, saving model to keras-5fold-run-01-v1-fold-01-run-02.check\n",
      "Epoch 25/5000\n",
      " - 1s - loss: 0.3049 - acc: 0.8610 - val_loss: 0.3227 - val_acc: 0.8534\n",
      "roc_auc: 0.91499 - roc_auc_val: 0.88482 - norm_gini: 0.82999 - norm_gini_val: 0.76964          \n",
      "\n",
      "Epoch 00025: norm_gini_val did not improve from 0.78027\n",
      "Epoch 26/5000\n",
      " - 1s - loss: 0.3063 - acc: 0.8630 - val_loss: 0.3225 - val_acc: 0.8565\n",
      "roc_auc: 0.9137 - roc_auc_val: 0.88629 - norm_gini: 0.82739 - norm_gini_val: 0.77258          \n",
      "\n",
      "Epoch 00026: norm_gini_val did not improve from 0.78027\n",
      "Epoch 27/5000\n",
      " - 1s - loss: 0.3019 - acc: 0.8650 - val_loss: 0.3316 - val_acc: 0.8524\n",
      "roc_auc: 0.91405 - roc_auc_val: 0.88563 - norm_gini: 0.8281 - norm_gini_val: 0.77126          \n",
      "\n",
      "Epoch 00027: norm_gini_val did not improve from 0.78027\n",
      "Epoch 28/5000\n",
      " - 1s - loss: 0.3030 - acc: 0.8634 - val_loss: 0.3346 - val_acc: 0.8461\n",
      "roc_auc: 0.90815 - roc_auc_val: 0.88753 - norm_gini: 0.8163 - norm_gini_val: 0.77507          \n",
      "\n",
      "Epoch 00028: norm_gini_val did not improve from 0.78027\n",
      "Epoch 29/5000\n",
      " - 1s - loss: 0.3053 - acc: 0.8624 - val_loss: 0.3438 - val_acc: 0.8457\n",
      "roc_auc: 0.91067 - roc_auc_val: 0.88232 - norm_gini: 0.82134 - norm_gini_val: 0.76464          \n",
      "\n",
      "Epoch 00029: norm_gini_val did not improve from 0.78027\n",
      "Epoch 30/5000\n",
      " - 1s - loss: 0.3035 - acc: 0.8625 - val_loss: 0.3277 - val_acc: 0.8561\n",
      "roc_auc: 0.91661 - roc_auc_val: 0.88486 - norm_gini: 0.83321 - norm_gini_val: 0.76972          \n",
      "\n",
      "Epoch 00030: norm_gini_val did not improve from 0.78027\n",
      "Epoch 31/5000\n",
      " - 1s - loss: 0.3031 - acc: 0.8625 - val_loss: 0.3566 - val_acc: 0.8528\n",
      "roc_auc: 0.90847 - roc_auc_val: 0.88006 - norm_gini: 0.81694 - norm_gini_val: 0.76013          \n",
      "\n",
      "Epoch 00031: norm_gini_val did not improve from 0.78027\n",
      "Epoch 32/5000\n",
      " - 1s - loss: 0.3013 - acc: 0.8623 - val_loss: 0.3243 - val_acc: 0.8551\n",
      "roc_auc: 0.91433 - roc_auc_val: 0.88591 - norm_gini: 0.82865 - norm_gini_val: 0.77181          \n",
      "\n",
      "Epoch 00032: norm_gini_val did not improve from 0.78027\n",
      "Epoch 33/5000\n",
      " - 1s - loss: 0.2999 - acc: 0.8679 - val_loss: 0.3279 - val_acc: 0.8568\n",
      "roc_auc: 0.91488 - roc_auc_val: 0.88853 - norm_gini: 0.82975 - norm_gini_val: 0.77707          \n",
      "\n",
      "Epoch 00033: norm_gini_val did not improve from 0.78027\n",
      "Epoch 34/5000\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " - 1s - loss: 0.2980 - acc: 0.8678 - val_loss: 0.3319 - val_acc: 0.8534\n",
      "roc_auc: 0.91137 - roc_auc_val: 0.88515 - norm_gini: 0.82273 - norm_gini_val: 0.7703          \n",
      "\n",
      "Epoch 00034: norm_gini_val did not improve from 0.78027\n",
      "Epoch 35/5000\n",
      " - 1s - loss: 0.3021 - acc: 0.8643 - val_loss: 0.3208 - val_acc: 0.8545\n",
      "roc_auc: 0.91693 - roc_auc_val: 0.88621 - norm_gini: 0.83386 - norm_gini_val: 0.77243          \n",
      "\n",
      "Epoch 00035: norm_gini_val did not improve from 0.78027\n",
      "Epoch 36/5000\n",
      " - 1s - loss: 0.2982 - acc: 0.8633 - val_loss: 0.3279 - val_acc: 0.8521\n",
      "roc_auc: 0.91639 - roc_auc_val: 0.88885 - norm_gini: 0.83277 - norm_gini_val: 0.7777          \n",
      "\n",
      "Epoch 00036: norm_gini_val did not improve from 0.78027\n",
      "Epoch 37/5000\n",
      " - 1s - loss: 0.3012 - acc: 0.8622 - val_loss: 0.3237 - val_acc: 0.8588\n",
      "roc_auc: 0.91627 - roc_auc_val: 0.88544 - norm_gini: 0.83254 - norm_gini_val: 0.77088          \n",
      "\n",
      "Epoch 00037: norm_gini_val did not improve from 0.78027\n",
      "Epoch 38/5000\n",
      " - 1s - loss: 0.2968 - acc: 0.8670 - val_loss: 0.3232 - val_acc: 0.8568\n",
      "roc_auc: 0.91747 - roc_auc_val: 0.8875 - norm_gini: 0.83494 - norm_gini_val: 0.775          \n",
      "\n",
      "Epoch 00038: norm_gini_val did not improve from 0.78027\n",
      "Epoch 39/5000\n",
      " - 1s - loss: 0.2956 - acc: 0.8657 - val_loss: 0.3280 - val_acc: 0.8565\n",
      "roc_auc: 0.91816 - roc_auc_val: 0.88346 - norm_gini: 0.83632 - norm_gini_val: 0.76691          \n",
      "\n",
      "Epoch 00039: norm_gini_val did not improve from 0.78027\n",
      "Epoch 40/5000\n",
      " - 1s - loss: 0.3017 - acc: 0.8655 - val_loss: 0.3249 - val_acc: 0.8568\n",
      "roc_auc: 0.9216 - roc_auc_val: 0.88703 - norm_gini: 0.84321 - norm_gini_val: 0.77406          \n",
      "\n",
      "Epoch 00040: norm_gini_val did not improve from 0.78027\n",
      "Epoch 41/5000\n",
      " - 1s - loss: 0.2952 - acc: 0.8659 - val_loss: 0.3303 - val_acc: 0.8571\n",
      "roc_auc: 0.9189 - roc_auc_val: 0.88139 - norm_gini: 0.83781 - norm_gini_val: 0.76278          \n",
      "\n",
      "Epoch 00041: norm_gini_val did not improve from 0.78027\n",
      "Epoch 42/5000\n",
      " - 1s - loss: 0.2974 - acc: 0.8653 - val_loss: 0.3217 - val_acc: 0.8534\n",
      "roc_auc: 0.91839 - roc_auc_val: 0.88834 - norm_gini: 0.83678 - norm_gini_val: 0.77667          \n",
      "\n",
      "Epoch 00042: norm_gini_val did not improve from 0.78027\n",
      "Epoch 43/5000\n",
      " - 1s - loss: 0.2939 - acc: 0.8660 - val_loss: 0.3449 - val_acc: 0.8296\n",
      "roc_auc: 0.91488 - roc_auc_val: 0.88534 - norm_gini: 0.82976 - norm_gini_val: 0.77068          \n",
      "\n",
      "Epoch 00043: norm_gini_val did not improve from 0.78027\n",
      "Epoch 44/5000\n",
      " - 1s - loss: 0.2981 - acc: 0.8642 - val_loss: 0.3332 - val_acc: 0.8504\n",
      "roc_auc: 0.91901 - roc_auc_val: 0.88553 - norm_gini: 0.83802 - norm_gini_val: 0.77106          \n",
      "\n",
      "Epoch 00044: norm_gini_val did not improve from 0.78027\n",
      "Epoch 00044: early stopping\n",
      "\n",
      " Fold 1 Run 2 Log-loss: 0.31823\n",
      " Fold 1 Run 2 AUC: 0.89014\n",
      " Fold 1 Run 2 normalized gini: 0.78027\n",
      "\n",
      " Fold 1 - Run 3\n",
      "\n",
      "Train on 8925 samples, validate on 2975 samples\n",
      "Epoch 1/5000\n",
      " - 2s - loss: 0.5038 - acc: 0.7677 - val_loss: 0.3738 - val_acc: 0.8534\n",
      "roc_auc: 0.87293 - roc_auc_val: 0.86423 - norm_gini: 0.74585 - norm_gini_val: 0.72846          \n",
      "\n",
      "Epoch 00001: norm_gini_val improved from -inf to 0.72846, saving model to keras-5fold-run-01-v1-fold-01-run-03.check\n",
      "Epoch 2/5000\n",
      " - 1s - loss: 0.3658 - acc: 0.8409 - val_loss: 0.3310 - val_acc: 0.8541\n",
      "roc_auc: 0.89077 - roc_auc_val: 0.87738 - norm_gini: 0.78155 - norm_gini_val: 0.75476          \n",
      "\n",
      "Epoch 00002: norm_gini_val improved from 0.72846 to 0.75476, saving model to keras-5fold-run-01-v1-fold-01-run-03.check\n",
      "Epoch 3/5000\n",
      " - 1s - loss: 0.3361 - acc: 0.8483 - val_loss: 0.3744 - val_acc: 0.8319\n",
      "roc_auc: 0.89305 - roc_auc_val: 0.87558 - norm_gini: 0.7861 - norm_gini_val: 0.75115          \n",
      "\n",
      "Epoch 00003: norm_gini_val did not improve from 0.75476\n",
      "Epoch 4/5000\n",
      " - 1s - loss: 0.3304 - acc: 0.8484 - val_loss: 0.3270 - val_acc: 0.8534\n",
      "roc_auc: 0.89729 - roc_auc_val: 0.88126 - norm_gini: 0.79458 - norm_gini_val: 0.76251          \n",
      "\n",
      "Epoch 00004: norm_gini_val improved from 0.75476 to 0.76251, saving model to keras-5fold-run-01-v1-fold-01-run-03.check\n",
      "Epoch 5/5000\n",
      " - 1s - loss: 0.3257 - acc: 0.8500 - val_loss: 0.3272 - val_acc: 0.8524\n",
      "roc_auc: 0.8986 - roc_auc_val: 0.88183 - norm_gini: 0.7972 - norm_gini_val: 0.76366          \n",
      "\n",
      "Epoch 00005: norm_gini_val improved from 0.76251 to 0.76366, saving model to keras-5fold-run-01-v1-fold-01-run-03.check\n",
      "Epoch 6/5000\n",
      " - 1s - loss: 0.3282 - acc: 0.8518 - val_loss: 0.3252 - val_acc: 0.8531\n",
      "roc_auc: 0.90049 - roc_auc_val: 0.88318 - norm_gini: 0.80099 - norm_gini_val: 0.76635          \n",
      "\n",
      "Epoch 00006: norm_gini_val improved from 0.76366 to 0.76635, saving model to keras-5fold-run-01-v1-fold-01-run-03.check\n",
      "Epoch 7/5000\n",
      " - 1s - loss: 0.3199 - acc: 0.8539 - val_loss: 0.3237 - val_acc: 0.8551\n",
      "roc_auc: 0.90116 - roc_auc_val: 0.88345 - norm_gini: 0.80232 - norm_gini_val: 0.76689          \n",
      "\n",
      "Epoch 00007: norm_gini_val improved from 0.76635 to 0.76689, saving model to keras-5fold-run-01-v1-fold-01-run-03.check\n",
      "Epoch 8/5000\n",
      " - 1s - loss: 0.3195 - acc: 0.8520 - val_loss: 0.3364 - val_acc: 0.8497\n",
      "roc_auc: 0.90326 - roc_auc_val: 0.88229 - norm_gini: 0.80651 - norm_gini_val: 0.76457          \n",
      "\n",
      "Epoch 00008: norm_gini_val did not improve from 0.76689\n",
      "Epoch 9/5000\n",
      " - 1s - loss: 0.3188 - acc: 0.8549 - val_loss: 0.3332 - val_acc: 0.8545\n",
      "roc_auc: 0.90134 - roc_auc_val: 0.88519 - norm_gini: 0.80269 - norm_gini_val: 0.77038          \n",
      "\n",
      "Epoch 00009: norm_gini_val improved from 0.76689 to 0.77038, saving model to keras-5fold-run-01-v1-fold-01-run-03.check\n",
      "Epoch 10/5000\n",
      " - 1s - loss: 0.3161 - acc: 0.8541 - val_loss: 0.3294 - val_acc: 0.8548\n",
      "roc_auc: 0.90391 - roc_auc_val: 0.88357 - norm_gini: 0.80782 - norm_gini_val: 0.76713          \n",
      "\n",
      "Epoch 00010: norm_gini_val did not improve from 0.77038\n",
      "Epoch 11/5000\n",
      " - 1s - loss: 0.3202 - acc: 0.8514 - val_loss: 0.3655 - val_acc: 0.8440\n",
      "roc_auc: 0.90184 - roc_auc_val: 0.88158 - norm_gini: 0.80367 - norm_gini_val: 0.76316          \n",
      "\n",
      "Epoch 00011: norm_gini_val did not improve from 0.77038\n",
      "Epoch 12/5000\n",
      " - 1s - loss: 0.3166 - acc: 0.8551 - val_loss: 0.3230 - val_acc: 0.8578\n",
      "roc_auc: 0.9067 - roc_auc_val: 0.88385 - norm_gini: 0.81339 - norm_gini_val: 0.76769          \n",
      "\n",
      "Epoch 00012: norm_gini_val did not improve from 0.77038\n",
      "Epoch 13/5000\n",
      " - 1s - loss: 0.3121 - acc: 0.8564 - val_loss: 0.3395 - val_acc: 0.8545\n",
      "roc_auc: 0.90538 - roc_auc_val: 0.88376 - norm_gini: 0.81076 - norm_gini_val: 0.76752          \n",
      "\n",
      "Epoch 00013: norm_gini_val did not improve from 0.77038\n",
      "Epoch 14/5000\n",
      " - 1s - loss: 0.3107 - acc: 0.8562 - val_loss: 0.3286 - val_acc: 0.8501\n",
      "roc_auc: 0.90838 - roc_auc_val: 0.88343 - norm_gini: 0.81676 - norm_gini_val: 0.76687          \n",
      "\n",
      "Epoch 00014: norm_gini_val did not improve from 0.77038\n",
      "Epoch 15/5000\n",
      " - 1s - loss: 0.3104 - acc: 0.8566 - val_loss: 0.3220 - val_acc: 0.8568\n",
      "roc_auc: 0.90871 - roc_auc_val: 0.88532 - norm_gini: 0.81741 - norm_gini_val: 0.77065          \n",
      "\n",
      "Epoch 00015: norm_gini_val improved from 0.77038 to 0.77065, saving model to keras-5fold-run-01-v1-fold-01-run-03.check\n",
      "Epoch 16/5000\n",
      " - 1s - loss: 0.3114 - acc: 0.8574 - val_loss: 0.3204 - val_acc: 0.8575\n",
      "roc_auc: 0.90939 - roc_auc_val: 0.886 - norm_gini: 0.81879 - norm_gini_val: 0.772          \n",
      "\n",
      "Epoch 00016: norm_gini_val improved from 0.77065 to 0.77200, saving model to keras-5fold-run-01-v1-fold-01-run-03.check\n",
      "Epoch 17/5000\n",
      " - 1s - loss: 0.3084 - acc: 0.8587 - val_loss: 0.3269 - val_acc: 0.8541\n",
      "roc_auc: 0.90879 - roc_auc_val: 0.88247 - norm_gini: 0.81757 - norm_gini_val: 0.76493          \n",
      "\n",
      "Epoch 00017: norm_gini_val did not improve from 0.77200\n",
      "Epoch 18/5000\n",
      " - 1s - loss: 0.3086 - acc: 0.8592 - val_loss: 0.3259 - val_acc: 0.8494\n",
      "roc_auc: 0.90964 - roc_auc_val: 0.88362 - norm_gini: 0.81929 - norm_gini_val: 0.76724          \n",
      "\n",
      "Epoch 00018: norm_gini_val did not improve from 0.77200\n",
      "Epoch 19/5000\n",
      " - 1s - loss: 0.3096 - acc: 0.8611 - val_loss: 0.3475 - val_acc: 0.8508\n",
      "roc_auc: 0.90708 - roc_auc_val: 0.88047 - norm_gini: 0.81415 - norm_gini_val: 0.76094          \n",
      "\n",
      "Epoch 00019: norm_gini_val did not improve from 0.77200\n",
      "Epoch 20/5000\n",
      " - 1s - loss: 0.3061 - acc: 0.8627 - val_loss: 0.3243 - val_acc: 0.8555\n",
      "roc_auc: 0.91237 - roc_auc_val: 0.88514 - norm_gini: 0.82473 - norm_gini_val: 0.77028          \n",
      "\n",
      "Epoch 00020: norm_gini_val did not improve from 0.77200\n",
      "Epoch 21/5000\n",
      " - 1s - loss: 0.3057 - acc: 0.8597 - val_loss: 0.3279 - val_acc: 0.8561\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "roc_auc: 0.91103 - roc_auc_val: 0.88052 - norm_gini: 0.82207 - norm_gini_val: 0.76103          \n",
      "\n",
      "Epoch 00021: norm_gini_val did not improve from 0.77200\n",
      "Epoch 22/5000\n",
      " - 1s - loss: 0.3074 - acc: 0.8625 - val_loss: 0.3229 - val_acc: 0.8561\n",
      "roc_auc: 0.91227 - roc_auc_val: 0.88678 - norm_gini: 0.82454 - norm_gini_val: 0.77356          \n",
      "\n",
      "Epoch 00022: norm_gini_val improved from 0.77200 to 0.77356, saving model to keras-5fold-run-01-v1-fold-01-run-03.check\n",
      "Epoch 23/5000\n",
      " - 1s - loss: 0.3045 - acc: 0.8602 - val_loss: 0.3201 - val_acc: 0.8608\n",
      "roc_auc: 0.91158 - roc_auc_val: 0.88936 - norm_gini: 0.82317 - norm_gini_val: 0.77872          \n",
      "\n",
      "Epoch 00023: norm_gini_val improved from 0.77356 to 0.77872, saving model to keras-5fold-run-01-v1-fold-01-run-03.check\n",
      "Epoch 24/5000\n",
      " - 1s - loss: 0.3090 - acc: 0.8577 - val_loss: 0.3271 - val_acc: 0.8534\n",
      "roc_auc: 0.90891 - roc_auc_val: 0.88844 - norm_gini: 0.81782 - norm_gini_val: 0.77687          \n",
      "\n",
      "Epoch 00024: norm_gini_val did not improve from 0.77872\n",
      "Epoch 25/5000\n",
      " - 1s - loss: 0.3097 - acc: 0.8566 - val_loss: 0.3284 - val_acc: 0.8575\n",
      "roc_auc: 0.91131 - roc_auc_val: 0.88262 - norm_gini: 0.82262 - norm_gini_val: 0.76524          \n",
      "\n",
      "Epoch 00025: norm_gini_val did not improve from 0.77872\n",
      "Epoch 26/5000\n",
      " - 1s - loss: 0.3034 - acc: 0.8612 - val_loss: 0.3290 - val_acc: 0.8575\n",
      "roc_auc: 0.91168 - roc_auc_val: 0.87988 - norm_gini: 0.82336 - norm_gini_val: 0.75976          \n",
      "\n",
      "Epoch 00026: norm_gini_val did not improve from 0.77872\n",
      "Epoch 27/5000\n",
      " - 1s - loss: 0.3039 - acc: 0.8645 - val_loss: 0.3217 - val_acc: 0.8608\n",
      "roc_auc: 0.91493 - roc_auc_val: 0.88455 - norm_gini: 0.82985 - norm_gini_val: 0.76911          \n",
      "\n",
      "Epoch 00027: norm_gini_val did not improve from 0.77872\n",
      "Epoch 28/5000\n",
      " - 1s - loss: 0.3037 - acc: 0.8639 - val_loss: 0.3242 - val_acc: 0.8538\n",
      "roc_auc: 0.91289 - roc_auc_val: 0.88637 - norm_gini: 0.82579 - norm_gini_val: 0.77273          \n",
      "\n",
      "Epoch 00028: norm_gini_val did not improve from 0.77872\n",
      "Epoch 29/5000\n",
      " - 1s - loss: 0.3027 - acc: 0.8641 - val_loss: 0.3339 - val_acc: 0.8551\n",
      "roc_auc: 0.9125 - roc_auc_val: 0.88701 - norm_gini: 0.82501 - norm_gini_val: 0.77402          \n",
      "\n",
      "Epoch 00029: norm_gini_val did not improve from 0.77872\n",
      "Epoch 30/5000\n",
      " - 1s - loss: 0.3005 - acc: 0.8650 - val_loss: 0.3309 - val_acc: 0.8575\n",
      "roc_auc: 0.91391 - roc_auc_val: 0.88556 - norm_gini: 0.82782 - norm_gini_val: 0.77112          \n",
      "\n",
      "Epoch 00030: norm_gini_val did not improve from 0.77872\n",
      "Epoch 31/5000\n",
      " - 1s - loss: 0.3019 - acc: 0.8654 - val_loss: 0.3287 - val_acc: 0.8565\n",
      "roc_auc: 0.91399 - roc_auc_val: 0.88568 - norm_gini: 0.82799 - norm_gini_val: 0.77136          \n",
      "\n",
      "Epoch 00031: norm_gini_val did not improve from 0.77872\n",
      "Epoch 32/5000\n",
      " - 1s - loss: 0.3030 - acc: 0.8627 - val_loss: 0.3293 - val_acc: 0.8551\n",
      "roc_auc: 0.91284 - roc_auc_val: 0.88753 - norm_gini: 0.82568 - norm_gini_val: 0.77506          \n",
      "\n",
      "Epoch 00032: norm_gini_val did not improve from 0.77872\n",
      "Epoch 33/5000\n",
      " - 1s - loss: 0.3040 - acc: 0.8638 - val_loss: 0.3216 - val_acc: 0.8595\n",
      "roc_auc: 0.9161 - roc_auc_val: 0.88764 - norm_gini: 0.83221 - norm_gini_val: 0.77529          \n",
      "\n",
      "Epoch 00033: norm_gini_val did not improve from 0.77872\n",
      "Epoch 34/5000\n",
      " - 1s - loss: 0.2980 - acc: 0.8640 - val_loss: 0.3229 - val_acc: 0.8612\n",
      "roc_auc: 0.91658 - roc_auc_val: 0.88741 - norm_gini: 0.83315 - norm_gini_val: 0.77483          \n",
      "\n",
      "Epoch 00034: norm_gini_val did not improve from 0.77872\n",
      "Epoch 35/5000\n",
      " - 1s - loss: 0.2985 - acc: 0.8626 - val_loss: 0.3233 - val_acc: 0.8568\n",
      "roc_auc: 0.9187 - roc_auc_val: 0.88584 - norm_gini: 0.8374 - norm_gini_val: 0.77168          \n",
      "\n",
      "Epoch 00035: norm_gini_val did not improve from 0.77872\n",
      "Epoch 36/5000\n",
      " - 1s - loss: 0.2975 - acc: 0.8646 - val_loss: 0.3236 - val_acc: 0.8565\n",
      "roc_auc: 0.91942 - roc_auc_val: 0.88621 - norm_gini: 0.83885 - norm_gini_val: 0.77243          \n",
      "\n",
      "Epoch 00036: norm_gini_val did not improve from 0.77872\n",
      "Epoch 37/5000\n",
      " - 1s - loss: 0.3011 - acc: 0.8643 - val_loss: 0.3211 - val_acc: 0.8595\n",
      "roc_auc: 0.91885 - roc_auc_val: 0.88671 - norm_gini: 0.8377 - norm_gini_val: 0.77342          \n",
      "\n",
      "Epoch 00037: norm_gini_val did not improve from 0.77872\n",
      "Epoch 38/5000\n",
      " - 1s - loss: 0.2959 - acc: 0.8649 - val_loss: 0.3656 - val_acc: 0.8208\n",
      "roc_auc: 0.91248 - roc_auc_val: 0.88734 - norm_gini: 0.82496 - norm_gini_val: 0.77467          \n",
      "\n",
      "Epoch 00038: norm_gini_val did not improve from 0.77872\n",
      "Epoch 39/5000\n",
      " - 1s - loss: 0.3003 - acc: 0.8661 - val_loss: 0.3234 - val_acc: 0.8545\n",
      "roc_auc: 0.91868 - roc_auc_val: 0.88626 - norm_gini: 0.83737 - norm_gini_val: 0.77252          \n",
      "\n",
      "Epoch 00039: norm_gini_val did not improve from 0.77872\n",
      "Epoch 40/5000\n",
      " - 1s - loss: 0.2969 - acc: 0.8634 - val_loss: 0.3216 - val_acc: 0.8582\n",
      "roc_auc: 0.91837 - roc_auc_val: 0.88635 - norm_gini: 0.83674 - norm_gini_val: 0.77271          \n",
      "\n",
      "Epoch 00040: norm_gini_val did not improve from 0.77872\n",
      "Epoch 41/5000\n",
      " - 1s - loss: 0.2976 - acc: 0.8654 - val_loss: 0.3242 - val_acc: 0.8575\n",
      "roc_auc: 0.91976 - roc_auc_val: 0.88363 - norm_gini: 0.83952 - norm_gini_val: 0.76725          \n",
      "\n",
      "Epoch 00041: norm_gini_val did not improve from 0.77872\n",
      "Epoch 42/5000\n",
      " - 1s - loss: 0.2945 - acc: 0.8651 - val_loss: 0.3476 - val_acc: 0.8548\n",
      "roc_auc: 0.91883 - roc_auc_val: 0.8809 - norm_gini: 0.83766 - norm_gini_val: 0.76179          \n",
      "\n",
      "Epoch 00042: norm_gini_val did not improve from 0.77872\n",
      "Epoch 43/5000\n",
      " - 1s - loss: 0.2974 - acc: 0.8645 - val_loss: 0.3263 - val_acc: 0.8588\n",
      "roc_auc: 0.916 - roc_auc_val: 0.88156 - norm_gini: 0.83201 - norm_gini_val: 0.76312          \n",
      "\n",
      "Epoch 00043: norm_gini_val did not improve from 0.77872\n",
      "Epoch 00043: early stopping\n",
      "\n",
      " Fold 1 Run 3 Log-loss: 0.32015\n",
      " Fold 1 Run 3 AUC: 0.88936\n",
      " Fold 1 Run 3 normalized gini: 0.77872\n",
      "\n",
      " Fold 1 Log-loss: 0.31691\n",
      " Fold 1 AUC: 0.88973\n",
      " Fold 1 normalized gini: 0.77947\n",
      "\n",
      " Time taken: 0 hours 2 minutes and 48.64 seconds.\n",
      "\n",
      " Fold 2 - Run 1\n",
      "\n",
      "Train on 8925 samples, validate on 2975 samples\n",
      "Epoch 1/5000\n",
      " - 3s - loss: 0.5240 - acc: 0.7501 - val_loss: 0.3771 - val_acc: 0.8407\n",
      "roc_auc: 0.86487 - roc_auc_val: 0.88049 - norm_gini: 0.72974 - norm_gini_val: 0.76099          \n",
      "\n",
      "Epoch 00001: norm_gini_val improved from -inf to 0.76099, saving model to keras-5fold-run-01-v1-fold-02-run-01.check\n",
      "Epoch 2/5000\n",
      " - 1s - loss: 0.3633 - acc: 0.8454 - val_loss: 0.3528 - val_acc: 0.8430\n",
      "roc_auc: 0.88201 - roc_auc_val: 0.88876 - norm_gini: 0.76401 - norm_gini_val: 0.77752          \n",
      "\n",
      "Epoch 00002: norm_gini_val improved from 0.76099 to 0.77752, saving model to keras-5fold-run-01-v1-fold-02-run-01.check\n",
      "Epoch 3/5000\n",
      " - 1s - loss: 0.3406 - acc: 0.8485 - val_loss: 0.3914 - val_acc: 0.8266\n",
      "roc_auc: 0.88419 - roc_auc_val: 0.8944 - norm_gini: 0.76839 - norm_gini_val: 0.78881          \n",
      "\n",
      "Epoch 00003: norm_gini_val improved from 0.77752 to 0.78881, saving model to keras-5fold-run-01-v1-fold-02-run-01.check\n",
      "Epoch 4/5000\n",
      " - 1s - loss: 0.3295 - acc: 0.8546 - val_loss: 0.3755 - val_acc: 0.8316\n",
      "roc_auc: 0.89025 - roc_auc_val: 0.89469 - norm_gini: 0.7805 - norm_gini_val: 0.78937          \n",
      "\n",
      "Epoch 00004: norm_gini_val improved from 0.78881 to 0.78937, saving model to keras-5fold-run-01-v1-fold-02-run-01.check\n",
      "Epoch 5/5000\n",
      " - 1s - loss: 0.3242 - acc: 0.8569 - val_loss: 0.3695 - val_acc: 0.8235\n",
      "roc_auc: 0.89088 - roc_auc_val: 0.89775 - norm_gini: 0.78176 - norm_gini_val: 0.79551          \n",
      "\n",
      "Epoch 00005: norm_gini_val improved from 0.78937 to 0.79551, saving model to keras-5fold-run-01-v1-fold-02-run-01.check\n",
      "Epoch 6/5000\n",
      " - 1s - loss: 0.3203 - acc: 0.8585 - val_loss: 0.3659 - val_acc: 0.8279\n",
      "roc_auc: 0.8944 - roc_auc_val: 0.89892 - norm_gini: 0.78881 - norm_gini_val: 0.79784          \n",
      "\n",
      "Epoch 00006: norm_gini_val improved from 0.79551 to 0.79784, saving model to keras-5fold-run-01-v1-fold-02-run-01.check\n",
      "Epoch 7/5000\n",
      " - 1s - loss: 0.3151 - acc: 0.8584 - val_loss: 0.3427 - val_acc: 0.8360\n",
      "roc_auc: 0.89358 - roc_auc_val: 0.89875 - norm_gini: 0.78716 - norm_gini_val: 0.79751          \n",
      "\n",
      "Epoch 00007: norm_gini_val did not improve from 0.79784\n",
      "Epoch 8/5000\n",
      " - 1s - loss: 0.3119 - acc: 0.8632 - val_loss: 0.3528 - val_acc: 0.8326\n",
      "roc_auc: 0.8955 - roc_auc_val: 0.90005 - norm_gini: 0.791 - norm_gini_val: 0.80011          \n",
      "\n",
      "Epoch 00008: norm_gini_val improved from 0.79784 to 0.80011, saving model to keras-5fold-run-01-v1-fold-02-run-01.check\n",
      "Epoch 9/5000\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " - 1s - loss: 0.3108 - acc: 0.8603 - val_loss: 0.3442 - val_acc: 0.8413\n",
      "roc_auc: 0.89712 - roc_auc_val: 0.90216 - norm_gini: 0.79424 - norm_gini_val: 0.80431          \n",
      "\n",
      "Epoch 00009: norm_gini_val improved from 0.80011 to 0.80431, saving model to keras-5fold-run-01-v1-fold-02-run-01.check\n",
      "Epoch 10/5000\n",
      " - 1s - loss: 0.3130 - acc: 0.8582 - val_loss: 0.3580 - val_acc: 0.8336\n",
      "roc_auc: 0.89823 - roc_auc_val: 0.90064 - norm_gini: 0.79646 - norm_gini_val: 0.80128          \n",
      "\n",
      "Epoch 00010: norm_gini_val did not improve from 0.80431\n",
      "Epoch 11/5000\n",
      " - 1s - loss: 0.3129 - acc: 0.8621 - val_loss: 0.3455 - val_acc: 0.8339\n",
      "roc_auc: 0.89631 - roc_auc_val: 0.90076 - norm_gini: 0.79263 - norm_gini_val: 0.80153          \n",
      "\n",
      "Epoch 00011: norm_gini_val did not improve from 0.80431\n",
      "Epoch 12/5000\n",
      " - 1s - loss: 0.3108 - acc: 0.8613 - val_loss: 0.3534 - val_acc: 0.8319\n",
      "roc_auc: 0.89344 - roc_auc_val: 0.89712 - norm_gini: 0.78688 - norm_gini_val: 0.79423          \n",
      "\n",
      "Epoch 00012: norm_gini_val did not improve from 0.80431\n",
      "Epoch 13/5000\n",
      " - 1s - loss: 0.3125 - acc: 0.8594 - val_loss: 0.3728 - val_acc: 0.8316\n",
      "roc_auc: 0.90031 - roc_auc_val: 0.90198 - norm_gini: 0.80062 - norm_gini_val: 0.80396          \n",
      "\n",
      "Epoch 00013: norm_gini_val did not improve from 0.80431\n",
      "Epoch 14/5000\n",
      " - 1s - loss: 0.3060 - acc: 0.8625 - val_loss: 0.3513 - val_acc: 0.8360\n",
      "roc_auc: 0.89964 - roc_auc_val: 0.90404 - norm_gini: 0.79927 - norm_gini_val: 0.80808          \n",
      "\n",
      "Epoch 00014: norm_gini_val improved from 0.80431 to 0.80808, saving model to keras-5fold-run-01-v1-fold-02-run-01.check\n",
      "Epoch 15/5000\n",
      " - 1s - loss: 0.3066 - acc: 0.8643 - val_loss: 0.3517 - val_acc: 0.8292\n",
      "roc_auc: 0.89906 - roc_auc_val: 0.90176 - norm_gini: 0.79813 - norm_gini_val: 0.80352          \n",
      "\n",
      "Epoch 00015: norm_gini_val did not improve from 0.80808\n",
      "Epoch 16/5000\n",
      " - 1s - loss: 0.3049 - acc: 0.8595 - val_loss: 0.3490 - val_acc: 0.8333\n",
      "roc_auc: 0.90059 - roc_auc_val: 0.9016 - norm_gini: 0.80117 - norm_gini_val: 0.8032          \n",
      "\n",
      "Epoch 00016: norm_gini_val did not improve from 0.80808\n",
      "Epoch 17/5000\n",
      " - 1s - loss: 0.3041 - acc: 0.8622 - val_loss: 0.3736 - val_acc: 0.8276\n",
      "roc_auc: 0.90132 - roc_auc_val: 0.89867 - norm_gini: 0.80263 - norm_gini_val: 0.79733          \n",
      "\n",
      "Epoch 00017: norm_gini_val did not improve from 0.80808\n",
      "Epoch 18/5000\n",
      " - 1s - loss: 0.3054 - acc: 0.8618 - val_loss: 0.3364 - val_acc: 0.8430\n",
      "roc_auc: 0.89805 - roc_auc_val: 0.89933 - norm_gini: 0.79611 - norm_gini_val: 0.79866          \n",
      "\n",
      "Epoch 00018: norm_gini_val did not improve from 0.80808\n",
      "Epoch 19/5000\n",
      " - 1s - loss: 0.3040 - acc: 0.8649 - val_loss: 0.3494 - val_acc: 0.8407\n",
      "roc_auc: 0.90199 - roc_auc_val: 0.90098 - norm_gini: 0.80398 - norm_gini_val: 0.80197          \n",
      "\n",
      "Epoch 00019: norm_gini_val did not improve from 0.80808\n",
      "Epoch 20/5000\n",
      " - 1s - loss: 0.3040 - acc: 0.8658 - val_loss: 0.3564 - val_acc: 0.8343\n",
      "roc_auc: 0.90276 - roc_auc_val: 0.90178 - norm_gini: 0.80553 - norm_gini_val: 0.80356          \n",
      "\n",
      "Epoch 00020: norm_gini_val did not improve from 0.80808\n",
      "Epoch 21/5000\n",
      " - 1s - loss: 0.3066 - acc: 0.8635 - val_loss: 0.3471 - val_acc: 0.8360\n",
      "roc_auc: 0.90398 - roc_auc_val: 0.90203 - norm_gini: 0.80796 - norm_gini_val: 0.80405          \n",
      "\n",
      "Epoch 00021: norm_gini_val did not improve from 0.80808\n",
      "Epoch 22/5000\n",
      " - 1s - loss: 0.3064 - acc: 0.8635 - val_loss: 0.3570 - val_acc: 0.8339\n",
      "roc_auc: 0.90356 - roc_auc_val: 0.90204 - norm_gini: 0.80711 - norm_gini_val: 0.80408          \n",
      "\n",
      "Epoch 00022: norm_gini_val did not improve from 0.80808\n",
      "Epoch 23/5000\n",
      " - 1s - loss: 0.3007 - acc: 0.8643 - val_loss: 0.3834 - val_acc: 0.8235\n",
      "roc_auc: 0.9026 - roc_auc_val: 0.8978 - norm_gini: 0.80521 - norm_gini_val: 0.7956          \n",
      "\n",
      "Epoch 00023: norm_gini_val did not improve from 0.80808\n",
      "Epoch 24/5000\n",
      " - 1s - loss: 0.3031 - acc: 0.8668 - val_loss: 0.3834 - val_acc: 0.8245\n",
      "roc_auc: 0.90322 - roc_auc_val: 0.89984 - norm_gini: 0.80645 - norm_gini_val: 0.79967          \n",
      "\n",
      "Epoch 00024: norm_gini_val did not improve from 0.80808\n",
      "Epoch 25/5000\n",
      " - 1s - loss: 0.2975 - acc: 0.8688 - val_loss: 0.3634 - val_acc: 0.8326\n",
      "roc_auc: 0.90518 - roc_auc_val: 0.90144 - norm_gini: 0.81036 - norm_gini_val: 0.80288          \n",
      "\n",
      "Epoch 00025: norm_gini_val did not improve from 0.80808\n",
      "Epoch 26/5000\n",
      " - 1s - loss: 0.2991 - acc: 0.8678 - val_loss: 0.3419 - val_acc: 0.8440\n",
      "roc_auc: 0.9025 - roc_auc_val: 0.90048 - norm_gini: 0.805 - norm_gini_val: 0.80096          \n",
      "\n",
      "Epoch 00026: norm_gini_val did not improve from 0.80808\n",
      "Epoch 27/5000\n",
      " - 1s - loss: 0.3048 - acc: 0.8670 - val_loss: 0.3483 - val_acc: 0.8407\n",
      "roc_auc: 0.90422 - roc_auc_val: 0.90277 - norm_gini: 0.80844 - norm_gini_val: 0.80553          \n",
      "\n",
      "Epoch 00027: norm_gini_val did not improve from 0.80808\n",
      "Epoch 28/5000\n",
      " - 1s - loss: 0.3008 - acc: 0.8651 - val_loss: 0.3938 - val_acc: 0.8289\n",
      "roc_auc: 0.90445 - roc_auc_val: 0.89784 - norm_gini: 0.80889 - norm_gini_val: 0.79568          \n",
      "\n",
      "Epoch 00028: norm_gini_val did not improve from 0.80808\n",
      "Epoch 29/5000\n",
      " - 1s - loss: 0.3004 - acc: 0.8679 - val_loss: 0.3597 - val_acc: 0.8363\n",
      "roc_auc: 0.90576 - roc_auc_val: 0.89689 - norm_gini: 0.81152 - norm_gini_val: 0.79378          \n",
      "\n",
      "Epoch 00029: norm_gini_val did not improve from 0.80808\n",
      "Epoch 30/5000\n",
      " - 1s - loss: 0.3002 - acc: 0.8640 - val_loss: 0.3921 - val_acc: 0.8266\n",
      "roc_auc: 0.90487 - roc_auc_val: 0.90112 - norm_gini: 0.80973 - norm_gini_val: 0.80224          \n",
      "\n",
      "Epoch 00030: norm_gini_val did not improve from 0.80808\n",
      "Epoch 31/5000\n",
      " - 1s - loss: 0.2986 - acc: 0.8688 - val_loss: 0.3516 - val_acc: 0.8339\n",
      "roc_auc: 0.90712 - roc_auc_val: 0.89778 - norm_gini: 0.81425 - norm_gini_val: 0.79555          \n",
      "\n",
      "Epoch 00031: norm_gini_val did not improve from 0.80808\n",
      "Epoch 32/5000\n",
      " - 1s - loss: 0.2955 - acc: 0.8666 - val_loss: 0.3953 - val_acc: 0.8111\n",
      "roc_auc: 0.90531 - roc_auc_val: 0.89636 - norm_gini: 0.81062 - norm_gini_val: 0.79272          \n",
      "\n",
      "Epoch 00032: norm_gini_val did not improve from 0.80808\n",
      "Epoch 33/5000\n",
      " - 1s - loss: 0.2967 - acc: 0.8664 - val_loss: 0.3599 - val_acc: 0.8400\n",
      "roc_auc: 0.90851 - roc_auc_val: 0.89927 - norm_gini: 0.81702 - norm_gini_val: 0.79854          \n",
      "\n",
      "Epoch 00033: norm_gini_val did not improve from 0.80808\n",
      "Epoch 34/5000\n",
      " - 1s - loss: 0.2974 - acc: 0.8686 - val_loss: 0.3521 - val_acc: 0.8376\n",
      "roc_auc: 0.90673 - roc_auc_val: 0.89781 - norm_gini: 0.81347 - norm_gini_val: 0.79561          \n",
      "\n",
      "Epoch 00034: norm_gini_val did not improve from 0.80808\n",
      "Epoch 00034: early stopping\n",
      "\n",
      " Fold 2 Run 1 Log-loss: 0.35125\n",
      " Fold 2 Run 1 AUC: 0.90404\n",
      " Fold 2 Run 1 normalized gini: 0.80808\n",
      "\n",
      " Fold 2 - Run 2\n",
      "\n",
      "Train on 8925 samples, validate on 2975 samples\n",
      "Epoch 1/5000\n",
      " - 3s - loss: 0.5111 - acc: 0.7693 - val_loss: 0.3965 - val_acc: 0.8336\n",
      "roc_auc: 0.86213 - roc_auc_val: 0.85932 - norm_gini: 0.72425 - norm_gini_val: 0.71865          \n",
      "\n",
      "Epoch 00001: norm_gini_val improved from -inf to 0.71865, saving model to keras-5fold-run-01-v1-fold-02-run-02.check\n",
      "Epoch 2/5000\n",
      " - 1s - loss: 0.3629 - acc: 0.8462 - val_loss: 0.3760 - val_acc: 0.8229\n",
      "roc_auc: 0.87959 - roc_auc_val: 0.88886 - norm_gini: 0.75918 - norm_gini_val: 0.77773          \n",
      "\n",
      "Epoch 00002: norm_gini_val improved from 0.71865 to 0.77773, saving model to keras-5fold-run-01-v1-fold-02-run-02.check\n",
      "Epoch 3/5000\n",
      " - 1s - loss: 0.3351 - acc: 0.8521 - val_loss: 0.3863 - val_acc: 0.8306\n",
      "roc_auc: 0.88623 - roc_auc_val: 0.89202 - norm_gini: 0.77246 - norm_gini_val: 0.78405          \n",
      "\n",
      "Epoch 00003: norm_gini_val improved from 0.77773 to 0.78405, saving model to keras-5fold-run-01-v1-fold-02-run-02.check\n",
      "Epoch 4/5000\n",
      " - 1s - loss: 0.3300 - acc: 0.8538 - val_loss: 0.3921 - val_acc: 0.8128\n",
      "roc_auc: 0.88926 - roc_auc_val: 0.89199 - norm_gini: 0.77853 - norm_gini_val: 0.78398          \n",
      "\n",
      "Epoch 00004: norm_gini_val did not improve from 0.78405\n",
      "Epoch 5/5000\n",
      " - 1s - loss: 0.3218 - acc: 0.8559 - val_loss: 0.3584 - val_acc: 0.8279\n",
      "roc_auc: 0.89064 - roc_auc_val: 0.89325 - norm_gini: 0.78127 - norm_gini_val: 0.7865          \n",
      "\n",
      "Epoch 00005: norm_gini_val improved from 0.78405 to 0.78650, saving model to keras-5fold-run-01-v1-fold-02-run-02.check\n",
      "Epoch 6/5000\n",
      " - 1s - loss: 0.3175 - acc: 0.8585 - val_loss: 0.3707 - val_acc: 0.8218\n",
      "roc_auc: 0.89411 - roc_auc_val: 0.89732 - norm_gini: 0.78822 - norm_gini_val: 0.79465          \n",
      "\n",
      "Epoch 00006: norm_gini_val improved from 0.78650 to 0.79465, saving model to keras-5fold-run-01-v1-fold-02-run-02.check\n",
      "Epoch 7/5000\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " - 1s - loss: 0.3137 - acc: 0.8611 - val_loss: 0.3653 - val_acc: 0.8343\n",
      "roc_auc: 0.89396 - roc_auc_val: 0.89792 - norm_gini: 0.78791 - norm_gini_val: 0.79583          \n",
      "\n",
      "Epoch 00007: norm_gini_val improved from 0.79465 to 0.79583, saving model to keras-5fold-run-01-v1-fold-02-run-02.check\n",
      "Epoch 8/5000\n",
      " - 1s - loss: 0.3118 - acc: 0.8580 - val_loss: 0.3531 - val_acc: 0.8289\n",
      "roc_auc: 0.89458 - roc_auc_val: 0.89689 - norm_gini: 0.78917 - norm_gini_val: 0.79378          \n",
      "\n",
      "Epoch 00008: norm_gini_val did not improve from 0.79583\n",
      "Epoch 9/5000\n",
      " - 1s - loss: 0.3140 - acc: 0.8604 - val_loss: 0.3669 - val_acc: 0.8329\n",
      "roc_auc: 0.89601 - roc_auc_val: 0.89499 - norm_gini: 0.79202 - norm_gini_val: 0.78999          \n",
      "\n",
      "Epoch 00009: norm_gini_val did not improve from 0.79583\n",
      "Epoch 10/5000\n",
      " - 1s - loss: 0.3109 - acc: 0.8617 - val_loss: 0.3475 - val_acc: 0.8373\n",
      "roc_auc: 0.89453 - roc_auc_val: 0.89268 - norm_gini: 0.78905 - norm_gini_val: 0.78535          \n",
      "\n",
      "Epoch 00010: norm_gini_val did not improve from 0.79583\n",
      "Epoch 11/5000\n",
      " - 1s - loss: 0.3091 - acc: 0.8622 - val_loss: 0.3793 - val_acc: 0.8229\n",
      "roc_auc: 0.89928 - roc_auc_val: 0.89725 - norm_gini: 0.79856 - norm_gini_val: 0.79449          \n",
      "\n",
      "Epoch 00011: norm_gini_val did not improve from 0.79583\n",
      "Epoch 12/5000\n",
      " - 1s - loss: 0.3065 - acc: 0.8610 - val_loss: 0.3505 - val_acc: 0.8333\n",
      "roc_auc: 0.89792 - roc_auc_val: 0.89706 - norm_gini: 0.79583 - norm_gini_val: 0.79413          \n",
      "\n",
      "Epoch 00012: norm_gini_val did not improve from 0.79583\n",
      "Epoch 13/5000\n",
      " - 1s - loss: 0.3097 - acc: 0.8618 - val_loss: 0.3507 - val_acc: 0.8360\n",
      "roc_auc: 0.8941 - roc_auc_val: 0.89615 - norm_gini: 0.7882 - norm_gini_val: 0.79229          \n",
      "\n",
      "Epoch 00013: norm_gini_val did not improve from 0.79583\n",
      "Epoch 14/5000\n",
      " - 1s - loss: 0.3085 - acc: 0.8652 - val_loss: 0.3494 - val_acc: 0.8360\n",
      "roc_auc: 0.89733 - roc_auc_val: 0.89443 - norm_gini: 0.79467 - norm_gini_val: 0.78886          \n",
      "\n",
      "Epoch 00014: norm_gini_val did not improve from 0.79583\n",
      "Epoch 15/5000\n",
      " - 1s - loss: 0.3066 - acc: 0.8624 - val_loss: 0.3708 - val_acc: 0.8292\n",
      "roc_auc: 0.90055 - roc_auc_val: 0.8992 - norm_gini: 0.8011 - norm_gini_val: 0.7984          \n",
      "\n",
      "Epoch 00015: norm_gini_val improved from 0.79583 to 0.79840, saving model to keras-5fold-run-01-v1-fold-02-run-02.check\n",
      "Epoch 16/5000\n",
      " - 1s - loss: 0.3070 - acc: 0.8621 - val_loss: 0.3661 - val_acc: 0.8306\n",
      "roc_auc: 0.90179 - roc_auc_val: 0.89812 - norm_gini: 0.80359 - norm_gini_val: 0.79624          \n",
      "\n",
      "Epoch 00016: norm_gini_val did not improve from 0.79840\n",
      "Epoch 17/5000\n",
      " - 1s - loss: 0.3045 - acc: 0.8616 - val_loss: 0.4068 - val_acc: 0.8218\n",
      "roc_auc: 0.90026 - roc_auc_val: 0.89551 - norm_gini: 0.80051 - norm_gini_val: 0.79101          \n",
      "\n",
      "Epoch 00017: norm_gini_val did not improve from 0.79840\n",
      "Epoch 18/5000\n",
      " - 1s - loss: 0.3014 - acc: 0.8638 - val_loss: 0.3470 - val_acc: 0.8440\n",
      "roc_auc: 0.89842 - roc_auc_val: 0.89296 - norm_gini: 0.79684 - norm_gini_val: 0.78591          \n",
      "\n",
      "Epoch 00018: norm_gini_val did not improve from 0.79840\n",
      "Epoch 19/5000\n",
      " - 1s - loss: 0.2989 - acc: 0.8653 - val_loss: 0.3777 - val_acc: 0.8239\n",
      "roc_auc: 0.90477 - roc_auc_val: 0.89763 - norm_gini: 0.80954 - norm_gini_val: 0.79525          \n",
      "\n",
      "Epoch 00019: norm_gini_val did not improve from 0.79840\n",
      "Epoch 20/5000\n",
      " - 1s - loss: 0.3009 - acc: 0.8639 - val_loss: 0.4308 - val_acc: 0.8192\n",
      "roc_auc: 0.90274 - roc_auc_val: 0.89509 - norm_gini: 0.80549 - norm_gini_val: 0.79017          \n",
      "\n",
      "Epoch 00020: norm_gini_val did not improve from 0.79840\n",
      "Epoch 21/5000\n",
      " - 1s - loss: 0.2993 - acc: 0.8643 - val_loss: 0.3636 - val_acc: 0.8313\n",
      "roc_auc: 0.90494 - roc_auc_val: 0.89674 - norm_gini: 0.80988 - norm_gini_val: 0.79348          \n",
      "\n",
      "Epoch 00021: norm_gini_val did not improve from 0.79840\n",
      "Epoch 22/5000\n",
      " - 1s - loss: 0.3015 - acc: 0.8653 - val_loss: 0.3689 - val_acc: 0.8269\n",
      "roc_auc: 0.90657 - roc_auc_val: 0.89881 - norm_gini: 0.81315 - norm_gini_val: 0.79761          \n",
      "\n",
      "Epoch 00022: norm_gini_val did not improve from 0.79840\n",
      "Epoch 23/5000\n",
      " - 1s - loss: 0.2986 - acc: 0.8650 - val_loss: 0.3676 - val_acc: 0.8326\n",
      "roc_auc: 0.90614 - roc_auc_val: 0.89839 - norm_gini: 0.81228 - norm_gini_val: 0.79678          \n",
      "\n",
      "Epoch 00023: norm_gini_val did not improve from 0.79840\n",
      "Epoch 24/5000\n",
      " - 1s - loss: 0.2977 - acc: 0.8663 - val_loss: 0.3879 - val_acc: 0.8380\n",
      "roc_auc: 0.90045 - roc_auc_val: 0.89806 - norm_gini: 0.8009 - norm_gini_val: 0.79613          \n",
      "\n",
      "Epoch 00024: norm_gini_val did not improve from 0.79840\n",
      "Epoch 25/5000\n",
      " - 1s - loss: 0.2992 - acc: 0.8691 - val_loss: 0.3713 - val_acc: 0.8397\n",
      "roc_auc: 0.90464 - roc_auc_val: 0.89668 - norm_gini: 0.80928 - norm_gini_val: 0.79335          \n",
      "\n",
      "Epoch 00025: norm_gini_val did not improve from 0.79840\n",
      "Epoch 26/5000\n",
      " - 1s - loss: 0.2965 - acc: 0.8673 - val_loss: 0.3769 - val_acc: 0.8353\n",
      "roc_auc: 0.90824 - roc_auc_val: 0.89783 - norm_gini: 0.81647 - norm_gini_val: 0.79566          \n",
      "\n",
      "Epoch 00026: norm_gini_val did not improve from 0.79840\n",
      "Epoch 27/5000\n",
      " - 1s - loss: 0.2945 - acc: 0.8696 - val_loss: 0.3450 - val_acc: 0.8400\n",
      "roc_auc: 0.90806 - roc_auc_val: 0.89929 - norm_gini: 0.81613 - norm_gini_val: 0.79859          \n",
      "\n",
      "Epoch 00027: norm_gini_val improved from 0.79840 to 0.79859, saving model to keras-5fold-run-01-v1-fold-02-run-02.check\n",
      "Epoch 28/5000\n",
      " - 1s - loss: 0.2959 - acc: 0.8675 - val_loss: 0.3812 - val_acc: 0.8383\n",
      "roc_auc: 0.90334 - roc_auc_val: 0.89534 - norm_gini: 0.80668 - norm_gini_val: 0.79067          \n",
      "\n",
      "Epoch 00028: norm_gini_val did not improve from 0.79859\n",
      "Epoch 29/5000\n",
      " - 1s - loss: 0.2965 - acc: 0.8679 - val_loss: 0.3496 - val_acc: 0.8286\n",
      "roc_auc: 0.90509 - roc_auc_val: 0.899 - norm_gini: 0.81018 - norm_gini_val: 0.79801          \n",
      "\n",
      "Epoch 00029: norm_gini_val did not improve from 0.79859\n",
      "Epoch 30/5000\n",
      " - 1s - loss: 0.2969 - acc: 0.8683 - val_loss: 0.3440 - val_acc: 0.8376\n",
      "roc_auc: 0.90568 - roc_auc_val: 0.89731 - norm_gini: 0.81135 - norm_gini_val: 0.79463          \n",
      "\n",
      "Epoch 00030: norm_gini_val did not improve from 0.79859\n",
      "Epoch 31/5000\n",
      " - 1s - loss: 0.2972 - acc: 0.8650 - val_loss: 0.3825 - val_acc: 0.8235\n",
      "roc_auc: 0.90979 - roc_auc_val: 0.89425 - norm_gini: 0.81957 - norm_gini_val: 0.78851          \n",
      "\n",
      "Epoch 00031: norm_gini_val did not improve from 0.79859\n",
      "Epoch 32/5000\n",
      " - 1s - loss: 0.2950 - acc: 0.8660 - val_loss: 0.3725 - val_acc: 0.8282\n",
      "roc_auc: 0.91189 - roc_auc_val: 0.897 - norm_gini: 0.82377 - norm_gini_val: 0.79399          \n",
      "\n",
      "Epoch 00032: norm_gini_val did not improve from 0.79859\n",
      "Epoch 33/5000\n",
      " - 1s - loss: 0.2927 - acc: 0.8690 - val_loss: 0.3510 - val_acc: 0.8350\n",
      "roc_auc: 0.90782 - roc_auc_val: 0.89526 - norm_gini: 0.81564 - norm_gini_val: 0.79053          \n",
      "\n",
      "Epoch 00033: norm_gini_val did not improve from 0.79859\n",
      "Epoch 34/5000\n",
      " - 1s - loss: 0.2945 - acc: 0.8701 - val_loss: 0.3904 - val_acc: 0.8326\n",
      "roc_auc: 0.90734 - roc_auc_val: 0.89434 - norm_gini: 0.81468 - norm_gini_val: 0.78867          \n",
      "\n",
      "Epoch 00034: norm_gini_val did not improve from 0.79859\n",
      "Epoch 35/5000\n",
      " - 1s - loss: 0.2921 - acc: 0.8691 - val_loss: 0.3500 - val_acc: 0.8366\n",
      "roc_auc: 0.90927 - roc_auc_val: 0.89449 - norm_gini: 0.81855 - norm_gini_val: 0.78898          \n",
      "\n",
      "Epoch 00035: norm_gini_val did not improve from 0.79859\n",
      "Epoch 36/5000\n",
      " - 1s - loss: 0.2918 - acc: 0.8718 - val_loss: 0.3742 - val_acc: 0.8303\n",
      "roc_auc: 0.91184 - roc_auc_val: 0.89777 - norm_gini: 0.82369 - norm_gini_val: 0.79554          \n",
      "\n",
      "Epoch 00036: norm_gini_val did not improve from 0.79859\n",
      "Epoch 37/5000\n",
      " - 1s - loss: 0.2951 - acc: 0.8711 - val_loss: 0.3578 - val_acc: 0.8397\n",
      "roc_auc: 0.91419 - roc_auc_val: 0.90097 - norm_gini: 0.82837 - norm_gini_val: 0.80195          \n",
      "\n",
      "Epoch 00037: norm_gini_val improved from 0.79859 to 0.80195, saving model to keras-5fold-run-01-v1-fold-02-run-02.check\n",
      "Epoch 38/5000\n",
      " - 1s - loss: 0.2906 - acc: 0.8683 - val_loss: 0.3556 - val_acc: 0.8343\n",
      "roc_auc: 0.91094 - roc_auc_val: 0.897 - norm_gini: 0.82188 - norm_gini_val: 0.794          \n",
      "\n",
      "Epoch 00038: norm_gini_val did not improve from 0.80195\n",
      "Epoch 39/5000\n",
      " - 1s - loss: 0.2896 - acc: 0.8716 - val_loss: 0.4460 - val_acc: 0.8178\n",
      "roc_auc: 0.90927 - roc_auc_val: 0.89489 - norm_gini: 0.81853 - norm_gini_val: 0.78978          \n",
      "\n",
      "Epoch 00039: norm_gini_val did not improve from 0.80195\n",
      "Epoch 40/5000\n",
      " - 1s - loss: 0.2942 - acc: 0.8683 - val_loss: 0.3721 - val_acc: 0.8407\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "roc_auc: 0.91124 - roc_auc_val: 0.89947 - norm_gini: 0.82249 - norm_gini_val: 0.79895          \n",
      "\n",
      "Epoch 00040: norm_gini_val did not improve from 0.80195\n",
      "Epoch 41/5000\n",
      " - 1s - loss: 0.2880 - acc: 0.8697 - val_loss: 0.3619 - val_acc: 0.8440\n",
      "roc_auc: 0.91052 - roc_auc_val: 0.90202 - norm_gini: 0.82103 - norm_gini_val: 0.80404          \n",
      "\n",
      "Epoch 00041: norm_gini_val improved from 0.80195 to 0.80404, saving model to keras-5fold-run-01-v1-fold-02-run-02.check\n",
      "Epoch 42/5000\n",
      " - 1s - loss: 0.2951 - acc: 0.8680 - val_loss: 0.3990 - val_acc: 0.8333\n",
      "roc_auc: 0.90748 - roc_auc_val: 0.8947 - norm_gini: 0.81497 - norm_gini_val: 0.7894          \n",
      "\n",
      "Epoch 00042: norm_gini_val did not improve from 0.80404\n",
      "Epoch 43/5000\n",
      " - 1s - loss: 0.2905 - acc: 0.8709 - val_loss: 0.3834 - val_acc: 0.8316\n",
      "roc_auc: 0.91214 - roc_auc_val: 0.89576 - norm_gini: 0.82428 - norm_gini_val: 0.79152          \n",
      "\n",
      "Epoch 00043: norm_gini_val did not improve from 0.80404\n",
      "Epoch 44/5000\n",
      " - 1s - loss: 0.2897 - acc: 0.8708 - val_loss: 0.3900 - val_acc: 0.8356\n",
      "roc_auc: 0.91138 - roc_auc_val: 0.89433 - norm_gini: 0.82276 - norm_gini_val: 0.78866          \n",
      "\n",
      "Epoch 00044: norm_gini_val did not improve from 0.80404\n",
      "Epoch 45/5000\n",
      " - 1s - loss: 0.2925 - acc: 0.8667 - val_loss: 0.3584 - val_acc: 0.8353\n",
      "roc_auc: 0.90756 - roc_auc_val: 0.8906 - norm_gini: 0.81512 - norm_gini_val: 0.78119          \n",
      "\n",
      "Epoch 00045: norm_gini_val did not improve from 0.80404\n",
      "Epoch 46/5000\n",
      " - 1s - loss: 0.2911 - acc: 0.8703 - val_loss: 0.3820 - val_acc: 0.8303\n",
      "roc_auc: 0.91248 - roc_auc_val: 0.89975 - norm_gini: 0.82495 - norm_gini_val: 0.79951          \n",
      "\n",
      "Epoch 00046: norm_gini_val did not improve from 0.80404\n",
      "Epoch 47/5000\n",
      " - 1s - loss: 0.2903 - acc: 0.8723 - val_loss: 0.3575 - val_acc: 0.8370\n",
      "roc_auc: 0.91302 - roc_auc_val: 0.89771 - norm_gini: 0.82603 - norm_gini_val: 0.79541          \n",
      "\n",
      "Epoch 00047: norm_gini_val did not improve from 0.80404\n",
      "Epoch 48/5000\n",
      " - 1s - loss: 0.2927 - acc: 0.8709 - val_loss: 0.3580 - val_acc: 0.8461\n",
      "roc_auc: 0.91459 - roc_auc_val: 0.89863 - norm_gini: 0.82919 - norm_gini_val: 0.79726          \n",
      "\n",
      "Epoch 00048: norm_gini_val did not improve from 0.80404\n",
      "Epoch 49/5000\n",
      " - 1s - loss: 0.2864 - acc: 0.8717 - val_loss: 0.3666 - val_acc: 0.8262\n",
      "roc_auc: 0.91018 - roc_auc_val: 0.88952 - norm_gini: 0.82035 - norm_gini_val: 0.77903          \n",
      "\n",
      "Epoch 00049: norm_gini_val did not improve from 0.80404\n",
      "Epoch 50/5000\n",
      " - 1s - loss: 0.2897 - acc: 0.8704 - val_loss: 0.3583 - val_acc: 0.8353\n",
      "roc_auc: 0.91045 - roc_auc_val: 0.89392 - norm_gini: 0.8209 - norm_gini_val: 0.78784          \n",
      "\n",
      "Epoch 00050: norm_gini_val did not improve from 0.80404\n",
      "Epoch 51/5000\n",
      " - 1s - loss: 0.2926 - acc: 0.8681 - val_loss: 0.3477 - val_acc: 0.8450\n",
      "roc_auc: 0.90926 - roc_auc_val: 0.89601 - norm_gini: 0.81853 - norm_gini_val: 0.79203          \n",
      "\n",
      "Epoch 00051: norm_gini_val did not improve from 0.80404\n",
      "Epoch 52/5000\n",
      " - 1s - loss: 0.2912 - acc: 0.8691 - val_loss: 0.3559 - val_acc: 0.8380\n",
      "roc_auc: 0.91414 - roc_auc_val: 0.89967 - norm_gini: 0.82827 - norm_gini_val: 0.79933          \n",
      "\n",
      "Epoch 00052: norm_gini_val did not improve from 0.80404\n",
      "Epoch 53/5000\n",
      " - 1s - loss: 0.2923 - acc: 0.8678 - val_loss: 0.3436 - val_acc: 0.8376\n",
      "roc_auc: 0.91103 - roc_auc_val: 0.89668 - norm_gini: 0.82206 - norm_gini_val: 0.79336          \n",
      "\n",
      "Epoch 00053: norm_gini_val did not improve from 0.80404\n",
      "Epoch 54/5000\n",
      " - 1s - loss: 0.2913 - acc: 0.8719 - val_loss: 0.3471 - val_acc: 0.8457\n",
      "roc_auc: 0.91295 - roc_auc_val: 0.90012 - norm_gini: 0.8259 - norm_gini_val: 0.80024          \n",
      "\n",
      "Epoch 00054: norm_gini_val did not improve from 0.80404\n",
      "Epoch 55/5000\n",
      " - 1s - loss: 0.2873 - acc: 0.8696 - val_loss: 0.3695 - val_acc: 0.8242\n",
      "roc_auc: 0.91317 - roc_auc_val: 0.89676 - norm_gini: 0.82634 - norm_gini_val: 0.79351          \n",
      "\n",
      "Epoch 00055: norm_gini_val did not improve from 0.80404\n",
      "Epoch 56/5000\n",
      " - 1s - loss: 0.2883 - acc: 0.8686 - val_loss: 0.3691 - val_acc: 0.8329\n",
      "roc_auc: 0.91533 - roc_auc_val: 0.89759 - norm_gini: 0.83065 - norm_gini_val: 0.79517          \n",
      "\n",
      "Epoch 00056: norm_gini_val did not improve from 0.80404\n",
      "Epoch 57/5000\n",
      " - 1s - loss: 0.2888 - acc: 0.8734 - val_loss: 0.3684 - val_acc: 0.8282\n",
      "roc_auc: 0.91636 - roc_auc_val: 0.89839 - norm_gini: 0.83273 - norm_gini_val: 0.79677          \n",
      "\n",
      "Epoch 00057: norm_gini_val did not improve from 0.80404\n",
      "Epoch 58/5000\n",
      " - 1s - loss: 0.2869 - acc: 0.8707 - val_loss: 0.3555 - val_acc: 0.8474\n",
      "roc_auc: 0.91405 - roc_auc_val: 0.89723 - norm_gini: 0.8281 - norm_gini_val: 0.79447          \n",
      "\n",
      "Epoch 00058: norm_gini_val did not improve from 0.80404\n",
      "Epoch 59/5000\n",
      " - 1s - loss: 0.2878 - acc: 0.8725 - val_loss: 0.3653 - val_acc: 0.8360\n",
      "roc_auc: 0.91777 - roc_auc_val: 0.89024 - norm_gini: 0.83555 - norm_gini_val: 0.78049          \n",
      "\n",
      "Epoch 00059: norm_gini_val did not improve from 0.80404\n",
      "Epoch 60/5000\n",
      " - 1s - loss: 0.2888 - acc: 0.8731 - val_loss: 0.3793 - val_acc: 0.8363\n",
      "roc_auc: 0.91831 - roc_auc_val: 0.89504 - norm_gini: 0.83661 - norm_gini_val: 0.79009          \n",
      "\n",
      "Epoch 00060: norm_gini_val did not improve from 0.80404\n",
      "Epoch 61/5000\n",
      " - 1s - loss: 0.2849 - acc: 0.8735 - val_loss: 0.3760 - val_acc: 0.8444\n",
      "roc_auc: 0.91818 - roc_auc_val: 0.89829 - norm_gini: 0.83635 - norm_gini_val: 0.79659          \n",
      "\n",
      "Epoch 00061: norm_gini_val did not improve from 0.80404\n",
      "Epoch 00061: early stopping\n",
      "\n",
      " Fold 2 Run 2 Log-loss: 0.36192\n",
      " Fold 2 Run 2 AUC: 0.90202\n",
      " Fold 2 Run 2 normalized gini: 0.80404\n",
      "\n",
      " Fold 2 - Run 3\n",
      "\n",
      "Train on 8925 samples, validate on 2975 samples\n",
      "Epoch 1/5000\n",
      " - 3s - loss: 0.5108 - acc: 0.7842 - val_loss: 0.4132 - val_acc: 0.8202\n",
      "roc_auc: 0.8404 - roc_auc_val: 0.84251 - norm_gini: 0.68081 - norm_gini_val: 0.68503          \n",
      "\n",
      "Epoch 00001: norm_gini_val improved from -inf to 0.68503, saving model to keras-5fold-run-01-v1-fold-02-run-03.check\n",
      "Epoch 2/5000\n",
      " - 1s - loss: 0.3691 - acc: 0.8436 - val_loss: 0.3771 - val_acc: 0.8262\n",
      "roc_auc: 0.87436 - roc_auc_val: 0.88632 - norm_gini: 0.74872 - norm_gini_val: 0.77263          \n",
      "\n",
      "Epoch 00002: norm_gini_val improved from 0.68503 to 0.77263, saving model to keras-5fold-run-01-v1-fold-02-run-03.check\n",
      "Epoch 3/5000\n",
      " - 1s - loss: 0.3344 - acc: 0.8556 - val_loss: 0.3655 - val_acc: 0.8299\n",
      "roc_auc: 0.88243 - roc_auc_val: 0.89229 - norm_gini: 0.76486 - norm_gini_val: 0.78459          \n",
      "\n",
      "Epoch 00003: norm_gini_val improved from 0.77263 to 0.78459, saving model to keras-5fold-run-01-v1-fold-02-run-03.check\n",
      "Epoch 4/5000\n",
      " - 1s - loss: 0.3326 - acc: 0.8530 - val_loss: 0.3851 - val_acc: 0.8242\n",
      "roc_auc: 0.8849 - roc_auc_val: 0.89617 - norm_gini: 0.76981 - norm_gini_val: 0.79233          \n",
      "\n",
      "Epoch 00004: norm_gini_val improved from 0.78459 to 0.79233, saving model to keras-5fold-run-01-v1-fold-02-run-03.check\n",
      "Epoch 5/5000\n",
      " - 1s - loss: 0.3311 - acc: 0.8514 - val_loss: 0.3512 - val_acc: 0.8333\n",
      "roc_auc: 0.88988 - roc_auc_val: 0.90009 - norm_gini: 0.77977 - norm_gini_val: 0.80017          \n",
      "\n",
      "Epoch 00005: norm_gini_val improved from 0.79233 to 0.80017, saving model to keras-5fold-run-01-v1-fold-02-run-03.check\n",
      "Epoch 6/5000\n",
      " - 1s - loss: 0.3208 - acc: 0.8597 - val_loss: 0.3600 - val_acc: 0.8319\n",
      "roc_auc: 0.88835 - roc_auc_val: 0.89902 - norm_gini: 0.7767 - norm_gini_val: 0.79805          \n",
      "\n",
      "Epoch 00006: norm_gini_val did not improve from 0.80017\n",
      "Epoch 7/5000\n",
      " - 1s - loss: 0.3182 - acc: 0.8610 - val_loss: 0.3599 - val_acc: 0.8299\n",
      "roc_auc: 0.89278 - roc_auc_val: 0.90081 - norm_gini: 0.78556 - norm_gini_val: 0.80163          \n",
      "\n",
      "Epoch 00007: norm_gini_val improved from 0.80017 to 0.80163, saving model to keras-5fold-run-01-v1-fold-02-run-03.check\n",
      "Epoch 8/5000\n",
      " - 1s - loss: 0.3153 - acc: 0.8548 - val_loss: 0.3558 - val_acc: 0.8323\n",
      "roc_auc: 0.89325 - roc_auc_val: 0.90041 - norm_gini: 0.78649 - norm_gini_val: 0.80083          \n",
      "\n",
      "Epoch 00008: norm_gini_val did not improve from 0.80163\n",
      "Epoch 9/5000\n",
      " - 1s - loss: 0.3127 - acc: 0.8582 - val_loss: 0.3653 - val_acc: 0.8326\n",
      "roc_auc: 0.8959 - roc_auc_val: 0.90101 - norm_gini: 0.79181 - norm_gini_val: 0.80202          \n",
      "\n",
      "Epoch 00009: norm_gini_val improved from 0.80163 to 0.80202, saving model to keras-5fold-run-01-v1-fold-02-run-03.check\n",
      "Epoch 10/5000\n",
      " - 1s - loss: 0.3116 - acc: 0.8642 - val_loss: 0.3473 - val_acc: 0.8366\n",
      "roc_auc: 0.89604 - roc_auc_val: 0.90064 - norm_gini: 0.79208 - norm_gini_val: 0.80128          \n",
      "\n",
      "Epoch 00010: norm_gini_val did not improve from 0.80202\n",
      "Epoch 11/5000\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " - 1s - loss: 0.3089 - acc: 0.8651 - val_loss: 0.3592 - val_acc: 0.8292\n",
      "roc_auc: 0.89817 - roc_auc_val: 0.90138 - norm_gini: 0.79634 - norm_gini_val: 0.80276          \n",
      "\n",
      "Epoch 00011: norm_gini_val improved from 0.80202 to 0.80276, saving model to keras-5fold-run-01-v1-fold-02-run-03.check\n",
      "Epoch 12/5000\n",
      " - 1s - loss: 0.3076 - acc: 0.8599 - val_loss: 0.4172 - val_acc: 0.8198\n",
      "roc_auc: 0.89629 - roc_auc_val: 0.90072 - norm_gini: 0.79258 - norm_gini_val: 0.80143          \n",
      "\n",
      "Epoch 00012: norm_gini_val did not improve from 0.80276\n",
      "Epoch 13/5000\n",
      " - 1s - loss: 0.3083 - acc: 0.8604 - val_loss: 0.3620 - val_acc: 0.8292\n",
      "roc_auc: 0.90169 - roc_auc_val: 0.90013 - norm_gini: 0.80339 - norm_gini_val: 0.80027          \n",
      "\n",
      "Epoch 00013: norm_gini_val did not improve from 0.80276\n",
      "Epoch 14/5000\n",
      " - 1s - loss: 0.3095 - acc: 0.8621 - val_loss: 0.4066 - val_acc: 0.8299\n",
      "roc_auc: 0.89713 - roc_auc_val: 0.89761 - norm_gini: 0.79427 - norm_gini_val: 0.79522          \n",
      "\n",
      "Epoch 00014: norm_gini_val did not improve from 0.80276\n",
      "Epoch 15/5000\n",
      " - 1s - loss: 0.3051 - acc: 0.8651 - val_loss: 0.3458 - val_acc: 0.8346\n",
      "roc_auc: 0.89779 - roc_auc_val: 0.89776 - norm_gini: 0.79557 - norm_gini_val: 0.79551          \n",
      "\n",
      "Epoch 00015: norm_gini_val did not improve from 0.80276\n",
      "Epoch 16/5000\n",
      " - 1s - loss: 0.3044 - acc: 0.8633 - val_loss: 0.3695 - val_acc: 0.8336\n",
      "roc_auc: 0.90205 - roc_auc_val: 0.90082 - norm_gini: 0.80411 - norm_gini_val: 0.80164          \n",
      "\n",
      "Epoch 00016: norm_gini_val did not improve from 0.80276\n",
      "Epoch 17/5000\n",
      " - 1s - loss: 0.3037 - acc: 0.8611 - val_loss: 0.3529 - val_acc: 0.8289\n",
      "roc_auc: 0.89758 - roc_auc_val: 0.89652 - norm_gini: 0.79517 - norm_gini_val: 0.79303          \n",
      "\n",
      "Epoch 00017: norm_gini_val did not improve from 0.80276\n",
      "Epoch 18/5000\n",
      " - 1s - loss: 0.3046 - acc: 0.8621 - val_loss: 0.3468 - val_acc: 0.8326\n",
      "roc_auc: 0.90085 - roc_auc_val: 0.90145 - norm_gini: 0.8017 - norm_gini_val: 0.80289          \n",
      "\n",
      "Epoch 00018: norm_gini_val improved from 0.80276 to 0.80289, saving model to keras-5fold-run-01-v1-fold-02-run-03.check\n",
      "Epoch 19/5000\n",
      " - 1s - loss: 0.3027 - acc: 0.8608 - val_loss: 0.3698 - val_acc: 0.8319\n",
      "roc_auc: 0.90461 - roc_auc_val: 0.89978 - norm_gini: 0.80922 - norm_gini_val: 0.79957          \n",
      "\n",
      "Epoch 00019: norm_gini_val did not improve from 0.80289\n",
      "Epoch 20/5000\n",
      " - 1s - loss: 0.2989 - acc: 0.8615 - val_loss: 0.3746 - val_acc: 0.8218\n",
      "roc_auc: 0.90359 - roc_auc_val: 0.90239 - norm_gini: 0.80718 - norm_gini_val: 0.80478          \n",
      "\n",
      "Epoch 00020: norm_gini_val improved from 0.80289 to 0.80478, saving model to keras-5fold-run-01-v1-fold-02-run-03.check\n",
      "Epoch 21/5000\n",
      " - 1s - loss: 0.2965 - acc: 0.8641 - val_loss: 0.3667 - val_acc: 0.8319\n",
      "roc_auc: 0.90641 - roc_auc_val: 0.90084 - norm_gini: 0.81282 - norm_gini_val: 0.80169          \n",
      "\n",
      "Epoch 00021: norm_gini_val did not improve from 0.80478\n",
      "Epoch 22/5000\n",
      " - 1s - loss: 0.2968 - acc: 0.8691 - val_loss: 0.3603 - val_acc: 0.8376\n",
      "roc_auc: 0.9062 - roc_auc_val: 0.89832 - norm_gini: 0.81239 - norm_gini_val: 0.79664          \n",
      "\n",
      "Epoch 00022: norm_gini_val did not improve from 0.80478\n",
      "Epoch 23/5000\n",
      " - 1s - loss: 0.2958 - acc: 0.8663 - val_loss: 0.3629 - val_acc: 0.8329\n",
      "roc_auc: 0.90657 - roc_auc_val: 0.89953 - norm_gini: 0.81314 - norm_gini_val: 0.79907          \n",
      "\n",
      "Epoch 00023: norm_gini_val did not improve from 0.80478\n",
      "Epoch 24/5000\n",
      " - 1s - loss: 0.3002 - acc: 0.8648 - val_loss: 0.3857 - val_acc: 0.8269\n",
      "roc_auc: 0.90555 - roc_auc_val: 0.89962 - norm_gini: 0.8111 - norm_gini_val: 0.79923          \n",
      "\n",
      "Epoch 00024: norm_gini_val did not improve from 0.80478\n",
      "Epoch 25/5000\n",
      " - 1s - loss: 0.2977 - acc: 0.8625 - val_loss: 0.3670 - val_acc: 0.8215\n",
      "roc_auc: 0.90359 - roc_auc_val: 0.89732 - norm_gini: 0.80718 - norm_gini_val: 0.79464          \n",
      "\n",
      "Epoch 00025: norm_gini_val did not improve from 0.80478\n",
      "Epoch 26/5000\n",
      " - 1s - loss: 0.2984 - acc: 0.8666 - val_loss: 0.3459 - val_acc: 0.8393\n",
      "roc_auc: 0.90644 - roc_auc_val: 0.899 - norm_gini: 0.81289 - norm_gini_val: 0.79799          \n",
      "\n",
      "Epoch 00026: norm_gini_val did not improve from 0.80478\n",
      "Epoch 27/5000\n",
      " - 1s - loss: 0.3010 - acc: 0.8661 - val_loss: 0.3875 - val_acc: 0.8218\n",
      "roc_auc: 0.90746 - roc_auc_val: 0.8972 - norm_gini: 0.81493 - norm_gini_val: 0.7944          \n",
      "\n",
      "Epoch 00027: norm_gini_val did not improve from 0.80478\n",
      "Epoch 28/5000\n",
      " - 1s - loss: 0.2969 - acc: 0.8634 - val_loss: 0.3941 - val_acc: 0.8376\n",
      "roc_auc: 0.90169 - roc_auc_val: 0.89653 - norm_gini: 0.80339 - norm_gini_val: 0.79307          \n",
      "\n",
      "Epoch 00028: norm_gini_val did not improve from 0.80478\n",
      "Epoch 29/5000\n",
      " - 1s - loss: 0.2988 - acc: 0.8645 - val_loss: 0.3837 - val_acc: 0.8336\n",
      "roc_auc: 0.90822 - roc_auc_val: 0.90043 - norm_gini: 0.81643 - norm_gini_val: 0.80086          \n",
      "\n",
      "Epoch 00029: norm_gini_val did not improve from 0.80478\n",
      "Epoch 30/5000\n",
      " - 1s - loss: 0.2978 - acc: 0.8659 - val_loss: 0.3913 - val_acc: 0.8212\n",
      "roc_auc: 0.91003 - roc_auc_val: 0.89819 - norm_gini: 0.82005 - norm_gini_val: 0.79638          \n",
      "\n",
      "Epoch 00030: norm_gini_val did not improve from 0.80478\n",
      "Epoch 31/5000\n",
      " - 1s - loss: 0.3043 - acc: 0.8659 - val_loss: 0.3669 - val_acc: 0.8296\n",
      "roc_auc: 0.90565 - roc_auc_val: 0.89895 - norm_gini: 0.81129 - norm_gini_val: 0.7979          \n",
      "\n",
      "Epoch 00031: norm_gini_val did not improve from 0.80478\n",
      "Epoch 32/5000\n",
      " - 1s - loss: 0.2985 - acc: 0.8687 - val_loss: 0.3854 - val_acc: 0.8272\n",
      "roc_auc: 0.90866 - roc_auc_val: 0.89988 - norm_gini: 0.81733 - norm_gini_val: 0.79977          \n",
      "\n",
      "Epoch 00032: norm_gini_val did not improve from 0.80478\n",
      "Epoch 33/5000\n",
      " - 1s - loss: 0.2952 - acc: 0.8678 - val_loss: 0.3511 - val_acc: 0.8316\n",
      "roc_auc: 0.9075 - roc_auc_val: 0.89907 - norm_gini: 0.815 - norm_gini_val: 0.79814          \n",
      "\n",
      "Epoch 00033: norm_gini_val did not improve from 0.80478\n",
      "Epoch 34/5000\n",
      " - 1s - loss: 0.2971 - acc: 0.8680 - val_loss: 0.3719 - val_acc: 0.8276\n",
      "roc_auc: 0.90975 - roc_auc_val: 0.89892 - norm_gini: 0.8195 - norm_gini_val: 0.79784          \n",
      "\n",
      "Epoch 00034: norm_gini_val did not improve from 0.80478\n",
      "Epoch 35/5000\n",
      " - 1s - loss: 0.2984 - acc: 0.8642 - val_loss: 0.3830 - val_acc: 0.8192\n",
      "roc_auc: 0.90798 - roc_auc_val: 0.89872 - norm_gini: 0.81596 - norm_gini_val: 0.79745          \n",
      "\n",
      "Epoch 00035: norm_gini_val did not improve from 0.80478\n",
      "Epoch 36/5000\n",
      " - 1s - loss: 0.2965 - acc: 0.8660 - val_loss: 0.3537 - val_acc: 0.8306\n",
      "roc_auc: 0.90938 - roc_auc_val: 0.89773 - norm_gini: 0.81875 - norm_gini_val: 0.79545          \n",
      "\n",
      "Epoch 00036: norm_gini_val did not improve from 0.80478\n",
      "Epoch 37/5000\n",
      " - 1s - loss: 0.2950 - acc: 0.8660 - val_loss: 0.3597 - val_acc: 0.8350\n",
      "roc_auc: 0.9099 - roc_auc_val: 0.89577 - norm_gini: 0.81979 - norm_gini_val: 0.79155          \n",
      "\n",
      "Epoch 00037: norm_gini_val did not improve from 0.80478\n",
      "Epoch 38/5000\n",
      " - 1s - loss: 0.2941 - acc: 0.8689 - val_loss: 0.3601 - val_acc: 0.8343\n",
      "roc_auc: 0.91058 - roc_auc_val: 0.89766 - norm_gini: 0.82117 - norm_gini_val: 0.79533          \n",
      "\n",
      "Epoch 00038: norm_gini_val did not improve from 0.80478\n",
      "Epoch 39/5000\n",
      " - 1s - loss: 0.2962 - acc: 0.8672 - val_loss: 0.3453 - val_acc: 0.8339\n",
      "roc_auc: 0.90827 - roc_auc_val: 0.89791 - norm_gini: 0.81654 - norm_gini_val: 0.79582          \n",
      "\n",
      "Epoch 00039: norm_gini_val did not improve from 0.80478\n",
      "Epoch 40/5000\n",
      " - 1s - loss: 0.2952 - acc: 0.8685 - val_loss: 0.3499 - val_acc: 0.8343\n",
      "roc_auc: 0.91061 - roc_auc_val: 0.8985 - norm_gini: 0.82122 - norm_gini_val: 0.79699          \n",
      "\n",
      "Epoch 00040: norm_gini_val did not improve from 0.80478\n",
      "Epoch 00040: early stopping\n",
      "\n",
      " Fold 2 Run 3 Log-loss: 0.37461\n",
      " Fold 2 Run 3 AUC: 0.90239\n",
      " Fold 2 Run 3 normalized gini: 0.80478\n",
      "\n",
      " Fold 2 Log-loss: 0.35488\n",
      " Fold 2 AUC: 0.90534\n",
      " Fold 2 normalized gini: 0.81067\n",
      "\n",
      " Time taken: 0 hours 3 minutes and 51.99 seconds.\n",
      "\n",
      " Fold 3 - Run 1\n",
      "\n",
      "Train on 8925 samples, validate on 2975 samples\n",
      "Epoch 1/5000\n",
      " - 3s - loss: 0.5311 - acc: 0.7626 - val_loss: 0.2934 - val_acc: 0.8955\n",
      "roc_auc: 0.87144 - roc_auc_val: 0.88132 - norm_gini: 0.74288 - norm_gini_val: 0.76264          \n",
      "\n",
      "Epoch 00001: norm_gini_val improved from -inf to 0.76264, saving model to keras-5fold-run-01-v1-fold-03-run-01.check\n",
      "Epoch 2/5000\n",
      " - 1s - loss: 0.3950 - acc: 0.8229 - val_loss: 0.2394 - val_acc: 0.9076\n",
      "roc_auc: 0.88217 - roc_auc_val: 0.89204 - norm_gini: 0.76434 - norm_gini_val: 0.78408          \n",
      "\n",
      "Epoch 00002: norm_gini_val improved from 0.76264 to 0.78408, saving model to keras-5fold-run-01-v1-fold-03-run-01.check\n",
      "Epoch 3/5000\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " - 1s - loss: 0.3801 - acc: 0.8255 - val_loss: 0.2352 - val_acc: 0.9049\n",
      "roc_auc: 0.88616 - roc_auc_val: 0.89142 - norm_gini: 0.77233 - norm_gini_val: 0.78284          \n",
      "\n",
      "Epoch 00003: norm_gini_val did not improve from 0.78408\n",
      "Epoch 4/5000\n",
      " - 1s - loss: 0.3681 - acc: 0.8341 - val_loss: 0.2476 - val_acc: 0.9025\n",
      "roc_auc: 0.89063 - roc_auc_val: 0.89452 - norm_gini: 0.78125 - norm_gini_val: 0.78905          \n",
      "\n",
      "Epoch 00004: norm_gini_val improved from 0.78408 to 0.78905, saving model to keras-5fold-run-01-v1-fold-03-run-01.check\n",
      "Epoch 5/5000\n",
      " - 1s - loss: 0.3650 - acc: 0.8335 - val_loss: 0.2528 - val_acc: 0.9018\n",
      "roc_auc: 0.89101 - roc_auc_val: 0.89473 - norm_gini: 0.78201 - norm_gini_val: 0.78946          \n",
      "\n",
      "Epoch 00005: norm_gini_val improved from 0.78905 to 0.78946, saving model to keras-5fold-run-01-v1-fold-03-run-01.check\n",
      "Epoch 6/5000\n",
      " - 1s - loss: 0.3591 - acc: 0.8351 - val_loss: 0.2327 - val_acc: 0.9089\n",
      "roc_auc: 0.89269 - roc_auc_val: 0.89628 - norm_gini: 0.78537 - norm_gini_val: 0.79256          \n",
      "\n",
      "Epoch 00006: norm_gini_val improved from 0.78946 to 0.79256, saving model to keras-5fold-run-01-v1-fold-03-run-01.check\n",
      "Epoch 7/5000\n",
      " - 1s - loss: 0.3569 - acc: 0.8402 - val_loss: 0.2450 - val_acc: 0.9045\n",
      "roc_auc: 0.89346 - roc_auc_val: 0.89431 - norm_gini: 0.78692 - norm_gini_val: 0.78863          \n",
      "\n",
      "Epoch 00007: norm_gini_val did not improve from 0.79256\n",
      "Epoch 8/5000\n",
      " - 1s - loss: 0.3555 - acc: 0.8344 - val_loss: 0.2368 - val_acc: 0.9045\n",
      "roc_auc: 0.89552 - roc_auc_val: 0.89428 - norm_gini: 0.79104 - norm_gini_val: 0.78856          \n",
      "\n",
      "Epoch 00008: norm_gini_val did not improve from 0.79256\n",
      "Epoch 9/5000\n",
      " - 1s - loss: 0.3534 - acc: 0.8371 - val_loss: 0.2413 - val_acc: 0.9052\n",
      "roc_auc: 0.89639 - roc_auc_val: 0.89238 - norm_gini: 0.79278 - norm_gini_val: 0.78477          \n",
      "\n",
      "Epoch 00009: norm_gini_val did not improve from 0.79256\n",
      "Epoch 10/5000\n",
      " - 1s - loss: 0.3539 - acc: 0.8382 - val_loss: 0.2381 - val_acc: 0.9072\n",
      "roc_auc: 0.89834 - roc_auc_val: 0.89108 - norm_gini: 0.79668 - norm_gini_val: 0.78216          \n",
      "\n",
      "Epoch 00010: norm_gini_val did not improve from 0.79256\n",
      "Epoch 11/5000\n",
      " - 1s - loss: 0.3504 - acc: 0.8399 - val_loss: 0.2257 - val_acc: 0.9062\n",
      "roc_auc: 0.89712 - roc_auc_val: 0.89678 - norm_gini: 0.79423 - norm_gini_val: 0.79357          \n",
      "\n",
      "Epoch 00011: norm_gini_val improved from 0.79256 to 0.79357, saving model to keras-5fold-run-01-v1-fold-03-run-01.check\n",
      "Epoch 12/5000\n",
      " - 1s - loss: 0.3478 - acc: 0.8416 - val_loss: 0.2351 - val_acc: 0.9069\n",
      "roc_auc: 0.90044 - roc_auc_val: 0.89647 - norm_gini: 0.80088 - norm_gini_val: 0.79294          \n",
      "\n",
      "Epoch 00012: norm_gini_val did not improve from 0.79357\n",
      "Epoch 13/5000\n",
      " - 1s - loss: 0.3465 - acc: 0.8454 - val_loss: 0.2363 - val_acc: 0.9015\n",
      "roc_auc: 0.89782 - roc_auc_val: 0.88657 - norm_gini: 0.79565 - norm_gini_val: 0.77314          \n",
      "\n",
      "Epoch 00013: norm_gini_val did not improve from 0.79357\n",
      "Epoch 14/5000\n",
      " - 1s - loss: 0.3437 - acc: 0.8420 - val_loss: 0.2284 - val_acc: 0.9069\n",
      "roc_auc: 0.90195 - roc_auc_val: 0.89537 - norm_gini: 0.80389 - norm_gini_val: 0.79073          \n",
      "\n",
      "Epoch 00014: norm_gini_val did not improve from 0.79357\n",
      "Epoch 15/5000\n",
      " - 1s - loss: 0.3407 - acc: 0.8416 - val_loss: 0.2402 - val_acc: 0.9039\n",
      "roc_auc: 0.90143 - roc_auc_val: 0.8953 - norm_gini: 0.80287 - norm_gini_val: 0.7906          \n",
      "\n",
      "Epoch 00015: norm_gini_val did not improve from 0.79357\n",
      "Epoch 16/5000\n",
      " - 1s - loss: 0.3433 - acc: 0.8406 - val_loss: 0.2237 - val_acc: 0.9069\n",
      "roc_auc: 0.90132 - roc_auc_val: 0.89881 - norm_gini: 0.80265 - norm_gini_val: 0.79763          \n",
      "\n",
      "Epoch 00016: norm_gini_val improved from 0.79357 to 0.79763, saving model to keras-5fold-run-01-v1-fold-03-run-01.check\n",
      "Epoch 17/5000\n",
      " - 1s - loss: 0.3476 - acc: 0.8397 - val_loss: 0.2467 - val_acc: 0.8965\n",
      "roc_auc: 0.8997 - roc_auc_val: 0.8964 - norm_gini: 0.7994 - norm_gini_val: 0.79279          \n",
      "\n",
      "Epoch 00017: norm_gini_val did not improve from 0.79763\n",
      "Epoch 18/5000\n",
      " - 1s - loss: 0.3403 - acc: 0.8443 - val_loss: 0.2521 - val_acc: 0.9039\n",
      "roc_auc: 0.90181 - roc_auc_val: 0.8952 - norm_gini: 0.80363 - norm_gini_val: 0.7904          \n",
      "\n",
      "Epoch 00018: norm_gini_val did not improve from 0.79763\n",
      "Epoch 19/5000\n",
      " - 1s - loss: 0.3432 - acc: 0.8371 - val_loss: 0.2320 - val_acc: 0.9052\n",
      "roc_auc: 0.90264 - roc_auc_val: 0.89733 - norm_gini: 0.80527 - norm_gini_val: 0.79466          \n",
      "\n",
      "Epoch 00019: norm_gini_val did not improve from 0.79763\n",
      "Epoch 20/5000\n",
      " - 1s - loss: 0.3411 - acc: 0.8437 - val_loss: 0.2265 - val_acc: 0.9055\n",
      "roc_auc: 0.9028 - roc_auc_val: 0.89907 - norm_gini: 0.80559 - norm_gini_val: 0.79814          \n",
      "\n",
      "Epoch 00020: norm_gini_val improved from 0.79763 to 0.79814, saving model to keras-5fold-run-01-v1-fold-03-run-01.check\n",
      "Epoch 21/5000\n",
      " - 1s - loss: 0.3406 - acc: 0.8425 - val_loss: 0.2359 - val_acc: 0.9032\n",
      "roc_auc: 0.90314 - roc_auc_val: 0.89427 - norm_gini: 0.80629 - norm_gini_val: 0.78853          \n",
      "\n",
      "Epoch 00021: norm_gini_val did not improve from 0.79814\n",
      "Epoch 22/5000\n",
      " - 1s - loss: 0.3415 - acc: 0.8412 - val_loss: 0.2550 - val_acc: 0.8975\n",
      "roc_auc: 0.9028 - roc_auc_val: 0.89673 - norm_gini: 0.8056 - norm_gini_val: 0.79346          \n",
      "\n",
      "Epoch 00022: norm_gini_val did not improve from 0.79814\n",
      "Epoch 23/5000\n",
      " - 1s - loss: 0.3404 - acc: 0.8435 - val_loss: 0.2357 - val_acc: 0.9049\n",
      "roc_auc: 0.90288 - roc_auc_val: 0.89735 - norm_gini: 0.80577 - norm_gini_val: 0.7947          \n",
      "\n",
      "Epoch 00023: norm_gini_val did not improve from 0.79814\n",
      "Epoch 24/5000\n",
      " - 1s - loss: 0.3374 - acc: 0.8425 - val_loss: 0.2621 - val_acc: 0.8938\n",
      "roc_auc: 0.90398 - roc_auc_val: 0.89611 - norm_gini: 0.80795 - norm_gini_val: 0.79223          \n",
      "\n",
      "Epoch 00024: norm_gini_val did not improve from 0.79814\n",
      "Epoch 25/5000\n",
      " - 1s - loss: 0.3399 - acc: 0.8452 - val_loss: 0.2247 - val_acc: 0.9066\n",
      "roc_auc: 0.90712 - roc_auc_val: 0.89889 - norm_gini: 0.81423 - norm_gini_val: 0.79778          \n",
      "\n",
      "Epoch 00025: norm_gini_val did not improve from 0.79814\n",
      "Epoch 26/5000\n",
      " - 1s - loss: 0.3370 - acc: 0.8476 - val_loss: 0.2440 - val_acc: 0.9029\n",
      "roc_auc: 0.90375 - roc_auc_val: 0.8988 - norm_gini: 0.80749 - norm_gini_val: 0.7976          \n",
      "\n",
      "Epoch 00026: norm_gini_val did not improve from 0.79814\n",
      "Epoch 27/5000\n",
      " - 1s - loss: 0.3389 - acc: 0.8424 - val_loss: 0.2344 - val_acc: 0.9059\n",
      "roc_auc: 0.9064 - roc_auc_val: 0.89746 - norm_gini: 0.81281 - norm_gini_val: 0.79491          \n",
      "\n",
      "Epoch 00027: norm_gini_val did not improve from 0.79814\n",
      "Epoch 28/5000\n",
      " - 1s - loss: 0.3330 - acc: 0.8468 - val_loss: 0.2309 - val_acc: 0.9042\n",
      "roc_auc: 0.90694 - roc_auc_val: 0.89679 - norm_gini: 0.81389 - norm_gini_val: 0.79359          \n",
      "\n",
      "Epoch 00028: norm_gini_val did not improve from 0.79814\n",
      "Epoch 29/5000\n",
      " - 1s - loss: 0.3371 - acc: 0.8418 - val_loss: 0.2335 - val_acc: 0.9089\n",
      "roc_auc: 0.90512 - roc_auc_val: 0.89665 - norm_gini: 0.81023 - norm_gini_val: 0.7933          \n",
      "\n",
      "Epoch 00029: norm_gini_val did not improve from 0.79814\n",
      "Epoch 30/5000\n",
      " - 1s - loss: 0.3353 - acc: 0.8462 - val_loss: 0.2346 - val_acc: 0.9032\n",
      "roc_auc: 0.90526 - roc_auc_val: 0.89501 - norm_gini: 0.81052 - norm_gini_val: 0.79002          \n",
      "\n",
      "Epoch 00030: norm_gini_val did not improve from 0.79814\n",
      "Epoch 31/5000\n",
      " - 1s - loss: 0.3331 - acc: 0.8467 - val_loss: 0.2449 - val_acc: 0.9005\n",
      "roc_auc: 0.9053 - roc_auc_val: 0.89644 - norm_gini: 0.81059 - norm_gini_val: 0.79289          \n",
      "\n",
      "Epoch 00031: norm_gini_val did not improve from 0.79814\n",
      "Epoch 32/5000\n",
      " - 1s - loss: 0.3357 - acc: 0.8449 - val_loss: 0.2387 - val_acc: 0.9042\n",
      "roc_auc: 0.90679 - roc_auc_val: 0.89648 - norm_gini: 0.81358 - norm_gini_val: 0.79296          \n",
      "\n",
      "Epoch 00032: norm_gini_val did not improve from 0.79814\n",
      "Epoch 33/5000\n",
      " - 1s - loss: 0.3333 - acc: 0.8483 - val_loss: 0.2398 - val_acc: 0.8914\n",
      "roc_auc: 0.90765 - roc_auc_val: 0.89928 - norm_gini: 0.8153 - norm_gini_val: 0.79855          \n",
      "\n",
      "Epoch 00033: norm_gini_val improved from 0.79814 to 0.79855, saving model to keras-5fold-run-01-v1-fold-03-run-01.check\n",
      "Epoch 34/5000\n",
      " - 1s - loss: 0.3338 - acc: 0.8456 - val_loss: 0.2361 - val_acc: 0.8965\n",
      "roc_auc: 0.90808 - roc_auc_val: 0.90051 - norm_gini: 0.81615 - norm_gini_val: 0.80103          \n",
      "\n",
      "Epoch 00034: norm_gini_val improved from 0.79855 to 0.80103, saving model to keras-5fold-run-01-v1-fold-03-run-01.check\n",
      "Epoch 35/5000\n",
      " - 1s - loss: 0.3303 - acc: 0.8472 - val_loss: 0.2707 - val_acc: 0.8844\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "roc_auc: 0.90436 - roc_auc_val: 0.89751 - norm_gini: 0.80871 - norm_gini_val: 0.79502          \n",
      "\n",
      "Epoch 00035: norm_gini_val did not improve from 0.80103\n",
      "Epoch 36/5000\n",
      " - 1s - loss: 0.3306 - acc: 0.8484 - val_loss: 0.2478 - val_acc: 0.9055\n",
      "roc_auc: 0.90794 - roc_auc_val: 0.89596 - norm_gini: 0.81589 - norm_gini_val: 0.79192          \n",
      "\n",
      "Epoch 00036: norm_gini_val did not improve from 0.80103\n",
      "Epoch 37/5000\n",
      " - 1s - loss: 0.3288 - acc: 0.8501 - val_loss: 0.2404 - val_acc: 0.9039\n",
      "roc_auc: 0.91055 - roc_auc_val: 0.89465 - norm_gini: 0.8211 - norm_gini_val: 0.78931          \n",
      "\n",
      "Epoch 00037: norm_gini_val did not improve from 0.80103\n",
      "Epoch 38/5000\n",
      " - 1s - loss: 0.3309 - acc: 0.8502 - val_loss: 0.2518 - val_acc: 0.8995\n",
      "roc_auc: 0.91056 - roc_auc_val: 0.89747 - norm_gini: 0.82112 - norm_gini_val: 0.79494          \n",
      "\n",
      "Epoch 00038: norm_gini_val did not improve from 0.80103\n",
      "Epoch 39/5000\n",
      " - 1s - loss: 0.3266 - acc: 0.8503 - val_loss: 0.2358 - val_acc: 0.9032\n",
      "roc_auc: 0.90941 - roc_auc_val: 0.89337 - norm_gini: 0.81882 - norm_gini_val: 0.78673          \n",
      "\n",
      "Epoch 00039: norm_gini_val did not improve from 0.80103\n",
      "Epoch 40/5000\n",
      " - 1s - loss: 0.3294 - acc: 0.8484 - val_loss: 0.2509 - val_acc: 0.9035\n",
      "roc_auc: 0.90984 - roc_auc_val: 0.8942 - norm_gini: 0.81968 - norm_gini_val: 0.7884          \n",
      "\n",
      "Epoch 00040: norm_gini_val did not improve from 0.80103\n",
      "Epoch 41/5000\n",
      " - 1s - loss: 0.3267 - acc: 0.8471 - val_loss: 0.2559 - val_acc: 0.8968\n",
      "roc_auc: 0.91163 - roc_auc_val: 0.89546 - norm_gini: 0.82327 - norm_gini_val: 0.79092          \n",
      "\n",
      "Epoch 00041: norm_gini_val did not improve from 0.80103\n",
      "Epoch 42/5000\n",
      " - 1s - loss: 0.3315 - acc: 0.8454 - val_loss: 0.2457 - val_acc: 0.9066\n",
      "roc_auc: 0.91125 - roc_auc_val: 0.89355 - norm_gini: 0.82251 - norm_gini_val: 0.7871          \n",
      "\n",
      "Epoch 00042: norm_gini_val did not improve from 0.80103\n",
      "Epoch 43/5000\n",
      " - 1s - loss: 0.3265 - acc: 0.8525 - val_loss: 0.2319 - val_acc: 0.9076\n",
      "roc_auc: 0.91178 - roc_auc_val: 0.8976 - norm_gini: 0.82357 - norm_gini_val: 0.7952          \n",
      "\n",
      "Epoch 00043: norm_gini_val did not improve from 0.80103\n",
      "Epoch 44/5000\n",
      " - 1s - loss: 0.3333 - acc: 0.8484 - val_loss: 0.2493 - val_acc: 0.9008\n",
      "roc_auc: 0.9092 - roc_auc_val: 0.89507 - norm_gini: 0.81839 - norm_gini_val: 0.79014          \n",
      "\n",
      "Epoch 00044: norm_gini_val did not improve from 0.80103\n",
      "Epoch 45/5000\n",
      " - 1s - loss: 0.3309 - acc: 0.8453 - val_loss: 0.2303 - val_acc: 0.9049\n",
      "roc_auc: 0.91113 - roc_auc_val: 0.89971 - norm_gini: 0.82225 - norm_gini_val: 0.79943          \n",
      "\n",
      "Epoch 00045: norm_gini_val did not improve from 0.80103\n",
      "Epoch 46/5000\n",
      " - 1s - loss: 0.3239 - acc: 0.8503 - val_loss: 0.2352 - val_acc: 0.9018\n",
      "roc_auc: 0.91325 - roc_auc_val: 0.89564 - norm_gini: 0.8265 - norm_gini_val: 0.79129          \n",
      "\n",
      "Epoch 00046: norm_gini_val did not improve from 0.80103\n",
      "Epoch 47/5000\n",
      " - 1s - loss: 0.3292 - acc: 0.8490 - val_loss: 0.2272 - val_acc: 0.9079\n",
      "roc_auc: 0.91326 - roc_auc_val: 0.8959 - norm_gini: 0.82652 - norm_gini_val: 0.7918          \n",
      "\n",
      "Epoch 00047: norm_gini_val did not improve from 0.80103\n",
      "Epoch 48/5000\n",
      " - 1s - loss: 0.3309 - acc: 0.8485 - val_loss: 0.2500 - val_acc: 0.8995\n",
      "roc_auc: 0.91381 - roc_auc_val: 0.89756 - norm_gini: 0.82761 - norm_gini_val: 0.79512          \n",
      "\n",
      "Epoch 00048: norm_gini_val did not improve from 0.80103\n",
      "Epoch 49/5000\n",
      " - 1s - loss: 0.3226 - acc: 0.8514 - val_loss: 0.2362 - val_acc: 0.9076\n",
      "roc_auc: 0.91444 - roc_auc_val: 0.896 - norm_gini: 0.82887 - norm_gini_val: 0.792          \n",
      "\n",
      "Epoch 00049: norm_gini_val did not improve from 0.80103\n",
      "Epoch 50/5000\n",
      " - 1s - loss: 0.3289 - acc: 0.8499 - val_loss: 0.2308 - val_acc: 0.9062\n",
      "roc_auc: 0.91206 - roc_auc_val: 0.89547 - norm_gini: 0.82413 - norm_gini_val: 0.79094          \n",
      "\n",
      "Epoch 00050: norm_gini_val did not improve from 0.80103\n",
      "Epoch 51/5000\n",
      " - 1s - loss: 0.3257 - acc: 0.8482 - val_loss: 0.2413 - val_acc: 0.9049\n",
      "roc_auc: 0.91533 - roc_auc_val: 0.89305 - norm_gini: 0.83065 - norm_gini_val: 0.78611          \n",
      "\n",
      "Epoch 00051: norm_gini_val did not improve from 0.80103\n",
      "Epoch 52/5000\n",
      " - 1s - loss: 0.3258 - acc: 0.8518 - val_loss: 0.2324 - val_acc: 0.9055\n",
      "roc_auc: 0.91234 - roc_auc_val: 0.89325 - norm_gini: 0.82468 - norm_gini_val: 0.7865          \n",
      "\n",
      "Epoch 00052: norm_gini_val did not improve from 0.80103\n",
      "Epoch 53/5000\n",
      " - 1s - loss: 0.3244 - acc: 0.8512 - val_loss: 0.2385 - val_acc: 0.9018\n",
      "roc_auc: 0.91598 - roc_auc_val: 0.89565 - norm_gini: 0.83195 - norm_gini_val: 0.79131          \n",
      "\n",
      "Epoch 00053: norm_gini_val did not improve from 0.80103\n",
      "Epoch 54/5000\n",
      " - 1s - loss: 0.3280 - acc: 0.8508 - val_loss: 0.2373 - val_acc: 0.9035\n",
      "roc_auc: 0.91516 - roc_auc_val: 0.89302 - norm_gini: 0.83031 - norm_gini_val: 0.78604          \n",
      "\n",
      "Epoch 00054: norm_gini_val did not improve from 0.80103\n",
      "Epoch 00054: early stopping\n",
      "\n",
      " Fold 3 Run 1 Log-loss: 0.23609\n",
      " Fold 3 Run 1 AUC: 0.90051\n",
      " Fold 3 Run 1 normalized gini: 0.80103\n",
      "\n",
      " Fold 3 - Run 2\n",
      "\n",
      "Train on 8925 samples, validate on 2975 samples\n",
      "Epoch 1/5000\n",
      " - 4s - loss: 0.5158 - acc: 0.7585 - val_loss: 0.3306 - val_acc: 0.8659\n",
      "roc_auc: 0.87402 - roc_auc_val: 0.88476 - norm_gini: 0.74804 - norm_gini_val: 0.76951          \n",
      "\n",
      "Epoch 00001: norm_gini_val improved from -inf to 0.76951, saving model to keras-5fold-run-01-v1-fold-03-run-02.check\n",
      "Epoch 2/5000\n",
      " - 1s - loss: 0.3937 - acc: 0.8266 - val_loss: 0.2346 - val_acc: 0.9029\n",
      "roc_auc: 0.88692 - roc_auc_val: 0.89358 - norm_gini: 0.77384 - norm_gini_val: 0.78715          \n",
      "\n",
      "Epoch 00002: norm_gini_val improved from 0.76951 to 0.78715, saving model to keras-5fold-run-01-v1-fold-03-run-02.check\n",
      "Epoch 3/5000\n",
      " - 1s - loss: 0.3748 - acc: 0.8305 - val_loss: 0.2477 - val_acc: 0.9032\n",
      "roc_auc: 0.88733 - roc_auc_val: 0.89168 - norm_gini: 0.77467 - norm_gini_val: 0.78336          \n",
      "\n",
      "Epoch 00003: norm_gini_val did not improve from 0.78715\n",
      "Epoch 4/5000\n",
      " - 1s - loss: 0.3587 - acc: 0.8373 - val_loss: 0.2326 - val_acc: 0.9018\n",
      "roc_auc: 0.89144 - roc_auc_val: 0.8907 - norm_gini: 0.78288 - norm_gini_val: 0.78139          \n",
      "\n",
      "Epoch 00004: norm_gini_val did not improve from 0.78715\n",
      "Epoch 5/5000\n",
      " - 1s - loss: 0.3600 - acc: 0.8356 - val_loss: 0.2292 - val_acc: 0.9039\n",
      "roc_auc: 0.89448 - roc_auc_val: 0.89521 - norm_gini: 0.78895 - norm_gini_val: 0.79042          \n",
      "\n",
      "Epoch 00005: norm_gini_val improved from 0.78715 to 0.79042, saving model to keras-5fold-run-01-v1-fold-03-run-02.check\n",
      "Epoch 6/5000\n",
      " - 1s - loss: 0.3554 - acc: 0.8333 - val_loss: 0.2299 - val_acc: 0.9062\n",
      "roc_auc: 0.89476 - roc_auc_val: 0.89322 - norm_gini: 0.78952 - norm_gini_val: 0.78643          \n",
      "\n",
      "Epoch 00006: norm_gini_val did not improve from 0.79042\n",
      "Epoch 7/5000\n",
      " - 1s - loss: 0.3515 - acc: 0.8406 - val_loss: 0.2416 - val_acc: 0.9045\n",
      "roc_auc: 0.89554 - roc_auc_val: 0.89574 - norm_gini: 0.79108 - norm_gini_val: 0.79147          \n",
      "\n",
      "Epoch 00007: norm_gini_val improved from 0.79042 to 0.79147, saving model to keras-5fold-run-01-v1-fold-03-run-02.check\n",
      "Epoch 8/5000\n",
      " - 1s - loss: 0.3506 - acc: 0.8352 - val_loss: 0.2477 - val_acc: 0.9055\n",
      "roc_auc: 0.89708 - roc_auc_val: 0.89475 - norm_gini: 0.79415 - norm_gini_val: 0.78951          \n",
      "\n",
      "Epoch 00008: norm_gini_val did not improve from 0.79147\n",
      "Epoch 9/5000\n",
      " - 1s - loss: 0.3497 - acc: 0.8382 - val_loss: 0.2322 - val_acc: 0.9059\n",
      "roc_auc: 0.89698 - roc_auc_val: 0.89498 - norm_gini: 0.79395 - norm_gini_val: 0.78996          \n",
      "\n",
      "Epoch 00009: norm_gini_val did not improve from 0.79147\n",
      "Epoch 10/5000\n",
      " - 1s - loss: 0.3496 - acc: 0.8388 - val_loss: 0.2296 - val_acc: 0.9025\n",
      "roc_auc: 0.89512 - roc_auc_val: 0.89517 - norm_gini: 0.79024 - norm_gini_val: 0.79033          \n",
      "\n",
      "Epoch 00010: norm_gini_val did not improve from 0.79147\n",
      "Epoch 11/5000\n",
      " - 1s - loss: 0.3508 - acc: 0.8389 - val_loss: 0.2446 - val_acc: 0.9029\n",
      "roc_auc: 0.8982 - roc_auc_val: 0.89505 - norm_gini: 0.7964 - norm_gini_val: 0.79009          \n",
      "\n",
      "Epoch 00011: norm_gini_val did not improve from 0.79147\n",
      "Epoch 12/5000\n",
      " - 1s - loss: 0.3443 - acc: 0.8393 - val_loss: 0.2348 - val_acc: 0.9018\n",
      "roc_auc: 0.90049 - roc_auc_val: 0.89568 - norm_gini: 0.80099 - norm_gini_val: 0.79136          \n",
      "\n",
      "Epoch 00012: norm_gini_val did not improve from 0.79147\n",
      "Epoch 13/5000\n",
      " - 1s - loss: 0.3433 - acc: 0.8416 - val_loss: 0.2500 - val_acc: 0.9055\n",
      "roc_auc: 0.89971 - roc_auc_val: 0.89812 - norm_gini: 0.79942 - norm_gini_val: 0.79624          \n",
      "\n",
      "Epoch 00013: norm_gini_val improved from 0.79147 to 0.79624, saving model to keras-5fold-run-01-v1-fold-03-run-02.check\n",
      "Epoch 14/5000\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " - 1s - loss: 0.3403 - acc: 0.8444 - val_loss: 0.2413 - val_acc: 0.9012\n",
      "roc_auc: 0.90118 - roc_auc_val: 0.897 - norm_gini: 0.80235 - norm_gini_val: 0.794          \n",
      "\n",
      "Epoch 00014: norm_gini_val did not improve from 0.79624\n",
      "Epoch 15/5000\n",
      " - 1s - loss: 0.3402 - acc: 0.8419 - val_loss: 0.2420 - val_acc: 0.9079\n",
      "roc_auc: 0.90329 - roc_auc_val: 0.89627 - norm_gini: 0.80658 - norm_gini_val: 0.79254          \n",
      "\n",
      "Epoch 00015: norm_gini_val did not improve from 0.79624\n",
      "Epoch 16/5000\n",
      " - 1s - loss: 0.3390 - acc: 0.8434 - val_loss: 0.2337 - val_acc: 0.9059\n",
      "roc_auc: 0.90144 - roc_auc_val: 0.89265 - norm_gini: 0.80288 - norm_gini_val: 0.78531          \n",
      "\n",
      "Epoch 00016: norm_gini_val did not improve from 0.79624\n",
      "Epoch 17/5000\n",
      " - 1s - loss: 0.3429 - acc: 0.8409 - val_loss: 0.2363 - val_acc: 0.9042\n",
      "roc_auc: 0.90165 - roc_auc_val: 0.89683 - norm_gini: 0.80329 - norm_gini_val: 0.79365          \n",
      "\n",
      "Epoch 00017: norm_gini_val did not improve from 0.79624\n",
      "Epoch 18/5000\n",
      " - 1s - loss: 0.3388 - acc: 0.8446 - val_loss: 0.2336 - val_acc: 0.8992\n",
      "roc_auc: 0.90069 - roc_auc_val: 0.89926 - norm_gini: 0.80138 - norm_gini_val: 0.79852          \n",
      "\n",
      "Epoch 00018: norm_gini_val improved from 0.79624 to 0.79852, saving model to keras-5fold-run-01-v1-fold-03-run-02.check\n",
      "Epoch 19/5000\n",
      " - 1s - loss: 0.3413 - acc: 0.8417 - val_loss: 0.2349 - val_acc: 0.9066\n",
      "roc_auc: 0.9054 - roc_auc_val: 0.89572 - norm_gini: 0.8108 - norm_gini_val: 0.79144          \n",
      "\n",
      "Epoch 00019: norm_gini_val did not improve from 0.79852\n",
      "Epoch 20/5000\n",
      " - 1s - loss: 0.3350 - acc: 0.8505 - val_loss: 0.2338 - val_acc: 0.9035\n",
      "roc_auc: 0.9039 - roc_auc_val: 0.89003 - norm_gini: 0.80779 - norm_gini_val: 0.78007          \n",
      "\n",
      "Epoch 00020: norm_gini_val did not improve from 0.79852\n",
      "Epoch 21/5000\n",
      " - 1s - loss: 0.3374 - acc: 0.8441 - val_loss: 0.2594 - val_acc: 0.8982\n",
      "roc_auc: 0.90459 - roc_auc_val: 0.89378 - norm_gini: 0.80918 - norm_gini_val: 0.78756          \n",
      "\n",
      "Epoch 00021: norm_gini_val did not improve from 0.79852\n",
      "Epoch 22/5000\n",
      " - 1s - loss: 0.3315 - acc: 0.8445 - val_loss: 0.2480 - val_acc: 0.9089\n",
      "roc_auc: 0.9072 - roc_auc_val: 0.89458 - norm_gini: 0.8144 - norm_gini_val: 0.78916          \n",
      "\n",
      "Epoch 00022: norm_gini_val did not improve from 0.79852\n",
      "Epoch 23/5000\n",
      " - 1s - loss: 0.3336 - acc: 0.8461 - val_loss: 0.2251 - val_acc: 0.9066\n",
      "roc_auc: 0.90773 - roc_auc_val: 0.89765 - norm_gini: 0.81546 - norm_gini_val: 0.79529          \n",
      "\n",
      "Epoch 00023: norm_gini_val did not improve from 0.79852\n",
      "Epoch 24/5000\n",
      " - 1s - loss: 0.3355 - acc: 0.8471 - val_loss: 0.2328 - val_acc: 0.9055\n",
      "roc_auc: 0.90667 - roc_auc_val: 0.89771 - norm_gini: 0.81334 - norm_gini_val: 0.79543          \n",
      "\n",
      "Epoch 00024: norm_gini_val did not improve from 0.79852\n",
      "Epoch 25/5000\n",
      " - 1s - loss: 0.3319 - acc: 0.8501 - val_loss: 0.2303 - val_acc: 0.9045\n",
      "roc_auc: 0.90885 - roc_auc_val: 0.89805 - norm_gini: 0.81769 - norm_gini_val: 0.7961          \n",
      "\n",
      "Epoch 00025: norm_gini_val did not improve from 0.79852\n",
      "Epoch 26/5000\n",
      " - 1s - loss: 0.3327 - acc: 0.8477 - val_loss: 0.2320 - val_acc: 0.9032\n",
      "roc_auc: 0.90403 - roc_auc_val: 0.89484 - norm_gini: 0.80806 - norm_gini_val: 0.78968          \n",
      "\n",
      "Epoch 00026: norm_gini_val did not improve from 0.79852\n",
      "Epoch 27/5000\n",
      " - 1s - loss: 0.3347 - acc: 0.8476 - val_loss: 0.2508 - val_acc: 0.9052\n",
      "roc_auc: 0.90907 - roc_auc_val: 0.89738 - norm_gini: 0.81814 - norm_gini_val: 0.79477          \n",
      "\n",
      "Epoch 00027: norm_gini_val did not improve from 0.79852\n",
      "Epoch 28/5000\n",
      " - 1s - loss: 0.3293 - acc: 0.8480 - val_loss: 0.2337 - val_acc: 0.9062\n",
      "roc_auc: 0.90706 - roc_auc_val: 0.89753 - norm_gini: 0.81412 - norm_gini_val: 0.79506          \n",
      "\n",
      "Epoch 00028: norm_gini_val did not improve from 0.79852\n",
      "Epoch 29/5000\n",
      " - 1s - loss: 0.3310 - acc: 0.8475 - val_loss: 0.2349 - val_acc: 0.9022\n",
      "roc_auc: 0.90847 - roc_auc_val: 0.89912 - norm_gini: 0.81693 - norm_gini_val: 0.79825          \n",
      "\n",
      "Epoch 00029: norm_gini_val did not improve from 0.79852\n",
      "Epoch 30/5000\n",
      " - 1s - loss: 0.3365 - acc: 0.8424 - val_loss: 0.2794 - val_acc: 0.8945\n",
      "roc_auc: 0.90515 - roc_auc_val: 0.89454 - norm_gini: 0.81029 - norm_gini_val: 0.78909          \n",
      "\n",
      "Epoch 00030: norm_gini_val did not improve from 0.79852\n",
      "Epoch 31/5000\n",
      " - 1s - loss: 0.3356 - acc: 0.8440 - val_loss: 0.2259 - val_acc: 0.9025\n",
      "roc_auc: 0.90591 - roc_auc_val: 0.90158 - norm_gini: 0.81182 - norm_gini_val: 0.80317          \n",
      "\n",
      "Epoch 00031: norm_gini_val improved from 0.79852 to 0.80317, saving model to keras-5fold-run-01-v1-fold-03-run-02.check\n",
      "Epoch 32/5000\n",
      " - 1s - loss: 0.3278 - acc: 0.8486 - val_loss: 0.2570 - val_acc: 0.9059\n",
      "roc_auc: 0.90885 - roc_auc_val: 0.89231 - norm_gini: 0.81771 - norm_gini_val: 0.78462          \n",
      "\n",
      "Epoch 00032: norm_gini_val did not improve from 0.80317\n",
      "Epoch 33/5000\n",
      " - 1s - loss: 0.3268 - acc: 0.8538 - val_loss: 0.2523 - val_acc: 0.9076\n",
      "roc_auc: 0.91036 - roc_auc_val: 0.89106 - norm_gini: 0.82071 - norm_gini_val: 0.78213          \n",
      "\n",
      "Epoch 00033: norm_gini_val did not improve from 0.80317\n",
      "Epoch 34/5000\n",
      " - 1s - loss: 0.3281 - acc: 0.8469 - val_loss: 0.2465 - val_acc: 0.9069\n",
      "roc_auc: 0.90933 - roc_auc_val: 0.89113 - norm_gini: 0.81866 - norm_gini_val: 0.78227          \n",
      "\n",
      "Epoch 00034: norm_gini_val did not improve from 0.80317\n",
      "Epoch 35/5000\n",
      " - 1s - loss: 0.3322 - acc: 0.8469 - val_loss: 0.2488 - val_acc: 0.8951\n",
      "roc_auc: 0.90886 - roc_auc_val: 0.89572 - norm_gini: 0.81772 - norm_gini_val: 0.79144          \n",
      "\n",
      "Epoch 00035: norm_gini_val did not improve from 0.80317\n",
      "Epoch 36/5000\n",
      " - 1s - loss: 0.3302 - acc: 0.8477 - val_loss: 0.2507 - val_acc: 0.9045\n",
      "roc_auc: 0.91106 - roc_auc_val: 0.8913 - norm_gini: 0.82212 - norm_gini_val: 0.7826          \n",
      "\n",
      "Epoch 00036: norm_gini_val did not improve from 0.80317\n",
      "Epoch 37/5000\n",
      " - 1s - loss: 0.3303 - acc: 0.8453 - val_loss: 0.2365 - val_acc: 0.9025\n",
      "roc_auc: 0.90911 - roc_auc_val: 0.89443 - norm_gini: 0.81821 - norm_gini_val: 0.78886          \n",
      "\n",
      "Epoch 00037: norm_gini_val did not improve from 0.80317\n",
      "Epoch 38/5000\n",
      " - 1s - loss: 0.3315 - acc: 0.8491 - val_loss: 0.2404 - val_acc: 0.8992\n",
      "roc_auc: 0.9116 - roc_auc_val: 0.89728 - norm_gini: 0.8232 - norm_gini_val: 0.79457          \n",
      "\n",
      "Epoch 00038: norm_gini_val did not improve from 0.80317\n",
      "Epoch 39/5000\n",
      " - 1s - loss: 0.3317 - acc: 0.8482 - val_loss: 0.2386 - val_acc: 0.9045\n",
      "roc_auc: 0.91123 - roc_auc_val: 0.89253 - norm_gini: 0.82246 - norm_gini_val: 0.78506          \n",
      "\n",
      "Epoch 00039: norm_gini_val did not improve from 0.80317\n",
      "Epoch 40/5000\n",
      " - 1s - loss: 0.3252 - acc: 0.8462 - val_loss: 0.2299 - val_acc: 0.9069\n",
      "roc_auc: 0.91091 - roc_auc_val: 0.89629 - norm_gini: 0.82181 - norm_gini_val: 0.79258          \n",
      "\n",
      "Epoch 00040: norm_gini_val did not improve from 0.80317\n",
      "Epoch 41/5000\n",
      " - 1s - loss: 0.3288 - acc: 0.8481 - val_loss: 0.2699 - val_acc: 0.8911\n",
      "roc_auc: 0.90954 - roc_auc_val: 0.8955 - norm_gini: 0.81907 - norm_gini_val: 0.79101          \n",
      "\n",
      "Epoch 00041: norm_gini_val did not improve from 0.80317\n",
      "Epoch 42/5000\n",
      " - 1s - loss: 0.3215 - acc: 0.8500 - val_loss: 0.2332 - val_acc: 0.9052\n",
      "roc_auc: 0.91441 - roc_auc_val: 0.89205 - norm_gini: 0.82882 - norm_gini_val: 0.7841          \n",
      "\n",
      "Epoch 00042: norm_gini_val did not improve from 0.80317\n",
      "Epoch 43/5000\n",
      " - 1s - loss: 0.3265 - acc: 0.8493 - val_loss: 0.2537 - val_acc: 0.9035\n",
      "roc_auc: 0.91251 - roc_auc_val: 0.89231 - norm_gini: 0.82501 - norm_gini_val: 0.78463          \n",
      "\n",
      "Epoch 00043: norm_gini_val did not improve from 0.80317\n",
      "Epoch 44/5000\n",
      " - 1s - loss: 0.3253 - acc: 0.8520 - val_loss: 0.2586 - val_acc: 0.8820\n",
      "roc_auc: 0.91085 - roc_auc_val: 0.89197 - norm_gini: 0.8217 - norm_gini_val: 0.78394          \n",
      "\n",
      "Epoch 00044: norm_gini_val did not improve from 0.80317\n",
      "Epoch 45/5000\n",
      " - 1s - loss: 0.3278 - acc: 0.8511 - val_loss: 0.2348 - val_acc: 0.9002\n",
      "roc_auc: 0.91128 - roc_auc_val: 0.89084 - norm_gini: 0.82257 - norm_gini_val: 0.78167          \n",
      "\n",
      "Epoch 00045: norm_gini_val did not improve from 0.80317\n",
      "Epoch 46/5000\n",
      " - 1s - loss: 0.3265 - acc: 0.8501 - val_loss: 0.2438 - val_acc: 0.8877\n",
      "roc_auc: 0.91362 - roc_auc_val: 0.89469 - norm_gini: 0.82724 - norm_gini_val: 0.78938          \n",
      "\n",
      "Epoch 00046: norm_gini_val did not improve from 0.80317\n",
      "Epoch 47/5000\n",
      " - 1s - loss: 0.3255 - acc: 0.8503 - val_loss: 0.2554 - val_acc: 0.9022\n",
      "roc_auc: 0.91143 - roc_auc_val: 0.89369 - norm_gini: 0.82286 - norm_gini_val: 0.78737          \n",
      "\n",
      "Epoch 00047: norm_gini_val did not improve from 0.80317\n",
      "Epoch 48/5000\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " - 1s - loss: 0.3252 - acc: 0.8505 - val_loss: 0.2398 - val_acc: 0.9039\n",
      "roc_auc: 0.91638 - roc_auc_val: 0.8932 - norm_gini: 0.83276 - norm_gini_val: 0.7864          \n",
      "\n",
      "Epoch 00048: norm_gini_val did not improve from 0.80317\n",
      "Epoch 49/5000\n",
      " - 1s - loss: 0.3252 - acc: 0.8512 - val_loss: 0.2306 - val_acc: 0.9055\n",
      "roc_auc: 0.91483 - roc_auc_val: 0.89072 - norm_gini: 0.82966 - norm_gini_val: 0.78144          \n",
      "\n",
      "Epoch 00049: norm_gini_val did not improve from 0.80317\n",
      "Epoch 50/5000\n",
      " - 1s - loss: 0.3285 - acc: 0.8480 - val_loss: 0.2312 - val_acc: 0.9086\n",
      "roc_auc: 0.91569 - roc_auc_val: 0.89135 - norm_gini: 0.83139 - norm_gini_val: 0.7827          \n",
      "\n",
      "Epoch 00050: norm_gini_val did not improve from 0.80317\n",
      "Epoch 51/5000\n",
      " - 1s - loss: 0.3219 - acc: 0.8486 - val_loss: 0.2441 - val_acc: 0.8998\n",
      "roc_auc: 0.91522 - roc_auc_val: 0.89117 - norm_gini: 0.83044 - norm_gini_val: 0.78235          \n",
      "\n",
      "Epoch 00051: norm_gini_val did not improve from 0.80317\n",
      "Epoch 00051: early stopping\n",
      "\n",
      " Fold 3 Run 2 Log-loss: 0.22594\n",
      " Fold 3 Run 2 AUC: 0.90158\n",
      " Fold 3 Run 2 normalized gini: 0.80317\n",
      "\n",
      " Fold 3 - Run 3\n",
      "\n",
      "Train on 8925 samples, validate on 2975 samples\n",
      "Epoch 1/5000\n",
      " - 4s - loss: 0.5181 - acc: 0.7719 - val_loss: 0.3610 - val_acc: 0.8706\n",
      "roc_auc: 0.86164 - roc_auc_val: 0.87456 - norm_gini: 0.72327 - norm_gini_val: 0.74912          \n",
      "\n",
      "Epoch 00001: norm_gini_val improved from -inf to 0.74912, saving model to keras-5fold-run-01-v1-fold-03-run-03.check\n",
      "Epoch 2/5000\n",
      " - 1s - loss: 0.3988 - acc: 0.8229 - val_loss: 0.2557 - val_acc: 0.9055\n",
      "roc_auc: 0.87792 - roc_auc_val: 0.88261 - norm_gini: 0.75584 - norm_gini_val: 0.76522          \n",
      "\n",
      "Epoch 00002: norm_gini_val improved from 0.74912 to 0.76522, saving model to keras-5fold-run-01-v1-fold-03-run-03.check\n",
      "Epoch 3/5000\n",
      " - 1s - loss: 0.3792 - acc: 0.8276 - val_loss: 0.2429 - val_acc: 0.9079\n",
      "roc_auc: 0.88835 - roc_auc_val: 0.89294 - norm_gini: 0.7767 - norm_gini_val: 0.78587          \n",
      "\n",
      "Epoch 00003: norm_gini_val improved from 0.76522 to 0.78587, saving model to keras-5fold-run-01-v1-fold-03-run-03.check\n",
      "Epoch 4/5000\n",
      " - 1s - loss: 0.3660 - acc: 0.8329 - val_loss: 0.2361 - val_acc: 0.9092\n",
      "roc_auc: 0.89259 - roc_auc_val: 0.89478 - norm_gini: 0.78519 - norm_gini_val: 0.78956          \n",
      "\n",
      "Epoch 00004: norm_gini_val improved from 0.78587 to 0.78956, saving model to keras-5fold-run-01-v1-fold-03-run-03.check\n",
      "Epoch 5/5000\n",
      " - 1s - loss: 0.3623 - acc: 0.8320 - val_loss: 0.2417 - val_acc: 0.9076\n",
      "roc_auc: 0.89144 - roc_auc_val: 0.89109 - norm_gini: 0.78287 - norm_gini_val: 0.78217          \n",
      "\n",
      "Epoch 00005: norm_gini_val did not improve from 0.78956\n",
      "Epoch 6/5000\n",
      " - 1s - loss: 0.3511 - acc: 0.8387 - val_loss: 0.2385 - val_acc: 0.9052\n",
      "roc_auc: 0.8944 - roc_auc_val: 0.89657 - norm_gini: 0.78881 - norm_gini_val: 0.79314          \n",
      "\n",
      "Epoch 00006: norm_gini_val improved from 0.78956 to 0.79314, saving model to keras-5fold-run-01-v1-fold-03-run-03.check\n",
      "Epoch 7/5000\n",
      " - 1s - loss: 0.3559 - acc: 0.8346 - val_loss: 0.2418 - val_acc: 0.9062\n",
      "roc_auc: 0.89645 - roc_auc_val: 0.89605 - norm_gini: 0.79289 - norm_gini_val: 0.79211          \n",
      "\n",
      "Epoch 00007: norm_gini_val did not improve from 0.79314\n",
      "Epoch 8/5000\n",
      " - 1s - loss: 0.3472 - acc: 0.8428 - val_loss: 0.2364 - val_acc: 0.9072\n",
      "roc_auc: 0.89816 - roc_auc_val: 0.89415 - norm_gini: 0.79631 - norm_gini_val: 0.78831          \n",
      "\n",
      "Epoch 00008: norm_gini_val did not improve from 0.79314\n",
      "Epoch 9/5000\n",
      " - 1s - loss: 0.3500 - acc: 0.8398 - val_loss: 0.2351 - val_acc: 0.9029\n",
      "roc_auc: 0.89828 - roc_auc_val: 0.89459 - norm_gini: 0.79655 - norm_gini_val: 0.78919          \n",
      "\n",
      "Epoch 00009: norm_gini_val did not improve from 0.79314\n",
      "Epoch 10/5000\n",
      " - 1s - loss: 0.3494 - acc: 0.8380 - val_loss: 0.2260 - val_acc: 0.9055\n",
      "roc_auc: 0.89907 - roc_auc_val: 0.89728 - norm_gini: 0.79815 - norm_gini_val: 0.79457          \n",
      "\n",
      "Epoch 00010: norm_gini_val improved from 0.79314 to 0.79457, saving model to keras-5fold-run-01-v1-fold-03-run-03.check\n",
      "Epoch 11/5000\n",
      " - 1s - loss: 0.3464 - acc: 0.8406 - val_loss: 0.2295 - val_acc: 0.9079\n",
      "roc_auc: 0.89976 - roc_auc_val: 0.89979 - norm_gini: 0.79952 - norm_gini_val: 0.79958          \n",
      "\n",
      "Epoch 00011: norm_gini_val improved from 0.79457 to 0.79958, saving model to keras-5fold-run-01-v1-fold-03-run-03.check\n",
      "Epoch 12/5000\n",
      " - 1s - loss: 0.3473 - acc: 0.8412 - val_loss: 0.2288 - val_acc: 0.9025\n",
      "roc_auc: 0.90096 - roc_auc_val: 0.89553 - norm_gini: 0.80191 - norm_gini_val: 0.79106          \n",
      "\n",
      "Epoch 00012: norm_gini_val did not improve from 0.79958\n",
      "Epoch 13/5000\n",
      " - 1s - loss: 0.3454 - acc: 0.8447 - val_loss: 0.2384 - val_acc: 0.9055\n",
      "roc_auc: 0.90048 - roc_auc_val: 0.89408 - norm_gini: 0.80095 - norm_gini_val: 0.78816          \n",
      "\n",
      "Epoch 00013: norm_gini_val did not improve from 0.79958\n",
      "Epoch 14/5000\n",
      " - 1s - loss: 0.3375 - acc: 0.8481 - val_loss: 0.2401 - val_acc: 0.9052\n",
      "roc_auc: 0.90114 - roc_auc_val: 0.89554 - norm_gini: 0.80228 - norm_gini_val: 0.79108          \n",
      "\n",
      "Epoch 00014: norm_gini_val did not improve from 0.79958\n",
      "Epoch 15/5000\n",
      " - 1s - loss: 0.3412 - acc: 0.8421 - val_loss: 0.2626 - val_acc: 0.9025\n",
      "roc_auc: 0.90083 - roc_auc_val: 0.89458 - norm_gini: 0.80165 - norm_gini_val: 0.78916          \n",
      "\n",
      "Epoch 00015: norm_gini_val did not improve from 0.79958\n",
      "Epoch 16/5000\n",
      " - 1s - loss: 0.3401 - acc: 0.8454 - val_loss: 0.2368 - val_acc: 0.9015\n",
      "roc_auc: 0.89992 - roc_auc_val: 0.89614 - norm_gini: 0.79985 - norm_gini_val: 0.79228          \n",
      "\n",
      "Epoch 00016: norm_gini_val did not improve from 0.79958\n",
      "Epoch 17/5000\n",
      " - 1s - loss: 0.3412 - acc: 0.8446 - val_loss: 0.2308 - val_acc: 0.9029\n",
      "roc_auc: 0.90298 - roc_auc_val: 0.89253 - norm_gini: 0.80596 - norm_gini_val: 0.78505          \n",
      "\n",
      "Epoch 00017: norm_gini_val did not improve from 0.79958\n",
      "Epoch 18/5000\n",
      " - 1s - loss: 0.3423 - acc: 0.8408 - val_loss: 0.2274 - val_acc: 0.9032\n",
      "roc_auc: 0.9014 - roc_auc_val: 0.89482 - norm_gini: 0.8028 - norm_gini_val: 0.78964          \n",
      "\n",
      "Epoch 00018: norm_gini_val did not improve from 0.79958\n",
      "Epoch 19/5000\n",
      " - 1s - loss: 0.3377 - acc: 0.8424 - val_loss: 0.2377 - val_acc: 0.9015\n",
      "roc_auc: 0.90445 - roc_auc_val: 0.89818 - norm_gini: 0.8089 - norm_gini_val: 0.79637          \n",
      "\n",
      "Epoch 00019: norm_gini_val did not improve from 0.79958\n",
      "Epoch 20/5000\n",
      " - 1s - loss: 0.3377 - acc: 0.8413 - val_loss: 0.2296 - val_acc: 0.9052\n",
      "roc_auc: 0.90461 - roc_auc_val: 0.89861 - norm_gini: 0.80922 - norm_gini_val: 0.79722          \n",
      "\n",
      "Epoch 00020: norm_gini_val did not improve from 0.79958\n",
      "Epoch 21/5000\n",
      " - 1s - loss: 0.3424 - acc: 0.8431 - val_loss: 0.2570 - val_acc: 0.8914\n",
      "roc_auc: 0.90294 - roc_auc_val: 0.89603 - norm_gini: 0.80587 - norm_gini_val: 0.79206          \n",
      "\n",
      "Epoch 00021: norm_gini_val did not improve from 0.79958\n",
      "Epoch 22/5000\n",
      " - 1s - loss: 0.3358 - acc: 0.8440 - val_loss: 0.2274 - val_acc: 0.9066\n",
      "roc_auc: 0.90454 - roc_auc_val: 0.89391 - norm_gini: 0.80907 - norm_gini_val: 0.78781          \n",
      "\n",
      "Epoch 00022: norm_gini_val did not improve from 0.79958\n",
      "Epoch 23/5000\n",
      " - 1s - loss: 0.3408 - acc: 0.8434 - val_loss: 0.2269 - val_acc: 0.9072\n",
      "roc_auc: 0.90585 - roc_auc_val: 0.89743 - norm_gini: 0.81169 - norm_gini_val: 0.79485          \n",
      "\n",
      "Epoch 00023: norm_gini_val did not improve from 0.79958\n",
      "Epoch 24/5000\n",
      " - 1s - loss: 0.3367 - acc: 0.8452 - val_loss: 0.2432 - val_acc: 0.9049\n",
      "roc_auc: 0.90594 - roc_auc_val: 0.89355 - norm_gini: 0.81187 - norm_gini_val: 0.7871          \n",
      "\n",
      "Epoch 00024: norm_gini_val did not improve from 0.79958\n",
      "Epoch 25/5000\n",
      " - 1s - loss: 0.3398 - acc: 0.8399 - val_loss: 0.3123 - val_acc: 0.8995\n",
      "roc_auc: 0.90261 - roc_auc_val: 0.88969 - norm_gini: 0.80522 - norm_gini_val: 0.77937          \n",
      "\n",
      "Epoch 00025: norm_gini_val did not improve from 0.79958\n",
      "Epoch 26/5000\n",
      " - 1s - loss: 0.3382 - acc: 0.8425 - val_loss: 0.2291 - val_acc: 0.9042\n",
      "roc_auc: 0.9085 - roc_auc_val: 0.89609 - norm_gini: 0.817 - norm_gini_val: 0.79217          \n",
      "\n",
      "Epoch 00026: norm_gini_val did not improve from 0.79958\n",
      "Epoch 27/5000\n",
      " - 1s - loss: 0.3331 - acc: 0.8475 - val_loss: 0.2684 - val_acc: 0.8968\n",
      "roc_auc: 0.90744 - roc_auc_val: 0.8957 - norm_gini: 0.81489 - norm_gini_val: 0.79139          \n",
      "\n",
      "Epoch 00027: norm_gini_val did not improve from 0.79958\n",
      "Epoch 28/5000\n",
      " - 1s - loss: 0.3342 - acc: 0.8486 - val_loss: 0.2364 - val_acc: 0.9032\n",
      "roc_auc: 0.90594 - roc_auc_val: 0.89119 - norm_gini: 0.81187 - norm_gini_val: 0.78238          \n",
      "\n",
      "Epoch 00028: norm_gini_val did not improve from 0.79958\n",
      "Epoch 29/5000\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " - 1s - loss: 0.3300 - acc: 0.8489 - val_loss: 0.2390 - val_acc: 0.9042\n",
      "roc_auc: 0.90934 - roc_auc_val: 0.89446 - norm_gini: 0.81868 - norm_gini_val: 0.78893          \n",
      "\n",
      "Epoch 00029: norm_gini_val did not improve from 0.79958\n",
      "Epoch 30/5000\n",
      " - 1s - loss: 0.3350 - acc: 0.8456 - val_loss: 0.2444 - val_acc: 0.9055\n",
      "roc_auc: 0.90391 - roc_auc_val: 0.88854 - norm_gini: 0.80781 - norm_gini_val: 0.77709          \n",
      "\n",
      "Epoch 00030: norm_gini_val did not improve from 0.79958\n",
      "Epoch 31/5000\n",
      " - 1s - loss: 0.3306 - acc: 0.8471 - val_loss: 0.2342 - val_acc: 0.9086\n",
      "roc_auc: 0.91032 - roc_auc_val: 0.89537 - norm_gini: 0.82064 - norm_gini_val: 0.79074          \n",
      "\n",
      "Epoch 00031: norm_gini_val did not improve from 0.79958\n",
      "Epoch 00031: early stopping\n",
      "\n",
      " Fold 3 Run 3 Log-loss: 0.22954\n",
      " Fold 3 Run 3 AUC: 0.89979\n",
      " Fold 3 Run 3 normalized gini: 0.79958\n",
      "\n",
      " Fold 3 Log-loss: 0.22633\n",
      " Fold 3 AUC: 0.90317\n",
      " Fold 3 normalized gini: 0.80634\n",
      "\n",
      " Time taken: 0 hours 4 minutes and 32.1 seconds.\n",
      "\n",
      " Fold 4 - Run 1\n",
      "\n",
      "Train on 8925 samples, validate on 2975 samples\n",
      "Epoch 1/5000\n",
      " - 4s - loss: 0.5043 - acc: 0.7676 - val_loss: 0.3854 - val_acc: 0.8313\n",
      "roc_auc: 0.88786 - roc_auc_val: 0.84054 - norm_gini: 0.77572 - norm_gini_val: 0.68108          \n",
      "\n",
      "Epoch 00001: norm_gini_val improved from -inf to 0.68108, saving model to keras-5fold-run-01-v1-fold-04-run-01.check\n",
      "Epoch 2/5000\n",
      " - 1s - loss: 0.3589 - acc: 0.8454 - val_loss: 0.3803 - val_acc: 0.8272\n",
      "roc_auc: 0.89725 - roc_auc_val: 0.85437 - norm_gini: 0.7945 - norm_gini_val: 0.70874          \n",
      "\n",
      "Epoch 00002: norm_gini_val improved from 0.68108 to 0.70874, saving model to keras-5fold-run-01-v1-fold-04-run-01.check\n",
      "Epoch 3/5000\n",
      " - 1s - loss: 0.3379 - acc: 0.8513 - val_loss: 0.3549 - val_acc: 0.8373\n",
      "roc_auc: 0.89995 - roc_auc_val: 0.85616 - norm_gini: 0.7999 - norm_gini_val: 0.71232          \n",
      "\n",
      "Epoch 00003: norm_gini_val improved from 0.70874 to 0.71232, saving model to keras-5fold-run-01-v1-fold-04-run-01.check\n",
      "Epoch 4/5000\n",
      " - 1s - loss: 0.3262 - acc: 0.8546 - val_loss: 0.3767 - val_acc: 0.8336\n",
      "roc_auc: 0.90386 - roc_auc_val: 0.8611 - norm_gini: 0.80771 - norm_gini_val: 0.7222          \n",
      "\n",
      "Epoch 00004: norm_gini_val improved from 0.71232 to 0.72220, saving model to keras-5fold-run-01-v1-fold-04-run-01.check\n",
      "Epoch 5/5000\n",
      " - 1s - loss: 0.3195 - acc: 0.8561 - val_loss: 0.3491 - val_acc: 0.8387\n",
      "roc_auc: 0.90515 - roc_auc_val: 0.8635 - norm_gini: 0.8103 - norm_gini_val: 0.72699          \n",
      "\n",
      "Epoch 00005: norm_gini_val improved from 0.72220 to 0.72699, saving model to keras-5fold-run-01-v1-fold-04-run-01.check\n",
      "Epoch 6/5000\n",
      " - 1s - loss: 0.3231 - acc: 0.8539 - val_loss: 0.3645 - val_acc: 0.8269\n",
      "roc_auc: 0.90245 - roc_auc_val: 0.86318 - norm_gini: 0.8049 - norm_gini_val: 0.72635          \n",
      "\n",
      "Epoch 00006: norm_gini_val did not improve from 0.72699\n",
      "Epoch 7/5000\n",
      " - 1s - loss: 0.3150 - acc: 0.8630 - val_loss: 0.3617 - val_acc: 0.8329\n",
      "roc_auc: 0.90702 - roc_auc_val: 0.86504 - norm_gini: 0.81404 - norm_gini_val: 0.73008          \n",
      "\n",
      "Epoch 00007: norm_gini_val improved from 0.72699 to 0.73008, saving model to keras-5fold-run-01-v1-fold-04-run-01.check\n",
      "Epoch 8/5000\n",
      " - 1s - loss: 0.3181 - acc: 0.8578 - val_loss: 0.3690 - val_acc: 0.8356\n",
      "roc_auc: 0.90596 - roc_auc_val: 0.86209 - norm_gini: 0.81193 - norm_gini_val: 0.72418          \n",
      "\n",
      "Epoch 00008: norm_gini_val did not improve from 0.73008\n",
      "Epoch 9/5000\n",
      " - 1s - loss: 0.3138 - acc: 0.8614 - val_loss: 0.3566 - val_acc: 0.8353\n",
      "roc_auc: 0.90854 - roc_auc_val: 0.86402 - norm_gini: 0.81709 - norm_gini_val: 0.72803          \n",
      "\n",
      "Epoch 00009: norm_gini_val did not improve from 0.73008\n",
      "Epoch 10/5000\n",
      " - 1s - loss: 0.3089 - acc: 0.8621 - val_loss: 0.3558 - val_acc: 0.8350\n",
      "roc_auc: 0.90995 - roc_auc_val: 0.86549 - norm_gini: 0.8199 - norm_gini_val: 0.73098          \n",
      "\n",
      "Epoch 00010: norm_gini_val improved from 0.73008 to 0.73098, saving model to keras-5fold-run-01-v1-fold-04-run-01.check\n",
      "Epoch 11/5000\n",
      " - 1s - loss: 0.3114 - acc: 0.8606 - val_loss: 0.3476 - val_acc: 0.8380\n",
      "roc_auc: 0.9075 - roc_auc_val: 0.86436 - norm_gini: 0.815 - norm_gini_val: 0.72871          \n",
      "\n",
      "Epoch 00011: norm_gini_val did not improve from 0.73098\n",
      "Epoch 12/5000\n",
      " - 1s - loss: 0.3088 - acc: 0.8622 - val_loss: 0.3466 - val_acc: 0.8413\n",
      "roc_auc: 0.91048 - roc_auc_val: 0.86611 - norm_gini: 0.82097 - norm_gini_val: 0.73223          \n",
      "\n",
      "Epoch 00012: norm_gini_val improved from 0.73098 to 0.73223, saving model to keras-5fold-run-01-v1-fold-04-run-01.check\n",
      "Epoch 13/5000\n",
      " - 1s - loss: 0.3059 - acc: 0.8643 - val_loss: 0.3547 - val_acc: 0.8356\n",
      "roc_auc: 0.91196 - roc_auc_val: 0.8672 - norm_gini: 0.82393 - norm_gini_val: 0.7344          \n",
      "\n",
      "Epoch 00013: norm_gini_val improved from 0.73223 to 0.73440, saving model to keras-5fold-run-01-v1-fold-04-run-01.check\n",
      "Epoch 14/5000\n",
      " - 1s - loss: 0.3049 - acc: 0.8611 - val_loss: 0.3544 - val_acc: 0.8390\n",
      "roc_auc: 0.91093 - roc_auc_val: 0.86522 - norm_gini: 0.82187 - norm_gini_val: 0.73044          \n",
      "\n",
      "Epoch 00014: norm_gini_val did not improve from 0.73440\n",
      "Epoch 15/5000\n",
      " - 1s - loss: 0.3078 - acc: 0.8638 - val_loss: 0.3463 - val_acc: 0.8403\n",
      "roc_auc: 0.91198 - roc_auc_val: 0.86605 - norm_gini: 0.82397 - norm_gini_val: 0.7321          \n",
      "\n",
      "Epoch 00015: norm_gini_val did not improve from 0.73440\n",
      "Epoch 16/5000\n",
      " - 1s - loss: 0.3083 - acc: 0.8638 - val_loss: 0.3984 - val_acc: 0.8370\n",
      "roc_auc: 0.91032 - roc_auc_val: 0.86424 - norm_gini: 0.82064 - norm_gini_val: 0.72849          \n",
      "\n",
      "Epoch 00016: norm_gini_val did not improve from 0.73440\n",
      "Epoch 17/5000\n",
      " - 1s - loss: 0.3012 - acc: 0.8654 - val_loss: 0.3500 - val_acc: 0.8413\n",
      "roc_auc: 0.91076 - roc_auc_val: 0.86626 - norm_gini: 0.82151 - norm_gini_val: 0.73253          \n",
      "\n",
      "Epoch 00017: norm_gini_val did not improve from 0.73440\n",
      "Epoch 18/5000\n",
      " - 1s - loss: 0.3038 - acc: 0.8667 - val_loss: 0.3456 - val_acc: 0.8410\n",
      "roc_auc: 0.91325 - roc_auc_val: 0.86724 - norm_gini: 0.82649 - norm_gini_val: 0.73447          \n",
      "\n",
      "Epoch 00018: norm_gini_val improved from 0.73440 to 0.73447, saving model to keras-5fold-run-01-v1-fold-04-run-01.check\n",
      "Epoch 19/5000\n",
      " - 1s - loss: 0.3054 - acc: 0.8641 - val_loss: 0.3545 - val_acc: 0.8430\n",
      "roc_auc: 0.9143 - roc_auc_val: 0.86611 - norm_gini: 0.82859 - norm_gini_val: 0.73222          \n",
      "\n",
      "Epoch 00019: norm_gini_val did not improve from 0.73447\n",
      "Epoch 20/5000\n",
      " - 1s - loss: 0.3020 - acc: 0.8645 - val_loss: 0.3507 - val_acc: 0.8376\n",
      "roc_auc: 0.91357 - roc_auc_val: 0.86578 - norm_gini: 0.82713 - norm_gini_val: 0.73156          \n",
      "\n",
      "Epoch 00020: norm_gini_val did not improve from 0.73447\n",
      "Epoch 21/5000\n",
      " - 1s - loss: 0.3025 - acc: 0.8648 - val_loss: 0.3658 - val_acc: 0.8397\n",
      "roc_auc: 0.91092 - roc_auc_val: 0.85996 - norm_gini: 0.82184 - norm_gini_val: 0.71992          \n",
      "\n",
      "Epoch 00021: norm_gini_val did not improve from 0.73447\n",
      "Epoch 22/5000\n",
      " - 1s - loss: 0.2981 - acc: 0.8691 - val_loss: 0.3542 - val_acc: 0.8413\n",
      "roc_auc: 0.91478 - roc_auc_val: 0.86559 - norm_gini: 0.82956 - norm_gini_val: 0.73119          \n",
      "\n",
      "Epoch 00022: norm_gini_val did not improve from 0.73447\n",
      "Epoch 23/5000\n",
      " - 1s - loss: 0.3011 - acc: 0.8659 - val_loss: 0.3486 - val_acc: 0.8434\n",
      "roc_auc: 0.91437 - roc_auc_val: 0.86524 - norm_gini: 0.82873 - norm_gini_val: 0.73047          \n",
      "\n",
      "Epoch 00023: norm_gini_val did not improve from 0.73447\n",
      "Epoch 24/5000\n",
      " - 1s - loss: 0.3001 - acc: 0.8668 - val_loss: 0.3515 - val_acc: 0.8353\n",
      "roc_auc: 0.91527 - roc_auc_val: 0.86581 - norm_gini: 0.83053 - norm_gini_val: 0.73163          \n",
      "\n",
      "Epoch 00024: norm_gini_val did not improve from 0.73447\n",
      "Epoch 25/5000\n",
      " - 1s - loss: 0.2999 - acc: 0.8695 - val_loss: 0.3585 - val_acc: 0.8363\n",
      "roc_auc: 0.91646 - roc_auc_val: 0.86561 - norm_gini: 0.83292 - norm_gini_val: 0.73121          \n",
      "\n",
      "Epoch 00025: norm_gini_val did not improve from 0.73447\n",
      "Epoch 26/5000\n",
      " - 1s - loss: 0.2995 - acc: 0.8690 - val_loss: 0.3506 - val_acc: 0.8343\n",
      "roc_auc: 0.91742 - roc_auc_val: 0.86366 - norm_gini: 0.83484 - norm_gini_val: 0.72731          \n",
      "\n",
      "Epoch 00026: norm_gini_val did not improve from 0.73447\n",
      "Epoch 27/5000\n",
      " - 1s - loss: 0.2964 - acc: 0.8701 - val_loss: 0.3468 - val_acc: 0.8420\n",
      "roc_auc: 0.91658 - roc_auc_val: 0.86485 - norm_gini: 0.83317 - norm_gini_val: 0.7297          \n",
      "\n",
      "Epoch 00027: norm_gini_val did not improve from 0.73447\n",
      "Epoch 28/5000\n",
      " - 1s - loss: 0.2987 - acc: 0.8668 - val_loss: 0.3540 - val_acc: 0.8370\n",
      "roc_auc: 0.91646 - roc_auc_val: 0.86528 - norm_gini: 0.83291 - norm_gini_val: 0.73057          \n",
      "\n",
      "Epoch 00028: norm_gini_val did not improve from 0.73447\n",
      "Epoch 29/5000\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " - 1s - loss: 0.2996 - acc: 0.8694 - val_loss: 0.3461 - val_acc: 0.8407\n",
      "roc_auc: 0.91843 - roc_auc_val: 0.86914 - norm_gini: 0.83685 - norm_gini_val: 0.73828          \n",
      "\n",
      "Epoch 00029: norm_gini_val improved from 0.73447 to 0.73828, saving model to keras-5fold-run-01-v1-fold-04-run-01.check\n",
      "Epoch 30/5000\n",
      " - 1s - loss: 0.2989 - acc: 0.8622 - val_loss: 0.3607 - val_acc: 0.8309\n",
      "roc_auc: 0.91366 - roc_auc_val: 0.86065 - norm_gini: 0.82731 - norm_gini_val: 0.72131          \n",
      "\n",
      "Epoch 00030: norm_gini_val did not improve from 0.73828\n",
      "Epoch 31/5000\n",
      " - 1s - loss: 0.2954 - acc: 0.8639 - val_loss: 0.3475 - val_acc: 0.8397\n",
      "roc_auc: 0.91951 - roc_auc_val: 0.86858 - norm_gini: 0.83901 - norm_gini_val: 0.73717          \n",
      "\n",
      "Epoch 00031: norm_gini_val did not improve from 0.73828\n",
      "Epoch 32/5000\n",
      " - 1s - loss: 0.2959 - acc: 0.8654 - val_loss: 0.3518 - val_acc: 0.8390\n",
      "roc_auc: 0.91625 - roc_auc_val: 0.86765 - norm_gini: 0.83251 - norm_gini_val: 0.7353          \n",
      "\n",
      "Epoch 00032: norm_gini_val did not improve from 0.73828\n",
      "Epoch 33/5000\n",
      " - 1s - loss: 0.2964 - acc: 0.8679 - val_loss: 0.3640 - val_acc: 0.8393\n",
      "roc_auc: 0.91695 - roc_auc_val: 0.8668 - norm_gini: 0.8339 - norm_gini_val: 0.7336          \n",
      "\n",
      "Epoch 00033: norm_gini_val did not improve from 0.73828\n",
      "Epoch 34/5000\n",
      " - 2s - loss: 0.2949 - acc: 0.8664 - val_loss: 0.3514 - val_acc: 0.8356\n",
      "roc_auc: 0.91888 - roc_auc_val: 0.86598 - norm_gini: 0.83777 - norm_gini_val: 0.73196          \n",
      "\n",
      "Epoch 00034: norm_gini_val did not improve from 0.73828\n",
      "Epoch 35/5000\n",
      " - 1s - loss: 0.2969 - acc: 0.8662 - val_loss: 0.3575 - val_acc: 0.8360\n",
      "roc_auc: 0.91869 - roc_auc_val: 0.86671 - norm_gini: 0.83737 - norm_gini_val: 0.73342          \n",
      "\n",
      "Epoch 00035: norm_gini_val did not improve from 0.73828\n",
      "Epoch 36/5000\n",
      " - 1s - loss: 0.2909 - acc: 0.8664 - val_loss: 0.3525 - val_acc: 0.8417\n",
      "roc_auc: 0.91805 - roc_auc_val: 0.86788 - norm_gini: 0.8361 - norm_gini_val: 0.73576          \n",
      "\n",
      "Epoch 00036: norm_gini_val did not improve from 0.73828\n",
      "Epoch 37/5000\n",
      " - 1s - loss: 0.2935 - acc: 0.8700 - val_loss: 0.3492 - val_acc: 0.8440\n",
      "roc_auc: 0.91773 - roc_auc_val: 0.86262 - norm_gini: 0.83545 - norm_gini_val: 0.72524          \n",
      "\n",
      "Epoch 00037: norm_gini_val did not improve from 0.73828\n",
      "Epoch 38/5000\n",
      " - 1s - loss: 0.2903 - acc: 0.8710 - val_loss: 0.3603 - val_acc: 0.8366\n",
      "roc_auc: 0.92142 - roc_auc_val: 0.86463 - norm_gini: 0.84283 - norm_gini_val: 0.72927          \n",
      "\n",
      "Epoch 00038: norm_gini_val did not improve from 0.73828\n",
      "Epoch 39/5000\n",
      " - 1s - loss: 0.2945 - acc: 0.8661 - val_loss: 0.3481 - val_acc: 0.8440\n",
      "roc_auc: 0.92148 - roc_auc_val: 0.86696 - norm_gini: 0.84296 - norm_gini_val: 0.73392          \n",
      "\n",
      "Epoch 00039: norm_gini_val did not improve from 0.73828\n",
      "Epoch 40/5000\n",
      " - 1s - loss: 0.2927 - acc: 0.8675 - val_loss: 0.3454 - val_acc: 0.8417\n",
      "roc_auc: 0.92199 - roc_auc_val: 0.86674 - norm_gini: 0.84398 - norm_gini_val: 0.73347          \n",
      "\n",
      "Epoch 00040: norm_gini_val did not improve from 0.73828\n",
      "Epoch 41/5000\n",
      " - 1s - loss: 0.2896 - acc: 0.8703 - val_loss: 0.3496 - val_acc: 0.8417\n",
      "roc_auc: 0.92278 - roc_auc_val: 0.86603 - norm_gini: 0.84556 - norm_gini_val: 0.73206          \n",
      "\n",
      "Epoch 00041: norm_gini_val did not improve from 0.73828\n",
      "Epoch 42/5000\n",
      " - 1s - loss: 0.2879 - acc: 0.8718 - val_loss: 0.3490 - val_acc: 0.8397\n",
      "roc_auc: 0.92103 - roc_auc_val: 0.86524 - norm_gini: 0.84207 - norm_gini_val: 0.73048          \n",
      "\n",
      "Epoch 00042: norm_gini_val did not improve from 0.73828\n",
      "Epoch 43/5000\n",
      " - 1s - loss: 0.2915 - acc: 0.8696 - val_loss: 0.3512 - val_acc: 0.8403\n",
      "roc_auc: 0.92396 - roc_auc_val: 0.86548 - norm_gini: 0.84791 - norm_gini_val: 0.73095          \n",
      "\n",
      "Epoch 00043: norm_gini_val did not improve from 0.73828\n",
      "Epoch 44/5000\n",
      " - 1s - loss: 0.2901 - acc: 0.8720 - val_loss: 0.3497 - val_acc: 0.8393\n",
      "roc_auc: 0.9248 - roc_auc_val: 0.86528 - norm_gini: 0.8496 - norm_gini_val: 0.73057          \n",
      "\n",
      "Epoch 00044: norm_gini_val did not improve from 0.73828\n",
      "Epoch 45/5000\n",
      " - 1s - loss: 0.2924 - acc: 0.8747 - val_loss: 0.3607 - val_acc: 0.8387\n",
      "roc_auc: 0.91984 - roc_auc_val: 0.86425 - norm_gini: 0.83967 - norm_gini_val: 0.72849          \n",
      "\n",
      "Epoch 00045: norm_gini_val did not improve from 0.73828\n",
      "Epoch 46/5000\n",
      " - 1s - loss: 0.2928 - acc: 0.8662 - val_loss: 0.3581 - val_acc: 0.8427\n",
      "roc_auc: 0.92285 - roc_auc_val: 0.86429 - norm_gini: 0.84571 - norm_gini_val: 0.72857          \n",
      "\n",
      "Epoch 00046: norm_gini_val did not improve from 0.73828\n",
      "Epoch 47/5000\n",
      " - 1s - loss: 0.2901 - acc: 0.8688 - val_loss: 0.3545 - val_acc: 0.8387\n",
      "roc_auc: 0.92395 - roc_auc_val: 0.86356 - norm_gini: 0.84791 - norm_gini_val: 0.72711          \n",
      "\n",
      "Epoch 00047: norm_gini_val did not improve from 0.73828\n",
      "Epoch 48/5000\n",
      " - 1s - loss: 0.2887 - acc: 0.8708 - val_loss: 0.3572 - val_acc: 0.8400\n",
      "roc_auc: 0.92471 - roc_auc_val: 0.86264 - norm_gini: 0.84942 - norm_gini_val: 0.72528          \n",
      "\n",
      "Epoch 00048: norm_gini_val did not improve from 0.73828\n",
      "Epoch 49/5000\n",
      " - 1s - loss: 0.2902 - acc: 0.8736 - val_loss: 0.3610 - val_acc: 0.8242\n",
      "roc_auc: 0.91888 - roc_auc_val: 0.86389 - norm_gini: 0.83777 - norm_gini_val: 0.72777          \n",
      "\n",
      "Epoch 00049: norm_gini_val did not improve from 0.73828\n",
      "Epoch 00049: early stopping\n",
      "\n",
      " Fold 4 Run 1 Log-loss: 0.34614\n",
      " Fold 4 Run 1 AUC: 0.86914\n",
      " Fold 4 Run 1 normalized gini: 0.73828\n",
      "\n",
      " Fold 4 - Run 2\n",
      "\n",
      "Train on 8925 samples, validate on 2975 samples\n",
      "Epoch 1/5000\n",
      " - 6s - loss: 0.4999 - acc: 0.7737 - val_loss: 0.3948 - val_acc: 0.8309\n",
      "roc_auc: 0.87181 - roc_auc_val: 0.82998 - norm_gini: 0.74363 - norm_gini_val: 0.65995          \n",
      "\n",
      "Epoch 00001: norm_gini_val improved from -inf to 0.65995, saving model to keras-5fold-run-01-v1-fold-04-run-02.check\n",
      "Epoch 2/5000\n",
      " - 1s - loss: 0.3629 - acc: 0.8459 - val_loss: 0.4052 - val_acc: 0.8198\n",
      "roc_auc: 0.89328 - roc_auc_val: 0.84408 - norm_gini: 0.78657 - norm_gini_val: 0.68815          \n",
      "\n",
      "Epoch 00002: norm_gini_val improved from 0.65995 to 0.68815, saving model to keras-5fold-run-01-v1-fold-04-run-02.check\n",
      "Epoch 3/5000\n",
      " - 1s - loss: 0.3392 - acc: 0.8524 - val_loss: 0.3637 - val_acc: 0.8292\n",
      "roc_auc: 0.89584 - roc_auc_val: 0.85418 - norm_gini: 0.79169 - norm_gini_val: 0.70837          \n",
      "\n",
      "Epoch 00003: norm_gini_val improved from 0.68815 to 0.70837, saving model to keras-5fold-run-01-v1-fold-04-run-02.check\n",
      "Epoch 4/5000\n",
      " - 2s - loss: 0.3293 - acc: 0.8574 - val_loss: 0.3622 - val_acc: 0.8299\n",
      "roc_auc: 0.90344 - roc_auc_val: 0.85517 - norm_gini: 0.80689 - norm_gini_val: 0.71034          \n",
      "\n",
      "Epoch 00004: norm_gini_val improved from 0.70837 to 0.71034, saving model to keras-5fold-run-01-v1-fold-04-run-02.check\n",
      "Epoch 5/5000\n",
      " - 1s - loss: 0.3228 - acc: 0.8543 - val_loss: 0.3610 - val_acc: 0.8363\n",
      "roc_auc: 0.90482 - roc_auc_val: 0.86028 - norm_gini: 0.80965 - norm_gini_val: 0.72056          \n",
      "\n",
      "Epoch 00005: norm_gini_val improved from 0.71034 to 0.72056, saving model to keras-5fold-run-01-v1-fold-04-run-02.check\n",
      "Epoch 6/5000\n",
      " - 2s - loss: 0.3191 - acc: 0.8561 - val_loss: 0.3582 - val_acc: 0.8326\n",
      "roc_auc: 0.90456 - roc_auc_val: 0.85581 - norm_gini: 0.80912 - norm_gini_val: 0.71162          \n",
      "\n",
      "Epoch 00006: norm_gini_val did not improve from 0.72056\n",
      "Epoch 7/5000\n",
      " - 1s - loss: 0.3152 - acc: 0.8569 - val_loss: 0.3497 - val_acc: 0.8370\n",
      "roc_auc: 0.90735 - roc_auc_val: 0.86112 - norm_gini: 0.8147 - norm_gini_val: 0.72224          \n",
      "\n",
      "Epoch 00007: norm_gini_val improved from 0.72056 to 0.72224, saving model to keras-5fold-run-01-v1-fold-04-run-02.check\n",
      "Epoch 8/5000\n",
      " - 1s - loss: 0.3122 - acc: 0.8570 - val_loss: 0.3502 - val_acc: 0.8373\n",
      "roc_auc: 0.90845 - roc_auc_val: 0.86197 - norm_gini: 0.81691 - norm_gini_val: 0.72394          \n",
      "\n",
      "Epoch 00008: norm_gini_val improved from 0.72224 to 0.72394, saving model to keras-5fold-run-01-v1-fold-04-run-02.check\n",
      "Epoch 9/5000\n",
      " - 2s - loss: 0.3120 - acc: 0.8568 - val_loss: 0.3517 - val_acc: 0.8427\n",
      "roc_auc: 0.91032 - roc_auc_val: 0.86321 - norm_gini: 0.82064 - norm_gini_val: 0.72642          \n",
      "\n",
      "Epoch 00009: norm_gini_val improved from 0.72394 to 0.72642, saving model to keras-5fold-run-01-v1-fold-04-run-02.check\n",
      "Epoch 10/5000\n",
      " - 1s - loss: 0.3098 - acc: 0.8596 - val_loss: 0.3792 - val_acc: 0.8279\n",
      "roc_auc: 0.91014 - roc_auc_val: 0.8609 - norm_gini: 0.82029 - norm_gini_val: 0.7218          \n",
      "\n",
      "Epoch 00010: norm_gini_val did not improve from 0.72642\n",
      "Epoch 11/5000\n",
      " - 1s - loss: 0.3051 - acc: 0.8629 - val_loss: 0.3573 - val_acc: 0.8336\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "roc_auc: 0.91076 - roc_auc_val: 0.86212 - norm_gini: 0.82152 - norm_gini_val: 0.72425          \n",
      "\n",
      "Epoch 00011: norm_gini_val did not improve from 0.72642\n",
      "Epoch 12/5000\n",
      " - 1s - loss: 0.3087 - acc: 0.8632 - val_loss: 0.3487 - val_acc: 0.8424\n",
      "roc_auc: 0.91098 - roc_auc_val: 0.86313 - norm_gini: 0.82196 - norm_gini_val: 0.72626          \n",
      "\n",
      "Epoch 00012: norm_gini_val did not improve from 0.72642\n",
      "Epoch 13/5000\n",
      " - 2s - loss: 0.3078 - acc: 0.8614 - val_loss: 0.3603 - val_acc: 0.8353\n",
      "roc_auc: 0.90872 - roc_auc_val: 0.86327 - norm_gini: 0.81744 - norm_gini_val: 0.72654          \n",
      "\n",
      "Epoch 00013: norm_gini_val improved from 0.72642 to 0.72654, saving model to keras-5fold-run-01-v1-fold-04-run-02.check\n",
      "Epoch 14/5000\n",
      " - 2s - loss: 0.3016 - acc: 0.8664 - val_loss: 0.3512 - val_acc: 0.8373\n",
      "roc_auc: 0.91207 - roc_auc_val: 0.86381 - norm_gini: 0.82414 - norm_gini_val: 0.72762          \n",
      "\n",
      "Epoch 00014: norm_gini_val improved from 0.72654 to 0.72762, saving model to keras-5fold-run-01-v1-fold-04-run-02.check\n",
      "Epoch 15/5000\n",
      " - 2s - loss: 0.3068 - acc: 0.8643 - val_loss: 0.3480 - val_acc: 0.8437\n",
      "roc_auc: 0.91321 - roc_auc_val: 0.86507 - norm_gini: 0.82642 - norm_gini_val: 0.73015          \n",
      "\n",
      "Epoch 00015: norm_gini_val improved from 0.72762 to 0.73015, saving model to keras-5fold-run-01-v1-fold-04-run-02.check\n",
      "Epoch 16/5000\n",
      " - 1s - loss: 0.3084 - acc: 0.8613 - val_loss: 0.3580 - val_acc: 0.8333\n",
      "roc_auc: 0.91401 - roc_auc_val: 0.86284 - norm_gini: 0.82803 - norm_gini_val: 0.72568          \n",
      "\n",
      "Epoch 00016: norm_gini_val did not improve from 0.73015\n",
      "Epoch 17/5000\n",
      " - 1s - loss: 0.3015 - acc: 0.8632 - val_loss: 0.3606 - val_acc: 0.8350\n",
      "roc_auc: 0.91199 - roc_auc_val: 0.86511 - norm_gini: 0.82399 - norm_gini_val: 0.73023          \n",
      "\n",
      "Epoch 00017: norm_gini_val improved from 0.73015 to 0.73023, saving model to keras-5fold-run-01-v1-fold-04-run-02.check\n",
      "Epoch 18/5000\n",
      " - 1s - loss: 0.3041 - acc: 0.8601 - val_loss: 0.3511 - val_acc: 0.8400\n",
      "roc_auc: 0.9149 - roc_auc_val: 0.86296 - norm_gini: 0.82981 - norm_gini_val: 0.72591          \n",
      "\n",
      "Epoch 00018: norm_gini_val did not improve from 0.73023\n",
      "Epoch 19/5000\n",
      " - 1s - loss: 0.2996 - acc: 0.8671 - val_loss: 0.3541 - val_acc: 0.8397\n",
      "roc_auc: 0.91624 - roc_auc_val: 0.86512 - norm_gini: 0.83248 - norm_gini_val: 0.73023          \n",
      "\n",
      "Epoch 00019: norm_gini_val improved from 0.73023 to 0.73023, saving model to keras-5fold-run-01-v1-fold-04-run-02.check\n",
      "Epoch 20/5000\n",
      " - 1s - loss: 0.3037 - acc: 0.8644 - val_loss: 0.3491 - val_acc: 0.8410\n",
      "roc_auc: 0.91597 - roc_auc_val: 0.86305 - norm_gini: 0.83193 - norm_gini_val: 0.7261          \n",
      "\n",
      "Epoch 00020: norm_gini_val did not improve from 0.73023\n",
      "Epoch 21/5000\n",
      " - 1s - loss: 0.3030 - acc: 0.8632 - val_loss: 0.3494 - val_acc: 0.8390\n",
      "roc_auc: 0.9157 - roc_auc_val: 0.86349 - norm_gini: 0.8314 - norm_gini_val: 0.72698          \n",
      "\n",
      "Epoch 00021: norm_gini_val did not improve from 0.73023\n",
      "Epoch 22/5000\n",
      " - 1s - loss: 0.2992 - acc: 0.8648 - val_loss: 0.3656 - val_acc: 0.8286\n",
      "roc_auc: 0.91703 - roc_auc_val: 0.8667 - norm_gini: 0.83406 - norm_gini_val: 0.73339          \n",
      "\n",
      "Epoch 00022: norm_gini_val improved from 0.73023 to 0.73339, saving model to keras-5fold-run-01-v1-fold-04-run-02.check\n",
      "Epoch 23/5000\n",
      " - 1s - loss: 0.2933 - acc: 0.8677 - val_loss: 0.3522 - val_acc: 0.8363\n",
      "roc_auc: 0.91537 - roc_auc_val: 0.86414 - norm_gini: 0.83075 - norm_gini_val: 0.72827          \n",
      "\n",
      "Epoch 00023: norm_gini_val did not improve from 0.73339\n",
      "Epoch 24/5000\n",
      " - 1s - loss: 0.2956 - acc: 0.8681 - val_loss: 0.3753 - val_acc: 0.8336\n",
      "roc_auc: 0.91277 - roc_auc_val: 0.86372 - norm_gini: 0.82554 - norm_gini_val: 0.72744          \n",
      "\n",
      "Epoch 00024: norm_gini_val did not improve from 0.73339\n",
      "Epoch 25/5000\n",
      " - 1s - loss: 0.3026 - acc: 0.8663 - val_loss: 0.3466 - val_acc: 0.8397\n",
      "roc_auc: 0.91738 - roc_auc_val: 0.86723 - norm_gini: 0.83475 - norm_gini_val: 0.73447          \n",
      "\n",
      "Epoch 00025: norm_gini_val improved from 0.73339 to 0.73447, saving model to keras-5fold-run-01-v1-fold-04-run-02.check\n",
      "Epoch 26/5000\n",
      " - 1s - loss: 0.2957 - acc: 0.8662 - val_loss: 0.3481 - val_acc: 0.8403\n",
      "roc_auc: 0.91795 - roc_auc_val: 0.86612 - norm_gini: 0.83591 - norm_gini_val: 0.73223          \n",
      "\n",
      "Epoch 00026: norm_gini_val did not improve from 0.73447\n",
      "Epoch 27/5000\n",
      " - 1s - loss: 0.2982 - acc: 0.8669 - val_loss: 0.3484 - val_acc: 0.8413\n",
      "roc_auc: 0.91766 - roc_auc_val: 0.86582 - norm_gini: 0.83532 - norm_gini_val: 0.73164          \n",
      "\n",
      "Epoch 00027: norm_gini_val did not improve from 0.73447\n",
      "Epoch 28/5000\n",
      " - 2s - loss: 0.2964 - acc: 0.8679 - val_loss: 0.3552 - val_acc: 0.8403\n",
      "roc_auc: 0.91968 - roc_auc_val: 0.8663 - norm_gini: 0.83937 - norm_gini_val: 0.7326          \n",
      "\n",
      "Epoch 00028: norm_gini_val did not improve from 0.73447\n",
      "Epoch 29/5000\n",
      " - 1s - loss: 0.2939 - acc: 0.8707 - val_loss: 0.3494 - val_acc: 0.8413\n",
      "roc_auc: 0.91807 - roc_auc_val: 0.86589 - norm_gini: 0.83614 - norm_gini_val: 0.73178          \n",
      "\n",
      "Epoch 00029: norm_gini_val did not improve from 0.73447\n",
      "Epoch 30/5000\n",
      " - 1s - loss: 0.2957 - acc: 0.8691 - val_loss: 0.3454 - val_acc: 0.8400\n",
      "roc_auc: 0.91922 - roc_auc_val: 0.86578 - norm_gini: 0.83845 - norm_gini_val: 0.73156          \n",
      "\n",
      "Epoch 00030: norm_gini_val did not improve from 0.73447\n",
      "Epoch 31/5000\n",
      " - 1s - loss: 0.2974 - acc: 0.8631 - val_loss: 0.3485 - val_acc: 0.8420\n",
      "roc_auc: 0.91941 - roc_auc_val: 0.86492 - norm_gini: 0.83882 - norm_gini_val: 0.72983          \n",
      "\n",
      "Epoch 00031: norm_gini_val did not improve from 0.73447\n",
      "Epoch 32/5000\n",
      " - 2s - loss: 0.2921 - acc: 0.8708 - val_loss: 0.3576 - val_acc: 0.8400\n",
      "roc_auc: 0.91681 - roc_auc_val: 0.86267 - norm_gini: 0.83361 - norm_gini_val: 0.72533          \n",
      "\n",
      "Epoch 00032: norm_gini_val did not improve from 0.73447\n",
      "Epoch 33/5000\n",
      " - 1s - loss: 0.2958 - acc: 0.8646 - val_loss: 0.3600 - val_acc: 0.8289\n",
      "roc_auc: 0.91801 - roc_auc_val: 0.8654 - norm_gini: 0.83602 - norm_gini_val: 0.7308          \n",
      "\n",
      "Epoch 00033: norm_gini_val did not improve from 0.73447\n",
      "Epoch 34/5000\n",
      " - 2s - loss: 0.2956 - acc: 0.8666 - val_loss: 0.3521 - val_acc: 0.8393\n",
      "roc_auc: 0.91948 - roc_auc_val: 0.86485 - norm_gini: 0.83896 - norm_gini_val: 0.72971          \n",
      "\n",
      "Epoch 00034: norm_gini_val did not improve from 0.73447\n",
      "Epoch 35/5000\n",
      " - 2s - loss: 0.2932 - acc: 0.8658 - val_loss: 0.3538 - val_acc: 0.8387\n",
      "roc_auc: 0.91948 - roc_auc_val: 0.86294 - norm_gini: 0.83896 - norm_gini_val: 0.72589          \n",
      "\n",
      "Epoch 00035: norm_gini_val did not improve from 0.73447\n",
      "Epoch 36/5000\n",
      " - 1s - loss: 0.2916 - acc: 0.8690 - val_loss: 0.3527 - val_acc: 0.8467\n",
      "roc_auc: 0.92109 - roc_auc_val: 0.86524 - norm_gini: 0.84218 - norm_gini_val: 0.73048          \n",
      "\n",
      "Epoch 00036: norm_gini_val did not improve from 0.73447\n",
      "Epoch 37/5000\n",
      " - 1s - loss: 0.2882 - acc: 0.8723 - val_loss: 0.3491 - val_acc: 0.8397\n",
      "roc_auc: 0.9208 - roc_auc_val: 0.86432 - norm_gini: 0.8416 - norm_gini_val: 0.72863          \n",
      "\n",
      "Epoch 00037: norm_gini_val did not improve from 0.73447\n",
      "Epoch 38/5000\n",
      " - 1s - loss: 0.2904 - acc: 0.8681 - val_loss: 0.3637 - val_acc: 0.8373\n",
      "roc_auc: 0.92061 - roc_auc_val: 0.86035 - norm_gini: 0.84122 - norm_gini_val: 0.72071          \n",
      "\n",
      "Epoch 00038: norm_gini_val did not improve from 0.73447\n",
      "Epoch 39/5000\n",
      " - 2s - loss: 0.2899 - acc: 0.8679 - val_loss: 0.3489 - val_acc: 0.8424\n",
      "roc_auc: 0.92236 - roc_auc_val: 0.8651 - norm_gini: 0.84472 - norm_gini_val: 0.7302          \n",
      "\n",
      "Epoch 00039: norm_gini_val did not improve from 0.73447\n",
      "Epoch 40/5000\n",
      " - 2s - loss: 0.2926 - acc: 0.8709 - val_loss: 0.3523 - val_acc: 0.8370\n",
      "roc_auc: 0.92063 - roc_auc_val: 0.86218 - norm_gini: 0.84126 - norm_gini_val: 0.72436          \n",
      "\n",
      "Epoch 00040: norm_gini_val did not improve from 0.73447\n",
      "Epoch 41/5000\n",
      " - 2s - loss: 0.2904 - acc: 0.8662 - val_loss: 0.3583 - val_acc: 0.8339\n",
      "roc_auc: 0.92089 - roc_auc_val: 0.86316 - norm_gini: 0.84178 - norm_gini_val: 0.72632          \n",
      "\n",
      "Epoch 00041: norm_gini_val did not improve from 0.73447\n",
      "Epoch 42/5000\n",
      " - 2s - loss: 0.2918 - acc: 0.8677 - val_loss: 0.3482 - val_acc: 0.8403\n",
      "roc_auc: 0.92159 - roc_auc_val: 0.86659 - norm_gini: 0.84317 - norm_gini_val: 0.73318          \n",
      "\n",
      "Epoch 00042: norm_gini_val did not improve from 0.73447\n",
      "Epoch 43/5000\n",
      " - 2s - loss: 0.2905 - acc: 0.8705 - val_loss: 0.3504 - val_acc: 0.8387\n",
      "roc_auc: 0.92064 - roc_auc_val: 0.86298 - norm_gini: 0.84128 - norm_gini_val: 0.72596          \n",
      "\n",
      "Epoch 00043: norm_gini_val did not improve from 0.73447\n",
      "Epoch 44/5000\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " - 2s - loss: 0.2875 - acc: 0.8726 - val_loss: 0.3536 - val_acc: 0.8316\n",
      "roc_auc: 0.92019 - roc_auc_val: 0.86603 - norm_gini: 0.84038 - norm_gini_val: 0.73205          \n",
      "\n",
      "Epoch 00044: norm_gini_val did not improve from 0.73447\n",
      "Epoch 45/5000\n",
      " - 2s - loss: 0.2933 - acc: 0.8667 - val_loss: 0.3499 - val_acc: 0.8407\n",
      "roc_auc: 0.92318 - roc_auc_val: 0.86814 - norm_gini: 0.84636 - norm_gini_val: 0.73627          \n",
      "\n",
      "Epoch 00045: norm_gini_val improved from 0.73447 to 0.73627, saving model to keras-5fold-run-01-v1-fold-04-run-02.check\n",
      "Epoch 46/5000\n",
      " - 1s - loss: 0.2899 - acc: 0.8722 - val_loss: 0.3504 - val_acc: 0.8407\n",
      "roc_auc: 0.92257 - roc_auc_val: 0.86265 - norm_gini: 0.84514 - norm_gini_val: 0.72531          \n",
      "\n",
      "Epoch 00046: norm_gini_val did not improve from 0.73627\n",
      "Epoch 47/5000\n",
      " - 2s - loss: 0.2887 - acc: 0.8701 - val_loss: 0.3541 - val_acc: 0.8430\n",
      "roc_auc: 0.92252 - roc_auc_val: 0.86497 - norm_gini: 0.84504 - norm_gini_val: 0.72993          \n",
      "\n",
      "Epoch 00047: norm_gini_val did not improve from 0.73627\n",
      "Epoch 48/5000\n",
      " - 2s - loss: 0.2887 - acc: 0.8719 - val_loss: 0.3519 - val_acc: 0.8373\n",
      "roc_auc: 0.92368 - roc_auc_val: 0.86377 - norm_gini: 0.84736 - norm_gini_val: 0.72755          \n",
      "\n",
      "Epoch 00048: norm_gini_val did not improve from 0.73627\n",
      "Epoch 49/5000\n",
      " - 2s - loss: 0.2878 - acc: 0.8714 - val_loss: 0.3621 - val_acc: 0.8437\n",
      "roc_auc: 0.92312 - roc_auc_val: 0.86771 - norm_gini: 0.84625 - norm_gini_val: 0.73542          \n",
      "\n",
      "Epoch 00049: norm_gini_val did not improve from 0.73627\n",
      "Epoch 50/5000\n",
      " - 1s - loss: 0.2888 - acc: 0.8729 - val_loss: 0.3643 - val_acc: 0.8366\n",
      "roc_auc: 0.92407 - roc_auc_val: 0.86545 - norm_gini: 0.84815 - norm_gini_val: 0.7309          \n",
      "\n",
      "Epoch 00050: norm_gini_val did not improve from 0.73627\n",
      "Epoch 51/5000\n",
      " - 1s - loss: 0.2858 - acc: 0.8696 - val_loss: 0.3481 - val_acc: 0.8397\n",
      "roc_auc: 0.92572 - roc_auc_val: 0.86461 - norm_gini: 0.85145 - norm_gini_val: 0.72923          \n",
      "\n",
      "Epoch 00051: norm_gini_val did not improve from 0.73627\n",
      "Epoch 52/5000\n",
      " - 1s - loss: 0.2908 - acc: 0.8675 - val_loss: 0.3494 - val_acc: 0.8380\n",
      "roc_auc: 0.9252 - roc_auc_val: 0.86335 - norm_gini: 0.85039 - norm_gini_val: 0.7267          \n",
      "\n",
      "Epoch 00052: norm_gini_val did not improve from 0.73627\n",
      "Epoch 53/5000\n",
      " - 1s - loss: 0.2851 - acc: 0.8723 - val_loss: 0.4063 - val_acc: 0.8353\n",
      "roc_auc: 0.92169 - roc_auc_val: 0.86252 - norm_gini: 0.84338 - norm_gini_val: 0.72504          \n",
      "\n",
      "Epoch 00053: norm_gini_val did not improve from 0.73627\n",
      "Epoch 54/5000\n",
      " - 1s - loss: 0.2857 - acc: 0.8716 - val_loss: 0.3530 - val_acc: 0.8413\n",
      "roc_auc: 0.92418 - roc_auc_val: 0.86193 - norm_gini: 0.84837 - norm_gini_val: 0.72386          \n",
      "\n",
      "Epoch 00054: norm_gini_val did not improve from 0.73627\n",
      "Epoch 55/5000\n",
      " - 1s - loss: 0.2855 - acc: 0.8705 - val_loss: 0.3617 - val_acc: 0.8410\n",
      "roc_auc: 0.92258 - roc_auc_val: 0.86498 - norm_gini: 0.84515 - norm_gini_val: 0.72995          \n",
      "\n",
      "Epoch 00055: norm_gini_val did not improve from 0.73627\n",
      "Epoch 56/5000\n",
      " - 1s - loss: 0.2824 - acc: 0.8747 - val_loss: 0.3576 - val_acc: 0.8373\n",
      "roc_auc: 0.9268 - roc_auc_val: 0.86471 - norm_gini: 0.85361 - norm_gini_val: 0.72942          \n",
      "\n",
      "Epoch 00056: norm_gini_val did not improve from 0.73627\n",
      "Epoch 57/5000\n",
      " - 1s - loss: 0.2846 - acc: 0.8705 - val_loss: 0.3661 - val_acc: 0.8434\n",
      "roc_auc: 0.92458 - roc_auc_val: 0.8656 - norm_gini: 0.84916 - norm_gini_val: 0.7312          \n",
      "\n",
      "Epoch 00057: norm_gini_val did not improve from 0.73627\n",
      "Epoch 58/5000\n",
      " - 1s - loss: 0.2814 - acc: 0.8736 - val_loss: 0.3518 - val_acc: 0.8430\n",
      "roc_auc: 0.92663 - roc_auc_val: 0.86405 - norm_gini: 0.85326 - norm_gini_val: 0.72809          \n",
      "\n",
      "Epoch 00058: norm_gini_val did not improve from 0.73627\n",
      "Epoch 59/5000\n",
      " - 1s - loss: 0.2889 - acc: 0.8698 - val_loss: 0.3520 - val_acc: 0.8413\n",
      "roc_auc: 0.92655 - roc_auc_val: 0.86657 - norm_gini: 0.85309 - norm_gini_val: 0.73315          \n",
      "\n",
      "Epoch 00059: norm_gini_val did not improve from 0.73627\n",
      "Epoch 60/5000\n",
      " - 1s - loss: 0.2838 - acc: 0.8726 - val_loss: 0.3492 - val_acc: 0.8400\n",
      "roc_auc: 0.92613 - roc_auc_val: 0.86406 - norm_gini: 0.85226 - norm_gini_val: 0.72812          \n",
      "\n",
      "Epoch 00060: norm_gini_val did not improve from 0.73627\n",
      "Epoch 61/5000\n",
      " - 1s - loss: 0.2904 - acc: 0.8696 - val_loss: 0.3461 - val_acc: 0.8400\n",
      "roc_auc: 0.92684 - roc_auc_val: 0.86722 - norm_gini: 0.85368 - norm_gini_val: 0.73444          \n",
      "\n",
      "Epoch 00061: norm_gini_val did not improve from 0.73627\n",
      "Epoch 62/5000\n",
      " - 1s - loss: 0.2867 - acc: 0.8685 - val_loss: 0.3529 - val_acc: 0.8424\n",
      "roc_auc: 0.92671 - roc_auc_val: 0.86612 - norm_gini: 0.85342 - norm_gini_val: 0.73224          \n",
      "\n",
      "Epoch 00062: norm_gini_val did not improve from 0.73627\n",
      "Epoch 63/5000\n",
      " - 1s - loss: 0.2850 - acc: 0.8722 - val_loss: 0.3499 - val_acc: 0.8376\n",
      "roc_auc: 0.92643 - roc_auc_val: 0.86262 - norm_gini: 0.85286 - norm_gini_val: 0.72524          \n",
      "\n",
      "Epoch 00063: norm_gini_val did not improve from 0.73627\n",
      "Epoch 64/5000\n",
      " - 1s - loss: 0.2825 - acc: 0.8737 - val_loss: 0.3468 - val_acc: 0.8400\n",
      "roc_auc: 0.92687 - roc_auc_val: 0.86658 - norm_gini: 0.85374 - norm_gini_val: 0.73316          \n",
      "\n",
      "Epoch 00064: norm_gini_val did not improve from 0.73627\n",
      "Epoch 65/5000\n",
      " - 1s - loss: 0.2839 - acc: 0.8716 - val_loss: 0.3487 - val_acc: 0.8403\n",
      "roc_auc: 0.92833 - roc_auc_val: 0.86746 - norm_gini: 0.85666 - norm_gini_val: 0.73491          \n",
      "\n",
      "Epoch 00065: norm_gini_val did not improve from 0.73627\n",
      "Epoch 00065: early stopping\n",
      "\n",
      " Fold 4 Run 2 Log-loss: 0.34987\n",
      " Fold 4 Run 2 AUC: 0.86814\n",
      " Fold 4 Run 2 normalized gini: 0.73627\n",
      "\n",
      " Fold 4 - Run 3\n",
      "\n",
      "Train on 8925 samples, validate on 2975 samples\n",
      "Epoch 1/5000\n",
      " - 5s - loss: 0.5139 - acc: 0.7539 - val_loss: 0.3908 - val_acc: 0.8296\n",
      "roc_auc: 0.86937 - roc_auc_val: 0.83899 - norm_gini: 0.73874 - norm_gini_val: 0.67799          \n",
      "\n",
      "Epoch 00001: norm_gini_val improved from -inf to 0.67799, saving model to keras-5fold-run-01-v1-fold-04-run-03.check\n",
      "Epoch 2/5000\n",
      " - 2s - loss: 0.3580 - acc: 0.8469 - val_loss: 0.3761 - val_acc: 0.8296\n",
      "roc_auc: 0.88876 - roc_auc_val: 0.84726 - norm_gini: 0.77753 - norm_gini_val: 0.69451          \n",
      "\n",
      "Epoch 00002: norm_gini_val improved from 0.67799 to 0.69451, saving model to keras-5fold-run-01-v1-fold-04-run-03.check\n",
      "Epoch 3/5000\n",
      " - 2s - loss: 0.3370 - acc: 0.8459 - val_loss: 0.3618 - val_acc: 0.8292\n",
      "roc_auc: 0.89944 - roc_auc_val: 0.85757 - norm_gini: 0.79889 - norm_gini_val: 0.71513          \n",
      "\n",
      "Epoch 00003: norm_gini_val improved from 0.69451 to 0.71513, saving model to keras-5fold-run-01-v1-fold-04-run-03.check\n",
      "Epoch 4/5000\n",
      " - 2s - loss: 0.3250 - acc: 0.8541 - val_loss: 0.3586 - val_acc: 0.8339\n",
      "roc_auc: 0.90249 - roc_auc_val: 0.85909 - norm_gini: 0.80498 - norm_gini_val: 0.71817          \n",
      "\n",
      "Epoch 00004: norm_gini_val improved from 0.71513 to 0.71817, saving model to keras-5fold-run-01-v1-fold-04-run-03.check\n",
      "Epoch 5/5000\n",
      " - 2s - loss: 0.3175 - acc: 0.8580 - val_loss: 0.3553 - val_acc: 0.8437\n",
      "roc_auc: 0.90414 - roc_auc_val: 0.86011 - norm_gini: 0.80828 - norm_gini_val: 0.72022          \n",
      "\n",
      "Epoch 00005: norm_gini_val improved from 0.71817 to 0.72022, saving model to keras-5fold-run-01-v1-fold-04-run-03.check\n",
      "Epoch 6/5000\n",
      " - 2s - loss: 0.3171 - acc: 0.8587 - val_loss: 0.3726 - val_acc: 0.8326\n",
      "roc_auc: 0.9074 - roc_auc_val: 0.863 - norm_gini: 0.81479 - norm_gini_val: 0.726          \n",
      "\n",
      "Epoch 00006: norm_gini_val improved from 0.72022 to 0.72600, saving model to keras-5fold-run-01-v1-fold-04-run-03.check\n",
      "Epoch 7/5000\n",
      " - 2s - loss: 0.3143 - acc: 0.8625 - val_loss: 0.3494 - val_acc: 0.8403\n",
      "roc_auc: 0.90652 - roc_auc_val: 0.86342 - norm_gini: 0.81303 - norm_gini_val: 0.72685          \n",
      "\n",
      "Epoch 00007: norm_gini_val improved from 0.72600 to 0.72685, saving model to keras-5fold-run-01-v1-fold-04-run-03.check\n",
      "Epoch 8/5000\n",
      " - 2s - loss: 0.3139 - acc: 0.8574 - val_loss: 0.3618 - val_acc: 0.8329\n",
      "roc_auc: 0.90942 - roc_auc_val: 0.86249 - norm_gini: 0.81884 - norm_gini_val: 0.72497          \n",
      "\n",
      "Epoch 00008: norm_gini_val did not improve from 0.72685\n",
      "Epoch 9/5000\n",
      " - 2s - loss: 0.3109 - acc: 0.8606 - val_loss: 0.3459 - val_acc: 0.8370\n",
      "roc_auc: 0.9097 - roc_auc_val: 0.86641 - norm_gini: 0.81939 - norm_gini_val: 0.73282          \n",
      "\n",
      "Epoch 00009: norm_gini_val improved from 0.72685 to 0.73282, saving model to keras-5fold-run-01-v1-fold-04-run-03.check\n",
      "Epoch 10/5000\n",
      " - 2s - loss: 0.3092 - acc: 0.8625 - val_loss: 0.3494 - val_acc: 0.8380\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "roc_auc: 0.90879 - roc_auc_val: 0.86348 - norm_gini: 0.81759 - norm_gini_val: 0.72696          \n",
      "\n",
      "Epoch 00010: norm_gini_val did not improve from 0.73282\n",
      "Epoch 11/5000\n",
      " - 2s - loss: 0.3083 - acc: 0.8602 - val_loss: 0.3482 - val_acc: 0.8403\n",
      "roc_auc: 0.91097 - roc_auc_val: 0.86226 - norm_gini: 0.82194 - norm_gini_val: 0.72452          \n",
      "\n",
      "Epoch 00011: norm_gini_val did not improve from 0.73282\n",
      "Epoch 12/5000\n",
      " - 2s - loss: 0.3089 - acc: 0.8578 - val_loss: 0.3560 - val_acc: 0.8360\n",
      "roc_auc: 0.90988 - roc_auc_val: 0.86031 - norm_gini: 0.81977 - norm_gini_val: 0.72063          \n",
      "\n",
      "Epoch 00012: norm_gini_val did not improve from 0.73282\n",
      "Epoch 13/5000\n",
      " - 2s - loss: 0.3026 - acc: 0.8639 - val_loss: 0.3589 - val_acc: 0.8326\n",
      "roc_auc: 0.91181 - roc_auc_val: 0.86056 - norm_gini: 0.82363 - norm_gini_val: 0.72112          \n",
      "\n",
      "Epoch 00013: norm_gini_val did not improve from 0.73282\n",
      "Epoch 14/5000\n",
      " - 2s - loss: 0.3017 - acc: 0.8639 - val_loss: 0.3672 - val_acc: 0.8407\n",
      "roc_auc: 0.9128 - roc_auc_val: 0.86327 - norm_gini: 0.8256 - norm_gini_val: 0.72653          \n",
      "\n",
      "Epoch 00014: norm_gini_val did not improve from 0.73282\n",
      "Epoch 15/5000\n",
      " - 2s - loss: 0.3030 - acc: 0.8612 - val_loss: 0.3592 - val_acc: 0.8360\n",
      "roc_auc: 0.91336 - roc_auc_val: 0.86399 - norm_gini: 0.82672 - norm_gini_val: 0.72797          \n",
      "\n",
      "Epoch 00015: norm_gini_val did not improve from 0.73282\n",
      "Epoch 16/5000\n",
      " - 2s - loss: 0.2980 - acc: 0.8630 - val_loss: 0.3640 - val_acc: 0.8306\n",
      "roc_auc: 0.91401 - roc_auc_val: 0.86145 - norm_gini: 0.82802 - norm_gini_val: 0.7229          \n",
      "\n",
      "Epoch 00016: norm_gini_val did not improve from 0.73282\n",
      "Epoch 17/5000\n",
      " - 2s - loss: 0.3037 - acc: 0.8612 - val_loss: 0.3586 - val_acc: 0.8400\n",
      "roc_auc: 0.91389 - roc_auc_val: 0.86041 - norm_gini: 0.82778 - norm_gini_val: 0.72083          \n",
      "\n",
      "Epoch 00017: norm_gini_val did not improve from 0.73282\n",
      "Epoch 18/5000\n",
      " - 2s - loss: 0.2988 - acc: 0.8632 - val_loss: 0.3485 - val_acc: 0.8393\n",
      "roc_auc: 0.9152 - roc_auc_val: 0.86625 - norm_gini: 0.83039 - norm_gini_val: 0.73251          \n",
      "\n",
      "Epoch 00018: norm_gini_val did not improve from 0.73282\n",
      "Epoch 19/5000\n",
      " - 2s - loss: 0.3010 - acc: 0.8643 - val_loss: 0.3691 - val_acc: 0.8309\n",
      "roc_auc: 0.91327 - roc_auc_val: 0.8646 - norm_gini: 0.82654 - norm_gini_val: 0.72919          \n",
      "\n",
      "Epoch 00019: norm_gini_val did not improve from 0.73282\n",
      "Epoch 20/5000\n",
      " - 2s - loss: 0.2970 - acc: 0.8671 - val_loss: 0.3500 - val_acc: 0.8397\n",
      "roc_auc: 0.91546 - roc_auc_val: 0.86161 - norm_gini: 0.83093 - norm_gini_val: 0.72321          \n",
      "\n",
      "Epoch 00020: norm_gini_val did not improve from 0.73282\n",
      "Epoch 21/5000\n",
      " - 2s - loss: 0.2976 - acc: 0.8658 - val_loss: 0.3760 - val_acc: 0.8319\n",
      "roc_auc: 0.91511 - roc_auc_val: 0.86123 - norm_gini: 0.83021 - norm_gini_val: 0.72245          \n",
      "\n",
      "Epoch 00021: norm_gini_val did not improve from 0.73282\n",
      "Epoch 22/5000\n",
      " - 2s - loss: 0.2984 - acc: 0.8666 - val_loss: 0.3499 - val_acc: 0.8427\n",
      "roc_auc: 0.9154 - roc_auc_val: 0.86496 - norm_gini: 0.8308 - norm_gini_val: 0.72993          \n",
      "\n",
      "Epoch 00022: norm_gini_val did not improve from 0.73282\n",
      "Epoch 23/5000\n",
      " - 2s - loss: 0.2978 - acc: 0.8654 - val_loss: 0.3563 - val_acc: 0.8420\n",
      "roc_auc: 0.91585 - roc_auc_val: 0.86643 - norm_gini: 0.83169 - norm_gini_val: 0.73286          \n",
      "\n",
      "Epoch 00023: norm_gini_val improved from 0.73282 to 0.73286, saving model to keras-5fold-run-01-v1-fold-04-run-03.check\n",
      "Epoch 24/5000\n",
      " - 2s - loss: 0.2990 - acc: 0.8668 - val_loss: 0.3485 - val_acc: 0.8430\n",
      "roc_auc: 0.91574 - roc_auc_val: 0.86412 - norm_gini: 0.83147 - norm_gini_val: 0.72824          \n",
      "\n",
      "Epoch 00024: norm_gini_val did not improve from 0.73286\n",
      "Epoch 25/5000\n",
      " - 2s - loss: 0.2948 - acc: 0.8673 - val_loss: 0.3470 - val_acc: 0.8403\n",
      "roc_auc: 0.91617 - roc_auc_val: 0.86533 - norm_gini: 0.83233 - norm_gini_val: 0.73065          \n",
      "\n",
      "Epoch 00025: norm_gini_val did not improve from 0.73286\n",
      "Epoch 26/5000\n",
      " - 2s - loss: 0.2935 - acc: 0.8699 - val_loss: 0.3474 - val_acc: 0.8397\n",
      "roc_auc: 0.91789 - roc_auc_val: 0.86479 - norm_gini: 0.83579 - norm_gini_val: 0.72958          \n",
      "\n",
      "Epoch 00026: norm_gini_val did not improve from 0.73286\n",
      "Epoch 27/5000\n",
      " - 2s - loss: 0.2981 - acc: 0.8664 - val_loss: 0.3494 - val_acc: 0.8373\n",
      "roc_auc: 0.91733 - roc_auc_val: 0.86533 - norm_gini: 0.83466 - norm_gini_val: 0.73067          \n",
      "\n",
      "Epoch 00027: norm_gini_val did not improve from 0.73286\n",
      "Epoch 28/5000\n",
      " - 2s - loss: 0.2942 - acc: 0.8678 - val_loss: 0.3458 - val_acc: 0.8424\n",
      "roc_auc: 0.91759 - roc_auc_val: 0.86746 - norm_gini: 0.83518 - norm_gini_val: 0.73491          \n",
      "\n",
      "Epoch 00028: norm_gini_val improved from 0.73286 to 0.73491, saving model to keras-5fold-run-01-v1-fold-04-run-03.check\n",
      "Epoch 29/5000\n",
      " - 2s - loss: 0.2908 - acc: 0.8694 - val_loss: 0.3554 - val_acc: 0.8393\n",
      "roc_auc: 0.91658 - roc_auc_val: 0.86462 - norm_gini: 0.83317 - norm_gini_val: 0.72923          \n",
      "\n",
      "Epoch 00029: norm_gini_val did not improve from 0.73491\n",
      "Epoch 30/5000\n",
      " - 2s - loss: 0.2941 - acc: 0.8700 - val_loss: 0.3585 - val_acc: 0.8316\n",
      "roc_auc: 0.91899 - roc_auc_val: 0.86169 - norm_gini: 0.83798 - norm_gini_val: 0.72338          \n",
      "\n",
      "Epoch 00030: norm_gini_val did not improve from 0.73491\n",
      "Epoch 31/5000\n",
      " - 2s - loss: 0.2975 - acc: 0.8707 - val_loss: 0.3487 - val_acc: 0.8390\n",
      "roc_auc: 0.92214 - roc_auc_val: 0.86373 - norm_gini: 0.84429 - norm_gini_val: 0.72746          \n",
      "\n",
      "Epoch 00031: norm_gini_val did not improve from 0.73491\n",
      "Epoch 32/5000\n",
      " - 2s - loss: 0.2889 - acc: 0.8699 - val_loss: 0.3585 - val_acc: 0.8289\n",
      "roc_auc: 0.91653 - roc_auc_val: 0.85856 - norm_gini: 0.83305 - norm_gini_val: 0.71711          \n",
      "\n",
      "Epoch 00032: norm_gini_val did not improve from 0.73491\n",
      "Epoch 33/5000\n",
      " - 2s - loss: 0.2918 - acc: 0.8697 - val_loss: 0.3515 - val_acc: 0.8383\n",
      "roc_auc: 0.91953 - roc_auc_val: 0.86177 - norm_gini: 0.83905 - norm_gini_val: 0.72354          \n",
      "\n",
      "Epoch 00033: norm_gini_val did not improve from 0.73491\n",
      "Epoch 34/5000\n",
      " - 2s - loss: 0.2951 - acc: 0.8655 - val_loss: 0.3570 - val_acc: 0.8407\n",
      "roc_auc: 0.92148 - roc_auc_val: 0.86515 - norm_gini: 0.84295 - norm_gini_val: 0.7303          \n",
      "\n",
      "Epoch 00034: norm_gini_val did not improve from 0.73491\n",
      "Epoch 35/5000\n",
      " - 2s - loss: 0.2952 - acc: 0.8672 - val_loss: 0.3500 - val_acc: 0.8413\n",
      "roc_auc: 0.92083 - roc_auc_val: 0.86244 - norm_gini: 0.84166 - norm_gini_val: 0.72489          \n",
      "\n",
      "Epoch 00035: norm_gini_val did not improve from 0.73491\n",
      "Epoch 36/5000\n",
      " - 2s - loss: 0.2960 - acc: 0.8676 - val_loss: 0.3528 - val_acc: 0.8370\n",
      "roc_auc: 0.9185 - roc_auc_val: 0.8648 - norm_gini: 0.83699 - norm_gini_val: 0.72961          \n",
      "\n",
      "Epoch 00036: norm_gini_val did not improve from 0.73491\n",
      "Epoch 37/5000\n",
      " - 2s - loss: 0.2927 - acc: 0.8698 - val_loss: 0.3575 - val_acc: 0.8387\n",
      "roc_auc: 0.91927 - roc_auc_val: 0.86186 - norm_gini: 0.83854 - norm_gini_val: 0.72373          \n",
      "\n",
      "Epoch 00037: norm_gini_val did not improve from 0.73491\n",
      "Epoch 38/5000\n",
      " - 2s - loss: 0.2908 - acc: 0.8710 - val_loss: 0.3524 - val_acc: 0.8383\n",
      "roc_auc: 0.92133 - roc_auc_val: 0.86225 - norm_gini: 0.84266 - norm_gini_val: 0.72449          \n",
      "\n",
      "Epoch 00038: norm_gini_val did not improve from 0.73491\n",
      "Epoch 39/5000\n",
      " - 2s - loss: 0.2920 - acc: 0.8676 - val_loss: 0.3518 - val_acc: 0.8420\n",
      "roc_auc: 0.92099 - roc_auc_val: 0.86492 - norm_gini: 0.84198 - norm_gini_val: 0.72983          \n",
      "\n",
      "Epoch 00039: norm_gini_val did not improve from 0.73491\n",
      "Epoch 40/5000\n",
      " - 2s - loss: 0.2919 - acc: 0.8681 - val_loss: 0.3543 - val_acc: 0.8387\n",
      "roc_auc: 0.92215 - roc_auc_val: 0.86483 - norm_gini: 0.8443 - norm_gini_val: 0.72965          \n",
      "\n",
      "Epoch 00040: norm_gini_val did not improve from 0.73491\n",
      "Epoch 41/5000\n",
      " - 2s - loss: 0.2930 - acc: 0.8663 - val_loss: 0.3510 - val_acc: 0.8373\n",
      "roc_auc: 0.92278 - roc_auc_val: 0.86437 - norm_gini: 0.84555 - norm_gini_val: 0.72874          \n",
      "\n",
      "Epoch 00041: norm_gini_val did not improve from 0.73491\n",
      "Epoch 42/5000\n",
      " - 2s - loss: 0.2898 - acc: 0.8675 - val_loss: 0.3500 - val_acc: 0.8403\n",
      "roc_auc: 0.92237 - roc_auc_val: 0.86273 - norm_gini: 0.84474 - norm_gini_val: 0.72547          \n",
      "\n",
      "Epoch 00042: norm_gini_val did not improve from 0.73491\n",
      "Epoch 43/5000\n",
      " - 2s - loss: 0.2920 - acc: 0.8669 - val_loss: 0.3537 - val_acc: 0.8417\n",
      "roc_auc: 0.92378 - roc_auc_val: 0.8657 - norm_gini: 0.84756 - norm_gini_val: 0.73141          \n",
      "\n",
      "Epoch 00043: norm_gini_val did not improve from 0.73491\n",
      "Epoch 44/5000\n",
      " - 2s - loss: 0.2908 - acc: 0.8701 - val_loss: 0.3489 - val_acc: 0.8437\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "roc_auc: 0.92074 - roc_auc_val: 0.86625 - norm_gini: 0.84147 - norm_gini_val: 0.73249          \n",
      "\n",
      "Epoch 00044: norm_gini_val did not improve from 0.73491\n",
      "Epoch 45/5000\n",
      " - 2s - loss: 0.2884 - acc: 0.8672 - val_loss: 0.3514 - val_acc: 0.8413\n",
      "roc_auc: 0.92431 - roc_auc_val: 0.86558 - norm_gini: 0.84862 - norm_gini_val: 0.73116          \n",
      "\n",
      "Epoch 00045: norm_gini_val did not improve from 0.73491\n",
      "Epoch 46/5000\n",
      " - 2s - loss: 0.2864 - acc: 0.8707 - val_loss: 0.3505 - val_acc: 0.8363\n",
      "roc_auc: 0.92288 - roc_auc_val: 0.86285 - norm_gini: 0.84577 - norm_gini_val: 0.72569          \n",
      "\n",
      "Epoch 00046: norm_gini_val did not improve from 0.73491\n",
      "Epoch 47/5000\n",
      " - 2s - loss: 0.2891 - acc: 0.8718 - val_loss: 0.3523 - val_acc: 0.8437\n",
      "roc_auc: 0.92349 - roc_auc_val: 0.85959 - norm_gini: 0.84697 - norm_gini_val: 0.71918          \n",
      "\n",
      "Epoch 00047: norm_gini_val did not improve from 0.73491\n",
      "Epoch 48/5000\n",
      " - 2s - loss: 0.2875 - acc: 0.8681 - val_loss: 0.3524 - val_acc: 0.8390\n",
      "roc_auc: 0.92201 - roc_auc_val: 0.86454 - norm_gini: 0.84402 - norm_gini_val: 0.72908          \n",
      "\n",
      "Epoch 00048: norm_gini_val did not improve from 0.73491\n",
      "Epoch 00048: early stopping\n",
      "\n",
      " Fold 4 Run 3 Log-loss: 0.34580\n",
      " Fold 4 Run 3 AUC: 0.86746\n",
      " Fold 4 Run 3 normalized gini: 0.73491\n",
      "\n",
      " Fold 4 Log-loss: 0.34464\n",
      " Fold 4 AUC: 0.86924\n",
      " Fold 4 normalized gini: 0.73849\n",
      "\n",
      " Time taken: 0 hours 6 minutes and 34.67 seconds.\n"
     ]
    }
   ],
   "source": [
    "from datetime import datetime\n",
    "from sklearn.metrics import log_loss, roc_auc_score\n",
    "from sklearn.model_selection import StratifiedKFold\n",
    "\n",
    "from keras.models import load_model\n",
    "from keras.models import Sequential, Model\n",
    "from keras.layers import Input, Dense, Dropout, Activation\n",
    "from keras.layers.normalization import BatchNormalization\n",
    "from keras.callbacks import EarlyStopping, ModelCheckpoint, CSVLogger, Callback\n",
    "from keras.wrappers.scikit_learn import KerasClassifier\n",
    "\n",
    "class roc_auc_callback(Callback):\n",
    "    def __init__(self,training_data,validation_data):\n",
    "        self.x = training_data[0]\n",
    "        self.y = training_data[1]\n",
    "        self.x_val = validation_data[0]\n",
    "        self.y_val = validation_data[1]\n",
    "\n",
    "    def on_train_begin(self, logs={}):\n",
    "        return\n",
    "\n",
    "    def on_train_end(self, logs={}):\n",
    "        return\n",
    "\n",
    "    def on_epoch_begin(self, epoch, logs={}):\n",
    "        return\n",
    "\n",
    "    def on_epoch_end(self, epoch, logs={}):\n",
    "        y_pred = self.model.predict_proba(self.x, verbose=0)\n",
    "        roc = roc_auc_score(self.y, y_pred)\n",
    "        logs['roc_auc'] = roc_auc_score(self.y, y_pred)\n",
    "        logs['norm_gini'] = ( roc_auc_score(self.y, y_pred) * 2 ) - 1\n",
    "\n",
    "        y_pred_val = self.model.predict_proba(self.x_val, verbose=0)\n",
    "        roc_val = roc_auc_score(self.y_val, y_pred_val)\n",
    "        logs['roc_auc_val'] = roc_auc_score(self.y_val, y_pred_val)\n",
    "        logs['norm_gini_val'] = ( roc_auc_score(self.y_val, y_pred_val) * 2 ) - 1\n",
    "\n",
    "        print('\\rroc_auc: %s - roc_auc_val: %s - norm_gini: %s - norm_gini_val: %s' % (str(round(roc,5)),str(round(roc_val,5)),str(round((roc*2-1),5)),str(round((roc_val*2-1),5))), end=10*' '+'\\n')\n",
    "        return\n",
    "\n",
    "    def on_batch_begin(self, batch, logs={}):\n",
    "        return\n",
    "\n",
    "    def on_batch_end(self, batch, logs={}):\n",
    "        return\n",
    "\n",
    "def timer(start_time=None):\n",
    "    if not start_time:\n",
    "        start_time = datetime.now()\n",
    "        return start_time\n",
    "    elif start_time:\n",
    "        thour, temp_sec = divmod(\n",
    "            (datetime.now() - start_time).total_seconds(), 3600)\n",
    "        tmin, tsec = divmod(temp_sec, 60)\n",
    "        print('\\n Time taken: %i hours %i minutes and %s seconds.' %\n",
    "              (thour, tmin, round(tsec, 2)))\n",
    "\n",
    "def scale_data(X, scaler=None):\n",
    "    if not scaler:\n",
    "        scaler = MinMaxScaler(feature_range=(-1, 1))\n",
    "        scaler.fit(X)\n",
    "    X = scaler.transform(X)\n",
    "    return X, scaler\n",
    "\n",
    "folds = 4\n",
    "runs = 3\n",
    "\n",
    "\n",
    "cv_LL = 0\n",
    "cv_AUC = 0\n",
    "cv_gini = 0\n",
    "fpred = []\n",
    "avpred = []\n",
    "avreal = []\n",
    "i = 0\n",
    "#avids = []\n",
    "\n",
    "patience = 20\n",
    "batchsize = 32\n",
    "\n",
    "# Let's split the data into folds. I always use the same random number for reproducibility, \n",
    "# and suggest that you do the same (you certainly don't have to use 1001).\n",
    "\n",
    "skf = StratifiedKFold(n_splits=folds)\n",
    "starttime = timer(None)\n",
    "#for i, (train_index, test_index) in enumerate(skf.split(np_scaled_raw_X, np_y)):\n",
    "    \n",
    "    #X_train, X_val = np_scaled_raw_X[train_index], np_scaled_raw_X[test_index]\n",
    "    #y_train, y_val = np_y[train_index], np_y[test_index]\n",
    "    #train_ids, val_ids = tr_ids[train_index], tr_ids[test_index]\n",
    "    \n",
    "for train_index, test_index in kf.split(np_scaled_raw_X):\n",
    "    X_train, X_val = np_scaled_raw_X[train_index], np_scaled_raw_X[test_index]\n",
    "    y_train, y_val = np_y[train_index], np_y[test_index]    \n",
    "    start_time = timer(None)\n",
    "    count = 0\n",
    "# This is where we define and compile the model. These parameters are not optimal, as they were chosen \n",
    "# to get a notebook to complete in 60 minutes. Other than leaving BatchNormalization and last sigmoid \n",
    "# activation alone, virtually everything else can be optimized: number of neurons, types of initializers, \n",
    "# activation functions, dropout values. The same goes for the optimizer at the end.\n",
    "\n",
    "#########\n",
    "# Never move this model definition to the beginning of the file or anywhere else outside of this loop. \n",
    "# The model needs to be initialized anew every time you run a different fold. If not, it will continue \n",
    "# the training from a previous model, and that is not what you want.\n",
    "#########\n",
    "\n",
    "    # This definition must be within the for loop or else it will continue training previous model\n",
    "    def baseline_model():\n",
    "        model = Sequential()\n",
    "        model.add(Dense(200,input_dim=X_train.shape[1],kernel_initializer='glorot_normal',))\n",
    "        model.add(Activation('relu'))\n",
    "        model.add(BatchNormalization())\n",
    "        model.add(Dropout(0.5))\n",
    "        model.add(Dense(100, kernel_initializer='glorot_normal'))\n",
    "        model.add(Activation('relu'))\n",
    "        model.add(BatchNormalization())\n",
    "        model.add(Dropout(0.25))\n",
    "        model.add(Dense(50, kernel_initializer='glorot_normal'))\n",
    "        model.add(Activation('relu'))\n",
    "        model.add(BatchNormalization())\n",
    "        model.add(Dropout(0.15))\n",
    "        model.add(Dense(25, kernel_initializer='glorot_normal'))\n",
    "        model.add(Activation('relu'))\n",
    "        model.add(BatchNormalization())\n",
    "        model.add(Dropout(0.1))\n",
    "        model.add(Dense(1, activation='sigmoid'))\n",
    "\n",
    "        # Compile model\n",
    "        model.compile(optimizer='adam', metrics = ['accuracy'], loss='binary_crossentropy')\n",
    "\n",
    "        return model\n",
    "\n",
    "# This is where we repeat the runs for each fold. If you choose runs=1 above, it will run a \n",
    "# regular N-fold procedure.\n",
    "\n",
    "#########\n",
    "# It is important to leave the call to random seed here, so each run starts with a different seed.\n",
    "#########\n",
    "\n",
    "    for run in range(runs):\n",
    "        print('\\n Fold %d - Run %d\\n' % ((i + 1), (run + 1)))\n",
    "        np.random.seed()\n",
    "\n",
    "# Lots to unpack here.\n",
    "\n",
    "# The first callback prints out roc_auc and gini values at the end of each epoch. It must be listed \n",
    "# before the EarlyStopping callback, which monitors gini values saved in the previous callback. Make \n",
    "# sure to set the mode to \"max\" because the default value (\"auto\") will not handle gini properly \n",
    "# (it will act as if the model is not improving even when roc/gini go up).\n",
    "\n",
    "# CSVLogger creates a record of all iterations. Not really needed but it doesn't hurt to have it.\n",
    "\n",
    "# ModelCheckpoint saves a model each time gini improves. Its mode also must be set to \"max\" for reasons \n",
    "# explained above.\n",
    "\n",
    "        callbacks = [\n",
    "            roc_auc_callback(training_data=(X_train, y_train),validation_data=(X_val, y_val)),  # call this before EarlyStopping\n",
    "            EarlyStopping(monitor='norm_gini_val', patience=patience, mode='max', verbose=1),\n",
    "            #CSVLogger('keras-5fold-run-01-v1-epochs.log', separator=',', append=False),\n",
    "            ModelCheckpoint(\n",
    "                    'keras-5fold-run-01-v1-fold-' + str('%02d' % (i + 1)) + '-run-' + str('%02d' % (run + 1)) + '.check',\n",
    "                    monitor='norm_gini_val', mode='max', # mode must be set to max or Keras will be confused\n",
    "                    save_best_only=True,\n",
    "                    verbose=1)\n",
    "        ]\n",
    "\n",
    "# The classifier is defined here. Epochs should be be set to a very large number (not 3 like below) which \n",
    "# will never be reached anyway because of early stopping. I usually put 5000 there. Because why not.\n",
    "\n",
    "        nnet = KerasClassifier(\n",
    "            build_fn=baseline_model,\n",
    "# Epoch needs to be set to a very large number ; early stopping will prevent it from reaching\n",
    "            epochs=5000,\n",
    "            batch_size=batchsize,\n",
    "            validation_data=(X_val, y_val),\n",
    "            verbose=2,\n",
    "            shuffle=True,\n",
    "            callbacks=callbacks)\n",
    "\n",
    "        fit = nnet.fit(X_train, y_train)\n",
    "        \n",
    "# We want the best saved model - not the last one where the training stopped. So we delete the old \n",
    "# model instance and load the model from the last saved checkpoint. Next we predict values both for \n",
    "# validation and test data, and create a summary of parameters for each run.\n",
    "\n",
    "        del nnet\n",
    "        nnet = load_model('keras-5fold-run-01-v1-fold-' + str('%02d' % (i + 1)) + '-run-' + str('%02d' % (run + 1)) + '.check')\n",
    "        scores_val_run = nnet.predict_proba(X_val, verbose=0)\n",
    "        LL_run = log_loss(y_val, scores_val_run)\n",
    "        print('\\n Fold %d Run %d Log-loss: %.5f' % ((i + 1), (run + 1), LL_run))\n",
    "        AUC_run = roc_auc_score(y_val, scores_val_run)\n",
    "        print(' Fold %d Run %d AUC: %.5f' % ((i + 1), (run + 1), AUC_run))\n",
    "        print(' Fold %d Run %d normalized gini: %.5f' % ((i + 1), (run + 1), AUC_run*2-1))\n",
    "        y_pred_run = nnet.predict_proba(np_scaled_raw_X, verbose=0)\n",
    "        if run > 0:\n",
    "            scores_val = scores_val + scores_val_run\n",
    "            y_pred = y_pred + y_pred_run\n",
    "        else:\n",
    "            scores_val = scores_val_run\n",
    "            y_pred = y_pred_run\n",
    "            \n",
    "# We average all runs from the same fold and provide a parameter summary for each fold. Unless something \n",
    "# is wrong, the numbers printed here should be better than any of the individual runs.\n",
    "\n",
    "    scores_val = scores_val / runs\n",
    "    y_pred = y_pred / runs\n",
    "    LL = log_loss(y_val, scores_val)\n",
    "    print('\\n Fold %d Log-loss: %.5f' % ((i + 1), LL))\n",
    "    AUC = roc_auc_score(y_val, scores_val)\n",
    "    print(' Fold %d AUC: %.5f' % ((i + 1), AUC))\n",
    "    print(' Fold %d normalized gini: %.5f' % ((i + 1), AUC*2-1))\n",
    "    timer(start_time)\n",
    "    \n",
    "# We add up predictions on the test data for each fold. Create out-of-fold predictions for validation data.\n",
    "\n",
    "    train_pred = nnet.predict_proba(KFold_X_test)\n",
    "    test_pred = nnet.predict_proba(np_scaled_rawpredict_X)\n",
    "                \n",
    "    name = 'scaled_X_nn'\n",
    "    temp_name = 'temp_scaled_rawX_{}'.format(count)\n",
    "    \n",
    "    train_preds_df.loc[test_index,name] = train_pred.T\n",
    "    temp_test_preds_df[temp_name] = test_pred.tolist()\n",
    "    count += 1\n",
    "    \n",
    "    \n",
    "    if i > 0:\n",
    "        fpred = pred + y_pred\n",
    "        #avreal = np.concatenate((avreal, y_val), axis=0)\n",
    "        #avpred = np.concatenate((avpred, scores_val), axis=0)\n",
    "    else:\n",
    "        fpred = y_pred\n",
    "        #avreal = y_val\n",
    "        #avpred = scores_val\n",
    "    pred = fpred\n",
    "    cv_LL = cv_LL + LL\n",
    "    cv_AUC = cv_AUC + AUC\n",
    "    cv_gini = cv_gini + (AUC*2-1)\n",
    "    i += 1\n",
    "test_preds_df[name] = np.asarray(0.25)*temp_test_preds_df['temp_scaled_rawX_0'] + np.asarray(0.25)*temp_test_preds_df['temp_scaled_rawX_1'] + np.asarray(0.25)*temp_test_preds_df['temp_scaled_rawX_2'] + np.asarray(0.25)*temp_test_preds_df['temp_scaled_rawX_3']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 106,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>scaled_X90_k1</th>\n",
       "      <th>scaled_X90_k3</th>\n",
       "      <th>scaled_X90_k7</th>\n",
       "      <th>scaled_X45_k1</th>\n",
       "      <th>scaled_X45_k3</th>\n",
       "      <th>scaled_X45_k7</th>\n",
       "      <th>scaled_rawX_k1</th>\n",
       "      <th>scaled_rawX_k3</th>\n",
       "      <th>scaled_rawX_k7</th>\n",
       "      <th>scaled_rawX_rf</th>\n",
       "      <th>...</th>\n",
       "      <th>TRANSACTION_relAMT_month_11</th>\n",
       "      <th>C(CreditLimit_cat)[T.[30000, 40000)]</th>\n",
       "      <th>C(CreditLimit_cat)[T.[40000, 50000)]</th>\n",
       "      <th>TRANSACTION_logAMT_month_1</th>\n",
       "      <th>TRANSACTION_relAMT_month_7</th>\n",
       "      <th>C(CreditLimit_cat)[T.[60000, 70000)]</th>\n",
       "      <th>C(CreditLimit_cat)[T.[80000, 90000)]</th>\n",
       "      <th>TRANSACTION_relAMT_month_10</th>\n",
       "      <th>C(CreditLimit_cat)[T.[70000, 80000)]</th>\n",
       "      <th>C(CreditLimit_cat)[T.[50000, 60000)]</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.014050</td>\n",
       "      <td>...</td>\n",
       "      <td>0.094580</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.070319</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.097030</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.071429</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.008892</td>\n",
       "      <td>...</td>\n",
       "      <td>0.067919</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.086669</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.018088</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.083333</td>\n",
       "      <td>0.214286</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.035714</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.083333</td>\n",
       "      <td>0.142857</td>\n",
       "      <td>0.053366</td>\n",
       "      <td>...</td>\n",
       "      <td>0.070379</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.051178</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.052837</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.044550</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.116319</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.269638</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.250000</td>\n",
       "      <td>0.142857</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.107143</td>\n",
       "      <td>0.75</td>\n",
       "      <td>0.250000</td>\n",
       "      <td>0.178571</td>\n",
       "      <td>0.097735</td>\n",
       "      <td>...</td>\n",
       "      <td>0.044148</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.252020</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.027296</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 194 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   scaled_X90_k1  scaled_X90_k3  scaled_X90_k7  scaled_X45_k1  scaled_X45_k3  \\\n",
       "0            0.0       0.000000       0.000000            0.0            0.0   \n",
       "1            0.0       0.000000       0.071429            0.0            0.0   \n",
       "2            0.0       0.083333       0.214286            0.0            0.0   \n",
       "3            0.0       0.000000       0.000000            0.0            0.0   \n",
       "4            0.0       0.250000       0.142857            0.0            0.0   \n",
       "\n",
       "   scaled_X45_k7  scaled_rawX_k1  scaled_rawX_k3  scaled_rawX_k7  \\\n",
       "0       0.000000            0.00        0.000000        0.000000   \n",
       "1       0.000000            0.00        0.000000        0.000000   \n",
       "2       0.035714            0.00        0.083333        0.142857   \n",
       "3       0.000000            0.00        0.000000        0.000000   \n",
       "4       0.107143            0.75        0.250000        0.178571   \n",
       "\n",
       "   scaled_rawX_rf                  ...                   \\\n",
       "0        0.014050                  ...                    \n",
       "1        0.008892                  ...                    \n",
       "2        0.053366                  ...                    \n",
       "3        0.044550                  ...                    \n",
       "4        0.097735                  ...                    \n",
       "\n",
       "   TRANSACTION_relAMT_month_11  C(CreditLimit_cat)[T.[30000, 40000)]  \\\n",
       "0                     0.094580                                   0.0   \n",
       "1                     0.067919                                   0.0   \n",
       "2                     0.070379                                   0.0   \n",
       "3                     0.000000                                   0.0   \n",
       "4                     0.044148                                   0.0   \n",
       "\n",
       "   C(CreditLimit_cat)[T.[40000, 50000)] TRANSACTION_logAMT_month_1  \\\n",
       "0                                   0.0                        0.0   \n",
       "1                                   0.0                        0.0   \n",
       "2                                   0.0                        0.0   \n",
       "3                                   0.0                        0.0   \n",
       "4                                   0.0                        0.0   \n",
       "\n",
       "   TRANSACTION_relAMT_month_7  C(CreditLimit_cat)[T.[60000, 70000)]  \\\n",
       "0                    0.070319                                   0.0   \n",
       "1                    0.086669                                   0.0   \n",
       "2                    0.051178                                   0.0   \n",
       "3                    0.116319                                   0.0   \n",
       "4                    0.252020                                   0.0   \n",
       "\n",
       "   C(CreditLimit_cat)[T.[80000, 90000)]  TRANSACTION_relAMT_month_10  \\\n",
       "0                                   0.0                     0.097030   \n",
       "1                                   0.0                     0.018088   \n",
       "2                                   0.0                     0.052837   \n",
       "3                                   0.0                     0.269638   \n",
       "4                                   0.0                     0.027296   \n",
       "\n",
       "   C(CreditLimit_cat)[T.[70000, 80000)]  C(CreditLimit_cat)[T.[50000, 60000)]  \n",
       "0                                   0.0                                   0.0  \n",
       "1                                   0.0                                   0.0  \n",
       "2                                   0.0                                   0.0  \n",
       "3                                   0.0                                   0.0  \n",
       "4                                   0.0                                   0.0  \n",
       "\n",
       "[5 rows x 194 columns]"
      ]
     },
     "execution_count": 106,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "test_preds_scaled_plus_kpred_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 137,
   "metadata": {},
   "outputs": [],
   "source": [
    "np_scaled_predict_X90_df = pd.DataFrame(np_scaled_predict_X90)\n",
    "np_scaled_predict_X90_df.columns = list(X.iloc[:,top_indices90].columns.values)\n",
    "\n",
    "test_preds_scaled_plus_kpred_df = pd.merge(test_preds_df, np_scaled_predict_X90_df, left_index=True, right_index=True)\n",
    "\n",
    "X90_df = pd.DataFrame(np_scaled_X90)\n",
    "X90_df.columns = list(X.iloc[:,top_indices90].columns.values)\n",
    "\n",
    "scaled_X90_plus_kpred_df = pd.merge(train_preds_df, X90_df, left_index=True, right_index=True)\n",
    "\n",
    "#test_preds_scaled_plus_kpred_df\n",
    "#scaled_X45_plus_kpred_df.scaled_rawX_xgb\n",
    "\n",
    "#del np_scaled_predict_X90_df\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 172,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\ttrain-auc:0.889619+0.00122535\ttest-auc:0.884997+0.00803727\n",
      "[1]\ttrain-auc:0.89406+0.00210537\ttest-auc:0.889549+0.00595342\n",
      "[2]\ttrain-auc:0.895834+0.00150187\ttest-auc:0.890906+0.00561098\n",
      "[3]\ttrain-auc:0.896145+0.00150344\ttest-auc:0.891036+0.00530405\n",
      "[4]\ttrain-auc:0.896992+0.0015799\ttest-auc:0.891423+0.0053626\n",
      "[5]\ttrain-auc:0.897344+0.00153857\ttest-auc:0.891809+0.00509015\n",
      "[6]\ttrain-auc:0.897179+0.0013012\ttest-auc:0.891758+0.00498266\n",
      "[7]\ttrain-auc:0.897531+0.00123601\ttest-auc:0.892369+0.00542032\n",
      "[8]\ttrain-auc:0.897667+0.00131324\ttest-auc:0.892462+0.00536234\n",
      "[9]\ttrain-auc:0.897931+0.00131826\ttest-auc:0.892846+0.00503343\n",
      "[10]\ttrain-auc:0.89817+0.00118642\ttest-auc:0.89333+0.00497692\n",
      "[11]\ttrain-auc:0.898236+0.00126055\ttest-auc:0.893482+0.00500238\n",
      "[12]\ttrain-auc:0.898313+0.00129035\ttest-auc:0.893468+0.00488786\n",
      "[13]\ttrain-auc:0.898365+0.0012882\ttest-auc:0.893409+0.00489649\n",
      "[14]\ttrain-auc:0.898368+0.00129982\ttest-auc:0.89355+0.00474615\n",
      "[15]\ttrain-auc:0.898512+0.00122839\ttest-auc:0.893419+0.00466278\n",
      "[16]\ttrain-auc:0.898508+0.00120488\ttest-auc:0.893453+0.00466813\n",
      "[17]\ttrain-auc:0.898557+0.00120193\ttest-auc:0.893493+0.00468515\n",
      "[18]\ttrain-auc:0.898549+0.00118811\ttest-auc:0.893532+0.00456865\n",
      "[19]\ttrain-auc:0.898587+0.00115802\ttest-auc:0.893411+0.00470382\n",
      "[20]\ttrain-auc:0.898673+0.00111574\ttest-auc:0.893531+0.00473899\n",
      "[21]\ttrain-auc:0.898717+0.0010843\ttest-auc:0.893581+0.00470862\n",
      "[22]\ttrain-auc:0.898694+0.00112698\ttest-auc:0.893866+0.00452795\n",
      "[23]\ttrain-auc:0.898788+0.00115738\ttest-auc:0.893845+0.00455616\n",
      "[24]\ttrain-auc:0.898784+0.00115945\ttest-auc:0.894058+0.00461519\n",
      "[25]\ttrain-auc:0.898792+0.00116721\ttest-auc:0.89412+0.0046725\n",
      "[26]\ttrain-auc:0.89888+0.00116708\ttest-auc:0.894164+0.00477975\n",
      "[27]\ttrain-auc:0.89893+0.00115305\ttest-auc:0.894111+0.00481772\n",
      "[28]\ttrain-auc:0.898992+0.00106523\ttest-auc:0.894099+0.00480355\n",
      "[29]\ttrain-auc:0.898975+0.00111566\ttest-auc:0.894177+0.00494824\n",
      "[30]\ttrain-auc:0.899077+0.00114177\ttest-auc:0.894079+0.00490809\n",
      "[31]\ttrain-auc:0.89907+0.00114583\ttest-auc:0.894057+0.00497163\n",
      "[32]\ttrain-auc:0.899162+0.0010882\ttest-auc:0.894031+0.00496385\n",
      "[33]\ttrain-auc:0.899152+0.00109791\ttest-auc:0.894025+0.00496384\n",
      "[34]\ttrain-auc:0.899249+0.00115333\ttest-auc:0.893952+0.00511873\n",
      "[35]\ttrain-auc:0.899248+0.00118116\ttest-auc:0.894072+0.00523878\n",
      "[36]\ttrain-auc:0.899549+0.00105974\ttest-auc:0.894059+0.00531398\n",
      "[37]\ttrain-auc:0.899587+0.00109902\ttest-auc:0.894078+0.00528414\n",
      "[38]\ttrain-auc:0.899602+0.00107847\ttest-auc:0.894193+0.00515435\n",
      "[39]\ttrain-auc:0.899607+0.00108045\ttest-auc:0.894302+0.00527819\n",
      "[40]\ttrain-auc:0.899623+0.0010856\ttest-auc:0.894328+0.00528284\n",
      "[41]\ttrain-auc:0.899685+0.00116854\ttest-auc:0.894289+0.00531987\n",
      "[42]\ttrain-auc:0.899686+0.00116747\ttest-auc:0.894377+0.00523045\n",
      "[43]\ttrain-auc:0.899683+0.00117211\ttest-auc:0.894384+0.00523852\n",
      "[44]\ttrain-auc:0.899751+0.00118327\ttest-auc:0.894338+0.00521433\n",
      "[45]\ttrain-auc:0.899778+0.00119893\ttest-auc:0.89436+0.00522876\n",
      "[46]\ttrain-auc:0.899766+0.00118716\ttest-auc:0.894308+0.00528558\n",
      "[47]\ttrain-auc:0.899837+0.00117778\ttest-auc:0.894355+0.00531199\n",
      "[48]\ttrain-auc:0.899905+0.00107084\ttest-auc:0.894339+0.00533375\n",
      "[49]\ttrain-auc:0.899936+0.00107027\ttest-auc:0.89433+0.00527844\n",
      "[50]\ttrain-auc:0.899982+0.00104306\ttest-auc:0.894339+0.00527899\n",
      "[51]\ttrain-auc:0.900001+0.00102048\ttest-auc:0.894316+0.00523649\n",
      "[52]\ttrain-auc:0.900086+0.000997217\ttest-auc:0.894296+0.00525373\n",
      "[53]\ttrain-auc:0.900151+0.000992236\ttest-auc:0.894271+0.00522214\n",
      "[54]\ttrain-auc:0.900134+0.000996683\ttest-auc:0.894307+0.00527849\n",
      "[55]\ttrain-auc:0.900159+0.000981992\ttest-auc:0.894304+0.0052632\n",
      "[56]\ttrain-auc:0.90023+0.000974997\ttest-auc:0.894287+0.00526572\n",
      "[57]\ttrain-auc:0.900245+0.000967589\ttest-auc:0.894209+0.00519104\n",
      "[58]\ttrain-auc:0.900247+0.000965005\ttest-auc:0.894227+0.00519875\n",
      "[59]\ttrain-auc:0.900256+0.00096902\ttest-auc:0.894293+0.00521044\n",
      "[60]\ttrain-auc:0.900283+0.000974265\ttest-auc:0.894313+0.00518823\n",
      "[61]\ttrain-auc:0.900414+0.000942355\ttest-auc:0.89431+0.00505236\n",
      "[62]\ttrain-auc:0.90045+0.000937216\ttest-auc:0.894307+0.00507416\n",
      "[63]\ttrain-auc:0.900476+0.000935736\ttest-auc:0.894301+0.0050496\n",
      "[64]\ttrain-auc:0.90055+0.00096532\ttest-auc:0.89445+0.0049332\n",
      "[65]\ttrain-auc:0.90056+0.000961451\ttest-auc:0.894441+0.00491672\n",
      "[66]\ttrain-auc:0.900574+0.000960938\ttest-auc:0.894413+0.00490371\n",
      "[67]\ttrain-auc:0.90057+0.000964109\ttest-auc:0.894507+0.00503763\n",
      "[68]\ttrain-auc:0.900646+0.000899879\ttest-auc:0.894587+0.00511857\n",
      "[69]\ttrain-auc:0.900695+0.000911525\ttest-auc:0.894599+0.00513837\n",
      "[70]\ttrain-auc:0.900813+0.000793611\ttest-auc:0.894554+0.00513894\n",
      "[71]\ttrain-auc:0.900871+0.000859415\ttest-auc:0.894517+0.00513329\n",
      "[72]\ttrain-auc:0.900881+0.000864991\ttest-auc:0.894573+0.00513763\n",
      "[73]\ttrain-auc:0.901073+0.000669409\ttest-auc:0.894712+0.00529635\n",
      "[74]\ttrain-auc:0.901061+0.000682797\ttest-auc:0.894686+0.00523645\n",
      "[75]\ttrain-auc:0.901083+0.000674027\ttest-auc:0.894657+0.00523352\n",
      "[76]\ttrain-auc:0.901083+0.000680349\ttest-auc:0.894719+0.00512807\n",
      "[77]\ttrain-auc:0.901174+0.000645383\ttest-auc:0.894684+0.00510378\n",
      "[78]\ttrain-auc:0.901198+0.000644575\ttest-auc:0.894673+0.00510576\n",
      "[79]\ttrain-auc:0.901207+0.000648817\ttest-auc:0.894674+0.00511185\n",
      "[80]\ttrain-auc:0.901217+0.000658651\ttest-auc:0.894665+0.00512208\n",
      "[81]\ttrain-auc:0.901311+0.000607834\ttest-auc:0.894695+0.00517306\n",
      "[82]\ttrain-auc:0.901332+0.000584191\ttest-auc:0.894684+0.0051612\n",
      "[83]\ttrain-auc:0.901366+0.000575399\ttest-auc:0.894664+0.00515808\n",
      "[84]\ttrain-auc:0.901365+0.000584677\ttest-auc:0.894669+0.00516458\n",
      "[85]\ttrain-auc:0.901428+0.000567205\ttest-auc:0.894672+0.00514428\n",
      "[86]\ttrain-auc:0.901472+0.000560558\ttest-auc:0.894687+0.00516087\n",
      "[87]\ttrain-auc:0.901573+0.000472745\ttest-auc:0.894667+0.00513778\n",
      "[88]\ttrain-auc:0.901584+0.000469797\ttest-auc:0.894658+0.00512451\n",
      "[89]\ttrain-auc:0.901587+0.000473876\ttest-auc:0.894663+0.00510574\n",
      "[90]\ttrain-auc:0.901619+0.000469843\ttest-auc:0.894639+0.00507528\n",
      "[91]\ttrain-auc:0.90178+0.000563808\ttest-auc:0.894679+0.00497983\n",
      "[92]\ttrain-auc:0.901801+0.000567834\ttest-auc:0.89468+0.00498809\n",
      "[93]\ttrain-auc:0.901823+0.000576024\ttest-auc:0.89468+0.00496573\n",
      "[94]\ttrain-auc:0.901926+0.000544831\ttest-auc:0.894579+0.00495329\n",
      "[95]\ttrain-auc:0.901947+0.00053186\ttest-auc:0.894578+0.00495062\n",
      "[96]\ttrain-auc:0.901983+0.00049833\ttest-auc:0.894534+0.00497338\n",
      "[97]\ttrain-auc:0.902041+0.000482935\ttest-auc:0.894523+0.00498793\n",
      "[98]\ttrain-auc:0.902052+0.000471157\ttest-auc:0.89454+0.00496577\n",
      "[99]\ttrain-auc:0.902064+0.000479583\ttest-auc:0.894541+0.00496058\n",
      "[100]\ttrain-auc:0.902193+0.000646512\ttest-auc:0.894504+0.00498946\n",
      "[101]\ttrain-auc:0.902225+0.000682725\ttest-auc:0.894507+0.00494616\n",
      "[102]\ttrain-auc:0.902227+0.000691559\ttest-auc:0.894484+0.00493085\n",
      "[103]\ttrain-auc:0.902318+0.000789728\ttest-auc:0.894527+0.00484951\n",
      "[104]\ttrain-auc:0.902335+0.0007809\ttest-auc:0.89455+0.00482341\n",
      "[105]\ttrain-auc:0.902349+0.000780839\ttest-auc:0.894561+0.0048297\n",
      "[106]\ttrain-auc:0.902356+0.000785839\ttest-auc:0.894555+0.00484505\n",
      "[107]\ttrain-auc:0.902371+0.000776688\ttest-auc:0.8946+0.00487272\n",
      "[108]\ttrain-auc:0.902387+0.000762756\ttest-auc:0.894639+0.00490307\n",
      "[109]\ttrain-auc:0.902409+0.000766019\ttest-auc:0.894658+0.0049534\n",
      "[110]\ttrain-auc:0.90248+0.000787194\ttest-auc:0.894648+0.00498809\n",
      "[111]\ttrain-auc:0.902487+0.000789601\ttest-auc:0.894663+0.00502967\n",
      "[112]\ttrain-auc:0.902511+0.000801598\ttest-auc:0.894661+0.00503294\n",
      "[113]\ttrain-auc:0.902563+0.000821194\ttest-auc:0.894666+0.00503199\n",
      "[114]\ttrain-auc:0.902561+0.000838852\ttest-auc:0.89466+0.00501284\n",
      "[115]\ttrain-auc:0.902559+0.000858447\ttest-auc:0.894634+0.00501728\n",
      "[116]\ttrain-auc:0.902607+0.000839409\ttest-auc:0.894632+0.00500311\n",
      "[117]\ttrain-auc:0.902605+0.000856587\ttest-auc:0.894738+0.00492791\n",
      "[118]\ttrain-auc:0.902621+0.000859278\ttest-auc:0.894722+0.00493556\n",
      "[119]\ttrain-auc:0.902651+0.000831376\ttest-auc:0.894725+0.00493604\n",
      "[120]\ttrain-auc:0.902746+0.000790604\ttest-auc:0.894682+0.00494902\n",
      "[121]\ttrain-auc:0.902824+0.000848145\ttest-auc:0.894674+0.00500508\n",
      "[122]\ttrain-auc:0.902847+0.000847634\ttest-auc:0.894688+0.00502657\n",
      "[123]\ttrain-auc:0.902868+0.000846085\ttest-auc:0.894674+0.00498618\n",
      "[124]\ttrain-auc:0.902867+0.000824103\ttest-auc:0.894582+0.00506277\n",
      "[125]\ttrain-auc:0.902926+0.000794273\ttest-auc:0.894551+0.00507802\n",
      "[126]\ttrain-auc:0.902939+0.000778094\ttest-auc:0.894575+0.00512964\n",
      "[127]\ttrain-auc:0.902995+0.0008081\ttest-auc:0.89467+0.00500328\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[128]\ttrain-auc:0.90302+0.00081712\ttest-auc:0.89469+0.00501535\n",
      "[129]\ttrain-auc:0.903071+0.000822953\ttest-auc:0.89477+0.00506155\n",
      "[130]\ttrain-auc:0.903112+0.000822653\ttest-auc:0.89509+0.00517388\n",
      "[131]\ttrain-auc:0.903129+0.000814254\ttest-auc:0.895101+0.00520612\n",
      "[132]\ttrain-auc:0.903144+0.000823008\ttest-auc:0.895086+0.0052121\n",
      "[133]\ttrain-auc:0.903149+0.000818766\ttest-auc:0.895057+0.00523331\n",
      "[134]\ttrain-auc:0.903152+0.000815002\ttest-auc:0.89506+0.00522617\n",
      "[135]\ttrain-auc:0.903189+0.000812836\ttest-auc:0.895045+0.00523492\n",
      "[136]\ttrain-auc:0.903225+0.000809942\ttest-auc:0.895091+0.00518753\n",
      "[137]\ttrain-auc:0.903238+0.000808583\ttest-auc:0.895112+0.00517584\n",
      "[138]\ttrain-auc:0.903254+0.000796898\ttest-auc:0.895091+0.00516178\n",
      "[139]\ttrain-auc:0.903296+0.000810544\ttest-auc:0.895067+0.00513443\n",
      "[140]\ttrain-auc:0.903373+0.000777705\ttest-auc:0.89504+0.00513514\n",
      "[141]\ttrain-auc:0.903379+0.000789559\ttest-auc:0.895052+0.0051257\n",
      "[142]\ttrain-auc:0.903415+0.000790793\ttest-auc:0.895036+0.00513154\n",
      "[143]\ttrain-auc:0.903462+0.000781396\ttest-auc:0.895055+0.00509918\n",
      "[144]\ttrain-auc:0.903494+0.00079184\ttest-auc:0.895026+0.00513004\n",
      "[145]\ttrain-auc:0.903534+0.000778952\ttest-auc:0.89508+0.00513928\n",
      "[146]\ttrain-auc:0.903562+0.000789327\ttest-auc:0.895079+0.00515483\n",
      "[147]\ttrain-auc:0.903576+0.00077794\ttest-auc:0.895087+0.00515865\n",
      "[148]\ttrain-auc:0.903581+0.00077336\ttest-auc:0.895103+0.00514513\n",
      "[149]\ttrain-auc:0.903622+0.000754393\ttest-auc:0.895097+0.00516138\n",
      "[150]\ttrain-auc:0.903781+0.000926194\ttest-auc:0.895257+0.00492912\n",
      "[151]\ttrain-auc:0.903804+0.000917887\ttest-auc:0.895261+0.00492239\n",
      "[152]\ttrain-auc:0.903833+0.000915708\ttest-auc:0.895367+0.00497475\n",
      "[153]\ttrain-auc:0.903859+0.000897278\ttest-auc:0.895507+0.00509424\n",
      "[154]\ttrain-auc:0.903872+0.00091184\ttest-auc:0.895531+0.0050661\n",
      "[155]\ttrain-auc:0.903888+0.000911296\ttest-auc:0.895526+0.00504266\n",
      "[156]\ttrain-auc:0.90392+0.000922037\ttest-auc:0.895525+0.00503223\n",
      "[157]\ttrain-auc:0.903938+0.000922679\ttest-auc:0.895559+0.00502274\n",
      "[158]\ttrain-auc:0.903973+0.000945218\ttest-auc:0.895594+0.00495274\n",
      "[159]\ttrain-auc:0.90402+0.00100683\ttest-auc:0.895567+0.00499373\n",
      "[160]\ttrain-auc:0.904044+0.00102533\ttest-auc:0.895606+0.00494266\n",
      "[161]\ttrain-auc:0.904042+0.00101162\ttest-auc:0.895594+0.00500372\n",
      "[162]\ttrain-auc:0.904062+0.00101959\ttest-auc:0.895598+0.00502226\n",
      "[163]\ttrain-auc:0.904073+0.00102348\ttest-auc:0.895592+0.00505159\n",
      "[164]\ttrain-auc:0.904102+0.000973956\ttest-auc:0.89566+0.00502756\n",
      "[165]\ttrain-auc:0.904124+0.000973709\ttest-auc:0.895637+0.00501202\n",
      "[166]\ttrain-auc:0.904141+0.00097471\ttest-auc:0.895646+0.00501923\n",
      "[167]\ttrain-auc:0.904142+0.000976942\ttest-auc:0.895642+0.00501408\n",
      "[168]\ttrain-auc:0.904162+0.000978073\ttest-auc:0.895647+0.00503427\n",
      "[169]\ttrain-auc:0.904182+0.000987868\ttest-auc:0.895653+0.00500534\n",
      "[170]\ttrain-auc:0.904202+0.000987073\ttest-auc:0.895664+0.00499523\n",
      "[171]\ttrain-auc:0.904233+0.000974323\ttest-auc:0.895643+0.00501093\n",
      "[172]\ttrain-auc:0.904251+0.00096653\ttest-auc:0.8957+0.0050206\n",
      "[173]\ttrain-auc:0.904268+0.000975573\ttest-auc:0.89576+0.00491771\n",
      "[174]\ttrain-auc:0.90428+0.000985317\ttest-auc:0.895783+0.00490352\n",
      "[175]\ttrain-auc:0.904304+0.000970962\ttest-auc:0.895779+0.00488192\n",
      "[176]\ttrain-auc:0.904304+0.000966377\ttest-auc:0.895771+0.0049036\n",
      "[177]\ttrain-auc:0.904316+0.000958964\ttest-auc:0.895786+0.00492115\n",
      "[178]\ttrain-auc:0.904312+0.000959606\ttest-auc:0.895793+0.00488201\n",
      "[179]\ttrain-auc:0.904331+0.000970687\ttest-auc:0.895801+0.00493167\n",
      "[180]\ttrain-auc:0.904344+0.000965091\ttest-auc:0.895805+0.0049103\n",
      "[181]\ttrain-auc:0.904364+0.000958346\ttest-auc:0.895816+0.00488566\n",
      "[182]\ttrain-auc:0.904373+0.0009607\ttest-auc:0.895837+0.00489912\n",
      "[183]\ttrain-auc:0.904393+0.000976749\ttest-auc:0.89584+0.00488045\n",
      "[184]\ttrain-auc:0.904404+0.000990037\ttest-auc:0.895883+0.00488201\n",
      "[185]\ttrain-auc:0.904441+0.000977691\ttest-auc:0.895915+0.00484205\n",
      "[186]\ttrain-auc:0.90446+0.000969846\ttest-auc:0.895904+0.00484412\n",
      "[187]\ttrain-auc:0.904486+0.000971298\ttest-auc:0.89592+0.00482604\n",
      "[188]\ttrain-auc:0.9045+0.000967352\ttest-auc:0.895915+0.00482951\n",
      "[189]\ttrain-auc:0.904536+0.000970929\ttest-auc:0.895886+0.00483474\n",
      "[190]\ttrain-auc:0.904549+0.00096468\ttest-auc:0.895881+0.00482196\n",
      "[191]\ttrain-auc:0.904585+0.000945111\ttest-auc:0.895898+0.00482507\n",
      "[192]\ttrain-auc:0.904598+0.000949099\ttest-auc:0.895873+0.00482864\n",
      "[193]\ttrain-auc:0.904607+0.000947436\ttest-auc:0.895875+0.00480898\n",
      "[194]\ttrain-auc:0.904627+0.00095003\ttest-auc:0.895863+0.00482132\n",
      "[195]\ttrain-auc:0.904642+0.000959819\ttest-auc:0.895844+0.00482449\n",
      "[196]\ttrain-auc:0.904686+0.000971086\ttest-auc:0.895838+0.00483827\n",
      "[197]\ttrain-auc:0.90469+0.000972523\ttest-auc:0.89582+0.00486935\n",
      "[198]\ttrain-auc:0.9047+0.00096832\ttest-auc:0.895816+0.00486708\n",
      "[199]\ttrain-auc:0.904725+0.000968917\ttest-auc:0.89584+0.00485217\n",
      "[200]\ttrain-auc:0.904744+0.000962266\ttest-auc:0.895814+0.00482495\n",
      "[201]\ttrain-auc:0.904771+0.000983519\ttest-auc:0.895847+0.0047774\n",
      "[202]\ttrain-auc:0.904791+0.000994201\ttest-auc:0.895877+0.00478756\n",
      "[203]\ttrain-auc:0.904802+0.000987954\ttest-auc:0.895891+0.0047601\n",
      "[204]\ttrain-auc:0.904823+0.000996625\ttest-auc:0.895897+0.00477222\n",
      "[205]\ttrain-auc:0.904852+0.00100294\ttest-auc:0.895915+0.00476344\n",
      "[206]\ttrain-auc:0.904893+0.000992057\ttest-auc:0.895912+0.00474052\n",
      "[207]\ttrain-auc:0.904905+0.000979916\ttest-auc:0.895912+0.00475357\n",
      "[208]\ttrain-auc:0.904938+0.000976916\ttest-auc:0.895916+0.00473276\n",
      "[209]\ttrain-auc:0.904967+0.000998877\ttest-auc:0.895887+0.00478591\n",
      "[210]\ttrain-auc:0.905007+0.00101921\ttest-auc:0.895843+0.00480731\n",
      "[211]\ttrain-auc:0.905015+0.00102026\ttest-auc:0.895897+0.00485029\n",
      "[212]\ttrain-auc:0.905065+0.00104268\ttest-auc:0.895855+0.00488615\n",
      "[213]\ttrain-auc:0.905082+0.00104117\ttest-auc:0.895859+0.00487384\n",
      "[214]\ttrain-auc:0.905107+0.0010462\ttest-auc:0.895915+0.00486313\n",
      "[215]\ttrain-auc:0.905119+0.00104613\ttest-auc:0.895911+0.00485841\n",
      "[216]\ttrain-auc:0.905145+0.00105619\ttest-auc:0.895874+0.00488331\n",
      "[217]\ttrain-auc:0.905159+0.00105864\ttest-auc:0.895848+0.00488333\n",
      "[218]\ttrain-auc:0.905177+0.00105977\ttest-auc:0.895921+0.00485224\n",
      "[219]\ttrain-auc:0.905208+0.0010408\ttest-auc:0.895896+0.00484949\n",
      "[220]\ttrain-auc:0.905236+0.00102671\ttest-auc:0.895888+0.0048656\n",
      "[221]\ttrain-auc:0.905263+0.00105025\ttest-auc:0.895887+0.00492616\n",
      "[222]\ttrain-auc:0.90528+0.00104238\ttest-auc:0.895867+0.00493167\n",
      "[223]\ttrain-auc:0.905286+0.00103423\ttest-auc:0.89584+0.00494571\n",
      "[224]\ttrain-auc:0.905303+0.00104027\ttest-auc:0.895847+0.00491947\n",
      "[225]\ttrain-auc:0.905316+0.00103456\ttest-auc:0.895842+0.00494817\n",
      "[226]\ttrain-auc:0.905342+0.00102862\ttest-auc:0.895819+0.00496342\n",
      "[227]\ttrain-auc:0.905359+0.00103139\ttest-auc:0.895811+0.00496399\n",
      "[228]\ttrain-auc:0.905376+0.00104689\ttest-auc:0.895821+0.00494285\n",
      "[229]\ttrain-auc:0.905396+0.00104806\ttest-auc:0.895789+0.00495576\n",
      "[230]\ttrain-auc:0.905404+0.00105378\ttest-auc:0.895747+0.00496311\n",
      "[231]\ttrain-auc:0.905427+0.00104709\ttest-auc:0.895763+0.00493666\n",
      "[232]\ttrain-auc:0.905464+0.00104733\ttest-auc:0.895743+0.00492829\n",
      "[233]\ttrain-auc:0.905481+0.00104289\ttest-auc:0.895736+0.00491891\n",
      "[234]\ttrain-auc:0.905516+0.00105002\ttest-auc:0.895736+0.00492201\n",
      "[235]\ttrain-auc:0.905534+0.00104792\ttest-auc:0.895753+0.00490111\n",
      "[236]\ttrain-auc:0.905556+0.00105516\ttest-auc:0.895726+0.00490636\n",
      "[237]\ttrain-auc:0.905578+0.00105241\ttest-auc:0.895706+0.00490408\n",
      "[238]\ttrain-auc:0.905601+0.00104531\ttest-auc:0.895769+0.00483051\n",
      "[239]\ttrain-auc:0.905639+0.00103543\ttest-auc:0.895762+0.00481369\n",
      "[240]\ttrain-auc:0.905666+0.00103369\ttest-auc:0.895725+0.00481975\n",
      "[241]\ttrain-auc:0.905684+0.00104814\ttest-auc:0.895752+0.00480603\n",
      "[242]\ttrain-auc:0.905709+0.00103176\ttest-auc:0.895724+0.00482892\n",
      "[243]\ttrain-auc:0.905741+0.00103512\ttest-auc:0.895698+0.00480185\n",
      "[244]\ttrain-auc:0.905758+0.00103427\ttest-auc:0.895663+0.00480616\n",
      "[245]\ttrain-auc:0.905789+0.00101913\ttest-auc:0.895649+0.00478031\n",
      "[246]\ttrain-auc:0.90582+0.00104563\ttest-auc:0.895625+0.00482554\n",
      "[247]\ttrain-auc:0.905845+0.00105765\ttest-auc:0.89561+0.00486203\n",
      "[248]\ttrain-auc:0.905865+0.00106011\ttest-auc:0.895606+0.00488327\n",
      "[249]\ttrain-auc:0.905897+0.00106293\ttest-auc:0.895596+0.00488428\n",
      "[250]\ttrain-auc:0.905924+0.00108883\ttest-auc:0.895594+0.00489617\n",
      "[251]\ttrain-auc:0.905941+0.00108835\ttest-auc:0.895623+0.0048879\n",
      "[252]\ttrain-auc:0.905965+0.00109445\ttest-auc:0.895596+0.00490527\n",
      "[253]\ttrain-auc:0.905997+0.00109358\ttest-auc:0.895615+0.00493239\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[254]\ttrain-auc:0.906016+0.00107938\ttest-auc:0.895586+0.00494488\n",
      "[255]\ttrain-auc:0.906038+0.00108762\ttest-auc:0.895595+0.00493195\n",
      "[256]\ttrain-auc:0.906056+0.00109428\ttest-auc:0.895565+0.00494445\n",
      "[257]\ttrain-auc:0.906086+0.00110567\ttest-auc:0.895606+0.00488071\n",
      "[258]\ttrain-auc:0.906116+0.00110327\ttest-auc:0.895585+0.0048734\n",
      "[259]\ttrain-auc:0.906141+0.00110118\ttest-auc:0.895558+0.00488118\n",
      "[260]\ttrain-auc:0.906156+0.00110421\ttest-auc:0.895552+0.00490453\n",
      "[261]\ttrain-auc:0.90618+0.0011057\ttest-auc:0.895572+0.00492676\n",
      "[262]\ttrain-auc:0.906218+0.0011159\ttest-auc:0.895545+0.00490579\n",
      "[263]\ttrain-auc:0.90623+0.00111226\ttest-auc:0.895564+0.00489706\n",
      "[264]\ttrain-auc:0.906256+0.00111716\ttest-auc:0.895548+0.00490609\n",
      "[265]\ttrain-auc:0.906265+0.001117\ttest-auc:0.895542+0.00491344\n",
      "[266]\ttrain-auc:0.906284+0.00111791\ttest-auc:0.895538+0.00492213\n",
      "[267]\ttrain-auc:0.906309+0.00112587\ttest-auc:0.89557+0.00494469\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "c:\\users\\marcp\\appdata\\local\\programs\\python\\python36\\lib\\site-packages\\sklearn\\preprocessing\\label.py:151: DeprecationWarning: The truth value of an empty array is ambiguous. Returning False, but in future this will result in an error. Use `array.size > 0` to check that an array is not empty.\n",
      "  if diff:\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Model Report\n",
      "Model best iteration : 219 with an auc score of : 0.8959208000000001\n",
      "Accuracy : 0.8661344537815127\n",
      "AUC Score (Train): 0.9034110734861696\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "xgb_k_scaledX90 = XGBClassifier(\n",
    " learning_rate =0.01,\n",
    " n_estimators=3000,\n",
    " max_depth=3,\n",
    " min_child_weight=4,\n",
    " gamma=0.3,\n",
    " subsample=0.65,\n",
    " colsample_bytree=0.75,\n",
    " reg_alpha=0.00009,\n",
    " objective= 'binary:logistic',\n",
    " nthread=2,\n",
    " scale_pos_weight=1)\n",
    "\n",
    "modelfit(xgb_k_scaledX90, scaled_X90_plus_kpred_df, y, predictors)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {},
   "outputs": [],
   "source": [
    "soumission12 = xgb_k_scaledX45.predict_proba(test_preds_scaled_plus_kpred_df.values)\n",
    "\n",
    "np.savetxt(\"Sub_12.csv\", xgb_k_scaledX45.columns, delimiter=\",\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 193,
   "metadata": {},
   "outputs": [],
   "source": [
    "feat_list = list(feat_imp.index.str.replace('f',''))\n",
    "new_feat_list = [int(x)+1 for x in feat_list]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 194,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['scaled_rawX_xgb', 'scaled_X_nn', 'scaled_X_regr', 'scaled_X_lgb',\n",
       "       'CurrentTotalBalance_rel_month_9', 'TRANSACTION_logAMT_month_10',\n",
       "       'CurrentTotalBalance_rel_month_1',\n",
       "       'CurrentTotalBalance_rel_month_13', 'DelqCycle_month_11',\n",
       "       'CurrentTotalBalance_rel_month_7', 'DelqCycle_std',\n",
       "       'CurrentTotalBalance_rel_month_8', 'DelqCycle_month_2',\n",
       "       'DelqCycle_month_3', 'CurrentTotalBalance_rel_month_6',\n",
       "       'CurrentTotalBalance_rel_month_12', 'DelqCycle_month_8',\n",
       "       'DelqCycle_month_9', 'CurrentTotalBalance_sign_month_12',\n",
       "       'CurrentTotalBalance_rel_month_3',\n",
       "       'CurrentTotalBalance_rel_month_11', 'DelqCycle_month_7',\n",
       "       'CurrentTotalBalance_log_month_11',\n",
       "       'CurrentTotalBalance_rel_month_2', 'TRANSACTION_relAMT_month_13',\n",
       "       'TRANSACTION_logAMT_month_13',\n",
       "       'C(CreditLimit_cat)[T.[20000, 30000)]',\n",
       "       'TRANSACTION_logAMT_month_7', 'TRANSACTION_logAMT_month_2',\n",
       "       'C(CreditLimit_cat)[T.[30000, 40000)]',\n",
       "       'CurrentTotalBalance_rel_month_10',\n",
       "       'CurrentTotalBalance_log_month_1', 'DelqCycle_avg',\n",
       "       'TRANSACTION_logAMT_month_4', 'CurrentTotalBalance_log_month_13',\n",
       "       'DelqCycle_month_12', 'CurrentTotalBalance_avg_log',\n",
       "       'TRANSACTION_relAMT_month_12', 'scaled_X45_k1',\n",
       "       'CurrentTotalBalance_sign_month_1', 'TRANSACTION_relAMT_month_9',\n",
       "       'CurrentTotalBalance_log_month_2', 'TRANSACTION_logAMT_month_9',\n",
       "       'C(CreditLimit_cat)[T.[60000, 70000)]',\n",
       "       'CurrentTotalBalance_rel_month_4',\n",
       "       'CurrentTotalBalance_log_month_5', 'DelqCycle_month_13',\n",
       "       'TRANSACTION_logAMT_month_3', 'CurrentTotalBalance_log_month_4',\n",
       "       'C(CreditLimit_cat)[T.[10000, 20000)]',\n",
       "       'CurrentTotalBalance_sign_month_10',\n",
       "       'CurrentTotalBalance_sign_month_4', 'DelqCycle_month_5',\n",
       "       'TRANSACTION_AMT_avg_log', 'TRANSACTION_logAMT_month_12',\n",
       "       'DelqCycle_month_10', 'CurrentTotalBalance_log_month_3',\n",
       "       'scaled_rawX_rf', 'DelqCycle_month_1', 'CreditLimit_log',\n",
       "       'TRANSACTION_relAMT_month_11', 'CurrentTotalBalance_log_month_12',\n",
       "       'scaled_rawX_k3', 'scaled_rawX_k1',\n",
       "       'CurrentTotalBalance_rel_month_5', 'scaled_X90_k7',\n",
       "       'CurrentTotalBalance_log_month_9',\n",
       "       'C(CreditLimit_cat)[T.[70000, 80000)]',\n",
       "       'TRANSACTION_logAMT_month_8'], dtype=object)"
      ]
     },
     "execution_count": 194,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "test_preds_scaled_plus_kpred_df.columns.get_values()[[new_feat_list]]\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 145,
   "metadata": {},
   "outputs": [
    {
     "ename": "IndexError",
     "evalue": "index 372 is out of bounds for axis 1 with size 104",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mIndexError\u001b[0m                                Traceback (most recent call last)",
      "\u001b[1;32m<ipython-input-145-3ed72cc29a8e>\u001b[0m in \u001b[0;36m<module>\u001b[1;34m()\u001b[0m\n\u001b[0;32m      1\u001b[0m \u001b[1;31m#feat_imprtance = xgb_k_scaledX90.get_booster().get_score(importance_type='weight').sort_values(ascending=False)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m----> 2\u001b[1;33m \u001b[0mtest_preds_scaled_plus_kpred_df\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mcolumns\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mget_values\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m[\u001b[0m\u001b[1;33m[\u001b[0m\u001b[0mfeat_imp\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[1;31mIndexError\u001b[0m: index 372 is out of bounds for axis 1 with size 104"
     ]
    }
   ],
   "source": [
    "#feat_imprtance = xgb_k_scaledX90.get_booster().get_score(importance_type='weight').sort_values(ascending=False)\n",
    "test_preds_scaled_plus_kpred_df.columns.get_values()[[feat_imp]]"
   ]
  },
  {
   "cell_type": "raw",
   "metadata": {},
   "source": [
    "#Avec KNN+RF+XGB (soumission 9)\n",
    "Model Report\n",
    "Model best iteration : 104 with an auc score of : 0.8951568\n",
    "Accuracy : 0.8639495798319328\n",
    "AUC Score (Train): 0.8998348553166232\n",
    "\n",
    "\n",
    "#Avec KNN+RF+XGB+REG\n",
    "Model Report\n",
    "Model best iteration : 144 with an auc score of : 0.8954608000000001\n",
    "Accuracy : 0.8642016806722689\n",
    "AUC Score (Train): 0.9012704993942446\n",
    "\n",
    "\n",
    "#Avec KNN+RF+XGB+REG+LGB\n",
    "Model Report\n",
    "Model best iteration : 291 with an auc score of : 0.8960108\n",
    "Accuracy : 0.8657142857142858\n",
    "AUC Score (Train): 0.9043514102833486\n",
    "\n",
    "\n",
    "#Avec KNN+RF+XGB+REG+LGB+NN"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 98,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "      <th>2</th>\n",
       "      <th>3</th>\n",
       "      <th>4</th>\n",
       "      <th>5</th>\n",
       "      <th>6</th>\n",
       "      <th>7</th>\n",
       "      <th>8</th>\n",
       "      <th>9</th>\n",
       "      <th>...</th>\n",
       "      <th>TRANSACTION_relAMT_month_11</th>\n",
       "      <th>C(CreditLimit_cat)[T.[30000, 40000)]</th>\n",
       "      <th>C(CreditLimit_cat)[T.[40000, 50000)]</th>\n",
       "      <th>TRANSACTION_logAMT_month_1</th>\n",
       "      <th>TRANSACTION_relAMT_month_7</th>\n",
       "      <th>C(CreditLimit_cat)[T.[60000, 70000)]</th>\n",
       "      <th>C(CreditLimit_cat)[T.[80000, 90000)]</th>\n",
       "      <th>TRANSACTION_relAMT_month_10</th>\n",
       "      <th>C(CreditLimit_cat)[T.[70000, 80000)]</th>\n",
       "      <th>C(CreditLimit_cat)[T.[50000, 60000)]</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.043633</td>\n",
       "      <td>0.025436</td>\n",
       "      <td>0.062999</td>\n",
       "      <td>0.041772</td>\n",
       "      <td>0.048274</td>\n",
       "      <td>0.151397</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.109058</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.094580</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.070319</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.097030</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.033057</td>\n",
       "      <td>0.030712</td>\n",
       "      <td>0.004601</td>\n",
       "      <td>0.011682</td>\n",
       "      <td>0.018198</td>\n",
       "      <td>0.017691</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.052618</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.067919</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.086669</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.018088</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.113044</td>\n",
       "      <td>0.082782</td>\n",
       "      <td>0.112237</td>\n",
       "      <td>0.086186</td>\n",
       "      <td>0.101112</td>\n",
       "      <td>0.131079</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.252101</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.070379</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.051178</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.052837</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.001131</td>\n",
       "      <td>0.000805</td>\n",
       "      <td>0.000182</td>\n",
       "      <td>0.002380</td>\n",
       "      <td>0.019078</td>\n",
       "      <td>0.010551</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.009433</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.116319</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.269638</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.109279</td>\n",
       "      <td>0.089882</td>\n",
       "      <td>0.166314</td>\n",
       "      <td>0.099849</td>\n",
       "      <td>0.136433</td>\n",
       "      <td>0.157440</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.349362</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.044148</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.252020</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.027296</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 180 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "          0         1         2         3         4         5    6         7  \\\n",
       "0  0.043633  0.025436  0.062999  0.041772  0.048274  0.151397  0.0  0.109058   \n",
       "1  0.033057  0.030712  0.004601  0.011682  0.018198  0.017691  0.0  0.052618   \n",
       "2  0.113044  0.082782  0.112237  0.086186  0.101112  0.131079  0.0  0.252101   \n",
       "3  0.001131  0.000805  0.000182  0.002380  0.019078  0.010551  0.0  0.009433   \n",
       "4  0.109279  0.089882  0.166314  0.099849  0.136433  0.157440  0.0  0.349362   \n",
       "\n",
       "     8    9                  ...                   \\\n",
       "0  0.0  0.0                  ...                    \n",
       "1  0.0  0.0                  ...                    \n",
       "2  0.0  0.0                  ...                    \n",
       "3  0.0  0.0                  ...                    \n",
       "4  0.0  0.0                  ...                    \n",
       "\n",
       "   TRANSACTION_relAMT_month_11  C(CreditLimit_cat)[T.[30000, 40000)]  \\\n",
       "0                     0.094580                                   0.0   \n",
       "1                     0.067919                                   0.0   \n",
       "2                     0.070379                                   0.0   \n",
       "3                     0.000000                                   0.0   \n",
       "4                     0.044148                                   0.0   \n",
       "\n",
       "   C(CreditLimit_cat)[T.[40000, 50000)]  TRANSACTION_logAMT_month_1  \\\n",
       "0                                   0.0                         0.0   \n",
       "1                                   0.0                         0.0   \n",
       "2                                   0.0                         0.0   \n",
       "3                                   0.0                         0.0   \n",
       "4                                   0.0                         0.0   \n",
       "\n",
       "   TRANSACTION_relAMT_month_7  C(CreditLimit_cat)[T.[60000, 70000)]  \\\n",
       "0                    0.070319                                   0.0   \n",
       "1                    0.086669                                   0.0   \n",
       "2                    0.051178                                   0.0   \n",
       "3                    0.116319                                   0.0   \n",
       "4                    0.252020                                   0.0   \n",
       "\n",
       "   C(CreditLimit_cat)[T.[80000, 90000)]  TRANSACTION_relAMT_month_10  \\\n",
       "0                                   0.0                     0.097030   \n",
       "1                                   0.0                     0.018088   \n",
       "2                                   0.0                     0.052837   \n",
       "3                                   0.0                     0.269638   \n",
       "4                                   0.0                     0.027296   \n",
       "\n",
       "   C(CreditLimit_cat)[T.[70000, 80000)]  C(CreditLimit_cat)[T.[50000, 60000)]  \n",
       "0                                   0.0                                   0.0  \n",
       "1                                   0.0                                   0.0  \n",
       "2                                   0.0                                   0.0  \n",
       "3                                   0.0                                   0.0  \n",
       "4                                   0.0                                   0.0  \n",
       "\n",
       "[5 rows x 180 columns]"
      ]
     },
     "execution_count": 98,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "np_scaled_predict_X90_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "metadata": {},
   "outputs": [],
   "source": [
    "n_folds = 5\n",
    "\n",
    "def rmsle_cv(model):\n",
    "    kf = KFold(n_folds, shuffle=True, random_state=42).get_n_splits(np_scaled_raw_X)\n",
    "    rmse= np.sqrt(-cross_val_score(model, np_scaled_raw_X, np_y, scoring=\"neg_mean_squared_error\", cv = kf))\n",
    "    return(rmse)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.metrics import mean_squared_error\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 85,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "LGBM score: 0.3092 (0.0297)\n",
      "\n"
     ]
    }
   ],
   "source": [
    "model_lgb = lgb.LGBMRegressor(objective='regression',num_leaves=4,\n",
    "                              learning_rate=0.05, n_estimators=700,\n",
    "                              max_bin = 55, bagging_fraction = 0.8,\n",
    "                              bagging_freq = 5, feature_fraction = 0.2319,\n",
    "                              feature_fraction_seed=9, bagging_seed=9,\n",
    "                              min_data_in_leaf =6, min_sum_hessian_in_leaf = 11)\n",
    "\n",
    "model_lgb.fit(np_scaled_raw_X, np_y)\n",
    "\n",
    "\n",
    "\n",
    "score = rmsle_cv(model_lgb)\n",
    "print(\"LGBM score: {:.4f} ({:.4f})\\n\" .format(score.mean(), score.std()))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 93,
   "metadata": {},
   "outputs": [],
   "source": [
    "import lightgbm as lgb\n",
    "from sklearn.model_selection import KFold, cross_val_score, train_test_split\n",
    "\n",
    "model_lgb = lgb.LGBMRegressor(objective='regression',num_leaves=4,\n",
    "                              learning_rate=0.05, n_estimators=700,\n",
    "                              max_bin = 55, bagging_fraction = 0.8,\n",
    "                              bagging_freq = 5, feature_fraction = 0.2319,\n",
    "                              feature_fraction_seed=9, bagging_seed=9,\n",
    "                              min_data_in_leaf =6, min_sum_hessian_in_leaf = 11)\n",
    "\n",
    "count = 0\n",
    "for train_index, test_index in kf.split(np_scaled_raw_X):\n",
    "    KFold_X_train, KFold_X_test = np_scaled_raw_X[train_index], np_scaled_raw_X[test_index]\n",
    "    KFold_y_train, KFold_y_test = np_y[train_index], np_y[test_index]\n",
    "\n",
    "    model_lgb.fit(KFold_X_train, KFold_y_train)\n",
    "    \n",
    "    train_pred = model_lgb.predict(KFold_X_test)\n",
    "    test_pred = model_lgb.predict(np_scaled_rawpredict_X)\n",
    "                \n",
    "    name = 'scaled_X_lgb'\n",
    "    temp_name = 'temp_scaled_rawX_{}'.format(count)\n",
    "    \n",
    "    train_preds_df.loc[test_index,name] = train_pred#[:, 0].tolist()\n",
    "    temp_test_preds_df[temp_name] = test_pred#[:, 0].tolist()\n",
    "    count += 1\n",
    "test_preds_df[name] = 0.25*temp_test_preds_df['temp_scaled_rawX_0'] + 0.25*temp_test_preds_df['temp_scaled_rawX_1'] + 0.25*temp_test_preds_df['temp_scaled_rawX_2'] + 0.25*temp_test_preds_df['temp_scaled_rawX_3']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn import linear_model\n",
    "\n",
    "regr = linear_model.LogisticRegression()\n",
    "\n",
    "count = 0\n",
    "for train_index, test_index in kf.split(np_scaled_raw_X):\n",
    "    KFold_X_train, KFold_X_test = np_scaled_raw_X[train_index], np_scaled_raw_X[test_index]\n",
    "    KFold_y_train, KFold_y_test = np_y[train_index], np_y[test_index]\n",
    "\n",
    "    regr.fit(KFold_X_train, KFold_y_train)\n",
    "    \n",
    "    train_pred = regr.predict_proba(KFold_X_test)\n",
    "    test_pred = regr.predict_proba(np_scaled_rawpredict_X)\n",
    "                \n",
    "    name = 'scaled_X_regr'\n",
    "    temp_name = 'temp_scaled_rawX_{}'.format(count)\n",
    "    \n",
    "    train_preds_df.loc[test_index,name] = train_pred[:, 1].tolist()\n",
    "    temp_test_preds_df[temp_name] = test_pred[:, 1].tolist()\n",
    "    count += 1\n",
    "test_preds_df[name] = 0.25*temp_test_preds_df['temp_scaled_rawX_0'] + 0.25*temp_test_preds_df['temp_scaled_rawX_1'] + 0.25*temp_test_preds_df['temp_scaled_rawX_2'] + 0.25*temp_test_preds_df['temp_scaled_rawX_3']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1216,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x360 with 3 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "from sklearn.neighbors import KNeighborsClassifier\n",
    "\n",
    "# instantiate learning model (k = 3)\n",
    "knn = KNeighborsClassifier(n_neighbors=16)\n",
    "\n",
    "# fitting the model\n",
    "knn.fit(X_train, y_train)\n",
    "\n",
    "# predict the response\n",
    "pred = knn.predict(X_test)\n",
    "\n",
    "y_train_pred = knn.predict(X_train)\n",
    "y_test_pred = knn.predict(X_test)\n",
    "\n",
    "threshold = 0.5\n",
    "\n",
    "fig,ax = plt.subplots(1,3)\n",
    "fig.set_size_inches(15,5)\n",
    "\n",
    "plot_cm(ax[0],  y_train, y_train_pred, [0,1], 'Confusion matrix (TRAIN)', threshold)\n",
    "plot_cm(ax[1],  y_test, y_test_pred,   [0,1], 'Confusion matrix (TEST)', threshold)\n",
    "plot_auc(ax[2], y_train, y_train_pred, y_test, y_test_pred, threshold)\n",
    "    \n",
    "plt.tight_layout()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1229,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x360 with 3 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#RAW KNN NEIGHBORS\n",
    "# instantiate learning model (k = neighbors I want)\n",
    "rawknn = KNeighborsClassifier(n_neighbors=16)\n",
    "\n",
    "# fitting the model\n",
    "rawknn.fit(rawX_train, rawy_train)\n",
    "\n",
    "# predict the response\n",
    "pred = rawknn.predict(rawX_test)\n",
    "\n",
    "y_train_pred = rawknn.predict(rawX_train)\n",
    "y_test_pred = rawknn.predict(rawX_test)\n",
    "\n",
    "threshold = 0.5\n",
    "\n",
    "fig,ax = plt.subplots(1,3)\n",
    "fig.set_size_inches(15,5)\n",
    "\n",
    "plot_cm(ax[0],  rawy_train, y_train_pred, [0,1], 'Confusion matrix (TRAIN)', threshold)\n",
    "plot_cm(ax[1],  rawy_test, y_test_pred,   [0,1], 'Confusion matrix (TEST)', threshold)\n",
    "plot_auc(ax[2], rawy_train, y_train_pred, rawy_test, y_test_pred, threshold)\n",
    "    \n",
    "plt.tight_layout()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.ensemble import RandomForestClassifier\n",
    "from sklearn.metrics import roc_curve, auc, roc_auc_score, log_loss, accuracy_score\n",
    "\n",
    "rf = RandomForestClassifier(bootstrap = False,\n",
    "    max_depth= 15,\n",
    "    max_features= 8,\n",
    "    min_samples_leaf= 2,\n",
    "    min_samples_split=2,\n",
    "    n_estimators= 302)\n",
    "\n",
    "count = 0\n",
    "for train_index, test_index in kf.split(np_scaled_raw_X):\n",
    "    KFold_X_train, KFold_X_test = np_scaled_raw_X[train_index], np_scaled_raw_X[test_index]\n",
    "    KFold_y_train, KFold_y_test = np_y[train_index], np_y[test_index]\n",
    "\n",
    "    rf.fit(KFold_X_train, KFold_y_train)\n",
    "    \n",
    "    train_pred = rf.predict_proba(KFold_X_test)\n",
    "    test_pred = rf.predict_proba(np_scaled_rawpredict_X)\n",
    "                \n",
    "    name = 'scaled_rawX_rf'\n",
    "    temp_name = 'temp_scaled_rawX_{}'.format(count)\n",
    "    \n",
    "    train_preds_df.loc[test_index,name] = train_pred[:, 1].tolist()\n",
    "    temp_test_preds_df[temp_name] = test_pred[:, 1].tolist()\n",
    "    count += 1\n",
    "test_preds_df[name] = 0.25*temp_test_preds_df['temp_scaled_rawX_0'] + 0.25*temp_test_preds_df['temp_scaled_rawX_1'] + 0.25*temp_test_preds_df['temp_scaled_rawX_2'] + 0.25*temp_test_preds_df['temp_scaled_rawX_3']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.ensemble import RandomForestClassifier\n",
    "from sklearn.metrics import roc_curve, auc, roc_auc_score, log_loss, accuracy_score\n",
    "\n",
    "rf = RandomForestClassifier(bootstrap = False,\n",
    "    max_depth= 15,\n",
    "    max_features= 8,\n",
    "    min_samples_leaf= 2,\n",
    "    min_samples_split=2,\n",
    "    n_estimators= 302)\n",
    "\n",
    "count = 0\n",
    "for train_index, test_index in kf.split(np_scaled_raw_X):\n",
    "    KFold_X_train, KFold_X_test = np_scaled_raw_X[train_index], np_scaled_raw_X[test_index]\n",
    "    KFold_y_train, KFold_y_test = np_y[train_index], np_y[test_index]\n",
    "\n",
    "    rf.fit(KFold_X_train, KFold_y_train)\n",
    "    \n",
    "    train_pred = rf.predict_proba(KFold_X_test)\n",
    "    test_pred = rf.predict_proba(np_scaled_rawpredict_X)\n",
    "                \n",
    "    name = 'scaled_rawX_rf'\n",
    "    temp_name = 'temp_scaled_rawX_{}'.format(count)\n",
    "    \n",
    "    train_preds_df.loc[test_index,name] = train_pred[:, 1].tolist()\n",
    "    temp_test_preds_df[temp_name] = test_pred[:, 1].tolist()\n",
    "    count += 1\n",
    "test_preds_df[name] = 0.25*temp_test_preds_df['temp_scaled_rawX_0'] + 0.25*temp_test_preds_df['temp_scaled_rawX_1'] + 0.25*temp_test_preds_df['temp_scaled_rawX_2'] + 0.25*temp_test_preds_df['temp_scaled_rawX_3']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 283,
   "metadata": {},
   "outputs": [
    {
     "ename": "NameError",
     "evalue": "name 'rawy_train' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "\u001b[1;32m<ipython-input-283-34e6a3c7dead>\u001b[0m in \u001b[0;36m<module>\u001b[1;34m()\u001b[0m\n\u001b[0;32m     10\u001b[0m \u001b[0mplot_auc\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0max\u001b[0m\u001b[1;33m[\u001b[0m\u001b[1;36m2\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mnp_y\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0my_train_pred\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mnp_y\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0my_test_pred\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mthreshold\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m     11\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m---> 12\u001b[1;33m \u001b[0mplot_auc\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0max\u001b[0m\u001b[1;33m[\u001b[0m\u001b[1;36m2\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mrawy_train\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0my_train_pred\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mrawy_test\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0my_test_pred\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mthreshold\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m     13\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m     14\u001b[0m \u001b[0mplt\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mtight_layout\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;31mNameError\u001b[0m: name 'rawy_train' is not defined"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x360 with 3 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "threshold = 0.5\n",
    "y_train_pred = train_preds_df.iloc[:,0]\n",
    "y_test_pred = train_preds_df.iloc[:,0]\n",
    "y_pred_randf = train_preds_df.iloc[:,0]\n",
    "\n",
    "fig,ax = plt.subplots(1,3)\n",
    "fig.set_size_inches(15,5)\n",
    "\n",
    "plot_cm(ax[1],  np_y, y_test_pred,   [0,1], 'Confusion matrix (TEST)', threshold)\n",
    "plot_auc(ax[2], np_y, y_train_pred, np_y, y_test_pred, threshold)\n",
    "\n",
    "plot_auc(ax[2], rawy_train, y_train_pred, rawy_test, y_test_pred, threshold)\n",
    "    \n",
    "plt.tight_layout()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 288,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>scaled_X90_k1</th>\n",
       "      <th>scaled_X90_k3</th>\n",
       "      <th>scaled_X90_k7</th>\n",
       "      <th>scaled_X45_k1</th>\n",
       "      <th>scaled_X45_k3</th>\n",
       "      <th>scaled_X45_k7</th>\n",
       "      <th>scaled_rawX_k1</th>\n",
       "      <th>scaled_rawX_k3</th>\n",
       "      <th>scaled_rawX_k7</th>\n",
       "      <th>scaled_rawX_rf</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.014863</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>0.25</td>\n",
       "      <td>0.250000</td>\n",
       "      <td>0.107143</td>\n",
       "      <td>0.25</td>\n",
       "      <td>0.250000</td>\n",
       "      <td>0.107143</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.166667</td>\n",
       "      <td>0.178571</td>\n",
       "      <td>0.015309</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>0.00</td>\n",
       "      <td>0.083333</td>\n",
       "      <td>0.107143</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.166667</td>\n",
       "      <td>0.250000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.083333</td>\n",
       "      <td>0.107143</td>\n",
       "      <td>0.353890</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>0.00</td>\n",
       "      <td>0.250000</td>\n",
       "      <td>0.142857</td>\n",
       "      <td>0.25</td>\n",
       "      <td>0.333333</td>\n",
       "      <td>0.285714</td>\n",
       "      <td>0.25</td>\n",
       "      <td>0.250000</td>\n",
       "      <td>0.250000</td>\n",
       "      <td>0.302983</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>0.00</td>\n",
       "      <td>0.333333</td>\n",
       "      <td>0.464286</td>\n",
       "      <td>0.75</td>\n",
       "      <td>0.500000</td>\n",
       "      <td>0.214286</td>\n",
       "      <td>0.75</td>\n",
       "      <td>0.500000</td>\n",
       "      <td>0.428571</td>\n",
       "      <td>0.123764</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>0.00</td>\n",
       "      <td>0.083333</td>\n",
       "      <td>0.107143</td>\n",
       "      <td>0.75</td>\n",
       "      <td>0.333333</td>\n",
       "      <td>0.214286</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.107143</td>\n",
       "      <td>0.098995</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>0.25</td>\n",
       "      <td>0.250000</td>\n",
       "      <td>0.214286</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.107143</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.125380</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.072343</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.050907</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.008407</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.007574</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>0.75</td>\n",
       "      <td>0.250000</td>\n",
       "      <td>0.107143</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.107143</td>\n",
       "      <td>0.75</td>\n",
       "      <td>0.250000</td>\n",
       "      <td>0.142857</td>\n",
       "      <td>0.035751</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.008096</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.027679</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.007209</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.083333</td>\n",
       "      <td>0.142857</td>\n",
       "      <td>0.018935</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.250000</td>\n",
       "      <td>0.107143</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.039957</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.014258</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>0.00</td>\n",
       "      <td>0.250000</td>\n",
       "      <td>0.107143</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.083333</td>\n",
       "      <td>0.178571</td>\n",
       "      <td>0.75</td>\n",
       "      <td>0.250000</td>\n",
       "      <td>0.142857</td>\n",
       "      <td>0.209094</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.011455</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30</th>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.107143</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.017726</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>31</th>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.083333</td>\n",
       "      <td>0.107143</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.300579</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32</th>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.107143</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.250000</td>\n",
       "      <td>0.107143</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.166667</td>\n",
       "      <td>0.107143</td>\n",
       "      <td>0.021664</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>33</th>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.007043</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>34</th>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.107143</td>\n",
       "      <td>0.25</td>\n",
       "      <td>0.250000</td>\n",
       "      <td>0.142857</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.071429</td>\n",
       "      <td>0.062266</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35</th>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.035714</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.008225</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36</th>\n",
       "      <td>0.75</td>\n",
       "      <td>0.500000</td>\n",
       "      <td>0.357143</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.416667</td>\n",
       "      <td>0.571429</td>\n",
       "      <td>0.75</td>\n",
       "      <td>0.500000</td>\n",
       "      <td>0.357143</td>\n",
       "      <td>0.686883</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>37</th>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.035714</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.035714</td>\n",
       "      <td>0.261323</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>38</th>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.015486</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39</th>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.142857</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.500000</td>\n",
       "      <td>0.321429</td>\n",
       "      <td>0.038362</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5070</th>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.250000</td>\n",
       "      <td>0.107143</td>\n",
       "      <td>0.009020</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5071</th>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.042183</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5072</th>\n",
       "      <td>0.25</td>\n",
       "      <td>0.250000</td>\n",
       "      <td>0.107143</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.035714</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.083333</td>\n",
       "      <td>0.107143</td>\n",
       "      <td>0.018110</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5073</th>\n",
       "      <td>1.00</td>\n",
       "      <td>0.916667</td>\n",
       "      <td>0.892857</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.916667</td>\n",
       "      <td>0.821429</td>\n",
       "      <td>0.648367</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5074</th>\n",
       "      <td>0.75</td>\n",
       "      <td>0.500000</td>\n",
       "      <td>0.214286</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.083333</td>\n",
       "      <td>0.142857</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.083333</td>\n",
       "      <td>0.250000</td>\n",
       "      <td>0.335965</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5075</th>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.030531</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5076</th>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.008292</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5077</th>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.006492</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5078</th>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.006842</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5079</th>\n",
       "      <td>0.00</td>\n",
       "      <td>0.500000</td>\n",
       "      <td>0.250000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.071429</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.114481</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5080</th>\n",
       "      <td>0.00</td>\n",
       "      <td>0.083333</td>\n",
       "      <td>0.392857</td>\n",
       "      <td>0.25</td>\n",
       "      <td>0.250000</td>\n",
       "      <td>0.214286</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.083333</td>\n",
       "      <td>0.142857</td>\n",
       "      <td>0.305231</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5081</th>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.043720</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5082</th>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.012677</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5083</th>\n",
       "      <td>0.25</td>\n",
       "      <td>0.250000</td>\n",
       "      <td>0.214286</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.25</td>\n",
       "      <td>0.333333</td>\n",
       "      <td>0.321429</td>\n",
       "      <td>0.329998</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5084</th>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.075192</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5085</th>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.007194</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5086</th>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.035714</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.011773</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5087</th>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.029487</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5088</th>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.023439</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5089</th>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.006937</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5090</th>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.121041</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5091</th>\n",
       "      <td>0.00</td>\n",
       "      <td>0.250000</td>\n",
       "      <td>0.107143</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.107143</td>\n",
       "      <td>0.078685</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5092</th>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.008255</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5093</th>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.035714</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.166667</td>\n",
       "      <td>0.178571</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.250000</td>\n",
       "      <td>0.107143</td>\n",
       "      <td>0.340570</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5094</th>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.090551</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5095</th>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.009879</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5096</th>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.035714</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.009341</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5097</th>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.006874</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5098</th>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.092403</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5099</th>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.007075</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5090 rows × 10 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      scaled_X90_k1  scaled_X90_k3  scaled_X90_k7  scaled_X45_k1  \\\n",
       "10             0.00       0.000000       0.000000           0.00   \n",
       "11             0.25       0.250000       0.107143           0.25   \n",
       "12             0.00       0.083333       0.107143           0.00   \n",
       "13             0.00       0.250000       0.142857           0.25   \n",
       "14             0.00       0.333333       0.464286           0.75   \n",
       "15             0.00       0.083333       0.107143           0.75   \n",
       "16             0.25       0.250000       0.214286           0.00   \n",
       "17             0.00       0.000000       0.000000           0.00   \n",
       "18             0.00       0.000000       0.000000           0.00   \n",
       "19             0.00       0.000000       0.000000           0.00   \n",
       "20             0.00       0.000000       0.000000           0.00   \n",
       "21             0.75       0.250000       0.107143           0.00   \n",
       "22             0.00       0.000000       0.000000           0.00   \n",
       "23             0.00       0.000000       0.000000           0.00   \n",
       "24             0.00       0.000000       0.000000           0.00   \n",
       "25             0.00       0.000000       0.000000           0.00   \n",
       "26             0.00       0.000000       0.000000           0.00   \n",
       "27             0.00       0.000000       0.000000           0.00   \n",
       "28             0.00       0.250000       0.107143           0.00   \n",
       "29             0.00       0.000000       0.000000           0.00   \n",
       "30             0.00       0.000000       0.000000           0.00   \n",
       "31             0.00       0.000000       0.000000           0.00   \n",
       "32             0.00       0.000000       0.107143           0.00   \n",
       "33             0.00       0.000000       0.000000           0.00   \n",
       "34             0.00       0.000000       0.107143           0.25   \n",
       "35             0.00       0.000000       0.035714           0.00   \n",
       "36             0.75       0.500000       0.357143           0.00   \n",
       "37             0.00       0.000000       0.000000           0.00   \n",
       "38             0.00       0.000000       0.000000           0.00   \n",
       "39             0.00       0.000000       0.142857           0.00   \n",
       "...             ...            ...            ...            ...   \n",
       "5070           0.00       0.000000       0.000000           0.00   \n",
       "5071           0.00       0.000000       0.000000           0.00   \n",
       "5072           0.25       0.250000       0.107143           0.00   \n",
       "5073           1.00       0.916667       0.892857           1.00   \n",
       "5074           0.75       0.500000       0.214286           0.00   \n",
       "5075           0.00       0.000000       0.000000           0.00   \n",
       "5076           0.00       0.000000       0.000000           0.00   \n",
       "5077           0.00       0.000000       0.000000           0.00   \n",
       "5078           0.00       0.000000       0.000000           0.00   \n",
       "5079           0.00       0.500000       0.250000           0.00   \n",
       "5080           0.00       0.083333       0.392857           0.25   \n",
       "5081           0.00       0.000000       0.000000           0.00   \n",
       "5082           0.00       0.000000       0.000000           0.00   \n",
       "5083           0.25       0.250000       0.214286           0.00   \n",
       "5084           0.00       0.000000       0.000000           0.00   \n",
       "5085           0.00       0.000000       0.000000           0.00   \n",
       "5086           0.00       0.000000       0.000000           0.00   \n",
       "5087           0.00       0.000000       0.000000           0.00   \n",
       "5088           0.00       0.000000       0.000000           0.00   \n",
       "5089           0.00       0.000000       0.000000           0.00   \n",
       "5090           0.00       0.000000       0.000000           0.00   \n",
       "5091           0.00       0.250000       0.107143           0.00   \n",
       "5092           0.00       0.000000       0.000000           0.00   \n",
       "5093           0.00       0.000000       0.035714           0.00   \n",
       "5094           0.00       0.000000       0.000000           0.00   \n",
       "5095           0.00       0.000000       0.000000           0.00   \n",
       "5096           0.00       0.000000       0.035714           0.00   \n",
       "5097           0.00       0.000000       0.000000           0.00   \n",
       "5098           0.00       0.000000       0.000000           0.00   \n",
       "5099           0.00       0.000000       0.000000           0.00   \n",
       "\n",
       "      scaled_X45_k3  scaled_X45_k7  scaled_rawX_k1  scaled_rawX_k3  \\\n",
       "10         0.000000       0.000000            0.00        0.000000   \n",
       "11         0.250000       0.107143            0.00        0.166667   \n",
       "12         0.166667       0.250000            0.00        0.083333   \n",
       "13         0.333333       0.285714            0.25        0.250000   \n",
       "14         0.500000       0.214286            0.75        0.500000   \n",
       "15         0.333333       0.214286            0.00        0.000000   \n",
       "16         0.000000       0.107143            0.00        0.000000   \n",
       "17         0.000000       0.000000            0.00        0.000000   \n",
       "18         0.000000       0.000000            0.00        0.000000   \n",
       "19         0.000000       0.000000            0.00        0.000000   \n",
       "20         0.000000       0.000000            0.00        0.000000   \n",
       "21         0.000000       0.107143            0.75        0.250000   \n",
       "22         0.000000       0.000000            0.00        0.000000   \n",
       "23         0.000000       0.000000            0.00        0.000000   \n",
       "24         0.000000       0.000000            0.00        0.000000   \n",
       "25         0.000000       0.000000            0.00        0.083333   \n",
       "26         0.250000       0.107143            0.00        0.000000   \n",
       "27         0.000000       0.000000            0.00        0.000000   \n",
       "28         0.083333       0.178571            0.75        0.250000   \n",
       "29         0.000000       0.000000            0.00        0.000000   \n",
       "30         0.000000       0.107143            0.00        0.000000   \n",
       "31         0.083333       0.107143            0.00        0.000000   \n",
       "32         0.250000       0.107143            0.00        0.166667   \n",
       "33         0.000000       0.000000            0.00        0.000000   \n",
       "34         0.250000       0.142857            0.00        0.000000   \n",
       "35         0.000000       0.000000            0.00        0.000000   \n",
       "36         0.416667       0.571429            0.75        0.500000   \n",
       "37         0.000000       0.035714            0.00        0.000000   \n",
       "38         0.000000       0.000000            0.00        0.000000   \n",
       "39         0.000000       0.000000            0.00        0.500000   \n",
       "...             ...            ...             ...             ...   \n",
       "5070       0.000000       0.000000            0.00        0.250000   \n",
       "5071       0.000000       0.000000            0.00        0.000000   \n",
       "5072       0.000000       0.035714            0.00        0.083333   \n",
       "5073       1.000000       1.000000            1.00        0.916667   \n",
       "5074       0.083333       0.142857            0.00        0.083333   \n",
       "5075       0.000000       0.000000            0.00        0.000000   \n",
       "5076       0.000000       0.000000            0.00        0.000000   \n",
       "5077       0.000000       0.000000            0.00        0.000000   \n",
       "5078       0.000000       0.000000            0.00        0.000000   \n",
       "5079       0.000000       0.071429            0.00        0.000000   \n",
       "5080       0.250000       0.214286            0.00        0.083333   \n",
       "5081       0.000000       0.000000            0.00        0.000000   \n",
       "5082       0.000000       0.000000            0.00        0.000000   \n",
       "5083       0.000000       0.000000            0.25        0.333333   \n",
       "5084       0.000000       0.000000            0.00        0.000000   \n",
       "5085       0.000000       0.000000            0.00        0.000000   \n",
       "5086       0.000000       0.035714            0.00        0.000000   \n",
       "5087       0.000000       0.000000            0.00        0.000000   \n",
       "5088       0.000000       0.000000            0.00        0.000000   \n",
       "5089       0.000000       0.000000            0.00        0.000000   \n",
       "5090       0.000000       0.000000            0.00        0.000000   \n",
       "5091       0.000000       0.000000            0.00        0.000000   \n",
       "5092       0.000000       0.000000            0.00        0.000000   \n",
       "5093       0.166667       0.178571            0.00        0.250000   \n",
       "5094       0.000000       0.000000            0.00        0.000000   \n",
       "5095       0.000000       0.000000            0.00        0.000000   \n",
       "5096       0.000000       0.000000            0.00        0.000000   \n",
       "5097       0.000000       0.000000            0.00        0.000000   \n",
       "5098       0.000000       0.000000            0.00        0.000000   \n",
       "5099       0.000000       0.000000            0.00        0.000000   \n",
       "\n",
       "      scaled_rawX_k7  scaled_rawX_rf  \n",
       "10          0.000000        0.014863  \n",
       "11          0.178571        0.015309  \n",
       "12          0.107143        0.353890  \n",
       "13          0.250000        0.302983  \n",
       "14          0.428571        0.123764  \n",
       "15          0.107143        0.098995  \n",
       "16          0.000000        0.125380  \n",
       "17          0.000000        0.072343  \n",
       "18          0.000000        0.050907  \n",
       "19          0.000000        0.008407  \n",
       "20          0.000000        0.007574  \n",
       "21          0.142857        0.035751  \n",
       "22          0.000000        0.008096  \n",
       "23          0.000000        0.027679  \n",
       "24          0.000000        0.007209  \n",
       "25          0.142857        0.018935  \n",
       "26          0.000000        0.039957  \n",
       "27          0.000000        0.014258  \n",
       "28          0.142857        0.209094  \n",
       "29          0.000000        0.011455  \n",
       "30          0.000000        0.017726  \n",
       "31          0.000000        0.300579  \n",
       "32          0.107143        0.021664  \n",
       "33          0.000000        0.007043  \n",
       "34          0.071429        0.062266  \n",
       "35          0.000000        0.008225  \n",
       "36          0.357143        0.686883  \n",
       "37          0.035714        0.261323  \n",
       "38          0.000000        0.015486  \n",
       "39          0.321429        0.038362  \n",
       "...              ...             ...  \n",
       "5070        0.107143        0.009020  \n",
       "5071        0.000000        0.042183  \n",
       "5072        0.107143        0.018110  \n",
       "5073        0.821429        0.648367  \n",
       "5074        0.250000        0.335965  \n",
       "5075        0.000000        0.030531  \n",
       "5076        0.000000        0.008292  \n",
       "5077        0.000000        0.006492  \n",
       "5078        0.000000        0.006842  \n",
       "5079        0.000000        0.114481  \n",
       "5080        0.142857        0.305231  \n",
       "5081        0.000000        0.043720  \n",
       "5082        0.000000        0.012677  \n",
       "5083        0.321429        0.329998  \n",
       "5084        0.000000        0.075192  \n",
       "5085        0.000000        0.007194  \n",
       "5086        0.000000        0.011773  \n",
       "5087        0.000000        0.029487  \n",
       "5088        0.000000        0.023439  \n",
       "5089        0.000000        0.006937  \n",
       "5090        0.000000        0.121041  \n",
       "5091        0.107143        0.078685  \n",
       "5092        0.000000        0.008255  \n",
       "5093        0.107143        0.340570  \n",
       "5094        0.000000        0.090551  \n",
       "5095        0.000000        0.009879  \n",
       "5096        0.000000        0.009341  \n",
       "5097        0.000000        0.006874  \n",
       "5098        0.000000        0.092403  \n",
       "5099        0.000000        0.007075  \n",
       "\n",
       "[5090 rows x 10 columns]"
      ]
     },
     "execution_count": 288,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "test_preds_df.iloc[10:]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1330,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x360 with 3 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#RAW RANDOM FOREST CLASSIFIER\n",
    "\n",
    "rf = RandomForestClassifier(bootstrap = False,\n",
    "    max_depth= 15,\n",
    "    max_features= 8,\n",
    "    min_samples_leaf= 2,\n",
    "    min_samples_split=2,\n",
    "    n_estimators= 302)\n",
    "rf.fit(rawX_train,rawy_train)\n",
    "\n",
    "threshold = 0.5\n",
    "y_train_pred = rf.predict_proba(rawX_train)[:,1]\n",
    "y_test_pred = rf.predict_proba(rawX_test)[:,1]\n",
    "#y_pred_randf = rf.predict_proba(X_predict)[:,1]\n",
    "np.savetxt(\"DesjPred_ultime_RawNormalizedRandforest.csv\", y_pred_randf, delimiter=\",\")\n",
    "np.savetxt(\"DesjPred_ultime_randforest.csv\", y_pred_randf, delimiter=\",\")\n",
    "\n",
    "fig,ax = plt.subplots(1,3)\n",
    "fig.set_size_inches(15,5)\n",
    "\n",
    "plot_cm(ax[0],  rawy_train, y_train_pred, [0,1], 'Confusion matrix (TRAIN)', threshold)\n",
    "plot_cm(ax[1],  rawy_test, y_test_pred,   [0,1], 'Confusion matrix (TEST)', threshold)\n",
    "plot_auc(ax[2], rawy_train, y_train_pred, rawy_test, y_test_pred, threshold)\n",
    "    \n",
    "plt.tight_layout()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1267,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{'bootstrap': [True, False],\n",
      " 'max_depth': [10, 35, 60, 85, 110, None],\n",
      " 'max_features': ['auto', 'sqrt'],\n",
      " 'min_samples_leaf': [1, 2, 4],\n",
      " 'min_samples_split': [2, 5, 10],\n",
      " 'n_estimators': [100, 150, 200, 250, 300]}\n"
     ]
    }
   ],
   "source": [
    "from sklearn.ensemble import RandomForestRegressor\n",
    "from sklearn.model_selection import RandomizedSearchCV\n",
    "from pprint import pprint\n",
    "\n",
    "# Number of trees in random forest\n",
    "n_estimators = [int(x) for x in np.linspace(start = 100, stop = 300, num = 5)]\n",
    "# Number of features to consider at every split\n",
    "max_features = ['auto', 'sqrt']\n",
    "# Maximum number of levels in tree\n",
    "max_depth = [int(x) for x in np.linspace(10, 110, num = 5)]\n",
    "max_depth.append(None)\n",
    "# Minimum number of samples required to split a node\n",
    "min_samples_split = [2, 5, 10]\n",
    "# Minimum number of samples required at each leaf node\n",
    "min_samples_leaf = [1, 2, 4]\n",
    "# Method of selecting samples for training each tree\n",
    "bootstrap = [True, False]\n",
    "\n",
    "# Create the random grid\n",
    "random_grid = {'n_estimators': n_estimators,\n",
    "               'max_features': max_features,\n",
    "               'max_depth': max_depth,\n",
    "               'min_samples_split': min_samples_split,\n",
    "               'min_samples_leaf': min_samples_leaf,\n",
    "               'bootstrap': bootstrap}\n",
    "\n",
    "pprint(random_grid)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1269,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Fitting 3 folds for each of 25 candidates, totalling 75 fits\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[Parallel(n_jobs=-1)]: Done  25 tasks      | elapsed:  3.3min\n",
      "[Parallel(n_jobs=-1)]: Done  75 out of  75 | elapsed: 11.8min finished\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "RandomizedSearchCV(cv=3, error_score='raise',\n",
       "          estimator=RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,\n",
       "           max_features='auto', max_leaf_nodes=None,\n",
       "           min_impurity_decrease=0.0, min_impurity_split=None,\n",
       "           min_samples_leaf=1, min_samples_split=2,\n",
       "           min_weight_fraction_leaf=0.0, n_estimators=10, n_jobs=1,\n",
       "           oob_score=False, random_state=None, verbose=0, warm_start=False),\n",
       "          fit_params=None, iid=True, n_iter=25, n_jobs=-1,\n",
       "          param_distributions={'n_estimators': [100, 150, 200, 250, 300], 'max_features': ['auto', 'sqrt'], 'max_depth': [10, 35, 60, 85, 110, None], 'min_samples_split': [2, 5, 10], 'min_samples_leaf': [1, 2, 4], 'bootstrap': [True, False]},\n",
       "          pre_dispatch='2*n_jobs', random_state=None, refit=True,\n",
       "          return_train_score='warn', scoring=None, verbose=2)"
      ]
     },
     "execution_count": 1269,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Use the random grid to search for best hyperparameters\n",
    "# First create the base model to tune\n",
    "rf = RandomForestRegressor()\n",
    "# Random search of parameters, using 3 fold cross validation, \n",
    "# search across 100 different combinations, and use all available cores\n",
    "rf_random = RandomizedSearchCV(estimator = rf, param_distributions = random_grid, n_iter = 25, cv = 3, verbose=2, n_jobs = -1)\n",
    "\n",
    "# Fit the random search model\n",
    "rf_random.fit(rawX, y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1270,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'n_estimators': 300,\n",
       " 'min_samples_split': 2,\n",
       " 'min_samples_leaf': 2,\n",
       " 'max_features': 'sqrt',\n",
       " 'max_depth': 10,\n",
       " 'bootstrap': False}"
      ]
     },
     "execution_count": 1270,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "rf_random.best_params_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1273,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Model Performance\n",
      "Average Error: 0.1991 degrees.\n",
      "Accuracy = -inf%.\n",
      "Model Performance\n",
      "Average Error: 0.1363 degrees.\n",
      "Accuracy = -inf%.\n",
      "Improvement of nan%.\n"
     ]
    }
   ],
   "source": [
    "def evaluate(model, test_features, test_labels):\n",
    "    predictions = model.predict(test_features)\n",
    "    errors = abs(predictions - test_labels)\n",
    "    mape = 100 * np.mean(errors / test_labels)\n",
    "    accuracy = 100 - mape\n",
    "    print('Model Performance')\n",
    "    print('Average Error: {:0.4f} degrees.'.format(np.mean(errors)))\n",
    "    print('Accuracy = {:0.4f}%.'.format(accuracy))\n",
    "    \n",
    "    return accuracy\n",
    "\n",
    "base_model = RandomForestRegressor(n_estimators = 10, random_state = 42)\n",
    "base_model.fit(rawX_train, rawy_train)\n",
    "base_accuracy = evaluate(base_model, rawX_test, rawy_test)\n",
    "\n",
    "best_random = rf_random.best_estimator_\n",
    "random_accuracy = evaluate(best_random, rawX_test, rawy_test)\n",
    "\n",
    "print('Improvement of {:0.4f}%.'.format( 100 * (random_accuracy - base_accuracy) / base_accuracy))\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1303,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.model_selection import GridSearchCV\n",
    "\n",
    "# Create the parameter grid based on the results of random search \n",
    "param_grid = {\n",
    "    'bootstrap': [False],\n",
    "    'max_depth': [15],\n",
    "    'max_features': [8],\n",
    "    'min_samples_leaf': [2],\n",
    "    'min_samples_split': [2],\n",
    "    'n_estimators': [302]\n",
    "}\n",
    "\n",
    "# Create a based model\n",
    "rf = RandomForestRegressor()\n",
    "\n",
    "# Instantiate the grid search model\n",
    "grid_search = GridSearchCV(estimator = rf, param_grid = param_grid, \n",
    "                          cv = 4, n_jobs = -1, verbose = 2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1329,
   "metadata": {},
   "outputs": [],
   "source": [
    "rawrf = RandomForestRegressor(bootstrap = False,\n",
    "    max_depth= 15,\n",
    "    max_features= 8,\n",
    "    min_samples_leaf= 2,\n",
    "    min_samples_split=2,\n",
    "    n_estimators= 302)\n",
    "rawrf.fit(rawX, y)\n",
    "y_rawpred_randf = rawrf.predict(rawpredict_X)\n",
    "np.savetxt(\"DesjPred_ultime_Rawrandforest.csv\", y_rawpred_randf, delimiter=\",\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1292,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Fitting 4 folds for each of 5 candidates, totalling 20 fits\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[Parallel(n_jobs=-1)]: Done  16 out of  20 | elapsed:  1.0min remaining:   15.1s\n",
      "[Parallel(n_jobs=-1)]: Done  20 out of  20 | elapsed:  1.3min finished\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Model Performance\n",
      "Average Error: 0.0695 degrees.\n",
      "Accuracy = -inf%.\n",
      "Improvement of nan%.\n"
     ]
    }
   ],
   "source": [
    "# Fit the grid search to the data\n",
    "grid_search.fit(rawX, y)\n",
    "grid_search.best_params_\n",
    "\n",
    "best_grid = grid_search.best_estimator_\n",
    "grid_accuracy = evaluate(best_grid, rawX_test, rawy_test)\n",
    "\n",
    "print('Improvement of {:0.2f}%.'.format( 100 * (grid_accuracy - base_accuracy) / base_accuracy))\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1293,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{'bootstrap': False,\n",
      " 'max_depth': 15,\n",
      " 'max_features': 8,\n",
      " 'min_samples_leaf': 2,\n",
      " 'min_samples_split': 2,\n",
      " 'n_estimators': 302}\n"
     ]
    }
   ],
   "source": [
    "pprint(grid_search.best_params_)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 112,
   "metadata": {},
   "outputs": [],
   "source": [
    "import xgboost as xgb\n",
    "from xgboost.sklearn import XGBClassifier\n",
    "from sklearn import cross_validation, metrics\n",
    "from sklearn.grid_search import GridSearchCV   #Perforing grid search\n",
    "\n",
    "import matplotlib.pylab as plt\n",
    "%matplotlib inline\n",
    "from matplotlib.pylab import rcParams\n",
    "\n",
    "rcParams['figure.figsize'] = 12, 4"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 113,
   "metadata": {},
   "outputs": [],
   "source": [
    "def modelfit(alg, dtrain, predictors,useTrainCV=True, cv_folds=5, early_stopping_rounds=50):\n",
    "    \n",
    "    if useTrainCV:\n",
    "        xgb_param = alg.get_xgb_params()\n",
    "        xgtrain = dtrain\n",
    "        cvresult = alg.cv(xgb_param, xgtrain, num_boost_round=alg.get_params()['n_estimators'], nfold=cv_folds,\n",
    "            metrics='auc', early_stopping_rounds=early_stopping_rounds, verbose_eval=True,  stratified=False)\n",
    "        alg.set_params(n_estimators=cvresult.shape[0])\n",
    "    \n",
    "    #Fit the algorithm on the data\n",
    "    alg.fit(dtrain[predictors], dtrain['Default'],eval_metric='auc')\n",
    "        \n",
    "    #Predict training set:\n",
    "    dtrain_predictions = alg.predict(XX)\n",
    "    dtrain_predprob = alg.predict_proba(XX)[:,1]\n",
    "    \n",
    "    best_auc_mean = cvresult['test-auc-mean'].iloc[alg.get_params()['n_estimators']-1]\n",
    "    \n",
    "    #Print model report:\n",
    "    print(\"\\nModel Report\")\n",
    "    print(\"Model best iteration : {} with an auc score of : {}\".format(alg.get_params()['n_estimators'], best_auc_mean))\n",
    "    print(\"Accuracy : {}\".format(metrics.accuracy_score(y.values, dtrain_predictions)))\n",
    "    print(\"AUC Score (Train): {}\".format(metrics.roc_auc_score(y, dtrain_predprob)))  \n",
    "                    \n",
    "    #feat_imp = pd.Series(alg.booster().get_fscore()).sort_values(ascending=False))\n",
    "    feat_imp = pd.Series(alg.get_booster().get_score(importance_type='weight')).sort_values(ascending=False)\n",
    "    feat_imp.plot(kind='bar', title='Feature Importances')\n",
    "    plt.ylabel('Feature Importance Score')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 114,
   "metadata": {},
   "outputs": [
    {
     "ename": "NameError",
     "evalue": "name 'XX' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "\u001b[1;32m<ipython-input-114-4f32838da4e8>\u001b[0m in \u001b[0;36m<module>\u001b[1;34m()\u001b[0m\n\u001b[0;32m      4\u001b[0m \u001b[0mtarget\u001b[0m \u001b[1;33m=\u001b[0m \u001b[1;34m'Default'\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m      5\u001b[0m \u001b[0mpredictors\u001b[0m \u001b[1;33m=\u001b[0m \u001b[1;33m[\u001b[0m\u001b[0mx\u001b[0m \u001b[1;32mfor\u001b[0m \u001b[0mx\u001b[0m \u001b[1;32min\u001b[0m \u001b[0mX\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mcolumns\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m----> 6\u001b[1;33m \u001b[0mtrain\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mxgb\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mDMatrix\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mXX\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mlabel\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0my\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[1;31mNameError\u001b[0m: name 'XX' is not defined"
     ]
    }
   ],
   "source": [
    "#XGBdtrain = xgb.DMatrix(X_train, label=y_train)\n",
    "#XGBdtest = xgb.DMatrix(X_test, label=y_test)\n",
    "#XGBdpred = xgb.DMatrix(X_predict)\n",
    "target = 'Default'\n",
    "predictors = [x for x in X.columns]\n",
    "train = xgb.DMatrix(XX, label=y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1480,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\ttrain-auc:0.879177+0.00411045\ttest-auc:0.860371+0.00684331\n",
      "[1]\ttrain-auc:0.890889+0.00341268\ttest-auc:0.869893+0.00689686\n",
      "[2]\ttrain-auc:0.896472+0.00292444\ttest-auc:0.876098+0.00555031\n",
      "[3]\ttrain-auc:0.899376+0.00193664\ttest-auc:0.879232+0.0057772\n",
      "[4]\ttrain-auc:0.902663+0.001592\ttest-auc:0.881508+0.00508353\n",
      "[5]\ttrain-auc:0.904968+0.00139087\ttest-auc:0.882439+0.00538993\n",
      "[6]\ttrain-auc:0.9075+0.00204531\ttest-auc:0.883235+0.00556698\n",
      "[7]\ttrain-auc:0.909668+0.00173676\ttest-auc:0.884494+0.00601572\n",
      "[8]\ttrain-auc:0.911106+0.00159679\ttest-auc:0.885051+0.00639942\n",
      "[9]\ttrain-auc:0.912513+0.00141997\ttest-auc:0.885569+0.00600117\n",
      "[10]\ttrain-auc:0.913719+0.00160953\ttest-auc:0.886447+0.00460362\n",
      "[11]\ttrain-auc:0.915148+0.0014583\ttest-auc:0.887284+0.00503377\n",
      "[12]\ttrain-auc:0.916891+0.00102683\ttest-auc:0.887501+0.00566189\n",
      "[13]\ttrain-auc:0.91822+0.000933429\ttest-auc:0.887425+0.00541861\n",
      "[14]\ttrain-auc:0.919536+0.000639919\ttest-auc:0.88844+0.00572917\n",
      "[15]\ttrain-auc:0.920766+0.000580309\ttest-auc:0.888551+0.00560588\n",
      "[16]\ttrain-auc:0.921778+0.000682843\ttest-auc:0.888727+0.00542581\n",
      "[17]\ttrain-auc:0.92297+0.000689305\ttest-auc:0.889146+0.0055975\n",
      "[18]\ttrain-auc:0.923916+0.000736623\ttest-auc:0.889573+0.00548456\n",
      "[19]\ttrain-auc:0.924987+0.000812496\ttest-auc:0.889726+0.00519412\n",
      "[20]\ttrain-auc:0.926086+0.000943021\ttest-auc:0.889718+0.00481612\n",
      "[21]\ttrain-auc:0.927115+0.000866041\ttest-auc:0.889804+0.00458497\n",
      "[22]\ttrain-auc:0.928308+0.000909152\ttest-auc:0.890139+0.00467986\n",
      "[23]\ttrain-auc:0.929467+0.00107048\ttest-auc:0.890104+0.00474868\n",
      "[24]\ttrain-auc:0.930256+0.000986496\ttest-auc:0.890518+0.00469052\n",
      "[25]\ttrain-auc:0.931386+0.000786408\ttest-auc:0.890731+0.00447678\n",
      "[26]\ttrain-auc:0.932221+0.000683824\ttest-auc:0.890901+0.00462005\n",
      "[27]\ttrain-auc:0.933328+0.000744287\ttest-auc:0.890929+0.00469104\n",
      "[28]\ttrain-auc:0.934248+0.000705024\ttest-auc:0.890961+0.00465687\n",
      "[29]\ttrain-auc:0.935376+0.000692147\ttest-auc:0.890713+0.00464401\n",
      "[30]\ttrain-auc:0.936459+0.000674802\ttest-auc:0.890838+0.00465382\n",
      "[31]\ttrain-auc:0.937336+0.000681253\ttest-auc:0.890983+0.00465294\n",
      "[32]\ttrain-auc:0.938257+0.000720275\ttest-auc:0.891241+0.00461945\n",
      "[33]\ttrain-auc:0.939087+0.000592115\ttest-auc:0.891155+0.00442936\n",
      "[34]\ttrain-auc:0.940029+0.000799682\ttest-auc:0.891084+0.00453813\n",
      "[35]\ttrain-auc:0.94073+0.00086378\ttest-auc:0.891225+0.00454028\n",
      "[36]\ttrain-auc:0.941527+0.000827353\ttest-auc:0.890994+0.00452089\n",
      "[37]\ttrain-auc:0.942431+0.000841716\ttest-auc:0.890939+0.0043725\n",
      "[38]\ttrain-auc:0.943399+0.000982277\ttest-auc:0.891373+0.00436229\n",
      "[39]\ttrain-auc:0.944264+0.000821546\ttest-auc:0.891458+0.00453237\n",
      "[40]\ttrain-auc:0.944842+0.00102531\ttest-auc:0.891651+0.00467633\n",
      "[41]\ttrain-auc:0.945487+0.00102007\ttest-auc:0.891771+0.00462692\n",
      "[42]\ttrain-auc:0.945981+0.000889144\ttest-auc:0.891791+0.00461486\n",
      "[43]\ttrain-auc:0.946868+0.000800745\ttest-auc:0.891927+0.00465892\n",
      "[44]\ttrain-auc:0.947535+0.000656327\ttest-auc:0.891861+0.00454778\n",
      "[45]\ttrain-auc:0.947952+0.000456786\ttest-auc:0.891827+0.00459026\n",
      "[46]\ttrain-auc:0.948522+0.000627128\ttest-auc:0.891967+0.0045168\n",
      "[47]\ttrain-auc:0.949085+0.000819391\ttest-auc:0.891902+0.00460688\n",
      "[48]\ttrain-auc:0.949769+0.00093684\ttest-auc:0.891632+0.00475078\n",
      "[49]\ttrain-auc:0.950559+0.000767311\ttest-auc:0.89165+0.00481391\n",
      "[50]\ttrain-auc:0.951276+0.000774234\ttest-auc:0.891685+0.00471342\n",
      "[51]\ttrain-auc:0.952059+0.000558787\ttest-auc:0.891616+0.00471356\n",
      "[52]\ttrain-auc:0.952584+0.000697677\ttest-auc:0.891756+0.00479881\n",
      "[53]\ttrain-auc:0.953251+0.00068158\ttest-auc:0.891661+0.00494106\n",
      "[54]\ttrain-auc:0.953775+0.000635629\ttest-auc:0.891775+0.00498892\n",
      "[55]\ttrain-auc:0.954452+0.00078244\ttest-auc:0.891754+0.00480727\n",
      "[56]\ttrain-auc:0.955078+0.000656802\ttest-auc:0.891738+0.00478784\n",
      "[57]\ttrain-auc:0.955644+0.000628216\ttest-auc:0.891796+0.00469482\n",
      "[58]\ttrain-auc:0.956177+0.000579835\ttest-auc:0.891672+0.00473673\n",
      "[59]\ttrain-auc:0.9568+0.000501236\ttest-auc:0.891775+0.00480718\n",
      "[60]\ttrain-auc:0.957253+0.000746874\ttest-auc:0.891711+0.0049039\n",
      "[61]\ttrain-auc:0.957696+0.000874432\ttest-auc:0.89184+0.00480592\n",
      "[62]\ttrain-auc:0.958436+0.000949184\ttest-auc:0.891705+0.00471099\n",
      "[63]\ttrain-auc:0.958928+0.00103248\ttest-auc:0.891691+0.00461317\n",
      "[64]\ttrain-auc:0.959534+0.000857877\ttest-auc:0.89172+0.0047041\n",
      "[65]\ttrain-auc:0.959893+0.000889426\ttest-auc:0.891712+0.00481092\n",
      "[66]\ttrain-auc:0.960417+0.00069364\ttest-auc:0.891638+0.00474374\n",
      "[67]\ttrain-auc:0.960904+0.000730722\ttest-auc:0.891633+0.00479266\n",
      "[68]\ttrain-auc:0.961272+0.000714659\ttest-auc:0.891648+0.00481769\n",
      "[69]\ttrain-auc:0.961861+0.000669537\ttest-auc:0.891418+0.00475962\n",
      "[70]\ttrain-auc:0.96251+0.000740748\ttest-auc:0.891655+0.00454782\n",
      "[71]\ttrain-auc:0.963111+0.00073043\ttest-auc:0.891495+0.00447462\n",
      "[72]\ttrain-auc:0.963457+0.000748142\ttest-auc:0.891437+0.00453739\n",
      "[73]\ttrain-auc:0.964017+0.000765493\ttest-auc:0.891283+0.00460945\n",
      "[74]\ttrain-auc:0.964433+0.000730653\ttest-auc:0.891268+0.00458163\n",
      "[75]\ttrain-auc:0.964893+0.000632013\ttest-auc:0.891177+0.00442236\n",
      "[76]\ttrain-auc:0.965259+0.000604906\ttest-auc:0.891185+0.00439972\n",
      "[77]\ttrain-auc:0.965803+0.000588611\ttest-auc:0.891151+0.00436117\n",
      "[78]\ttrain-auc:0.966199+0.000670236\ttest-auc:0.891136+0.00422268\n",
      "[79]\ttrain-auc:0.966592+0.000812258\ttest-auc:0.891155+0.00411491\n",
      "[80]\ttrain-auc:0.967047+0.000837797\ttest-auc:0.891094+0.00413062\n",
      "[81]\ttrain-auc:0.967668+0.000810654\ttest-auc:0.891097+0.004198\n",
      "[82]\ttrain-auc:0.968125+0.000897951\ttest-auc:0.891117+0.00427344\n",
      "[83]\ttrain-auc:0.968691+0.000793733\ttest-auc:0.891054+0.00435771\n",
      "[84]\ttrain-auc:0.969252+0.000850289\ttest-auc:0.890975+0.00427938\n",
      "[85]\ttrain-auc:0.969767+0.000906246\ttest-auc:0.890985+0.00408153\n",
      "[86]\ttrain-auc:0.970228+0.000998431\ttest-auc:0.891167+0.00411711\n",
      "[87]\ttrain-auc:0.970558+0.00108053\ttest-auc:0.890993+0.00409152\n",
      "[88]\ttrain-auc:0.970978+0.00107518\ttest-auc:0.890782+0.00393648\n",
      "[89]\ttrain-auc:0.971288+0.00115785\ttest-auc:0.890764+0.00402239\n",
      "[90]\ttrain-auc:0.971651+0.0011464\ttest-auc:0.890694+0.00398279\n",
      "[91]\ttrain-auc:0.972046+0.00123741\ttest-auc:0.890648+0.00395475\n",
      "[92]\ttrain-auc:0.972551+0.00120652\ttest-auc:0.890601+0.00398597\n",
      "[93]\ttrain-auc:0.97291+0.00108537\ttest-auc:0.890594+0.00397737\n",
      "[94]\ttrain-auc:0.973386+0.00120885\ttest-auc:0.890549+0.00380959\n",
      "[95]\ttrain-auc:0.973818+0.00123234\ttest-auc:0.890573+0.00374756\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "c:\\users\\marcp\\appdata\\local\\programs\\python\\python36\\lib\\site-packages\\sklearn\\preprocessing\\label.py:151: DeprecationWarning: The truth value of an empty array is ambiguous. Returning False, but in future this will result in an error. Use `array.size > 0` to check that an array is not empty.\n",
      "  if diff:\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Model Report\n",
      "Model best iteration : 47 with an auc score of : 0.8919674000000001\n",
      "Accuracy : 0.8976470588235295\n",
      "AUC Score (Train): 0.94126651701505\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Choose all predictors except target & IDcols\n",
    "#predictors = [x for x in train.columns if x not in [target, IDcol]]\n",
    "xgb1 = XGBClassifier(\n",
    " learning_rate =0.1,\n",
    " n_estimators=1000,\n",
    " max_depth=5,\n",
    " min_child_weight=1,\n",
    " gamma=0,\n",
    " subsample=0.8,\n",
    " colsample_bytree=0.8,\n",
    " objective= 'binary:logistic',\n",
    " nthread=4,\n",
    " scale_pos_weight=1,\n",
    " seed=27)\n",
    "modelfit(xgb1, train, predictors)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1481,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['CurrentTotalBalance_rel_month_12', 'CurrentTotalBalance_rel_month_13',\n",
       "       'CurrentTotalBalance_rel_month_9', 'CurrentTotalBalance_rel_month_11',\n",
       "       'CurrentTotalBalance_rel_month_10', 'CurrentTotalBalance_rel_month_8',\n",
       "       'DelqCycle_std', 'CurrentTotalBalance_rel_month_7', 'DelqCycle_avg',\n",
       "       'DelqCycle_month_13', 'CurrentTotalBalance_rel_month_6',\n",
       "       'CurrentTotalBalance_rel_month_5', 'CurrentTotalBalance_rel_month_4',\n",
       "       'DelqCycle_month_12', 'CurrentTotalBalance_rel_month_3',\n",
       "       'CurrentTotalBalance_rel_month_2', 'TRANSACTION_logAMT_month_13',\n",
       "       'CurrentTotalBalance_rel_month_1', 'DelqCycle_month_11',\n",
       "       'DelqCycle_month_10', 'TRANSACTION_logAMT_month_12',\n",
       "       'DelqCycle_month_9', 'CurrentTotalBalance_log_month_12',\n",
       "       'CurrentTotalBalance_log_month_13', 'CurrentTotalBalance_avg_log',\n",
       "       'TRANSACTION_AMT_avg_log', 'CurrentTotalBalance_log_month_11',\n",
       "       'DelqCycle_month_8', 'CurrentTotalBalance_log_month_10',\n",
       "       'CurrentTotalBalance_log_month_9', 'CurrentTotalBalance_log_month_8',\n",
       "       'CreditLimit_log', 'DelqCycle_month_7', 'TRANSACTION_logAMT_month_11',\n",
       "       'TRANSACTION_logAMT_month_9', 'DelqCycle_month_3',\n",
       "       'CurrentTotalBalance_log_month_7', 'CurrentTotalBalance_log_month_3',\n",
       "       'CurrentTotalBalance_log_month_4', 'DelqCycle_month_2',\n",
       "       'DelqCycle_month_4', 'DelqCycle_month_5',\n",
       "       'CurrentTotalBalance_log_month_6', 'CurrentTotalBalance_log_month_5',\n",
       "       'DelqCycle_month_1', 'DelqCycle_month_6', 'TRANSACTION_logAMT_month_8',\n",
       "       'CurrentTotalBalance_log_month_2', 'TRANSACTION_logAMT_month_7',\n",
       "       'TRANSACTION_logAMT_month_6', 'TRANSACTION_relAMT_month_13',\n",
       "       'TRANSACTION_logAMT_month_10', 'CurrentTotalBalance_log_month_1',\n",
       "       'TRANSACTION_logAMT_month_2', 'TRANSACTION_logAMT_month_3',\n",
       "       'TRANSACTION_logAMT_month_4', 'TRANSACTION_relAMT_month_12',\n",
       "       'CurrentTotalBalance_sign_month_12',\n",
       "       'CurrentTotalBalance_sign_month_13', 'TRANSACTION_logAMT_month_5',\n",
       "       'C(CreditLimit_cat)[T.[10000, 20000)]',\n",
       "       'CurrentTotalBalance_sign_month_11', 'CurrentTotalBalance_sign_month_8',\n",
       "       'CurrentTotalBalance_sign_month_9', 'TRANSACTION_relAMT_month_5',\n",
       "       'CurrentTotalBalance_sign_month_10', 'CurrentTotalBalance_sign_month_7',\n",
       "       'CurrentTotalBalance_sign_month_2', 'CurrentTotalBalance_sign_month_3',\n",
       "       'TRANSACTION_relAMT_month_4', 'CurrentTotalBalance_sign_month_4',\n",
       "       'CurrentTotalBalance_sign_month_5', 'CurrentTotalBalance_sign_month_6',\n",
       "       'TRANSACTION_relAMT_month_3', 'CurrentTotalBalance_sign_month_1',\n",
       "       'TRANSACTION_relAMT_month_2', 'C(CreditLimit_cat)[T.[20000, 30000)]',\n",
       "       'TRANSACTION_relAMT_month_1', 'TRANSACTION_relAMT_month_6',\n",
       "       'TRANSACTION_relAMT_month_9', 'TRANSACTION_relAMT_month_11',\n",
       "       'C(CreditLimit_cat)[T.[30000, 40000)]',\n",
       "       'C(CreditLimit_cat)[T.[40000, 50000)]', 'TRANSACTION_logAMT_month_1',\n",
       "       'TRANSACTION_relAMT_month_7', 'C(CreditLimit_cat)[T.[60000, 70000)]',\n",
       "       'C(CreditLimit_cat)[T.[80000, 90000)]', 'TRANSACTION_relAMT_month_10',\n",
       "       'C(CreditLimit_cat)[T.[70000, 80000)]',\n",
       "       'C(CreditLimit_cat)[T.[50000, 60000)]'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 1481,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X.columns[top_indices]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1487,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "([mean: 0.88533, std: 0.01804, params: {'max_depth': 3, 'min_child_weight': 1},\n",
       "  mean: 0.88531, std: 0.01786, params: {'max_depth': 3, 'min_child_weight': 3},\n",
       "  mean: 0.88612, std: 0.01836, params: {'max_depth': 3, 'min_child_weight': 5},\n",
       "  mean: 0.88520, std: 0.01567, params: {'max_depth': 5, 'min_child_weight': 1},\n",
       "  mean: 0.88493, std: 0.01637, params: {'max_depth': 5, 'min_child_weight': 3},\n",
       "  mean: 0.88540, std: 0.01620, params: {'max_depth': 5, 'min_child_weight': 5},\n",
       "  mean: 0.88454, std: 0.01602, params: {'max_depth': 7, 'min_child_weight': 1},\n",
       "  mean: 0.88381, std: 0.01496, params: {'max_depth': 7, 'min_child_weight': 3},\n",
       "  mean: 0.88458, std: 0.01586, params: {'max_depth': 7, 'min_child_weight': 5},\n",
       "  mean: 0.88229, std: 0.01551, params: {'max_depth': 9, 'min_child_weight': 1},\n",
       "  mean: 0.88077, std: 0.01562, params: {'max_depth': 9, 'min_child_weight': 3},\n",
       "  mean: 0.88423, std: 0.01536, params: {'max_depth': 9, 'min_child_weight': 5}],\n",
       " {'max_depth': 3, 'min_child_weight': 5},\n",
       " 0.8861178924444099)"
      ]
     },
     "execution_count": 1487,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "param_test1 = {\n",
    " 'max_depth':np.arange(3,10,2),\n",
    " 'min_child_weight':np.arange(1,6,2)\n",
    "}\n",
    "gsearch1 = GridSearchCV(estimator = XGBClassifier(learning_rate =0.1, n_estimators=50, max_depth=5,\n",
    " min_child_weight=1, gamma=0, subsample=0.8, colsample_bytree=0.8,\n",
    " objective= 'binary:logistic', nthread=4, scale_pos_weight=1, seed=27), \n",
    " param_grid = param_test1, scoring='roc_auc',n_jobs=4,iid=False, cv=5)\n",
    "\n",
    "gsearch1.fit(XX,y)\n",
    "#gsearch1.fit(train[predictors,train[target])\n",
    "\n",
    "gsearch1.grid_scores_, gsearch1.best_params_, gsearch1.best_score_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1489,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "([mean: 0.88018, std: 0.02352, params: {'max_depth': 1, 'min_child_weight': 4},\n",
       "  mean: 0.88018, std: 0.02352, params: {'max_depth': 1, 'min_child_weight': 5},\n",
       "  mean: 0.88018, std: 0.02352, params: {'max_depth': 1, 'min_child_weight': 6},\n",
       "  mean: 0.88302, std: 0.01959, params: {'max_depth': 2, 'min_child_weight': 4},\n",
       "  mean: 0.88298, std: 0.01952, params: {'max_depth': 2, 'min_child_weight': 5},\n",
       "  mean: 0.88315, std: 0.01936, params: {'max_depth': 2, 'min_child_weight': 6},\n",
       "  mean: 0.88556, std: 0.01849, params: {'max_depth': 3, 'min_child_weight': 4},\n",
       "  mean: 0.88612, std: 0.01836, params: {'max_depth': 3, 'min_child_weight': 5},\n",
       "  mean: 0.88512, std: 0.01762, params: {'max_depth': 3, 'min_child_weight': 6}],\n",
       " {'max_depth': 3, 'min_child_weight': 5},\n",
       " 0.8861178924444099)"
      ]
     },
     "execution_count": 1489,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "param_test1 = {\n",
    " 'max_depth':[1,2,3],\n",
    " 'min_child_weight':[4,5,6]\n",
    "}\n",
    "gsearch1 = GridSearchCV(estimator = XGBClassifier(learning_rate =0.1, n_estimators=50, max_depth=5,\n",
    " min_child_weight=1, gamma=0, subsample=0.8, colsample_bytree=0.8,\n",
    " objective= 'binary:logistic', nthread=4, scale_pos_weight=1, seed=27), \n",
    " param_grid = param_test1, scoring='roc_auc',n_jobs=4,iid=False, cv=5)\n",
    "\n",
    "gsearch1.fit(XX,y)\n",
    "#gsearch1.fit(train[predictors,train[target])\n",
    "\n",
    "gsearch1.grid_scores_, gsearch1.best_params_, gsearch1.best_score_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1493,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "([mean: 0.88462, std: 0.01434, params: {'gamma': 0.1},\n",
       "  mean: 0.88462, std: 0.01434, params: {'gamma': 0.15},\n",
       "  mean: 0.88459, std: 0.01435, params: {'gamma': 0.2},\n",
       "  mean: 0.88485, std: 0.01445, params: {'gamma': 0.25},\n",
       "  mean: 0.88485, std: 0.01445, params: {'gamma': 0.3},\n",
       "  mean: 0.88485, std: 0.01445, params: {'gamma': 0.35},\n",
       "  mean: 0.88467, std: 0.01402, params: {'gamma': 0.4},\n",
       "  mean: 0.88467, std: 0.01402, params: {'gamma': 0.45}],\n",
       " {'gamma': 0.25},\n",
       " 0.8848505979867973)"
      ]
     },
     "execution_count": 1493,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "param_test3 = {\n",
    " #'gamma':[i/20.0 for i in range(2,5)] first test\n",
    " 'gamma':[i/20.0 for i in range(2,10)] # second test\n",
    "}\n",
    "gsearch3 = GridSearchCV(estimator = XGBClassifier( learning_rate =0.1, n_estimators=140, max_depth=3,\n",
    " min_child_weight=5, gamma=0, subsample=0.8, colsample_bytree=0.8,\n",
    " objective= 'binary:logistic', nthread=4, scale_pos_weight=1,seed=27), \n",
    " param_grid = param_test3, scoring='roc_auc',n_jobs=4,iid=False, cv=5)\n",
    "gsearch3.fit(XX,y)\n",
    "gsearch3.grid_scores_, gsearch3.best_params_, gsearch3.best_score_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1494,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\ttrain-auc:0.85192+0.00370704\ttest-auc:0.844509+0.00388301\n",
      "[1]\ttrain-auc:0.863936+0.00457328\ttest-auc:0.854537+0.00682644\n",
      "[2]\ttrain-auc:0.872428+0.00363046\ttest-auc:0.862758+0.00753797\n",
      "[3]\ttrain-auc:0.877104+0.00307229\ttest-auc:0.868815+0.00807662\n",
      "[4]\ttrain-auc:0.879245+0.00276547\ttest-auc:0.872133+0.00667127\n",
      "[5]\ttrain-auc:0.881645+0.00330828\ttest-auc:0.873863+0.0064605\n",
      "[6]\ttrain-auc:0.883867+0.00273703\ttest-auc:0.875818+0.00658213\n",
      "[7]\ttrain-auc:0.885373+0.00239418\ttest-auc:0.878082+0.00756485\n",
      "[8]\ttrain-auc:0.886726+0.0021346\ttest-auc:0.878881+0.00746858\n",
      "[9]\ttrain-auc:0.887807+0.00237905\ttest-auc:0.879661+0.00676244\n",
      "[10]\ttrain-auc:0.88855+0.00240858\ttest-auc:0.88021+0.00642219\n",
      "[11]\ttrain-auc:0.890325+0.00194323\ttest-auc:0.881284+0.00638732\n",
      "[12]\ttrain-auc:0.892116+0.00107313\ttest-auc:0.882308+0.006823\n",
      "[13]\ttrain-auc:0.892511+0.00090952\ttest-auc:0.882912+0.00715046\n",
      "[14]\ttrain-auc:0.893157+0.00104419\ttest-auc:0.883452+0.00731846\n",
      "[15]\ttrain-auc:0.893823+0.00117336\ttest-auc:0.883974+0.00715791\n",
      "[16]\ttrain-auc:0.894602+0.00106635\ttest-auc:0.884409+0.00757839\n",
      "[17]\ttrain-auc:0.895578+0.000487737\ttest-auc:0.885044+0.0077878\n",
      "[18]\ttrain-auc:0.895979+0.00048117\ttest-auc:0.885218+0.00762837\n",
      "[19]\ttrain-auc:0.896978+0.00113008\ttest-auc:0.886087+0.00664833\n",
      "[20]\ttrain-auc:0.898041+0.00101772\ttest-auc:0.886316+0.00689958\n",
      "[21]\ttrain-auc:0.898536+0.00108828\ttest-auc:0.886652+0.00677871\n",
      "[22]\ttrain-auc:0.89956+0.00100612\ttest-auc:0.887307+0.00643228\n",
      "[23]\ttrain-auc:0.90017+0.00100551\ttest-auc:0.887377+0.00642914\n",
      "[24]\ttrain-auc:0.900657+0.00111969\ttest-auc:0.887893+0.0058518\n",
      "[25]\ttrain-auc:0.901091+0.00111732\ttest-auc:0.888184+0.00602639\n",
      "[26]\ttrain-auc:0.901487+0.00107595\ttest-auc:0.888583+0.00599046\n",
      "[27]\ttrain-auc:0.902212+0.00110872\ttest-auc:0.888584+0.00614054\n",
      "[28]\ttrain-auc:0.902839+0.000968642\ttest-auc:0.888835+0.00581022\n",
      "[29]\ttrain-auc:0.903339+0.000946693\ttest-auc:0.889194+0.00536389\n",
      "[30]\ttrain-auc:0.903752+0.000932332\ttest-auc:0.889109+0.0054257\n",
      "[31]\ttrain-auc:0.904284+0.0010072\ttest-auc:0.889376+0.00566099\n",
      "[32]\ttrain-auc:0.904804+0.00083772\ttest-auc:0.889569+0.00569693\n",
      "[33]\ttrain-auc:0.905397+0.000835497\ttest-auc:0.889879+0.00569441\n",
      "[34]\ttrain-auc:0.905947+0.000931338\ttest-auc:0.889899+0.00576406\n",
      "[35]\ttrain-auc:0.906324+0.00102368\ttest-auc:0.890162+0.00562388\n",
      "[36]\ttrain-auc:0.906751+0.00103488\ttest-auc:0.890201+0.00561509\n",
      "[37]\ttrain-auc:0.907206+0.0010095\ttest-auc:0.890362+0.00552649\n",
      "[38]\ttrain-auc:0.907487+0.00105342\ttest-auc:0.890446+0.00549656\n",
      "[39]\ttrain-auc:0.907988+0.00095425\ttest-auc:0.890671+0.00555478\n",
      "[40]\ttrain-auc:0.908344+0.00108382\ttest-auc:0.890868+0.00547297\n",
      "[41]\ttrain-auc:0.908751+0.000998695\ttest-auc:0.890955+0.00539017\n",
      "[42]\ttrain-auc:0.909162+0.000929511\ttest-auc:0.891015+0.00532312\n",
      "[43]\ttrain-auc:0.909498+0.000889272\ttest-auc:0.891123+0.00529117\n",
      "[44]\ttrain-auc:0.909838+0.000836014\ttest-auc:0.891082+0.00520805\n",
      "[45]\ttrain-auc:0.910199+0.000724625\ttest-auc:0.891157+0.00522633\n",
      "[46]\ttrain-auc:0.910481+0.000772908\ttest-auc:0.891293+0.00512878\n",
      "[47]\ttrain-auc:0.910956+0.000919173\ttest-auc:0.891265+0.00520052\n",
      "[48]\ttrain-auc:0.91128+0.000940793\ttest-auc:0.891242+0.00529518\n",
      "[49]\ttrain-auc:0.911609+0.000940271\ttest-auc:0.891334+0.00529785\n",
      "[50]\ttrain-auc:0.911927+0.000856103\ttest-auc:0.891284+0.00541557\n",
      "[51]\ttrain-auc:0.9123+0.000945878\ttest-auc:0.891321+0.00541136\n",
      "[52]\ttrain-auc:0.912654+0.00099915\ttest-auc:0.891361+0.00544159\n",
      "[53]\ttrain-auc:0.913032+0.00102284\ttest-auc:0.891399+0.00542328\n",
      "[54]\ttrain-auc:0.91336+0.000969703\ttest-auc:0.891507+0.00533597\n",
      "[55]\ttrain-auc:0.913649+0.00103877\ttest-auc:0.891495+0.00535368\n",
      "[56]\ttrain-auc:0.914011+0.000952709\ttest-auc:0.891649+0.00536879\n",
      "[57]\ttrain-auc:0.914299+0.000979098\ttest-auc:0.891715+0.0054045\n",
      "[58]\ttrain-auc:0.914659+0.000944027\ttest-auc:0.89178+0.00548389\n",
      "[59]\ttrain-auc:0.914961+0.000981361\ttest-auc:0.891795+0.00538652\n",
      "[60]\ttrain-auc:0.915289+0.000939184\ttest-auc:0.891898+0.00552434\n",
      "[61]\ttrain-auc:0.915572+0.000976609\ttest-auc:0.891959+0.00552909\n",
      "[62]\ttrain-auc:0.915965+0.00104568\ttest-auc:0.891833+0.00555459\n",
      "[63]\ttrain-auc:0.91625+0.000998901\ttest-auc:0.891957+0.00556758\n",
      "[64]\ttrain-auc:0.916677+0.00100209\ttest-auc:0.892264+0.00545928\n",
      "[65]\ttrain-auc:0.916939+0.00101585\ttest-auc:0.892162+0.00542344\n",
      "[66]\ttrain-auc:0.917149+0.00098429\ttest-auc:0.892139+0.00541762\n",
      "[67]\ttrain-auc:0.917324+0.00106954\ttest-auc:0.892162+0.00543182\n",
      "[68]\ttrain-auc:0.917553+0.00113531\ttest-auc:0.892175+0.00539801\n",
      "[69]\ttrain-auc:0.917943+0.00105504\ttest-auc:0.892137+0.0054735\n",
      "[70]\ttrain-auc:0.918206+0.000990168\ttest-auc:0.892097+0.00536223\n",
      "[71]\ttrain-auc:0.918494+0.00106524\ttest-auc:0.89219+0.00540478\n",
      "[72]\ttrain-auc:0.918777+0.00107785\ttest-auc:0.892313+0.00538804\n",
      "[73]\ttrain-auc:0.919007+0.00106241\ttest-auc:0.892317+0.00544409\n",
      "[74]\ttrain-auc:0.919232+0.00107438\ttest-auc:0.892366+0.00550765\n",
      "[75]\ttrain-auc:0.919415+0.00113542\ttest-auc:0.89238+0.00550378\n",
      "[76]\ttrain-auc:0.919693+0.00109051\ttest-auc:0.892384+0.00545207\n",
      "[77]\ttrain-auc:0.919962+0.00115022\ttest-auc:0.892347+0.00548967\n",
      "[78]\ttrain-auc:0.920211+0.00115777\ttest-auc:0.89242+0.0054116\n",
      "[79]\ttrain-auc:0.920407+0.00115171\ttest-auc:0.892414+0.00530542\n",
      "[80]\ttrain-auc:0.920618+0.00112528\ttest-auc:0.892504+0.00523716\n",
      "[81]\ttrain-auc:0.920882+0.00102353\ttest-auc:0.892455+0.00527745\n",
      "[82]\ttrain-auc:0.921099+0.0010504\ttest-auc:0.892676+0.00528858\n",
      "[83]\ttrain-auc:0.921363+0.000895446\ttest-auc:0.892664+0.00522525\n",
      "[84]\ttrain-auc:0.921713+0.000891095\ttest-auc:0.892716+0.00520788\n",
      "[85]\ttrain-auc:0.921986+0.000907325\ttest-auc:0.892779+0.00513354\n",
      "[86]\ttrain-auc:0.922216+0.000886647\ttest-auc:0.892746+0.00515726\n",
      "[87]\ttrain-auc:0.922601+0.000825676\ttest-auc:0.892853+0.00523452\n",
      "[88]\ttrain-auc:0.922868+0.000758539\ttest-auc:0.892806+0.00518888\n",
      "[89]\ttrain-auc:0.923147+0.000783715\ttest-auc:0.8929+0.00517304\n",
      "[90]\ttrain-auc:0.923314+0.000741758\ttest-auc:0.892954+0.00514913\n",
      "[91]\ttrain-auc:0.923633+0.000853685\ttest-auc:0.892936+0.00518107\n",
      "[92]\ttrain-auc:0.92393+0.000745917\ttest-auc:0.892947+0.00519261\n",
      "[93]\ttrain-auc:0.924126+0.00071872\ttest-auc:0.892956+0.00512538\n",
      "[94]\ttrain-auc:0.924409+0.000718816\ttest-auc:0.892975+0.00512066\n",
      "[95]\ttrain-auc:0.924636+0.000680597\ttest-auc:0.892902+0.00512313\n",
      "[96]\ttrain-auc:0.924879+0.000773642\ttest-auc:0.89291+0.00513266\n",
      "[97]\ttrain-auc:0.925182+0.000830385\ttest-auc:0.892866+0.00505769\n",
      "[98]\ttrain-auc:0.925443+0.000858064\ttest-auc:0.892849+0.00497085\n",
      "[99]\ttrain-auc:0.925656+0.000898252\ttest-auc:0.89288+0.00499116\n",
      "[100]\ttrain-auc:0.925897+0.000923959\ttest-auc:0.892782+0.00498475\n",
      "[101]\ttrain-auc:0.926115+0.000867751\ttest-auc:0.8927+0.00495406\n",
      "[102]\ttrain-auc:0.92639+0.000889567\ttest-auc:0.892737+0.00506078\n",
      "[103]\ttrain-auc:0.926591+0.000953032\ttest-auc:0.892719+0.00507707\n",
      "[104]\ttrain-auc:0.926919+0.000978499\ttest-auc:0.89271+0.00499104\n",
      "[105]\ttrain-auc:0.927122+0.00101956\ttest-auc:0.892544+0.0050502\n",
      "[106]\ttrain-auc:0.927407+0.00107024\ttest-auc:0.892584+0.00503386\n",
      "[107]\ttrain-auc:0.927567+0.00101069\ttest-auc:0.892592+0.00500077\n",
      "[108]\ttrain-auc:0.927821+0.00103064\ttest-auc:0.892616+0.00496837\n",
      "[109]\ttrain-auc:0.928039+0.00100214\ttest-auc:0.892602+0.00488247\n",
      "[110]\ttrain-auc:0.928306+0.000918375\ttest-auc:0.892628+0.0048638\n",
      "[111]\ttrain-auc:0.928611+0.000953787\ttest-auc:0.892628+0.00481559\n",
      "[112]\ttrain-auc:0.928863+0.000987826\ttest-auc:0.892656+0.00499695\n",
      "[113]\ttrain-auc:0.929176+0.000942072\ttest-auc:0.892614+0.00509999\n",
      "[114]\ttrain-auc:0.929446+0.00100392\ttest-auc:0.892586+0.00512926\n",
      "[115]\ttrain-auc:0.929725+0.000983339\ttest-auc:0.892494+0.0051256\n",
      "[116]\ttrain-auc:0.930019+0.000967551\ttest-auc:0.892435+0.00499569\n",
      "[117]\ttrain-auc:0.930233+0.000962251\ttest-auc:0.892432+0.00500106\n",
      "[118]\ttrain-auc:0.930466+0.000980388\ttest-auc:0.892418+0.00501742\n",
      "[119]\ttrain-auc:0.930685+0.000916979\ttest-auc:0.892374+0.00503598\n",
      "[120]\ttrain-auc:0.930861+0.000958776\ttest-auc:0.89237+0.00505564\n",
      "[121]\ttrain-auc:0.93099+0.000886587\ttest-auc:0.892349+0.00502309\n",
      "[122]\ttrain-auc:0.931321+0.00096431\ttest-auc:0.892293+0.00504883\n",
      "[123]\ttrain-auc:0.931491+0.00100791\ttest-auc:0.892271+0.00500619\n",
      "[124]\ttrain-auc:0.931678+0.000999762\ttest-auc:0.892254+0.00503146\n",
      "[125]\ttrain-auc:0.931828+0.000980253\ttest-auc:0.892261+0.00508202\n",
      "[126]\ttrain-auc:0.932079+0.000984309\ttest-auc:0.892161+0.00502423\n",
      "[127]\ttrain-auc:0.932313+0.00105464\ttest-auc:0.892018+0.004924\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[128]\ttrain-auc:0.93259+0.00110387\ttest-auc:0.891906+0.00494563\n",
      "[129]\ttrain-auc:0.932795+0.00112115\ttest-auc:0.891913+0.00495949\n",
      "[130]\ttrain-auc:0.932956+0.00114305\ttest-auc:0.891897+0.00495298\n",
      "[131]\ttrain-auc:0.93316+0.00103829\ttest-auc:0.891907+0.00491613\n",
      "[132]\ttrain-auc:0.933326+0.00109335\ttest-auc:0.891915+0.004922\n",
      "[133]\ttrain-auc:0.933571+0.00112859\ttest-auc:0.891876+0.00491865\n",
      "[134]\ttrain-auc:0.933775+0.00105144\ttest-auc:0.891838+0.00488222\n",
      "[135]\ttrain-auc:0.934007+0.00108253\ttest-auc:0.891743+0.00486722\n",
      "[136]\ttrain-auc:0.934232+0.00107181\ttest-auc:0.891811+0.00475207\n",
      "[137]\ttrain-auc:0.934471+0.00101186\ttest-auc:0.891743+0.00485404\n",
      "[138]\ttrain-auc:0.934667+0.0010218\ttest-auc:0.891776+0.00484539\n",
      "[139]\ttrain-auc:0.934894+0.00102026\ttest-auc:0.891675+0.00487404\n",
      "[140]\ttrain-auc:0.935088+0.000983964\ttest-auc:0.891726+0.00485488\n",
      "[141]\ttrain-auc:0.935314+0.00100608\ttest-auc:0.891784+0.00477361\n",
      "[142]\ttrain-auc:0.935509+0.00103505\ttest-auc:0.891826+0.00482791\n",
      "[143]\ttrain-auc:0.935705+0.00105547\ttest-auc:0.891843+0.00483415\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "c:\\users\\marcp\\appdata\\local\\programs\\python\\python36\\lib\\site-packages\\sklearn\\preprocessing\\label.py:151: DeprecationWarning: The truth value of an empty array is ambiguous. Returning False, but in future this will result in an error. Use `array.size > 0` to check that an array is not empty.\n",
      "  if diff:\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Model Report\n",
      "Model best iteration : 95 with an auc score of : 0.8929752000000001\n",
      "Accuracy : 0.8810924369747899\n",
      "AUC Score (Train): 0.9195433538523655\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "xgb2 = XGBClassifier(\n",
    " learning_rate =0.1,\n",
    " n_estimators=1000,\n",
    " max_depth=3,\n",
    " min_child_weight=5,\n",
    " gamma=0.25,\n",
    " subsample=0.8,\n",
    " colsample_bytree=0.8,\n",
    " objective= 'binary:logistic',\n",
    " nthread=4,\n",
    " scale_pos_weight=1,\n",
    " seed=27)\n",
    "modelfit(xgb2, train, predictors)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1495,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "([mean: 0.88541, std: 0.01421, params: {'colsample_bytree': 0.6, 'subsample': 0.6},\n",
       "  mean: 0.88581, std: 0.01540, params: {'colsample_bytree': 0.6, 'subsample': 0.7},\n",
       "  mean: 0.88537, std: 0.01535, params: {'colsample_bytree': 0.6, 'subsample': 0.8},\n",
       "  mean: 0.88553, std: 0.01581, params: {'colsample_bytree': 0.6, 'subsample': 0.9},\n",
       "  mean: 0.88430, std: 0.01472, params: {'colsample_bytree': 0.7, 'subsample': 0.6},\n",
       "  mean: 0.88617, std: 0.01534, params: {'colsample_bytree': 0.7, 'subsample': 0.7},\n",
       "  mean: 0.88460, std: 0.01554, params: {'colsample_bytree': 0.7, 'subsample': 0.8},\n",
       "  mean: 0.88419, std: 0.01495, params: {'colsample_bytree': 0.7, 'subsample': 0.9},\n",
       "  mean: 0.88494, std: 0.01487, params: {'colsample_bytree': 0.8, 'subsample': 0.6},\n",
       "  mean: 0.88505, std: 0.01622, params: {'colsample_bytree': 0.8, 'subsample': 0.7},\n",
       "  mean: 0.88605, std: 0.01592, params: {'colsample_bytree': 0.8, 'subsample': 0.8},\n",
       "  mean: 0.88512, std: 0.01495, params: {'colsample_bytree': 0.8, 'subsample': 0.9},\n",
       "  mean: 0.88457, std: 0.01563, params: {'colsample_bytree': 0.9, 'subsample': 0.6},\n",
       "  mean: 0.88476, std: 0.01627, params: {'colsample_bytree': 0.9, 'subsample': 0.7},\n",
       "  mean: 0.88530, std: 0.01646, params: {'colsample_bytree': 0.9, 'subsample': 0.8},\n",
       "  mean: 0.88454, std: 0.01424, params: {'colsample_bytree': 0.9, 'subsample': 0.9}],\n",
       " {'colsample_bytree': 0.7, 'subsample': 0.7},\n",
       " 0.8861703464787182)"
      ]
     },
     "execution_count": 1495,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "param_test4 = {\n",
    " 'subsample':[i/10.0 for i in range(6,10)],\n",
    " 'colsample_bytree':[i/10.0 for i in range(6,10)]\n",
    "}\n",
    "gsearch4 = GridSearchCV(estimator = XGBClassifier(learning_rate =0.1, n_estimators=95, max_depth=3,\n",
    " min_child_weight=5, gamma=0.25, subsample=0.8, colsample_bytree=0.8,\n",
    " objective= 'binary:logistic', nthread=4, scale_pos_weight=1,seed=27), \n",
    " param_grid = param_test4, scoring='roc_auc',n_jobs=4,iid=False, cv=5)\n",
    "gsearch4.fit(XX,y)\n",
    "gsearch4.grid_scores_, gsearch4.best_params_, gsearch4.best_score_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1498,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "([mean: 0.88566, std: 0.01742, params: {'colsample_bytree': 0.65, 'subsample': 0.65},\n",
       "  mean: 0.88600, std: 0.01669, params: {'colsample_bytree': 0.65, 'subsample': 0.7},\n",
       "  mean: 0.88522, std: 0.01593, params: {'colsample_bytree': 0.65, 'subsample': 0.75},\n",
       "  mean: 0.88581, std: 0.01665, params: {'colsample_bytree': 0.7, 'subsample': 0.65},\n",
       "  mean: 0.88617, std: 0.01534, params: {'colsample_bytree': 0.7, 'subsample': 0.7},\n",
       "  mean: 0.88535, std: 0.01570, params: {'colsample_bytree': 0.7, 'subsample': 0.75},\n",
       "  mean: 0.88640, std: 0.01727, params: {'colsample_bytree': 0.75, 'subsample': 0.65},\n",
       "  mean: 0.88573, std: 0.01623, params: {'colsample_bytree': 0.75, 'subsample': 0.7},\n",
       "  mean: 0.88565, std: 0.01566, params: {'colsample_bytree': 0.75, 'subsample': 0.75}],\n",
       " {'colsample_bytree': 0.75, 'subsample': 0.65},\n",
       " 0.88639613164359)"
      ]
     },
     "execution_count": 1498,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "param_test5 = {\n",
    " 'subsample':[i/100.0 for i in range(65,80,5)],\n",
    " 'colsample_bytree':[i/100.0 for i in range(65,80,5)]\n",
    "}\n",
    "gsearch5 = GridSearchCV(estimator = XGBClassifier(learning_rate =0.1, n_estimators=95, max_depth=3,\n",
    " min_child_weight=5, gamma=0.25, subsample=0.8, colsample_bytree=0.8,\n",
    " objective= 'binary:logistic', nthread=4, scale_pos_weight=1,seed=27),  \n",
    " param_grid = param_test5, scoring='roc_auc',n_jobs=4,iid=False, cv=5)\n",
    "gsearch5.fit(XX,y)\n",
    "gsearch5.grid_scores_, gsearch5.best_params_, gsearch5.best_score_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1499,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "([mean: 0.88640, std: 0.01727, params: {'reg_alpha': 1e-05},\n",
       "  mean: 0.88593, std: 0.01654, params: {'reg_alpha': 0.01},\n",
       "  mean: 0.88616, std: 0.01650, params: {'reg_alpha': 0.1},\n",
       "  mean: 0.88544, std: 0.01650, params: {'reg_alpha': 1},\n",
       "  mean: 0.88376, std: 0.02070, params: {'reg_alpha': 100}],\n",
       " {'reg_alpha': 1e-05},\n",
       " 0.88639613164359)"
      ]
     },
     "execution_count": 1499,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "param_test6 = {\n",
    " 'reg_alpha':[1e-5, 1e-2, 0.1, 1, 100]\n",
    "}\n",
    "gsearch6 = GridSearchCV(estimator = XGBClassifier(learning_rate =0.1, n_estimators=95, max_depth=3,\n",
    " min_child_weight=5, gamma=0.25, subsample=0.65, colsample_bytree=0.75,\n",
    " objective= 'binary:logistic', nthread=4, scale_pos_weight=1,seed=27), \n",
    " param_grid = param_test6, scoring='roc_auc',n_jobs=4,iid=False, cv=5)\n",
    "gsearch6.fit(XX,y)\n",
    "gsearch6.grid_scores_, gsearch6.best_params_, gsearch6.best_score_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1503,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "([mean: 0.88640, std: 0.01727, params: {'reg_alpha': 9e-05},\n",
       "  mean: 0.88640, std: 0.01727, params: {'reg_alpha': 0.0001},\n",
       "  mean: 0.88640, std: 0.01727, params: {'reg_alpha': 0.00011}],\n",
       " {'reg_alpha': 9e-05},\n",
       " 0.886396358210869)"
      ]
     },
     "execution_count": 1503,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "param_test7 = {\n",
    " 'reg_alpha':[0.00009, 0.0001, 0.00011]\n",
    "}\n",
    "gsearch7 = GridSearchCV(estimator = XGBClassifier(learning_rate =0.1, n_estimators=95, max_depth=3,\n",
    " min_child_weight=5, gamma=0.25, subsample=0.65, colsample_bytree=0.75,\n",
    " objective= 'binary:logistic', nthread=4, scale_pos_weight=1,seed=27),\n",
    " param_grid = param_test7, scoring='roc_auc',n_jobs=4,iid=False, cv=5)\n",
    "gsearch7.fit(XX,y)\n",
    "gsearch7.grid_scores_, gsearch7.best_params_, gsearch7.best_score_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1504,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\ttrain-auc:0.855942+0.00196614\ttest-auc:0.848778+0.00682296\n",
      "[1]\ttrain-auc:0.868863+0.00422785\ttest-auc:0.863551+0.00697629\n",
      "[2]\ttrain-auc:0.874195+0.00529129\ttest-auc:0.868296+0.00469515\n",
      "[3]\ttrain-auc:0.878816+0.00265293\ttest-auc:0.87201+0.00437017\n",
      "[4]\ttrain-auc:0.880934+0.00320938\ttest-auc:0.874091+0.0063226\n",
      "[5]\ttrain-auc:0.882835+0.00319199\ttest-auc:0.875069+0.00555814\n",
      "[6]\ttrain-auc:0.884951+0.00296715\ttest-auc:0.877794+0.00556452\n",
      "[7]\ttrain-auc:0.886249+0.00253177\ttest-auc:0.878458+0.00643384\n",
      "[8]\ttrain-auc:0.887144+0.0025678\ttest-auc:0.878589+0.00602505\n",
      "[9]\ttrain-auc:0.887742+0.00221201\ttest-auc:0.878782+0.00578687\n",
      "[10]\ttrain-auc:0.889045+0.00200221\ttest-auc:0.8804+0.00655194\n",
      "[11]\ttrain-auc:0.889938+0.0017325\ttest-auc:0.880855+0.00659419\n",
      "[12]\ttrain-auc:0.891241+0.0018243\ttest-auc:0.881828+0.00694167\n",
      "[13]\ttrain-auc:0.891684+0.00191127\ttest-auc:0.882367+0.0061802\n",
      "[14]\ttrain-auc:0.892232+0.0018132\ttest-auc:0.883179+0.00660246\n",
      "[15]\ttrain-auc:0.893408+0.00255958\ttest-auc:0.88357+0.00646628\n",
      "[16]\ttrain-auc:0.894574+0.00151972\ttest-auc:0.883712+0.00654228\n",
      "[17]\ttrain-auc:0.895622+0.000776338\ttest-auc:0.884658+0.00703558\n",
      "[18]\ttrain-auc:0.896225+0.00054774\ttest-auc:0.884739+0.00708157\n",
      "[19]\ttrain-auc:0.89724+0.000761917\ttest-auc:0.885328+0.00652248\n",
      "[20]\ttrain-auc:0.897865+0.00101915\ttest-auc:0.886029+0.00621481\n",
      "[21]\ttrain-auc:0.898532+0.00119699\ttest-auc:0.886744+0.00520895\n",
      "[22]\ttrain-auc:0.899387+0.00126505\ttest-auc:0.887301+0.00510472\n",
      "[23]\ttrain-auc:0.899897+0.0013626\ttest-auc:0.887543+0.00541328\n",
      "[24]\ttrain-auc:0.900557+0.00139678\ttest-auc:0.888037+0.00536053\n",
      "[25]\ttrain-auc:0.901057+0.00133989\ttest-auc:0.888342+0.00526258\n",
      "[26]\ttrain-auc:0.901472+0.0011431\ttest-auc:0.888826+0.00543513\n",
      "[27]\ttrain-auc:0.902104+0.00129831\ttest-auc:0.888879+0.00568116\n",
      "[28]\ttrain-auc:0.902656+0.0010982\ttest-auc:0.889114+0.00571303\n",
      "[29]\ttrain-auc:0.903149+0.00106708\ttest-auc:0.889174+0.00534817\n",
      "[30]\ttrain-auc:0.903612+0.000987446\ttest-auc:0.88928+0.0053614\n",
      "[31]\ttrain-auc:0.904025+0.00106993\ttest-auc:0.889364+0.0052939\n",
      "[32]\ttrain-auc:0.90444+0.000971526\ttest-auc:0.889587+0.00525524\n",
      "[33]\ttrain-auc:0.904946+0.000932207\ttest-auc:0.889729+0.00526678\n",
      "[34]\ttrain-auc:0.905397+0.000921624\ttest-auc:0.89+0.00525722\n",
      "[35]\ttrain-auc:0.905763+0.000989088\ttest-auc:0.890184+0.00508331\n",
      "[36]\ttrain-auc:0.906171+0.000944184\ttest-auc:0.890406+0.00505246\n",
      "[37]\ttrain-auc:0.90654+0.00092575\ttest-auc:0.890436+0.00536722\n",
      "[38]\ttrain-auc:0.906923+0.00089281\ttest-auc:0.890554+0.00529302\n",
      "[39]\ttrain-auc:0.907315+0.000998579\ttest-auc:0.890802+0.00526922\n",
      "[40]\ttrain-auc:0.907697+0.000968992\ttest-auc:0.891054+0.00524095\n",
      "[41]\ttrain-auc:0.908015+0.000828735\ttest-auc:0.891148+0.00523096\n",
      "[42]\ttrain-auc:0.908347+0.000801245\ttest-auc:0.891221+0.00515451\n",
      "[43]\ttrain-auc:0.908662+0.000795662\ttest-auc:0.891296+0.00513831\n",
      "[44]\ttrain-auc:0.909197+0.000819087\ttest-auc:0.891194+0.00511366\n",
      "[45]\ttrain-auc:0.909519+0.00077165\ttest-auc:0.891169+0.00513575\n",
      "[46]\ttrain-auc:0.909886+0.000770054\ttest-auc:0.891226+0.00508786\n",
      "[47]\ttrain-auc:0.910262+0.000759427\ttest-auc:0.891326+0.00507311\n",
      "[48]\ttrain-auc:0.910608+0.000659072\ttest-auc:0.891378+0.00507815\n",
      "[49]\ttrain-auc:0.910957+0.000651298\ttest-auc:0.891558+0.00491421\n",
      "[50]\ttrain-auc:0.911322+0.000660854\ttest-auc:0.891665+0.00496244\n",
      "[51]\ttrain-auc:0.911704+0.000597861\ttest-auc:0.891751+0.00502508\n",
      "[52]\ttrain-auc:0.911958+0.000637277\ttest-auc:0.89186+0.00498097\n",
      "[53]\ttrain-auc:0.912176+0.000682559\ttest-auc:0.892034+0.00502541\n",
      "[54]\ttrain-auc:0.912527+0.000660222\ttest-auc:0.892214+0.0050705\n",
      "[55]\ttrain-auc:0.912854+0.000703714\ttest-auc:0.892198+0.00481851\n",
      "[56]\ttrain-auc:0.913183+0.000657243\ttest-auc:0.892359+0.00473012\n",
      "[57]\ttrain-auc:0.91348+0.000751167\ttest-auc:0.892292+0.00476176\n",
      "[58]\ttrain-auc:0.913812+0.000765423\ttest-auc:0.892131+0.00484024\n",
      "[59]\ttrain-auc:0.914189+0.000743579\ttest-auc:0.892153+0.00486819\n",
      "[60]\ttrain-auc:0.914478+0.000686051\ttest-auc:0.892193+0.00493366\n",
      "[61]\ttrain-auc:0.914755+0.000696066\ttest-auc:0.892245+0.004961\n",
      "[62]\ttrain-auc:0.915072+0.000721722\ttest-auc:0.892271+0.00507228\n",
      "[63]\ttrain-auc:0.915392+0.000745373\ttest-auc:0.892256+0.0049306\n",
      "[64]\ttrain-auc:0.91572+0.000736353\ttest-auc:0.892257+0.00511209\n",
      "[65]\ttrain-auc:0.915984+0.000882247\ttest-auc:0.89213+0.00503168\n",
      "[66]\ttrain-auc:0.916243+0.000879903\ttest-auc:0.892185+0.00510261\n",
      "[67]\ttrain-auc:0.916525+0.00101767\ttest-auc:0.892354+0.00497934\n",
      "[68]\ttrain-auc:0.916782+0.00103475\ttest-auc:0.892242+0.00508133\n",
      "[69]\ttrain-auc:0.917078+0.00101213\ttest-auc:0.892145+0.00503328\n",
      "[70]\ttrain-auc:0.917386+0.00107046\ttest-auc:0.89216+0.00505384\n",
      "[71]\ttrain-auc:0.917632+0.00110641\ttest-auc:0.892204+0.00500998\n",
      "[72]\ttrain-auc:0.917885+0.00105513\ttest-auc:0.892193+0.00507069\n",
      "[73]\ttrain-auc:0.918138+0.000935028\ttest-auc:0.892187+0.00524587\n",
      "[74]\ttrain-auc:0.91836+0.000963056\ttest-auc:0.892398+0.00523413\n",
      "[75]\ttrain-auc:0.918598+0.000953893\ttest-auc:0.892343+0.00507884\n",
      "[76]\ttrain-auc:0.918788+0.00090884\ttest-auc:0.892314+0.00501999\n",
      "[77]\ttrain-auc:0.918999+0.000927489\ttest-auc:0.892288+0.00498256\n",
      "[78]\ttrain-auc:0.919339+0.000859911\ttest-auc:0.892266+0.00479191\n",
      "[79]\ttrain-auc:0.91957+0.000812916\ttest-auc:0.892287+0.00484368\n",
      "[80]\ttrain-auc:0.919817+0.000819999\ttest-auc:0.892305+0.00483158\n",
      "[81]\ttrain-auc:0.920077+0.0008481\ttest-auc:0.892383+0.00486506\n",
      "[82]\ttrain-auc:0.920355+0.00077134\ttest-auc:0.892311+0.00474599\n",
      "[83]\ttrain-auc:0.920669+0.000803112\ttest-auc:0.892478+0.00468989\n",
      "[84]\ttrain-auc:0.920946+0.00080269\ttest-auc:0.892583+0.00476232\n",
      "[85]\ttrain-auc:0.921235+0.000836976\ttest-auc:0.892557+0.00475713\n",
      "[86]\ttrain-auc:0.921496+0.000803019\ttest-auc:0.89248+0.00470033\n",
      "[87]\ttrain-auc:0.921708+0.000863497\ttest-auc:0.892479+0.00477291\n",
      "[88]\ttrain-auc:0.92196+0.000898811\ttest-auc:0.892542+0.00473244\n",
      "[89]\ttrain-auc:0.92215+0.000891408\ttest-auc:0.892566+0.00466502\n",
      "[90]\ttrain-auc:0.922428+0.000914304\ttest-auc:0.892612+0.00467487\n",
      "[91]\ttrain-auc:0.922657+0.00101226\ttest-auc:0.892633+0.00476872\n",
      "[92]\ttrain-auc:0.922873+0.000968443\ttest-auc:0.892579+0.00476672\n",
      "[93]\ttrain-auc:0.923155+0.00101609\ttest-auc:0.892598+0.00485273\n",
      "[94]\ttrain-auc:0.923365+0.000995193\ttest-auc:0.892659+0.00491311\n",
      "[95]\ttrain-auc:0.923707+0.00100646\ttest-auc:0.892547+0.00480535\n",
      "[96]\ttrain-auc:0.923911+0.000996701\ttest-auc:0.892624+0.00473956\n",
      "[97]\ttrain-auc:0.924157+0.00111755\ttest-auc:0.892558+0.0048043\n",
      "[98]\ttrain-auc:0.924418+0.00109018\ttest-auc:0.892523+0.00469046\n",
      "[99]\ttrain-auc:0.924723+0.00112683\ttest-auc:0.892619+0.00467139\n",
      "[100]\ttrain-auc:0.925018+0.00110768\ttest-auc:0.892489+0.0046508\n",
      "[101]\ttrain-auc:0.925259+0.001123\ttest-auc:0.89233+0.00453268\n",
      "[102]\ttrain-auc:0.925558+0.00115686\ttest-auc:0.892355+0.00460665\n",
      "[103]\ttrain-auc:0.925732+0.00112757\ttest-auc:0.892311+0.0045956\n",
      "[104]\ttrain-auc:0.926028+0.00114743\ttest-auc:0.892324+0.0043478\n",
      "[105]\ttrain-auc:0.926266+0.00119185\ttest-auc:0.892372+0.00430402\n",
      "[106]\ttrain-auc:0.926619+0.00114431\ttest-auc:0.892417+0.00429571\n",
      "[107]\ttrain-auc:0.926783+0.00101579\ttest-auc:0.892425+0.00427039\n",
      "[108]\ttrain-auc:0.92695+0.000992462\ttest-auc:0.892401+0.00423787\n",
      "[109]\ttrain-auc:0.927101+0.000939548\ttest-auc:0.892439+0.00408238\n",
      "[110]\ttrain-auc:0.927338+0.000939517\ttest-auc:0.892493+0.00411642\n",
      "[111]\ttrain-auc:0.92755+0.000974591\ttest-auc:0.892474+0.00415638\n",
      "[112]\ttrain-auc:0.927869+0.00105907\ttest-auc:0.892558+0.00430162\n",
      "[113]\ttrain-auc:0.928057+0.00101264\ttest-auc:0.892459+0.00432015\n",
      "[114]\ttrain-auc:0.928283+0.00107638\ttest-auc:0.892364+0.00435062\n",
      "[115]\ttrain-auc:0.92846+0.0010973\ttest-auc:0.892369+0.00436701\n",
      "[116]\ttrain-auc:0.928737+0.00115009\ttest-auc:0.892348+0.00428864\n",
      "[117]\ttrain-auc:0.929012+0.00115313\ttest-auc:0.892426+0.00423855\n",
      "[118]\ttrain-auc:0.92928+0.00112472\ttest-auc:0.89232+0.00414304\n",
      "[119]\ttrain-auc:0.92952+0.0011764\ttest-auc:0.892207+0.00422732\n",
      "[120]\ttrain-auc:0.929737+0.0011726\ttest-auc:0.892269+0.00418479\n",
      "[121]\ttrain-auc:0.929994+0.00110245\ttest-auc:0.892353+0.00406786\n",
      "[122]\ttrain-auc:0.930191+0.00116224\ttest-auc:0.892295+0.0040365\n",
      "[123]\ttrain-auc:0.930382+0.00113847\ttest-auc:0.892271+0.0040635\n",
      "[124]\ttrain-auc:0.930672+0.00113495\ttest-auc:0.892239+0.00408338\n",
      "[125]\ttrain-auc:0.930837+0.0011264\ttest-auc:0.892263+0.00415667\n",
      "[126]\ttrain-auc:0.931118+0.00110794\ttest-auc:0.892176+0.00411854\n",
      "[127]\ttrain-auc:0.931368+0.0011401\ttest-auc:0.892123+0.00411498\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[128]\ttrain-auc:0.931585+0.00117246\ttest-auc:0.892178+0.00406954\n",
      "[129]\ttrain-auc:0.931775+0.00121263\ttest-auc:0.892218+0.00412617\n",
      "[130]\ttrain-auc:0.931944+0.00122457\ttest-auc:0.892178+0.00409839\n",
      "[131]\ttrain-auc:0.932119+0.00126356\ttest-auc:0.892121+0.00411414\n",
      "[132]\ttrain-auc:0.93231+0.00120916\ttest-auc:0.892198+0.004101\n",
      "[133]\ttrain-auc:0.932523+0.00113784\ttest-auc:0.892257+0.00402546\n",
      "[134]\ttrain-auc:0.932779+0.0010262\ttest-auc:0.892175+0.00396589\n",
      "[135]\ttrain-auc:0.933104+0.00109989\ttest-auc:0.892158+0.00390353\n",
      "[136]\ttrain-auc:0.93342+0.00112595\ttest-auc:0.892232+0.00392951\n",
      "[137]\ttrain-auc:0.933645+0.00113655\ttest-auc:0.892291+0.00396201\n",
      "[138]\ttrain-auc:0.933895+0.00113668\ttest-auc:0.892007+0.00408042\n",
      "[139]\ttrain-auc:0.934187+0.0011046\ttest-auc:0.892089+0.00401948\n",
      "[140]\ttrain-auc:0.934374+0.00107039\ttest-auc:0.891957+0.00392116\n",
      "[141]\ttrain-auc:0.934548+0.00106908\ttest-auc:0.891998+0.00391958\n",
      "[142]\ttrain-auc:0.934724+0.00100917\ttest-auc:0.892098+0.00398509\n",
      "[143]\ttrain-auc:0.934923+0.000957345\ttest-auc:0.892043+0.00407487\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "c:\\users\\marcp\\appdata\\local\\programs\\python\\python36\\lib\\site-packages\\sklearn\\preprocessing\\label.py:151: DeprecationWarning: The truth value of an empty array is ambiguous. Returning False, but in future this will result in an error. Use `array.size > 0` to check that an array is not empty.\n",
      "  if diff:\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Model Report\n",
      "Model best iteration : 95 with an auc score of : 0.8926587999999999\n",
      "Accuracy : 0.8808403361344538\n",
      "AUC Score (Train): 0.9193587228569685\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "xgb3 = XGBClassifier(\n",
    " learning_rate =0.1,\n",
    " n_estimators=1000,\n",
    " max_depth=3,\n",
    " min_child_weight=5,\n",
    " gamma=0.25,\n",
    " subsample=0.65,\n",
    " colsample_bytree=0.75,\n",
    " reg_alpha=0.00009,\n",
    " objective= 'binary:logistic',\n",
    " nthread=4,\n",
    " scale_pos_weight=1,\n",
    " seed=27)\n",
    "modelfit(xgb3, train, predictors)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1506,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\ttrain-auc:0.855942+0.00196614\ttest-auc:0.848778+0.00682296\n",
      "[1]\ttrain-auc:0.86631+0.00318393\ttest-auc:0.859831+0.0075029\n",
      "[2]\ttrain-auc:0.86935+0.00352948\ttest-auc:0.862932+0.0075271\n",
      "[3]\ttrain-auc:0.872396+0.0027342\ttest-auc:0.86718+0.00877581\n",
      "[4]\ttrain-auc:0.876474+0.00348416\ttest-auc:0.869923+0.00847829\n",
      "[5]\ttrain-auc:0.878031+0.0031041\ttest-auc:0.870761+0.00880627\n",
      "[6]\ttrain-auc:0.878664+0.00317811\ttest-auc:0.871302+0.00977468\n",
      "[7]\ttrain-auc:0.879658+0.00323734\ttest-auc:0.871927+0.0106266\n",
      "[8]\ttrain-auc:0.879874+0.00333185\ttest-auc:0.872778+0.0105678\n",
      "[9]\ttrain-auc:0.88043+0.00264046\ttest-auc:0.873546+0.0101662\n",
      "[10]\ttrain-auc:0.881364+0.00212487\ttest-auc:0.87394+0.00929223\n",
      "[11]\ttrain-auc:0.881575+0.00190194\ttest-auc:0.874479+0.0090292\n",
      "[12]\ttrain-auc:0.881711+0.00205299\ttest-auc:0.874518+0.00890636\n",
      "[13]\ttrain-auc:0.882451+0.00179038\ttest-auc:0.875898+0.00681843\n",
      "[14]\ttrain-auc:0.882689+0.00170308\ttest-auc:0.875991+0.00690773\n",
      "[15]\ttrain-auc:0.882826+0.00182515\ttest-auc:0.875921+0.00706483\n",
      "[16]\ttrain-auc:0.88318+0.00174549\ttest-auc:0.876397+0.00677008\n",
      "[17]\ttrain-auc:0.883261+0.001923\ttest-auc:0.876444+0.00701829\n",
      "[18]\ttrain-auc:0.883352+0.00199883\ttest-auc:0.876477+0.00713841\n",
      "[19]\ttrain-auc:0.883721+0.00204645\ttest-auc:0.876522+0.00703249\n",
      "[20]\ttrain-auc:0.883863+0.0019543\ttest-auc:0.876807+0.00685026\n",
      "[21]\ttrain-auc:0.883928+0.00199465\ttest-auc:0.87692+0.00670429\n",
      "[22]\ttrain-auc:0.884222+0.0019364\ttest-auc:0.876925+0.00672897\n",
      "[23]\ttrain-auc:0.88445+0.00204199\ttest-auc:0.876939+0.00680931\n",
      "[24]\ttrain-auc:0.884534+0.00206492\ttest-auc:0.876998+0.00681689\n",
      "[25]\ttrain-auc:0.884812+0.00205771\ttest-auc:0.877076+0.00677778\n",
      "[26]\ttrain-auc:0.884936+0.00201645\ttest-auc:0.877079+0.00682993\n",
      "[27]\ttrain-auc:0.884946+0.00205617\ttest-auc:0.876989+0.00705192\n",
      "[28]\ttrain-auc:0.885121+0.00212481\ttest-auc:0.877295+0.00711518\n",
      "[29]\ttrain-auc:0.88515+0.00208566\ttest-auc:0.877282+0.0070448\n",
      "[30]\ttrain-auc:0.885806+0.00132107\ttest-auc:0.87769+0.00684462\n",
      "[31]\ttrain-auc:0.886052+0.00124098\ttest-auc:0.878009+0.00668145\n",
      "[32]\ttrain-auc:0.88618+0.00119945\ttest-auc:0.878184+0.00693666\n",
      "[33]\ttrain-auc:0.886306+0.00109955\ttest-auc:0.87828+0.00691723\n",
      "[34]\ttrain-auc:0.886342+0.00109977\ttest-auc:0.878295+0.0068095\n",
      "[35]\ttrain-auc:0.886418+0.00103733\ttest-auc:0.878242+0.00684483\n",
      "[36]\ttrain-auc:0.886815+0.00108806\ttest-auc:0.87883+0.00637642\n",
      "[37]\ttrain-auc:0.886886+0.00108818\ttest-auc:0.878927+0.00632565\n",
      "[38]\ttrain-auc:0.88702+0.0012041\ttest-auc:0.879175+0.00630757\n",
      "[39]\ttrain-auc:0.887098+0.00122222\ttest-auc:0.879202+0.00628787\n",
      "[40]\ttrain-auc:0.887222+0.00116615\ttest-auc:0.879256+0.00634942\n",
      "[41]\ttrain-auc:0.88734+0.00117849\ttest-auc:0.87942+0.00643085\n",
      "[42]\ttrain-auc:0.887403+0.00122588\ttest-auc:0.879515+0.0064224\n",
      "[43]\ttrain-auc:0.887451+0.00133064\ttest-auc:0.879512+0.00638854\n",
      "[44]\ttrain-auc:0.887516+0.00133284\ttest-auc:0.879504+0.00642591\n",
      "[45]\ttrain-auc:0.887544+0.00126993\ttest-auc:0.879433+0.0065528\n",
      "[46]\ttrain-auc:0.88754+0.00126796\ttest-auc:0.879494+0.00652096\n",
      "[47]\ttrain-auc:0.887612+0.00128742\ttest-auc:0.879494+0.00657485\n",
      "[48]\ttrain-auc:0.887772+0.00120504\ttest-auc:0.880023+0.00662143\n",
      "[49]\ttrain-auc:0.887866+0.00118966\ttest-auc:0.880246+0.00669695\n",
      "[50]\ttrain-auc:0.887935+0.00120316\ttest-auc:0.880232+0.00669538\n",
      "[51]\ttrain-auc:0.888103+0.00126156\ttest-auc:0.880237+0.00665689\n",
      "[52]\ttrain-auc:0.888184+0.0013042\ttest-auc:0.880254+0.00663779\n",
      "[53]\ttrain-auc:0.888299+0.00137818\ttest-auc:0.880451+0.00668522\n",
      "[54]\ttrain-auc:0.888414+0.00139457\ttest-auc:0.880535+0.0066416\n",
      "[55]\ttrain-auc:0.888548+0.00128493\ttest-auc:0.880578+0.00667355\n",
      "[56]\ttrain-auc:0.888644+0.00122209\ttest-auc:0.880668+0.0067159\n",
      "[57]\ttrain-auc:0.888759+0.00124595\ttest-auc:0.880783+0.00671854\n",
      "[58]\ttrain-auc:0.888847+0.00124105\ttest-auc:0.880814+0.00673096\n",
      "[59]\ttrain-auc:0.888942+0.00124014\ttest-auc:0.88084+0.00673224\n",
      "[60]\ttrain-auc:0.889016+0.00124785\ttest-auc:0.88082+0.00675826\n",
      "[61]\ttrain-auc:0.889162+0.00115196\ttest-auc:0.880761+0.006639\n",
      "[62]\ttrain-auc:0.889202+0.00118538\ttest-auc:0.880774+0.00662421\n",
      "[63]\ttrain-auc:0.88926+0.0011615\ttest-auc:0.880825+0.00664757\n",
      "[64]\ttrain-auc:0.889294+0.00115422\ttest-auc:0.880862+0.00669183\n",
      "[65]\ttrain-auc:0.889382+0.00116674\ttest-auc:0.880854+0.0066392\n",
      "[66]\ttrain-auc:0.88944+0.0011672\ttest-auc:0.880915+0.00664961\n",
      "[67]\ttrain-auc:0.889521+0.00115292\ttest-auc:0.881154+0.00686003\n",
      "[68]\ttrain-auc:0.889562+0.00119119\ttest-auc:0.881206+0.00681912\n",
      "[69]\ttrain-auc:0.889617+0.00120995\ttest-auc:0.881224+0.00679546\n",
      "[70]\ttrain-auc:0.889723+0.00124315\ttest-auc:0.88127+0.00668324\n",
      "[71]\ttrain-auc:0.889765+0.00121125\ttest-auc:0.881314+0.0067372\n",
      "[72]\ttrain-auc:0.889839+0.00121226\ttest-auc:0.881381+0.00670535\n",
      "[73]\ttrain-auc:0.889939+0.00130205\ttest-auc:0.88149+0.00656071\n",
      "[74]\ttrain-auc:0.890006+0.00132178\ttest-auc:0.881549+0.00649843\n",
      "[75]\ttrain-auc:0.890073+0.00131745\ttest-auc:0.88154+0.00645303\n",
      "[76]\ttrain-auc:0.890133+0.00129802\ttest-auc:0.881625+0.00648121\n",
      "[77]\ttrain-auc:0.890147+0.00129949\ttest-auc:0.881627+0.00649175\n",
      "[78]\ttrain-auc:0.890234+0.00126639\ttest-auc:0.881683+0.00650284\n",
      "[79]\ttrain-auc:0.890272+0.00127618\ttest-auc:0.881712+0.00648463\n",
      "[80]\ttrain-auc:0.890338+0.00133055\ttest-auc:0.881719+0.00644725\n",
      "[81]\ttrain-auc:0.890433+0.00134248\ttest-auc:0.881742+0.00640119\n",
      "[82]\ttrain-auc:0.890492+0.00135124\ttest-auc:0.881763+0.00637888\n",
      "[83]\ttrain-auc:0.890933+0.00124441\ttest-auc:0.881908+0.00647348\n",
      "[84]\ttrain-auc:0.890969+0.00128452\ttest-auc:0.88212+0.00658119\n",
      "[85]\ttrain-auc:0.891073+0.00123462\ttest-auc:0.882091+0.00655735\n",
      "[86]\ttrain-auc:0.891098+0.00122573\ttest-auc:0.882048+0.00656895\n",
      "[87]\ttrain-auc:0.891148+0.00123357\ttest-auc:0.882037+0.00655248\n",
      "[88]\ttrain-auc:0.891222+0.00122215\ttest-auc:0.882103+0.00655417\n",
      "[89]\ttrain-auc:0.891256+0.00121514\ttest-auc:0.882161+0.00656852\n",
      "[90]\ttrain-auc:0.891312+0.00121686\ttest-auc:0.88218+0.00653559\n",
      "[91]\ttrain-auc:0.891392+0.00125175\ttest-auc:0.88219+0.00652162\n",
      "[92]\ttrain-auc:0.891467+0.00124068\ttest-auc:0.882235+0.00651661\n",
      "[93]\ttrain-auc:0.891507+0.00125829\ttest-auc:0.882223+0.00652581\n",
      "[94]\ttrain-auc:0.891575+0.00126313\ttest-auc:0.882252+0.00651676\n",
      "[95]\ttrain-auc:0.891684+0.00126581\ttest-auc:0.882502+0.00669302\n",
      "[96]\ttrain-auc:0.891762+0.00127767\ttest-auc:0.88251+0.00668716\n",
      "[97]\ttrain-auc:0.892056+0.00110891\ttest-auc:0.882583+0.00676099\n",
      "[98]\ttrain-auc:0.89228+0.00113796\ttest-auc:0.88284+0.00704613\n",
      "[99]\ttrain-auc:0.892329+0.00117312\ttest-auc:0.88288+0.00704099\n",
      "[100]\ttrain-auc:0.892433+0.00119468\ttest-auc:0.882952+0.00710455\n",
      "[101]\ttrain-auc:0.892521+0.00118474\ttest-auc:0.882988+0.00709803\n",
      "[102]\ttrain-auc:0.892603+0.00120002\ttest-auc:0.883083+0.00715075\n",
      "[103]\ttrain-auc:0.892708+0.00120312\ttest-auc:0.883167+0.00721179\n",
      "[104]\ttrain-auc:0.892752+0.00120527\ttest-auc:0.883179+0.00719385\n",
      "[105]\ttrain-auc:0.892835+0.00120942\ttest-auc:0.883243+0.0072659\n",
      "[106]\ttrain-auc:0.892834+0.00118831\ttest-auc:0.883261+0.00725372\n",
      "[107]\ttrain-auc:0.89296+0.00108139\ttest-auc:0.88336+0.00726605\n",
      "[108]\ttrain-auc:0.893027+0.00110591\ttest-auc:0.883358+0.00728583\n",
      "[109]\ttrain-auc:0.893074+0.00111975\ttest-auc:0.883408+0.00730249\n",
      "[110]\ttrain-auc:0.89311+0.00111562\ttest-auc:0.88344+0.00732941\n",
      "[111]\ttrain-auc:0.893142+0.00110579\ttest-auc:0.883468+0.00732025\n",
      "[112]\ttrain-auc:0.893204+0.00111424\ttest-auc:0.883476+0.00727802\n",
      "[113]\ttrain-auc:0.893232+0.00110937\ttest-auc:0.883493+0.00727917\n",
      "[114]\ttrain-auc:0.893314+0.00107647\ttest-auc:0.883528+0.00725939\n",
      "[115]\ttrain-auc:0.89335+0.00106902\ttest-auc:0.883514+0.00724286\n",
      "[116]\ttrain-auc:0.893416+0.00109531\ttest-auc:0.883635+0.00730955\n",
      "[117]\ttrain-auc:0.893473+0.00110808\ttest-auc:0.883618+0.00739955\n",
      "[118]\ttrain-auc:0.893524+0.00110443\ttest-auc:0.883652+0.00736935\n",
      "[119]\ttrain-auc:0.893694+0.000916713\ttest-auc:0.883675+0.00736286\n",
      "[120]\ttrain-auc:0.893749+0.000946073\ttest-auc:0.883665+0.00735196\n",
      "[121]\ttrain-auc:0.893782+0.000949178\ttest-auc:0.883698+0.00736804\n",
      "[122]\ttrain-auc:0.893832+0.00095325\ttest-auc:0.883701+0.00733126\n",
      "[123]\ttrain-auc:0.894159+0.00132353\ttest-auc:0.884356+0.0066581\n",
      "[124]\ttrain-auc:0.894204+0.00128496\ttest-auc:0.884391+0.00660738\n",
      "[125]\ttrain-auc:0.894267+0.00128353\ttest-auc:0.884415+0.00657298\n",
      "[126]\ttrain-auc:0.894309+0.00128298\ttest-auc:0.884444+0.00656492\n",
      "[127]\ttrain-auc:0.894346+0.00129332\ttest-auc:0.884406+0.006568\n",
      "[128]\ttrain-auc:0.894377+0.00128971\ttest-auc:0.884426+0.00658266\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[129]\ttrain-auc:0.894423+0.00128873\ttest-auc:0.884447+0.00659574\n",
      "[130]\ttrain-auc:0.894451+0.00128325\ttest-auc:0.884408+0.00659836\n",
      "[131]\ttrain-auc:0.894485+0.00128408\ttest-auc:0.884494+0.00651916\n",
      "[132]\ttrain-auc:0.894533+0.0012994\ttest-auc:0.884554+0.0065101\n",
      "[133]\ttrain-auc:0.894575+0.00129491\ttest-auc:0.884557+0.00653061\n",
      "[134]\ttrain-auc:0.894925+0.00139066\ttest-auc:0.884515+0.00654536\n",
      "[135]\ttrain-auc:0.894938+0.0014226\ttest-auc:0.88451+0.00651631\n",
      "[136]\ttrain-auc:0.895013+0.00143922\ttest-auc:0.884437+0.00657109\n",
      "[137]\ttrain-auc:0.895172+0.00152226\ttest-auc:0.884745+0.00620415\n",
      "[138]\ttrain-auc:0.895239+0.00151198\ttest-auc:0.884769+0.00621709\n",
      "[139]\ttrain-auc:0.895292+0.00151418\ttest-auc:0.884807+0.00623079\n",
      "[140]\ttrain-auc:0.895398+0.00158109\ttest-auc:0.885052+0.00595308\n",
      "[141]\ttrain-auc:0.895453+0.00161216\ttest-auc:0.885131+0.00594191\n",
      "[142]\ttrain-auc:0.895548+0.00160864\ttest-auc:0.885169+0.00592614\n",
      "[143]\ttrain-auc:0.895828+0.00124271\ttest-auc:0.885477+0.00607349\n",
      "[144]\ttrain-auc:0.895859+0.00124063\ttest-auc:0.885507+0.00606619\n",
      "[145]\ttrain-auc:0.895915+0.00126101\ttest-auc:0.885565+0.00612708\n",
      "[146]\ttrain-auc:0.895985+0.00126022\ttest-auc:0.885579+0.00615274\n",
      "[147]\ttrain-auc:0.896091+0.00125419\ttest-auc:0.885563+0.00609591\n",
      "[148]\ttrain-auc:0.896161+0.00125627\ttest-auc:0.885546+0.00611529\n",
      "[149]\ttrain-auc:0.896187+0.00126799\ttest-auc:0.885524+0.00610562\n",
      "[150]\ttrain-auc:0.896235+0.00126407\ttest-auc:0.885562+0.00610121\n",
      "[151]\ttrain-auc:0.896279+0.00126991\ttest-auc:0.885575+0.00612023\n",
      "[152]\ttrain-auc:0.896356+0.0013473\ttest-auc:0.885775+0.00591497\n",
      "[153]\ttrain-auc:0.896493+0.00123482\ttest-auc:0.885949+0.00595275\n",
      "[154]\ttrain-auc:0.896531+0.00123455\ttest-auc:0.886052+0.00585743\n",
      "[155]\ttrain-auc:0.896661+0.00124179\ttest-auc:0.886192+0.00601807\n",
      "[156]\ttrain-auc:0.896775+0.00124499\ttest-auc:0.886274+0.00602649\n",
      "[157]\ttrain-auc:0.896841+0.00127104\ttest-auc:0.886316+0.00597255\n",
      "[158]\ttrain-auc:0.896909+0.00122832\ttest-auc:0.886308+0.00597991\n",
      "[159]\ttrain-auc:0.896979+0.00118688\ttest-auc:0.88637+0.0059746\n",
      "[160]\ttrain-auc:0.897052+0.00117758\ttest-auc:0.88638+0.00599061\n",
      "[161]\ttrain-auc:0.897081+0.001189\ttest-auc:0.886393+0.00600291\n",
      "[162]\ttrain-auc:0.897108+0.00118177\ttest-auc:0.886387+0.00601027\n",
      "[163]\ttrain-auc:0.897167+0.00114961\ttest-auc:0.886375+0.00601779\n",
      "[164]\ttrain-auc:0.897241+0.00112903\ttest-auc:0.886441+0.00607416\n",
      "[165]\ttrain-auc:0.897287+0.0011079\ttest-auc:0.886431+0.00608585\n",
      "[166]\ttrain-auc:0.897315+0.0011073\ttest-auc:0.886433+0.00604949\n",
      "[167]\ttrain-auc:0.89737+0.00113669\ttest-auc:0.886539+0.00597201\n",
      "[168]\ttrain-auc:0.897422+0.00116318\ttest-auc:0.886597+0.00592948\n",
      "[169]\ttrain-auc:0.897467+0.00117383\ttest-auc:0.886613+0.00589711\n",
      "[170]\ttrain-auc:0.897517+0.00118842\ttest-auc:0.886724+0.00594879\n",
      "[171]\ttrain-auc:0.897569+0.00120772\ttest-auc:0.886768+0.00598713\n",
      "[172]\ttrain-auc:0.897597+0.0011841\ttest-auc:0.886785+0.00597272\n",
      "[173]\ttrain-auc:0.897659+0.00116633\ttest-auc:0.886783+0.00597709\n",
      "[174]\ttrain-auc:0.897707+0.00116077\ttest-auc:0.886815+0.00593749\n",
      "[175]\ttrain-auc:0.897802+0.00120963\ttest-auc:0.886882+0.00587532\n",
      "[176]\ttrain-auc:0.897828+0.00120766\ttest-auc:0.886957+0.00595585\n",
      "[177]\ttrain-auc:0.897866+0.00122785\ttest-auc:0.886968+0.00593255\n",
      "[178]\ttrain-auc:0.89789+0.00124901\ttest-auc:0.887003+0.00591024\n",
      "[179]\ttrain-auc:0.897947+0.00122986\ttest-auc:0.887028+0.00595909\n",
      "[180]\ttrain-auc:0.897996+0.00122837\ttest-auc:0.887077+0.00593019\n",
      "[181]\ttrain-auc:0.898039+0.00124024\ttest-auc:0.887109+0.00591292\n",
      "[182]\ttrain-auc:0.898086+0.00119034\ttest-auc:0.887197+0.00600213\n",
      "[183]\ttrain-auc:0.898154+0.00117155\ttest-auc:0.887214+0.00599166\n",
      "[184]\ttrain-auc:0.898235+0.00119905\ttest-auc:0.887274+0.00595588\n",
      "[185]\ttrain-auc:0.898287+0.00118353\ttest-auc:0.887356+0.0059696\n",
      "[186]\ttrain-auc:0.898377+0.001255\ttest-auc:0.887372+0.00602872\n",
      "[187]\ttrain-auc:0.898437+0.0012423\ttest-auc:0.887369+0.00604297\n",
      "[188]\ttrain-auc:0.898458+0.00123314\ttest-auc:0.887393+0.00606507\n",
      "[189]\ttrain-auc:0.89851+0.00124799\ttest-auc:0.887448+0.00601772\n",
      "[190]\ttrain-auc:0.898557+0.00124048\ttest-auc:0.887456+0.0060301\n",
      "[191]\ttrain-auc:0.898616+0.00122225\ttest-auc:0.887467+0.00604723\n",
      "[192]\ttrain-auc:0.898648+0.00121489\ttest-auc:0.887521+0.00606153\n",
      "[193]\ttrain-auc:0.89871+0.00120494\ttest-auc:0.887579+0.00611375\n",
      "[194]\ttrain-auc:0.898754+0.00119459\ttest-auc:0.887593+0.00609876\n",
      "[195]\ttrain-auc:0.898835+0.001214\ttest-auc:0.887636+0.00607198\n",
      "[196]\ttrain-auc:0.898873+0.00120782\ttest-auc:0.887634+0.00605156\n",
      "[197]\ttrain-auc:0.898912+0.00120808\ttest-auc:0.887673+0.00604917\n",
      "[198]\ttrain-auc:0.899002+0.00124421\ttest-auc:0.887659+0.00612576\n",
      "[199]\ttrain-auc:0.89903+0.00124956\ttest-auc:0.887725+0.00616841\n",
      "[200]\ttrain-auc:0.899079+0.00123566\ttest-auc:0.887759+0.00612669\n",
      "[201]\ttrain-auc:0.899137+0.00123784\ttest-auc:0.887814+0.00614586\n",
      "[202]\ttrain-auc:0.899207+0.00119486\ttest-auc:0.88784+0.00618114\n",
      "[203]\ttrain-auc:0.899263+0.00119884\ttest-auc:0.887864+0.00620704\n",
      "[204]\ttrain-auc:0.899297+0.00120717\ttest-auc:0.887867+0.00621025\n",
      "[205]\ttrain-auc:0.899373+0.00119843\ttest-auc:0.887919+0.00618292\n",
      "[206]\ttrain-auc:0.899407+0.00119672\ttest-auc:0.88796+0.00618174\n",
      "[207]\ttrain-auc:0.899458+0.001222\ttest-auc:0.887892+0.00627481\n",
      "[208]\ttrain-auc:0.899526+0.00122589\ttest-auc:0.88795+0.0062462\n",
      "[209]\ttrain-auc:0.899595+0.00119325\ttest-auc:0.887957+0.00626344\n",
      "[210]\ttrain-auc:0.899705+0.00119622\ttest-auc:0.887984+0.00628175\n",
      "[211]\ttrain-auc:0.899759+0.00117585\ttest-auc:0.887992+0.00629072\n",
      "[212]\ttrain-auc:0.899809+0.00117186\ttest-auc:0.888035+0.00627774\n",
      "[213]\ttrain-auc:0.899877+0.00117851\ttest-auc:0.88807+0.00625543\n",
      "[214]\ttrain-auc:0.899943+0.00118519\ttest-auc:0.888158+0.00629911\n",
      "[215]\ttrain-auc:0.899983+0.00119745\ttest-auc:0.888199+0.00625558\n",
      "[216]\ttrain-auc:0.900034+0.00118357\ttest-auc:0.888233+0.00623743\n",
      "[217]\ttrain-auc:0.90006+0.00118491\ttest-auc:0.888253+0.00624425\n",
      "[218]\ttrain-auc:0.900109+0.00117501\ttest-auc:0.888289+0.00623674\n",
      "[219]\ttrain-auc:0.900166+0.00116698\ttest-auc:0.888283+0.00622385\n",
      "[220]\ttrain-auc:0.900239+0.0011804\ttest-auc:0.88839+0.00614606\n",
      "[221]\ttrain-auc:0.900324+0.00119324\ttest-auc:0.888424+0.00614698\n",
      "[222]\ttrain-auc:0.900362+0.0011919\ttest-auc:0.888453+0.00617677\n",
      "[223]\ttrain-auc:0.900413+0.00118411\ttest-auc:0.888495+0.00614907\n",
      "[224]\ttrain-auc:0.900467+0.00120765\ttest-auc:0.888502+0.00610645\n",
      "[225]\ttrain-auc:0.900524+0.00117354\ttest-auc:0.888544+0.00608823\n",
      "[226]\ttrain-auc:0.900604+0.00115045\ttest-auc:0.88856+0.00608899\n",
      "[227]\ttrain-auc:0.900646+0.00116205\ttest-auc:0.888559+0.00609335\n",
      "[228]\ttrain-auc:0.900722+0.00120047\ttest-auc:0.888612+0.00611316\n",
      "[229]\ttrain-auc:0.900783+0.0012112\ttest-auc:0.888653+0.0060893\n",
      "[230]\ttrain-auc:0.900864+0.00119371\ttest-auc:0.888688+0.00607451\n",
      "[231]\ttrain-auc:0.900901+0.00119382\ttest-auc:0.888706+0.00609694\n",
      "[232]\ttrain-auc:0.900953+0.00118626\ttest-auc:0.888737+0.00608712\n",
      "[233]\ttrain-auc:0.900981+0.00116405\ttest-auc:0.888776+0.00610346\n",
      "[234]\ttrain-auc:0.901012+0.0011679\ttest-auc:0.888793+0.00609119\n",
      "[235]\ttrain-auc:0.901059+0.00116116\ttest-auc:0.888793+0.00609154\n",
      "[236]\ttrain-auc:0.901107+0.00116468\ttest-auc:0.888844+0.00608067\n",
      "[237]\ttrain-auc:0.901157+0.00117683\ttest-auc:0.88887+0.00604014\n",
      "[238]\ttrain-auc:0.901201+0.00120031\ttest-auc:0.888928+0.00605402\n",
      "[239]\ttrain-auc:0.90124+0.00121357\ttest-auc:0.888937+0.00604646\n",
      "[240]\ttrain-auc:0.901306+0.00120333\ttest-auc:0.888989+0.00604092\n",
      "[241]\ttrain-auc:0.901349+0.00120573\ttest-auc:0.889007+0.00601268\n",
      "[242]\ttrain-auc:0.901392+0.00120165\ttest-auc:0.889021+0.00605326\n",
      "[243]\ttrain-auc:0.901427+0.00119936\ttest-auc:0.889056+0.00606718\n",
      "[244]\ttrain-auc:0.901466+0.0012058\ttest-auc:0.889088+0.00604639\n",
      "[245]\ttrain-auc:0.901532+0.00120395\ttest-auc:0.889179+0.00596869\n",
      "[246]\ttrain-auc:0.901592+0.00120472\ttest-auc:0.889188+0.00596045\n",
      "[247]\ttrain-auc:0.901637+0.00120492\ttest-auc:0.889247+0.00598617\n",
      "[248]\ttrain-auc:0.901692+0.00122435\ttest-auc:0.889281+0.00592573\n",
      "[249]\ttrain-auc:0.901746+0.00119105\ttest-auc:0.889276+0.00592966\n",
      "[250]\ttrain-auc:0.901786+0.00119299\ttest-auc:0.889311+0.00590988\n",
      "[251]\ttrain-auc:0.901838+0.00118301\ttest-auc:0.889347+0.0059095\n",
      "[252]\ttrain-auc:0.901885+0.00118574\ttest-auc:0.889395+0.00593241\n",
      "[253]\ttrain-auc:0.901939+0.00118451\ttest-auc:0.889434+0.00592501\n",
      "[254]\ttrain-auc:0.901976+0.0011853\ttest-auc:0.889475+0.00592214\n",
      "[255]\ttrain-auc:0.902007+0.00118498\ttest-auc:0.889466+0.00592669\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[256]\ttrain-auc:0.902065+0.00118807\ttest-auc:0.889528+0.00590764\n",
      "[257]\ttrain-auc:0.902084+0.00119278\ttest-auc:0.889559+0.00589188\n",
      "[258]\ttrain-auc:0.902126+0.00118598\ttest-auc:0.889546+0.00587749\n",
      "[259]\ttrain-auc:0.902163+0.00117591\ttest-auc:0.889569+0.00586883\n",
      "[260]\ttrain-auc:0.902202+0.00118918\ttest-auc:0.889587+0.00587757\n",
      "[261]\ttrain-auc:0.90225+0.00118024\ttest-auc:0.889595+0.00585748\n",
      "[262]\ttrain-auc:0.902304+0.00115961\ttest-auc:0.88963+0.00587157\n",
      "[263]\ttrain-auc:0.902357+0.00114736\ttest-auc:0.889653+0.00590206\n",
      "[264]\ttrain-auc:0.902412+0.00118295\ttest-auc:0.889625+0.00596996\n",
      "[265]\ttrain-auc:0.902473+0.00118727\ttest-auc:0.889622+0.00599182\n",
      "[266]\ttrain-auc:0.902523+0.00117171\ttest-auc:0.889659+0.00599401\n",
      "[267]\ttrain-auc:0.902574+0.00117456\ttest-auc:0.889671+0.00603164\n",
      "[268]\ttrain-auc:0.902624+0.00116891\ttest-auc:0.889671+0.0060189\n",
      "[269]\ttrain-auc:0.902694+0.00115642\ttest-auc:0.889672+0.00603654\n",
      "[270]\ttrain-auc:0.902738+0.00116022\ttest-auc:0.889674+0.00601831\n",
      "[271]\ttrain-auc:0.902789+0.00116013\ttest-auc:0.889653+0.00603396\n",
      "[272]\ttrain-auc:0.902838+0.00116207\ttest-auc:0.889673+0.0060128\n",
      "[273]\ttrain-auc:0.902897+0.00117\ttest-auc:0.889701+0.00600014\n",
      "[274]\ttrain-auc:0.902952+0.00116307\ttest-auc:0.889747+0.00598892\n",
      "[275]\ttrain-auc:0.902998+0.0011675\ttest-auc:0.889752+0.00598943\n",
      "[276]\ttrain-auc:0.903048+0.00117217\ttest-auc:0.889777+0.0059826\n",
      "[277]\ttrain-auc:0.903084+0.00115346\ttest-auc:0.889776+0.00599017\n",
      "[278]\ttrain-auc:0.903135+0.00113366\ttest-auc:0.889785+0.00601932\n",
      "[279]\ttrain-auc:0.903177+0.00112737\ttest-auc:0.889781+0.00601476\n",
      "[280]\ttrain-auc:0.903233+0.00112784\ttest-auc:0.889815+0.00601222\n",
      "[281]\ttrain-auc:0.903281+0.00112261\ttest-auc:0.889818+0.00599906\n",
      "[282]\ttrain-auc:0.903328+0.00114762\ttest-auc:0.889909+0.00592864\n",
      "[283]\ttrain-auc:0.903372+0.00115961\ttest-auc:0.889938+0.00593691\n",
      "[284]\ttrain-auc:0.903415+0.00115015\ttest-auc:0.889935+0.00596359\n",
      "[285]\ttrain-auc:0.903452+0.00116244\ttest-auc:0.889923+0.00596022\n",
      "[286]\ttrain-auc:0.903498+0.00117061\ttest-auc:0.889928+0.00595437\n",
      "[287]\ttrain-auc:0.903554+0.00116476\ttest-auc:0.889949+0.00596888\n",
      "[288]\ttrain-auc:0.903579+0.00116846\ttest-auc:0.889973+0.00599137\n",
      "[289]\ttrain-auc:0.903635+0.00116861\ttest-auc:0.889969+0.00602715\n",
      "[290]\ttrain-auc:0.903674+0.00115884\ttest-auc:0.889964+0.00602986\n",
      "[291]\ttrain-auc:0.903716+0.00116137\ttest-auc:0.889993+0.0060041\n",
      "[292]\ttrain-auc:0.903789+0.00115336\ttest-auc:0.889997+0.00601994\n",
      "[293]\ttrain-auc:0.903822+0.00114719\ttest-auc:0.890006+0.00600234\n",
      "[294]\ttrain-auc:0.903865+0.00114418\ttest-auc:0.890015+0.00602797\n",
      "[295]\ttrain-auc:0.903914+0.00115463\ttest-auc:0.890031+0.00601357\n",
      "[296]\ttrain-auc:0.903964+0.00116025\ttest-auc:0.890041+0.00600038\n",
      "[297]\ttrain-auc:0.904003+0.00115092\ttest-auc:0.890058+0.00602258\n",
      "[298]\ttrain-auc:0.904033+0.00115127\ttest-auc:0.890045+0.00600764\n",
      "[299]\ttrain-auc:0.904069+0.00115049\ttest-auc:0.890047+0.00599984\n",
      "[300]\ttrain-auc:0.904113+0.00115604\ttest-auc:0.890073+0.00600341\n",
      "[301]\ttrain-auc:0.904149+0.00117517\ttest-auc:0.890092+0.00600656\n",
      "[302]\ttrain-auc:0.904198+0.00116698\ttest-auc:0.890088+0.00600375\n",
      "[303]\ttrain-auc:0.904256+0.00116109\ttest-auc:0.890124+0.00594929\n",
      "[304]\ttrain-auc:0.904304+0.00116146\ttest-auc:0.890139+0.0059259\n",
      "[305]\ttrain-auc:0.904349+0.00115778\ttest-auc:0.890154+0.0059181\n",
      "[306]\ttrain-auc:0.904395+0.00116328\ttest-auc:0.890164+0.0059492\n",
      "[307]\ttrain-auc:0.904429+0.00116243\ttest-auc:0.890155+0.00596191\n",
      "[308]\ttrain-auc:0.904494+0.00113197\ttest-auc:0.890151+0.00596825\n",
      "[309]\ttrain-auc:0.904542+0.00114123\ttest-auc:0.890151+0.00596664\n",
      "[310]\ttrain-auc:0.904595+0.00114754\ttest-auc:0.89015+0.00600324\n",
      "[311]\ttrain-auc:0.904637+0.00115278\ttest-auc:0.890168+0.00598148\n",
      "[312]\ttrain-auc:0.904676+0.00116428\ttest-auc:0.890175+0.0059753\n",
      "[313]\ttrain-auc:0.90471+0.00116758\ttest-auc:0.890202+0.0059873\n",
      "[314]\ttrain-auc:0.904763+0.00119079\ttest-auc:0.89022+0.0059909\n",
      "[315]\ttrain-auc:0.904803+0.00118724\ttest-auc:0.890213+0.00599689\n",
      "[316]\ttrain-auc:0.904853+0.00118442\ttest-auc:0.890231+0.00598211\n",
      "[317]\ttrain-auc:0.904895+0.00118251\ttest-auc:0.890241+0.00596279\n",
      "[318]\ttrain-auc:0.904953+0.0011642\ttest-auc:0.890282+0.00598791\n",
      "[319]\ttrain-auc:0.904982+0.0011629\ttest-auc:0.890267+0.00595662\n",
      "[320]\ttrain-auc:0.905047+0.00117661\ttest-auc:0.890284+0.005948\n",
      "[321]\ttrain-auc:0.905081+0.00118571\ttest-auc:0.890287+0.0059624\n",
      "[322]\ttrain-auc:0.905124+0.00117529\ttest-auc:0.890301+0.00596236\n",
      "[323]\ttrain-auc:0.905183+0.00117949\ttest-auc:0.890287+0.00598432\n",
      "[324]\ttrain-auc:0.905226+0.00118107\ttest-auc:0.890311+0.00599946\n",
      "[325]\ttrain-auc:0.905258+0.00118891\ttest-auc:0.890306+0.00605269\n",
      "[326]\ttrain-auc:0.905301+0.00118086\ttest-auc:0.890299+0.00603992\n",
      "[327]\ttrain-auc:0.905345+0.00117406\ttest-auc:0.890336+0.00605523\n",
      "[328]\ttrain-auc:0.905396+0.0011785\ttest-auc:0.890373+0.00604738\n",
      "[329]\ttrain-auc:0.905449+0.00117497\ttest-auc:0.8904+0.00604273\n",
      "[330]\ttrain-auc:0.905494+0.00117293\ttest-auc:0.890406+0.0060429\n",
      "[331]\ttrain-auc:0.905538+0.0011722\ttest-auc:0.890421+0.00604744\n",
      "[332]\ttrain-auc:0.905593+0.00117229\ttest-auc:0.890477+0.00598802\n",
      "[333]\ttrain-auc:0.905647+0.00117126\ttest-auc:0.890476+0.00598502\n",
      "[334]\ttrain-auc:0.90567+0.00115963\ttest-auc:0.890461+0.00596244\n",
      "[335]\ttrain-auc:0.905716+0.00115659\ttest-auc:0.890468+0.00597818\n",
      "[336]\ttrain-auc:0.905767+0.00116056\ttest-auc:0.890508+0.00596689\n",
      "[337]\ttrain-auc:0.905805+0.0011584\ttest-auc:0.890521+0.00597705\n",
      "[338]\ttrain-auc:0.905841+0.00115066\ttest-auc:0.890532+0.0059546\n",
      "[339]\ttrain-auc:0.905879+0.00115793\ttest-auc:0.89055+0.00595748\n",
      "[340]\ttrain-auc:0.905935+0.00116664\ttest-auc:0.89057+0.00595468\n",
      "[341]\ttrain-auc:0.905973+0.00117165\ttest-auc:0.890614+0.00592708\n",
      "[342]\ttrain-auc:0.906012+0.00118189\ttest-auc:0.89064+0.00592847\n",
      "[343]\ttrain-auc:0.906055+0.00118767\ttest-auc:0.890644+0.00592237\n",
      "[344]\ttrain-auc:0.906114+0.00118025\ttest-auc:0.890655+0.00595728\n",
      "[345]\ttrain-auc:0.906156+0.00117222\ttest-auc:0.890688+0.00593337\n",
      "[346]\ttrain-auc:0.906193+0.001169\ttest-auc:0.890692+0.00596304\n",
      "[347]\ttrain-auc:0.906231+0.00116884\ttest-auc:0.890718+0.00597239\n",
      "[348]\ttrain-auc:0.906281+0.00117574\ttest-auc:0.890722+0.00596199\n",
      "[349]\ttrain-auc:0.906336+0.00119016\ttest-auc:0.890738+0.00596777\n",
      "[350]\ttrain-auc:0.906377+0.00119193\ttest-auc:0.890758+0.00593983\n",
      "[351]\ttrain-auc:0.906413+0.00118894\ttest-auc:0.890784+0.0059294\n",
      "[352]\ttrain-auc:0.906455+0.00117543\ttest-auc:0.890802+0.00595128\n",
      "[353]\ttrain-auc:0.906496+0.00115961\ttest-auc:0.890855+0.00595743\n",
      "[354]\ttrain-auc:0.90655+0.00117121\ttest-auc:0.890884+0.00590841\n",
      "[355]\ttrain-auc:0.906591+0.00117568\ttest-auc:0.890873+0.00589486\n",
      "[356]\ttrain-auc:0.906629+0.00117327\ttest-auc:0.890879+0.0058969\n",
      "[357]\ttrain-auc:0.90666+0.00117251\ttest-auc:0.890909+0.00589098\n",
      "[358]\ttrain-auc:0.906703+0.00116935\ttest-auc:0.890932+0.00586673\n",
      "[359]\ttrain-auc:0.906722+0.00116215\ttest-auc:0.890962+0.0058706\n",
      "[360]\ttrain-auc:0.906755+0.00117098\ttest-auc:0.890978+0.00588269\n",
      "[361]\ttrain-auc:0.906786+0.00116842\ttest-auc:0.890998+0.00590847\n",
      "[362]\ttrain-auc:0.906826+0.00116434\ttest-auc:0.891037+0.00592454\n",
      "[363]\ttrain-auc:0.90688+0.00116415\ttest-auc:0.891059+0.00590827\n",
      "[364]\ttrain-auc:0.90693+0.00115746\ttest-auc:0.891092+0.00591617\n",
      "[365]\ttrain-auc:0.906963+0.00115552\ttest-auc:0.891107+0.0059245\n",
      "[366]\ttrain-auc:0.90701+0.00115372\ttest-auc:0.891107+0.00592748\n",
      "[367]\ttrain-auc:0.907045+0.00115874\ttest-auc:0.89113+0.0059293\n",
      "[368]\ttrain-auc:0.907071+0.0011621\ttest-auc:0.891138+0.00593842\n",
      "[369]\ttrain-auc:0.907113+0.00116361\ttest-auc:0.891143+0.00594337\n",
      "[370]\ttrain-auc:0.907157+0.00115429\ttest-auc:0.891162+0.00593311\n",
      "[371]\ttrain-auc:0.907201+0.00115392\ttest-auc:0.891188+0.00591037\n",
      "[372]\ttrain-auc:0.907236+0.00116036\ttest-auc:0.891203+0.00591219\n",
      "[373]\ttrain-auc:0.907285+0.00115847\ttest-auc:0.891232+0.00591446\n",
      "[374]\ttrain-auc:0.907326+0.00115456\ttest-auc:0.891243+0.00590645\n",
      "[375]\ttrain-auc:0.907378+0.00114779\ttest-auc:0.891236+0.00588735\n",
      "[376]\ttrain-auc:0.907421+0.00113891\ttest-auc:0.891258+0.00588332\n",
      "[377]\ttrain-auc:0.907454+0.00113202\ttest-auc:0.891273+0.00586914\n",
      "[378]\ttrain-auc:0.907483+0.0011262\ttest-auc:0.891287+0.00585865\n",
      "[379]\ttrain-auc:0.907517+0.00112634\ttest-auc:0.891282+0.0058883\n",
      "[380]\ttrain-auc:0.907561+0.00111784\ttest-auc:0.891282+0.00587261\n",
      "[381]\ttrain-auc:0.907605+0.00109999\ttest-auc:0.891288+0.00587682\n",
      "[382]\ttrain-auc:0.907641+0.00109832\ttest-auc:0.891313+0.00586325\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[383]\ttrain-auc:0.907694+0.00109296\ttest-auc:0.891326+0.00587018\n",
      "[384]\ttrain-auc:0.907745+0.00109599\ttest-auc:0.891324+0.00584224\n",
      "[385]\ttrain-auc:0.907782+0.00109337\ttest-auc:0.891323+0.00583697\n",
      "[386]\ttrain-auc:0.907827+0.00109503\ttest-auc:0.891317+0.00586201\n",
      "[387]\ttrain-auc:0.907866+0.00109543\ttest-auc:0.891318+0.00585004\n",
      "[388]\ttrain-auc:0.907912+0.00110274\ttest-auc:0.891331+0.00586289\n",
      "[389]\ttrain-auc:0.907948+0.00109612\ttest-auc:0.891334+0.00585328\n",
      "[390]\ttrain-auc:0.907986+0.00109356\ttest-auc:0.891325+0.00585144\n",
      "[391]\ttrain-auc:0.908037+0.00108935\ttest-auc:0.891359+0.0058586\n",
      "[392]\ttrain-auc:0.90807+0.00108062\ttest-auc:0.891358+0.00587535\n",
      "[393]\ttrain-auc:0.908103+0.00107407\ttest-auc:0.891378+0.00587363\n",
      "[394]\ttrain-auc:0.90815+0.00109209\ttest-auc:0.891381+0.00587165\n",
      "[395]\ttrain-auc:0.90819+0.00108566\ttest-auc:0.891403+0.00585509\n",
      "[396]\ttrain-auc:0.908231+0.00109442\ttest-auc:0.891449+0.00583016\n",
      "[397]\ttrain-auc:0.908265+0.00109807\ttest-auc:0.891497+0.00578949\n",
      "[398]\ttrain-auc:0.908301+0.00109879\ttest-auc:0.891522+0.00577867\n",
      "[399]\ttrain-auc:0.908342+0.00109915\ttest-auc:0.891544+0.00576051\n",
      "[400]\ttrain-auc:0.908389+0.00109813\ttest-auc:0.891558+0.00577947\n",
      "[401]\ttrain-auc:0.908424+0.00109724\ttest-auc:0.891557+0.0057668\n",
      "[402]\ttrain-auc:0.908461+0.00109665\ttest-auc:0.891582+0.00575399\n",
      "[403]\ttrain-auc:0.908498+0.00108574\ttest-auc:0.891596+0.00575367\n",
      "[404]\ttrain-auc:0.908537+0.00109251\ttest-auc:0.891617+0.00576463\n",
      "[405]\ttrain-auc:0.908582+0.00109025\ttest-auc:0.891609+0.00576252\n",
      "[406]\ttrain-auc:0.908624+0.00108796\ttest-auc:0.891623+0.00574216\n",
      "[407]\ttrain-auc:0.908652+0.00109455\ttest-auc:0.891643+0.00571496\n",
      "[408]\ttrain-auc:0.908696+0.00108764\ttest-auc:0.891659+0.00571851\n",
      "[409]\ttrain-auc:0.908744+0.00109095\ttest-auc:0.891692+0.00570183\n",
      "[410]\ttrain-auc:0.908777+0.00110021\ttest-auc:0.891711+0.00570089\n",
      "[411]\ttrain-auc:0.908808+0.00109813\ttest-auc:0.891713+0.00567958\n",
      "[412]\ttrain-auc:0.908858+0.00110235\ttest-auc:0.891739+0.00565186\n",
      "[413]\ttrain-auc:0.908897+0.00110542\ttest-auc:0.891761+0.0056502\n",
      "[414]\ttrain-auc:0.908944+0.00110133\ttest-auc:0.891775+0.00564366\n",
      "[415]\ttrain-auc:0.908976+0.00111216\ttest-auc:0.891806+0.00565034\n",
      "[416]\ttrain-auc:0.909001+0.0011121\ttest-auc:0.891816+0.0056289\n",
      "[417]\ttrain-auc:0.90904+0.00112835\ttest-auc:0.891842+0.00562181\n",
      "[418]\ttrain-auc:0.90908+0.0011335\ttest-auc:0.891851+0.00562402\n",
      "[419]\ttrain-auc:0.909129+0.00114021\ttest-auc:0.891846+0.00562256\n",
      "[420]\ttrain-auc:0.909173+0.00113169\ttest-auc:0.891852+0.00561966\n",
      "[421]\ttrain-auc:0.909223+0.00112862\ttest-auc:0.891871+0.00560172\n",
      "[422]\ttrain-auc:0.909263+0.00111341\ttest-auc:0.891892+0.00561479\n",
      "[423]\ttrain-auc:0.909305+0.00111527\ttest-auc:0.891909+0.00560921\n",
      "[424]\ttrain-auc:0.909345+0.00111441\ttest-auc:0.891909+0.00562464\n",
      "[425]\ttrain-auc:0.909378+0.00112358\ttest-auc:0.891901+0.00562301\n",
      "[426]\ttrain-auc:0.90941+0.00113037\ttest-auc:0.89189+0.0056149\n",
      "[427]\ttrain-auc:0.909441+0.00112481\ttest-auc:0.891899+0.00561593\n",
      "[428]\ttrain-auc:0.909473+0.00110927\ttest-auc:0.8919+0.00561642\n",
      "[429]\ttrain-auc:0.909514+0.00111298\ttest-auc:0.8919+0.00563465\n",
      "[430]\ttrain-auc:0.90955+0.00111499\ttest-auc:0.891918+0.00561766\n",
      "[431]\ttrain-auc:0.909584+0.00110682\ttest-auc:0.891942+0.00561141\n",
      "[432]\ttrain-auc:0.909623+0.00109812\ttest-auc:0.891948+0.00558592\n",
      "[433]\ttrain-auc:0.909664+0.00109849\ttest-auc:0.891964+0.00559175\n",
      "[434]\ttrain-auc:0.909708+0.0010859\ttest-auc:0.891966+0.00560489\n",
      "[435]\ttrain-auc:0.909743+0.0010714\ttest-auc:0.891977+0.00559291\n",
      "[436]\ttrain-auc:0.909771+0.00107411\ttest-auc:0.891994+0.00559185\n",
      "[437]\ttrain-auc:0.909819+0.00106854\ttest-auc:0.89202+0.00558275\n",
      "[438]\ttrain-auc:0.909854+0.00107187\ttest-auc:0.892019+0.00557901\n",
      "[439]\ttrain-auc:0.9099+0.00107196\ttest-auc:0.892057+0.00559417\n",
      "[440]\ttrain-auc:0.909933+0.00107049\ttest-auc:0.892047+0.00560097\n",
      "[441]\ttrain-auc:0.909967+0.00106755\ttest-auc:0.892058+0.00560121\n",
      "[442]\ttrain-auc:0.909993+0.00106333\ttest-auc:0.892077+0.00558549\n",
      "[443]\ttrain-auc:0.910023+0.00107065\ttest-auc:0.892084+0.00559209\n",
      "[444]\ttrain-auc:0.910055+0.001076\ttest-auc:0.892082+0.00557043\n",
      "[445]\ttrain-auc:0.91009+0.00107584\ttest-auc:0.892073+0.00555497\n",
      "[446]\ttrain-auc:0.910127+0.0010693\ttest-auc:0.892091+0.00555547\n",
      "[447]\ttrain-auc:0.910161+0.00107115\ttest-auc:0.892105+0.00551778\n",
      "[448]\ttrain-auc:0.910192+0.00106069\ttest-auc:0.892118+0.00550866\n",
      "[449]\ttrain-auc:0.910241+0.00106624\ttest-auc:0.892126+0.0055031\n",
      "[450]\ttrain-auc:0.910271+0.00106812\ttest-auc:0.892104+0.00550149\n",
      "[451]\ttrain-auc:0.910297+0.00106955\ttest-auc:0.892117+0.00548547\n",
      "[452]\ttrain-auc:0.910324+0.00107222\ttest-auc:0.892111+0.00548909\n",
      "[453]\ttrain-auc:0.910359+0.0010696\ttest-auc:0.892135+0.00548626\n",
      "[454]\ttrain-auc:0.910396+0.00107951\ttest-auc:0.892155+0.00549548\n",
      "[455]\ttrain-auc:0.910424+0.00106238\ttest-auc:0.892153+0.0054848\n",
      "[456]\ttrain-auc:0.910443+0.00105569\ttest-auc:0.892132+0.00548263\n",
      "[457]\ttrain-auc:0.910485+0.00106305\ttest-auc:0.892155+0.0054658\n",
      "[458]\ttrain-auc:0.91051+0.00107169\ttest-auc:0.892151+0.00546\n",
      "[459]\ttrain-auc:0.910549+0.00107303\ttest-auc:0.892181+0.00548103\n",
      "[460]\ttrain-auc:0.910573+0.00107644\ttest-auc:0.892188+0.00547411\n",
      "[461]\ttrain-auc:0.910597+0.00107187\ttest-auc:0.892195+0.00546775\n",
      "[462]\ttrain-auc:0.910628+0.00106519\ttest-auc:0.892176+0.00545542\n",
      "[463]\ttrain-auc:0.910646+0.00106386\ttest-auc:0.892191+0.00544575\n",
      "[464]\ttrain-auc:0.910685+0.00105546\ttest-auc:0.892208+0.0054466\n",
      "[465]\ttrain-auc:0.910713+0.00105112\ttest-auc:0.892206+0.00544208\n",
      "[466]\ttrain-auc:0.910753+0.00105318\ttest-auc:0.892209+0.00543765\n",
      "[467]\ttrain-auc:0.910791+0.00104841\ttest-auc:0.892223+0.00543036\n",
      "[468]\ttrain-auc:0.910821+0.00104797\ttest-auc:0.89226+0.00541196\n",
      "[469]\ttrain-auc:0.910857+0.0010527\ttest-auc:0.892255+0.00539608\n",
      "[470]\ttrain-auc:0.910891+0.00105798\ttest-auc:0.892262+0.00538683\n",
      "[471]\ttrain-auc:0.910927+0.00106247\ttest-auc:0.892248+0.00539069\n",
      "[472]\ttrain-auc:0.910967+0.00105583\ttest-auc:0.892263+0.00539588\n",
      "[473]\ttrain-auc:0.911015+0.00106046\ttest-auc:0.892268+0.00538676\n",
      "[474]\ttrain-auc:0.911056+0.00105304\ttest-auc:0.892263+0.00539023\n",
      "[475]\ttrain-auc:0.911082+0.00105004\ttest-auc:0.892274+0.00539012\n",
      "[476]\ttrain-auc:0.91111+0.0010427\ttest-auc:0.892282+0.00538382\n",
      "[477]\ttrain-auc:0.911139+0.00104158\ttest-auc:0.892291+0.005366\n",
      "[478]\ttrain-auc:0.911186+0.0010538\ttest-auc:0.892283+0.00536259\n",
      "[479]\ttrain-auc:0.911203+0.00105388\ttest-auc:0.892314+0.00535324\n",
      "[480]\ttrain-auc:0.911236+0.00105734\ttest-auc:0.892311+0.00533336\n",
      "[481]\ttrain-auc:0.911276+0.00106222\ttest-auc:0.892309+0.00534483\n",
      "[482]\ttrain-auc:0.911321+0.0010624\ttest-auc:0.892311+0.00533611\n",
      "[483]\ttrain-auc:0.911352+0.0010625\ttest-auc:0.892332+0.00533664\n",
      "[484]\ttrain-auc:0.911373+0.00106839\ttest-auc:0.892364+0.0053235\n",
      "[485]\ttrain-auc:0.91141+0.00105878\ttest-auc:0.892388+0.00533829\n",
      "[486]\ttrain-auc:0.911439+0.0010558\ttest-auc:0.892398+0.00531597\n",
      "[487]\ttrain-auc:0.911475+0.00105664\ttest-auc:0.892411+0.0053134\n",
      "[488]\ttrain-auc:0.911514+0.00106041\ttest-auc:0.892396+0.00531031\n",
      "[489]\ttrain-auc:0.911544+0.00106759\ttest-auc:0.892402+0.00530855\n",
      "[490]\ttrain-auc:0.91158+0.00107604\ttest-auc:0.892405+0.00529639\n",
      "[491]\ttrain-auc:0.911611+0.00108412\ttest-auc:0.892383+0.00531419\n",
      "[492]\ttrain-auc:0.911645+0.00108524\ttest-auc:0.892411+0.0052921\n",
      "[493]\ttrain-auc:0.911674+0.00108659\ttest-auc:0.892404+0.00527568\n",
      "[494]\ttrain-auc:0.911701+0.00108285\ttest-auc:0.892422+0.0052637\n",
      "[495]\ttrain-auc:0.91174+0.00106746\ttest-auc:0.89241+0.00527803\n",
      "[496]\ttrain-auc:0.911763+0.00106806\ttest-auc:0.892425+0.00527617\n",
      "[497]\ttrain-auc:0.911798+0.00106733\ttest-auc:0.892412+0.00528228\n",
      "[498]\ttrain-auc:0.911837+0.00106572\ttest-auc:0.892421+0.00527754\n",
      "[499]\ttrain-auc:0.911868+0.00106565\ttest-auc:0.892429+0.00527515\n",
      "[500]\ttrain-auc:0.9119+0.00106951\ttest-auc:0.892425+0.00526371\n",
      "[501]\ttrain-auc:0.911928+0.0010687\ttest-auc:0.892413+0.00527142\n",
      "[502]\ttrain-auc:0.911966+0.00107378\ttest-auc:0.89241+0.005256\n",
      "[503]\ttrain-auc:0.912009+0.00106838\ttest-auc:0.89242+0.00525542\n",
      "[504]\ttrain-auc:0.912038+0.0010738\ttest-auc:0.892431+0.00527726\n",
      "[505]\ttrain-auc:0.912066+0.00107056\ttest-auc:0.892439+0.0052855\n",
      "[506]\ttrain-auc:0.912098+0.00106915\ttest-auc:0.89246+0.00528083\n",
      "[507]\ttrain-auc:0.912125+0.00107044\ttest-auc:0.892443+0.00528369\n",
      "[508]\ttrain-auc:0.912158+0.00107613\ttest-auc:0.892433+0.005276\n",
      "[509]\ttrain-auc:0.91219+0.00107351\ttest-auc:0.892431+0.00527189\n",
      "[510]\ttrain-auc:0.912222+0.0010746\ttest-auc:0.892452+0.00527118\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[511]\ttrain-auc:0.912265+0.0010756\ttest-auc:0.89246+0.00525626\n",
      "[512]\ttrain-auc:0.912299+0.00107232\ttest-auc:0.892482+0.0052548\n",
      "[513]\ttrain-auc:0.912334+0.00106363\ttest-auc:0.892504+0.00527805\n",
      "[514]\ttrain-auc:0.912367+0.00105709\ttest-auc:0.892512+0.00527918\n",
      "[515]\ttrain-auc:0.912397+0.00104651\ttest-auc:0.892521+0.0053005\n",
      "[516]\ttrain-auc:0.912433+0.00103518\ttest-auc:0.892532+0.00527754\n",
      "[517]\ttrain-auc:0.912471+0.00102855\ttest-auc:0.892528+0.00527224\n",
      "[518]\ttrain-auc:0.912512+0.00102612\ttest-auc:0.892522+0.00526946\n",
      "[519]\ttrain-auc:0.912548+0.0010304\ttest-auc:0.892507+0.00525593\n",
      "[520]\ttrain-auc:0.912574+0.00103558\ttest-auc:0.892512+0.00525292\n",
      "[521]\ttrain-auc:0.912589+0.00103827\ttest-auc:0.892509+0.00524999\n",
      "[522]\ttrain-auc:0.912621+0.00105354\ttest-auc:0.892523+0.00523587\n",
      "[523]\ttrain-auc:0.912649+0.00105047\ttest-auc:0.892551+0.00523484\n",
      "[524]\ttrain-auc:0.912686+0.00105262\ttest-auc:0.892568+0.00521414\n",
      "[525]\ttrain-auc:0.912713+0.00105425\ttest-auc:0.892564+0.00520269\n",
      "[526]\ttrain-auc:0.91275+0.00104693\ttest-auc:0.892555+0.00520211\n",
      "[527]\ttrain-auc:0.912784+0.00105781\ttest-auc:0.892544+0.00520443\n",
      "[528]\ttrain-auc:0.912816+0.0010626\ttest-auc:0.892551+0.00521309\n",
      "[529]\ttrain-auc:0.912849+0.00105189\ttest-auc:0.892559+0.0052087\n",
      "[530]\ttrain-auc:0.912883+0.00104212\ttest-auc:0.892588+0.00521312\n",
      "[531]\ttrain-auc:0.912903+0.00104948\ttest-auc:0.892578+0.00521239\n",
      "[532]\ttrain-auc:0.912936+0.00105808\ttest-auc:0.892577+0.00518979\n",
      "[533]\ttrain-auc:0.912973+0.00105382\ttest-auc:0.892559+0.00518406\n",
      "[534]\ttrain-auc:0.913001+0.00105058\ttest-auc:0.892572+0.00517568\n",
      "[535]\ttrain-auc:0.913035+0.00104661\ttest-auc:0.892572+0.00517835\n",
      "[536]\ttrain-auc:0.913069+0.0010417\ttest-auc:0.892596+0.00517779\n",
      "[537]\ttrain-auc:0.913099+0.00104201\ttest-auc:0.8926+0.00518875\n",
      "[538]\ttrain-auc:0.913128+0.00104079\ttest-auc:0.892609+0.00517938\n",
      "[539]\ttrain-auc:0.913155+0.0010412\ttest-auc:0.892608+0.00517571\n",
      "[540]\ttrain-auc:0.913181+0.0010424\ttest-auc:0.89262+0.00515618\n",
      "[541]\ttrain-auc:0.913202+0.00103993\ttest-auc:0.892608+0.00517146\n",
      "[542]\ttrain-auc:0.913232+0.00103055\ttest-auc:0.892606+0.00517613\n",
      "[543]\ttrain-auc:0.913274+0.0010341\ttest-auc:0.892622+0.00518736\n",
      "[544]\ttrain-auc:0.913302+0.00104159\ttest-auc:0.892618+0.0051895\n",
      "[545]\ttrain-auc:0.913338+0.00104131\ttest-auc:0.892632+0.00521022\n",
      "[546]\ttrain-auc:0.913384+0.00104439\ttest-auc:0.892634+0.00522202\n",
      "[547]\ttrain-auc:0.913409+0.00104233\ttest-auc:0.892633+0.00520913\n",
      "[548]\ttrain-auc:0.91344+0.00104403\ttest-auc:0.892634+0.00521799\n",
      "[549]\ttrain-auc:0.913461+0.00104903\ttest-auc:0.892643+0.00520224\n",
      "[550]\ttrain-auc:0.913482+0.00104049\ttest-auc:0.892632+0.00520494\n",
      "[551]\ttrain-auc:0.913513+0.00104379\ttest-auc:0.892637+0.00519968\n",
      "[552]\ttrain-auc:0.913547+0.00103897\ttest-auc:0.892658+0.00521273\n",
      "[553]\ttrain-auc:0.913572+0.00103867\ttest-auc:0.892668+0.00521434\n",
      "[554]\ttrain-auc:0.913595+0.00104413\ttest-auc:0.892679+0.00522363\n",
      "[555]\ttrain-auc:0.913621+0.00104885\ttest-auc:0.892683+0.00522035\n",
      "[556]\ttrain-auc:0.913655+0.00105073\ttest-auc:0.892677+0.00522052\n",
      "[557]\ttrain-auc:0.91369+0.00104896\ttest-auc:0.892683+0.0052168\n",
      "[558]\ttrain-auc:0.913729+0.00104172\ttest-auc:0.892677+0.00522501\n",
      "[559]\ttrain-auc:0.91376+0.00104452\ttest-auc:0.892677+0.00520773\n",
      "[560]\ttrain-auc:0.913791+0.00104021\ttest-auc:0.892678+0.00522051\n",
      "[561]\ttrain-auc:0.913826+0.00102859\ttest-auc:0.892681+0.0052234\n",
      "[562]\ttrain-auc:0.913858+0.00103311\ttest-auc:0.892707+0.00519979\n",
      "[563]\ttrain-auc:0.91389+0.00102942\ttest-auc:0.892716+0.0052032\n",
      "[564]\ttrain-auc:0.913931+0.00102951\ttest-auc:0.892698+0.00521511\n",
      "[565]\ttrain-auc:0.913957+0.00102535\ttest-auc:0.892707+0.00522056\n",
      "[566]\ttrain-auc:0.913992+0.00102397\ttest-auc:0.892705+0.00522612\n",
      "[567]\ttrain-auc:0.914034+0.00101823\ttest-auc:0.892721+0.00523505\n",
      "[568]\ttrain-auc:0.914076+0.00102357\ttest-auc:0.892743+0.00524452\n",
      "[569]\ttrain-auc:0.914108+0.00102303\ttest-auc:0.892744+0.00524973\n",
      "[570]\ttrain-auc:0.914138+0.00103104\ttest-auc:0.892745+0.00525152\n",
      "[571]\ttrain-auc:0.914178+0.00103883\ttest-auc:0.89274+0.00526692\n",
      "[572]\ttrain-auc:0.914209+0.00103517\ttest-auc:0.892748+0.00526503\n",
      "[573]\ttrain-auc:0.914244+0.00103255\ttest-auc:0.892773+0.00524953\n",
      "[574]\ttrain-auc:0.914271+0.00102954\ttest-auc:0.892752+0.00524126\n",
      "[575]\ttrain-auc:0.914297+0.00103375\ttest-auc:0.892761+0.00523913\n",
      "[576]\ttrain-auc:0.914332+0.00102344\ttest-auc:0.892744+0.00523081\n",
      "[577]\ttrain-auc:0.914359+0.0010361\ttest-auc:0.892752+0.00523808\n",
      "[578]\ttrain-auc:0.914391+0.00103515\ttest-auc:0.892739+0.00521316\n",
      "[579]\ttrain-auc:0.914422+0.00102781\ttest-auc:0.892733+0.00521394\n",
      "[580]\ttrain-auc:0.914452+0.00102521\ttest-auc:0.892739+0.00521043\n",
      "[581]\ttrain-auc:0.914478+0.00103059\ttest-auc:0.892757+0.00520153\n",
      "[582]\ttrain-auc:0.914502+0.00104127\ttest-auc:0.892769+0.00518332\n",
      "[583]\ttrain-auc:0.914536+0.00103623\ttest-auc:0.892762+0.00519367\n",
      "[584]\ttrain-auc:0.914575+0.00103688\ttest-auc:0.892756+0.00520835\n",
      "[585]\ttrain-auc:0.914593+0.00103388\ttest-auc:0.892773+0.00521178\n",
      "[586]\ttrain-auc:0.914619+0.00103766\ttest-auc:0.892763+0.00520711\n",
      "[587]\ttrain-auc:0.914655+0.0010471\ttest-auc:0.892776+0.00518698\n",
      "[588]\ttrain-auc:0.91468+0.00104815\ttest-auc:0.892783+0.00519304\n",
      "[589]\ttrain-auc:0.914709+0.00104341\ttest-auc:0.892774+0.00518551\n",
      "[590]\ttrain-auc:0.91474+0.00104015\ttest-auc:0.892782+0.00518357\n",
      "[591]\ttrain-auc:0.914782+0.00104202\ttest-auc:0.892789+0.00518555\n",
      "[592]\ttrain-auc:0.914817+0.00103822\ttest-auc:0.892796+0.00518283\n",
      "[593]\ttrain-auc:0.914852+0.00103598\ttest-auc:0.892799+0.0051871\n",
      "[594]\ttrain-auc:0.914883+0.00102695\ttest-auc:0.892773+0.00517624\n",
      "[595]\ttrain-auc:0.914914+0.00102006\ttest-auc:0.892784+0.00518261\n",
      "[596]\ttrain-auc:0.914951+0.00103291\ttest-auc:0.892805+0.0051659\n",
      "[597]\ttrain-auc:0.914983+0.00102916\ttest-auc:0.892818+0.00515677\n",
      "[598]\ttrain-auc:0.915006+0.00101941\ttest-auc:0.892836+0.00515303\n",
      "[599]\ttrain-auc:0.915046+0.00101678\ttest-auc:0.892835+0.00513889\n",
      "[600]\ttrain-auc:0.915076+0.00101051\ttest-auc:0.892825+0.00515396\n",
      "[601]\ttrain-auc:0.915119+0.00101047\ttest-auc:0.892835+0.00514533\n",
      "[602]\ttrain-auc:0.915148+0.00100078\ttest-auc:0.892849+0.00513314\n",
      "[603]\ttrain-auc:0.915181+0.00100217\ttest-auc:0.892846+0.00514611\n",
      "[604]\ttrain-auc:0.915203+0.000996539\ttest-auc:0.892848+0.00514394\n",
      "[605]\ttrain-auc:0.915243+0.00100252\ttest-auc:0.892858+0.0051255\n",
      "[606]\ttrain-auc:0.91528+0.00100636\ttest-auc:0.892855+0.00514331\n",
      "[607]\ttrain-auc:0.915313+0.00100069\ttest-auc:0.89283+0.00514377\n",
      "[608]\ttrain-auc:0.915335+0.0010058\ttest-auc:0.89283+0.00514759\n",
      "[609]\ttrain-auc:0.915355+0.00101471\ttest-auc:0.89284+0.00513098\n",
      "[610]\ttrain-auc:0.915395+0.00100823\ttest-auc:0.892846+0.00513203\n",
      "[611]\ttrain-auc:0.915426+0.0010022\ttest-auc:0.892858+0.00513522\n",
      "[612]\ttrain-auc:0.915468+0.00100554\ttest-auc:0.892847+0.00514574\n",
      "[613]\ttrain-auc:0.915503+0.00100709\ttest-auc:0.892841+0.00514402\n",
      "[614]\ttrain-auc:0.915538+0.00100784\ttest-auc:0.892833+0.00513802\n",
      "[615]\ttrain-auc:0.915563+0.0010014\ttest-auc:0.892845+0.0051385\n",
      "[616]\ttrain-auc:0.915599+0.00102017\ttest-auc:0.892848+0.00514104\n",
      "[617]\ttrain-auc:0.915647+0.00101111\ttest-auc:0.892856+0.00512213\n",
      "[618]\ttrain-auc:0.915687+0.00100664\ttest-auc:0.892864+0.00513075\n",
      "[619]\ttrain-auc:0.915728+0.00100501\ttest-auc:0.89286+0.00512914\n",
      "[620]\ttrain-auc:0.91576+0.00100919\ttest-auc:0.892873+0.00512545\n",
      "[621]\ttrain-auc:0.915797+0.0010099\ttest-auc:0.892862+0.00510112\n",
      "[622]\ttrain-auc:0.915818+0.00100656\ttest-auc:0.892859+0.00509883\n",
      "[623]\ttrain-auc:0.91585+0.00101334\ttest-auc:0.892867+0.00509008\n",
      "[624]\ttrain-auc:0.91588+0.00100376\ttest-auc:0.892872+0.00508307\n",
      "[625]\ttrain-auc:0.915918+0.00100676\ttest-auc:0.892867+0.00507227\n",
      "[626]\ttrain-auc:0.915952+0.00100148\ttest-auc:0.892858+0.00507331\n",
      "[627]\ttrain-auc:0.915993+0.00100022\ttest-auc:0.89289+0.00506636\n",
      "[628]\ttrain-auc:0.916007+0.000997286\ttest-auc:0.8929+0.00506721\n",
      "[629]\ttrain-auc:0.916046+0.00100059\ttest-auc:0.892898+0.0050699\n",
      "[630]\ttrain-auc:0.91607+0.00100134\ttest-auc:0.892908+0.00505459\n",
      "[631]\ttrain-auc:0.916094+0.00100178\ttest-auc:0.892882+0.00504607\n",
      "[632]\ttrain-auc:0.916131+0.000995834\ttest-auc:0.892883+0.00505571\n",
      "[633]\ttrain-auc:0.916164+0.000989617\ttest-auc:0.892901+0.00505437\n",
      "[634]\ttrain-auc:0.916192+0.000985985\ttest-auc:0.89291+0.00504375\n",
      "[635]\ttrain-auc:0.916232+0.00099143\ttest-auc:0.892911+0.00504578\n",
      "[636]\ttrain-auc:0.916264+0.00100437\ttest-auc:0.89293+0.00504017\n",
      "[637]\ttrain-auc:0.916291+0.00100852\ttest-auc:0.892928+0.00504564\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[638]\ttrain-auc:0.91632+0.00101178\ttest-auc:0.892901+0.00505127\n",
      "[639]\ttrain-auc:0.916352+0.00100376\ttest-auc:0.89292+0.00505489\n",
      "[640]\ttrain-auc:0.916387+0.0010058\ttest-auc:0.892923+0.00507204\n",
      "[641]\ttrain-auc:0.916421+0.00100712\ttest-auc:0.892908+0.00505774\n",
      "[642]\ttrain-auc:0.916461+0.00101569\ttest-auc:0.892903+0.00506722\n",
      "[643]\ttrain-auc:0.916494+0.00101733\ttest-auc:0.892904+0.00505175\n",
      "[644]\ttrain-auc:0.916526+0.00101077\ttest-auc:0.89291+0.00504002\n",
      "[645]\ttrain-auc:0.916552+0.00101032\ttest-auc:0.892905+0.00500115\n",
      "[646]\ttrain-auc:0.916588+0.00100878\ttest-auc:0.892916+0.00498478\n",
      "[647]\ttrain-auc:0.916623+0.00101519\ttest-auc:0.892905+0.00497876\n",
      "[648]\ttrain-auc:0.91666+0.00102072\ttest-auc:0.892905+0.00497737\n",
      "[649]\ttrain-auc:0.916692+0.00101414\ttest-auc:0.892913+0.00498517\n",
      "[650]\ttrain-auc:0.916718+0.0010082\ttest-auc:0.892908+0.00499149\n",
      "[651]\ttrain-auc:0.916756+0.00100067\ttest-auc:0.892916+0.00498696\n",
      "[652]\ttrain-auc:0.916774+0.00100461\ttest-auc:0.892931+0.00498095\n",
      "[653]\ttrain-auc:0.916802+0.000996336\ttest-auc:0.892927+0.00499592\n",
      "[654]\ttrain-auc:0.916828+0.000988732\ttest-auc:0.89292+0.00500418\n",
      "[655]\ttrain-auc:0.916866+0.00098895\ttest-auc:0.892934+0.00499461\n",
      "[656]\ttrain-auc:0.916894+0.000987401\ttest-auc:0.892918+0.00497648\n",
      "[657]\ttrain-auc:0.916916+0.000982421\ttest-auc:0.892917+0.00498475\n",
      "[658]\ttrain-auc:0.916941+0.000987201\ttest-auc:0.89293+0.00498136\n",
      "[659]\ttrain-auc:0.916975+0.000983756\ttest-auc:0.892961+0.00498848\n",
      "[660]\ttrain-auc:0.917007+0.000986748\ttest-auc:0.892958+0.00499138\n",
      "[661]\ttrain-auc:0.917036+0.000975836\ttest-auc:0.892953+0.00498818\n",
      "[662]\ttrain-auc:0.917066+0.000975266\ttest-auc:0.892962+0.00500195\n",
      "[663]\ttrain-auc:0.917093+0.000965488\ttest-auc:0.892965+0.00501878\n",
      "[664]\ttrain-auc:0.917122+0.000960827\ttest-auc:0.892961+0.00500074\n",
      "[665]\ttrain-auc:0.917158+0.000964213\ttest-auc:0.892966+0.0049893\n",
      "[666]\ttrain-auc:0.917184+0.000961742\ttest-auc:0.892961+0.00498657\n",
      "[667]\ttrain-auc:0.917215+0.000972762\ttest-auc:0.892973+0.00498833\n",
      "[668]\ttrain-auc:0.91724+0.00096913\ttest-auc:0.89297+0.00499481\n",
      "[669]\ttrain-auc:0.91727+0.000966784\ttest-auc:0.892983+0.00499368\n",
      "[670]\ttrain-auc:0.917311+0.00096642\ttest-auc:0.892957+0.00500063\n",
      "[671]\ttrain-auc:0.917345+0.000962809\ttest-auc:0.892966+0.00499927\n",
      "[672]\ttrain-auc:0.917383+0.000974751\ttest-auc:0.892973+0.0049889\n",
      "[673]\ttrain-auc:0.917409+0.000984689\ttest-auc:0.892974+0.00496862\n",
      "[674]\ttrain-auc:0.91744+0.000987868\ttest-auc:0.892973+0.0049632\n",
      "[675]\ttrain-auc:0.917466+0.000983077\ttest-auc:0.892958+0.00496781\n",
      "[676]\ttrain-auc:0.917501+0.000982682\ttest-auc:0.892963+0.00497034\n",
      "[677]\ttrain-auc:0.917541+0.000982071\ttest-auc:0.892964+0.00496618\n",
      "[678]\ttrain-auc:0.917573+0.000972196\ttest-auc:0.892976+0.00495823\n",
      "[679]\ttrain-auc:0.917596+0.000979456\ttest-auc:0.892975+0.00495548\n",
      "[680]\ttrain-auc:0.917622+0.000991576\ttest-auc:0.892969+0.00495127\n",
      "[681]\ttrain-auc:0.917656+0.000993908\ttest-auc:0.892976+0.00494575\n",
      "[682]\ttrain-auc:0.917683+0.00100217\ttest-auc:0.892997+0.00493226\n",
      "[683]\ttrain-auc:0.917708+0.000996488\ttest-auc:0.893002+0.00493471\n",
      "[684]\ttrain-auc:0.917729+0.000999345\ttest-auc:0.893005+0.00494616\n",
      "[685]\ttrain-auc:0.917754+0.00100001\ttest-auc:0.893019+0.00495377\n",
      "[686]\ttrain-auc:0.917773+0.00100077\ttest-auc:0.893022+0.00497051\n",
      "[687]\ttrain-auc:0.917806+0.00100206\ttest-auc:0.893033+0.0049718\n",
      "[688]\ttrain-auc:0.917828+0.00100922\ttest-auc:0.893045+0.00496713\n",
      "[689]\ttrain-auc:0.91786+0.00101464\ttest-auc:0.893041+0.00497003\n",
      "[690]\ttrain-auc:0.917898+0.0010168\ttest-auc:0.893036+0.00496012\n",
      "[691]\ttrain-auc:0.917921+0.00102705\ttest-auc:0.893046+0.0049623\n",
      "[692]\ttrain-auc:0.917959+0.00102821\ttest-auc:0.893053+0.00496477\n",
      "[693]\ttrain-auc:0.917993+0.001027\ttest-auc:0.893048+0.00495492\n",
      "[694]\ttrain-auc:0.918022+0.00102142\ttest-auc:0.893056+0.00494994\n",
      "[695]\ttrain-auc:0.918051+0.00101902\ttest-auc:0.893057+0.00493922\n",
      "[696]\ttrain-auc:0.918089+0.00101268\ttest-auc:0.893071+0.00493631\n",
      "[697]\ttrain-auc:0.918111+0.00100098\ttest-auc:0.893067+0.00495898\n",
      "[698]\ttrain-auc:0.91813+0.000995606\ttest-auc:0.893062+0.00496805\n",
      "[699]\ttrain-auc:0.918166+0.000999934\ttest-auc:0.893058+0.00496523\n",
      "[700]\ttrain-auc:0.918198+0.00100192\ttest-auc:0.89305+0.00498314\n",
      "[701]\ttrain-auc:0.918233+0.00100107\ttest-auc:0.893043+0.00497955\n",
      "[702]\ttrain-auc:0.91826+0.000999784\ttest-auc:0.89304+0.00498438\n",
      "[703]\ttrain-auc:0.918299+0.000996712\ttest-auc:0.893026+0.00497659\n",
      "[704]\ttrain-auc:0.918329+0.00100153\ttest-auc:0.893034+0.00497753\n",
      "[705]\ttrain-auc:0.918363+0.000989669\ttest-auc:0.893034+0.00496914\n",
      "[706]\ttrain-auc:0.918387+0.000991498\ttest-auc:0.89303+0.00496568\n",
      "[707]\ttrain-auc:0.918425+0.000984773\ttest-auc:0.893049+0.00497435\n",
      "[708]\ttrain-auc:0.918448+0.000982845\ttest-auc:0.893052+0.00496858\n",
      "[709]\ttrain-auc:0.918479+0.000976894\ttest-auc:0.893067+0.00496803\n",
      "[710]\ttrain-auc:0.918501+0.000975934\ttest-auc:0.893068+0.00496406\n",
      "[711]\ttrain-auc:0.918523+0.00098149\ttest-auc:0.893078+0.00495461\n",
      "[712]\ttrain-auc:0.918559+0.000965511\ttest-auc:0.893068+0.00495432\n",
      "[713]\ttrain-auc:0.918595+0.000972431\ttest-auc:0.89308+0.00494942\n",
      "[714]\ttrain-auc:0.918626+0.000977682\ttest-auc:0.893089+0.00493395\n",
      "[715]\ttrain-auc:0.918657+0.00097388\ttest-auc:0.893087+0.00493541\n",
      "[716]\ttrain-auc:0.918692+0.00097019\ttest-auc:0.893077+0.00492173\n",
      "[717]\ttrain-auc:0.918725+0.000980056\ttest-auc:0.893076+0.00491748\n",
      "[718]\ttrain-auc:0.91876+0.000989254\ttest-auc:0.893071+0.00491517\n",
      "[719]\ttrain-auc:0.918789+0.000994125\ttest-auc:0.893073+0.00490253\n",
      "[720]\ttrain-auc:0.91882+0.000995286\ttest-auc:0.893079+0.00489135\n",
      "[721]\ttrain-auc:0.918853+0.00099023\ttest-auc:0.893094+0.00488885\n",
      "[722]\ttrain-auc:0.918878+0.000988197\ttest-auc:0.89309+0.00489908\n",
      "[723]\ttrain-auc:0.918907+0.000991706\ttest-auc:0.893087+0.00490694\n",
      "[724]\ttrain-auc:0.918939+0.000990102\ttest-auc:0.893083+0.00492018\n",
      "[725]\ttrain-auc:0.918969+0.000997554\ttest-auc:0.893078+0.00492097\n",
      "[726]\ttrain-auc:0.919006+0.00100142\ttest-auc:0.893075+0.00492865\n",
      "[727]\ttrain-auc:0.919026+0.00099722\ttest-auc:0.893081+0.00492392\n",
      "[728]\ttrain-auc:0.91907+0.000986621\ttest-auc:0.893086+0.0049335\n",
      "[729]\ttrain-auc:0.919112+0.000992018\ttest-auc:0.893075+0.00494404\n",
      "[730]\ttrain-auc:0.919151+0.00100104\ttest-auc:0.893076+0.00492364\n",
      "[731]\ttrain-auc:0.919182+0.00100144\ttest-auc:0.893066+0.00493209\n",
      "[732]\ttrain-auc:0.919216+0.000995059\ttest-auc:0.89306+0.00492797\n",
      "[733]\ttrain-auc:0.919253+0.00098398\ttest-auc:0.893097+0.00493185\n",
      "[734]\ttrain-auc:0.919276+0.000990376\ttest-auc:0.8931+0.00491913\n",
      "[735]\ttrain-auc:0.919297+0.000987056\ttest-auc:0.893103+0.00492602\n",
      "[736]\ttrain-auc:0.919318+0.000993824\ttest-auc:0.893097+0.00493283\n",
      "[737]\ttrain-auc:0.919351+0.000996597\ttest-auc:0.893102+0.00493198\n",
      "[738]\ttrain-auc:0.919381+0.000992717\ttest-auc:0.893102+0.00493009\n",
      "[739]\ttrain-auc:0.919414+0.00099577\ttest-auc:0.893095+0.00492552\n",
      "[740]\ttrain-auc:0.919445+0.000997809\ttest-auc:0.893098+0.0049155\n",
      "[741]\ttrain-auc:0.919464+0.000994782\ttest-auc:0.893103+0.00490319\n",
      "[742]\ttrain-auc:0.919484+0.000990176\ttest-auc:0.893098+0.00489423\n",
      "[743]\ttrain-auc:0.919511+0.000997256\ttest-auc:0.893107+0.0048977\n",
      "[744]\ttrain-auc:0.919545+0.000995129\ttest-auc:0.893123+0.00489228\n",
      "[745]\ttrain-auc:0.919575+0.000994392\ttest-auc:0.893118+0.00489329\n",
      "[746]\ttrain-auc:0.919612+0.00100063\ttest-auc:0.893128+0.00488173\n",
      "[747]\ttrain-auc:0.919636+0.000994262\ttest-auc:0.893128+0.00487677\n",
      "[748]\ttrain-auc:0.919667+0.000999822\ttest-auc:0.893126+0.00487785\n",
      "[749]\ttrain-auc:0.919698+0.00100462\ttest-auc:0.893128+0.00488284\n",
      "[750]\ttrain-auc:0.919729+0.00100993\ttest-auc:0.893135+0.0048649\n",
      "[751]\ttrain-auc:0.919748+0.00101024\ttest-auc:0.893135+0.00485513\n",
      "[752]\ttrain-auc:0.919781+0.00101857\ttest-auc:0.893131+0.00485844\n",
      "[753]\ttrain-auc:0.919798+0.00101653\ttest-auc:0.893131+0.00485674\n",
      "[754]\ttrain-auc:0.919829+0.00101263\ttest-auc:0.893125+0.00485617\n",
      "[755]\ttrain-auc:0.91986+0.00101206\ttest-auc:0.893136+0.00485073\n",
      "[756]\ttrain-auc:0.91989+0.00100675\ttest-auc:0.893164+0.00487057\n",
      "[757]\ttrain-auc:0.91992+0.00100951\ttest-auc:0.89316+0.00484625\n",
      "[758]\ttrain-auc:0.919947+0.00100385\ttest-auc:0.893177+0.00485197\n",
      "[759]\ttrain-auc:0.919969+0.00100229\ttest-auc:0.893182+0.00484916\n",
      "[760]\ttrain-auc:0.919994+0.00100427\ttest-auc:0.893193+0.00485015\n",
      "[761]\ttrain-auc:0.920026+0.000995769\ttest-auc:0.893197+0.00484394\n",
      "[762]\ttrain-auc:0.920052+0.000991119\ttest-auc:0.893202+0.00481973\n",
      "[763]\ttrain-auc:0.920093+0.00098301\ttest-auc:0.893212+0.00483041\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[764]\ttrain-auc:0.920118+0.000992551\ttest-auc:0.893211+0.0048274\n",
      "[765]\ttrain-auc:0.920144+0.000994397\ttest-auc:0.893208+0.0048231\n",
      "[766]\ttrain-auc:0.920169+0.000996494\ttest-auc:0.893209+0.00481911\n",
      "[767]\ttrain-auc:0.920192+0.000989122\ttest-auc:0.893222+0.00481979\n",
      "[768]\ttrain-auc:0.920216+0.000984895\ttest-auc:0.89321+0.00481112\n",
      "[769]\ttrain-auc:0.92024+0.000988058\ttest-auc:0.893219+0.00482662\n",
      "[770]\ttrain-auc:0.920264+0.000989916\ttest-auc:0.893235+0.00482547\n",
      "[771]\ttrain-auc:0.920302+0.00099103\ttest-auc:0.893237+0.0048176\n",
      "[772]\ttrain-auc:0.920334+0.000986978\ttest-auc:0.893243+0.0048169\n",
      "[773]\ttrain-auc:0.920364+0.000989337\ttest-auc:0.893248+0.00482619\n",
      "[774]\ttrain-auc:0.920387+0.000987552\ttest-auc:0.893265+0.0048195\n",
      "[775]\ttrain-auc:0.920419+0.000988382\ttest-auc:0.893263+0.00482579\n",
      "[776]\ttrain-auc:0.920453+0.00099716\ttest-auc:0.89325+0.00481763\n",
      "[777]\ttrain-auc:0.920473+0.000988355\ttest-auc:0.893256+0.00482085\n",
      "[778]\ttrain-auc:0.920498+0.000985167\ttest-auc:0.893239+0.00481142\n",
      "[779]\ttrain-auc:0.920531+0.000982379\ttest-auc:0.893238+0.00481802\n",
      "[780]\ttrain-auc:0.920553+0.00097275\ttest-auc:0.893234+0.00480922\n",
      "[781]\ttrain-auc:0.920575+0.000973729\ttest-auc:0.893233+0.00481609\n",
      "[782]\ttrain-auc:0.920607+0.00097868\ttest-auc:0.893225+0.00482552\n",
      "[783]\ttrain-auc:0.920635+0.000971893\ttest-auc:0.893223+0.0048276\n",
      "[784]\ttrain-auc:0.920664+0.000970049\ttest-auc:0.893225+0.00482302\n",
      "[785]\ttrain-auc:0.920687+0.000974519\ttest-auc:0.893227+0.00482694\n",
      "[786]\ttrain-auc:0.920719+0.00096219\ttest-auc:0.893232+0.00483717\n",
      "[787]\ttrain-auc:0.920738+0.000961409\ttest-auc:0.893238+0.00484569\n",
      "[788]\ttrain-auc:0.920762+0.000956869\ttest-auc:0.893239+0.00483384\n",
      "[789]\ttrain-auc:0.920791+0.000960057\ttest-auc:0.893255+0.00482334\n",
      "[790]\ttrain-auc:0.920815+0.00096572\ttest-auc:0.893263+0.00480639\n",
      "[791]\ttrain-auc:0.920854+0.000967256\ttest-auc:0.893281+0.00481336\n",
      "[792]\ttrain-auc:0.920889+0.000959114\ttest-auc:0.893278+0.00481245\n",
      "[793]\ttrain-auc:0.920919+0.000954805\ttest-auc:0.893276+0.00481603\n",
      "[794]\ttrain-auc:0.920948+0.000952999\ttest-auc:0.893281+0.00481647\n",
      "[795]\ttrain-auc:0.920972+0.000944916\ttest-auc:0.893272+0.00481145\n",
      "[796]\ttrain-auc:0.920998+0.000932569\ttest-auc:0.893277+0.00481528\n",
      "[797]\ttrain-auc:0.921028+0.000931207\ttest-auc:0.893272+0.00482062\n",
      "[798]\ttrain-auc:0.921061+0.000944549\ttest-auc:0.893275+0.00481428\n",
      "[799]\ttrain-auc:0.921087+0.000941021\ttest-auc:0.893264+0.00481361\n",
      "[800]\ttrain-auc:0.921109+0.000944813\ttest-auc:0.893286+0.00481588\n",
      "[801]\ttrain-auc:0.921141+0.000965611\ttest-auc:0.893288+0.00480548\n",
      "[802]\ttrain-auc:0.921169+0.000973315\ttest-auc:0.89329+0.00478869\n",
      "[803]\ttrain-auc:0.921196+0.000980176\ttest-auc:0.893302+0.00478295\n",
      "[804]\ttrain-auc:0.921226+0.000979493\ttest-auc:0.893299+0.00478801\n",
      "[805]\ttrain-auc:0.921252+0.000975612\ttest-auc:0.893307+0.00479072\n",
      "[806]\ttrain-auc:0.921281+0.000967746\ttest-auc:0.893314+0.00478731\n",
      "[807]\ttrain-auc:0.92131+0.000976244\ttest-auc:0.893306+0.00476985\n",
      "[808]\ttrain-auc:0.921337+0.000967844\ttest-auc:0.893303+0.004778\n",
      "[809]\ttrain-auc:0.921374+0.000966434\ttest-auc:0.893285+0.0047693\n",
      "[810]\ttrain-auc:0.921394+0.000962373\ttest-auc:0.893285+0.00475686\n",
      "[811]\ttrain-auc:0.921414+0.000964342\ttest-auc:0.893272+0.00475938\n",
      "[812]\ttrain-auc:0.921436+0.000968094\ttest-auc:0.893285+0.00476166\n",
      "[813]\ttrain-auc:0.921469+0.000966454\ttest-auc:0.893267+0.00477222\n",
      "[814]\ttrain-auc:0.921504+0.000958515\ttest-auc:0.893268+0.00474866\n",
      "[815]\ttrain-auc:0.921544+0.000964084\ttest-auc:0.893268+0.00475502\n",
      "[816]\ttrain-auc:0.921573+0.000964415\ttest-auc:0.893294+0.00475077\n",
      "[817]\ttrain-auc:0.921601+0.000969194\ttest-auc:0.893293+0.00475786\n",
      "[818]\ttrain-auc:0.921631+0.000971035\ttest-auc:0.89328+0.00474452\n",
      "[819]\ttrain-auc:0.921663+0.00097375\ttest-auc:0.893279+0.00474355\n",
      "[820]\ttrain-auc:0.921695+0.000965111\ttest-auc:0.89327+0.00475068\n",
      "[821]\ttrain-auc:0.921727+0.000974064\ttest-auc:0.893281+0.00475463\n",
      "[822]\ttrain-auc:0.92175+0.000971765\ttest-auc:0.893295+0.00475463\n",
      "[823]\ttrain-auc:0.921776+0.000962617\ttest-auc:0.893303+0.00475792\n",
      "[824]\ttrain-auc:0.921808+0.000954019\ttest-auc:0.893303+0.00474807\n",
      "[825]\ttrain-auc:0.921838+0.000951399\ttest-auc:0.893305+0.00475694\n",
      "[826]\ttrain-auc:0.921863+0.000958233\ttest-auc:0.893339+0.00473725\n",
      "[827]\ttrain-auc:0.921896+0.000954\ttest-auc:0.89335+0.0046968\n",
      "[828]\ttrain-auc:0.921928+0.000945916\ttest-auc:0.893362+0.00469943\n",
      "[829]\ttrain-auc:0.921954+0.000943242\ttest-auc:0.893349+0.00470443\n",
      "[830]\ttrain-auc:0.921983+0.000940512\ttest-auc:0.893348+0.00472789\n",
      "[831]\ttrain-auc:0.922007+0.000947374\ttest-auc:0.893379+0.00472603\n",
      "[832]\ttrain-auc:0.922025+0.000946854\ttest-auc:0.893382+0.00472607\n",
      "[833]\ttrain-auc:0.922057+0.000943879\ttest-auc:0.893382+0.00471319\n",
      "[834]\ttrain-auc:0.922083+0.000945783\ttest-auc:0.89338+0.00470815\n",
      "[835]\ttrain-auc:0.92211+0.000945852\ttest-auc:0.893369+0.00469808\n",
      "[836]\ttrain-auc:0.922138+0.000935017\ttest-auc:0.893377+0.0046912\n",
      "[837]\ttrain-auc:0.922169+0.000928413\ttest-auc:0.893382+0.00468194\n",
      "[838]\ttrain-auc:0.922194+0.000925338\ttest-auc:0.893376+0.00468847\n",
      "[839]\ttrain-auc:0.922213+0.000924976\ttest-auc:0.893382+0.0046886\n",
      "[840]\ttrain-auc:0.922241+0.000928621\ttest-auc:0.893378+0.00468144\n",
      "[841]\ttrain-auc:0.922266+0.000925206\ttest-auc:0.893386+0.00467621\n",
      "[842]\ttrain-auc:0.922296+0.000920495\ttest-auc:0.893384+0.00469268\n",
      "[843]\ttrain-auc:0.922334+0.000916346\ttest-auc:0.893383+0.00468989\n",
      "[844]\ttrain-auc:0.922357+0.000913891\ttest-auc:0.893375+0.00466488\n",
      "[845]\ttrain-auc:0.922383+0.000913819\ttest-auc:0.893378+0.00467266\n",
      "[846]\ttrain-auc:0.922415+0.000900835\ttest-auc:0.893374+0.00467203\n",
      "[847]\ttrain-auc:0.922439+0.000898394\ttest-auc:0.893373+0.00467547\n",
      "[848]\ttrain-auc:0.922465+0.000890168\ttest-auc:0.893367+0.0046704\n",
      "[849]\ttrain-auc:0.922493+0.000881723\ttest-auc:0.89338+0.00467306\n",
      "[850]\ttrain-auc:0.922526+0.000870001\ttest-auc:0.893389+0.00466129\n",
      "[851]\ttrain-auc:0.922549+0.000876418\ttest-auc:0.893384+0.00466581\n",
      "[852]\ttrain-auc:0.92258+0.000882622\ttest-auc:0.893392+0.00468251\n",
      "[853]\ttrain-auc:0.922607+0.000886658\ttest-auc:0.893403+0.00466156\n",
      "[854]\ttrain-auc:0.922628+0.000883918\ttest-auc:0.893397+0.00465506\n",
      "[855]\ttrain-auc:0.922655+0.000886791\ttest-auc:0.893393+0.00465445\n",
      "[856]\ttrain-auc:0.922681+0.000888158\ttest-auc:0.893401+0.00464916\n",
      "[857]\ttrain-auc:0.922707+0.000886949\ttest-auc:0.893399+0.00464635\n",
      "[858]\ttrain-auc:0.922745+0.000881391\ttest-auc:0.893389+0.00465263\n",
      "[859]\ttrain-auc:0.922766+0.000876589\ttest-auc:0.89338+0.00464307\n",
      "[860]\ttrain-auc:0.922789+0.000885106\ttest-auc:0.893371+0.0046513\n",
      "[861]\ttrain-auc:0.922825+0.000876584\ttest-auc:0.893364+0.00464366\n",
      "[862]\ttrain-auc:0.922851+0.000872159\ttest-auc:0.893377+0.00465658\n",
      "[863]\ttrain-auc:0.922873+0.000877859\ttest-auc:0.893403+0.00464201\n",
      "[864]\ttrain-auc:0.922896+0.000876084\ttest-auc:0.893403+0.00463992\n",
      "[865]\ttrain-auc:0.922925+0.00087218\ttest-auc:0.893412+0.00464876\n",
      "[866]\ttrain-auc:0.922958+0.000864034\ttest-auc:0.893411+0.00464076\n",
      "[867]\ttrain-auc:0.922986+0.000867959\ttest-auc:0.893409+0.00462889\n",
      "[868]\ttrain-auc:0.923016+0.000861246\ttest-auc:0.893408+0.00462746\n",
      "[869]\ttrain-auc:0.923051+0.000851656\ttest-auc:0.893411+0.00461238\n",
      "[870]\ttrain-auc:0.923073+0.000845947\ttest-auc:0.893414+0.00461579\n",
      "[871]\ttrain-auc:0.923102+0.000834538\ttest-auc:0.893434+0.00461722\n",
      "[872]\ttrain-auc:0.923125+0.000830344\ttest-auc:0.893417+0.00461078\n",
      "[873]\ttrain-auc:0.923155+0.000827193\ttest-auc:0.893426+0.00462795\n",
      "[874]\ttrain-auc:0.923182+0.000822424\ttest-auc:0.893416+0.00463159\n",
      "[875]\ttrain-auc:0.923206+0.00081931\ttest-auc:0.893416+0.00464439\n",
      "[876]\ttrain-auc:0.923237+0.000817537\ttest-auc:0.893406+0.00462019\n",
      "[877]\ttrain-auc:0.923269+0.000813557\ttest-auc:0.89342+0.00463239\n",
      "[878]\ttrain-auc:0.92329+0.000819824\ttest-auc:0.893424+0.0046307\n",
      "[879]\ttrain-auc:0.923323+0.000816981\ttest-auc:0.893427+0.00464168\n",
      "[880]\ttrain-auc:0.923344+0.000817494\ttest-auc:0.893428+0.004637\n",
      "[881]\ttrain-auc:0.923375+0.000809854\ttest-auc:0.893431+0.004633\n",
      "[882]\ttrain-auc:0.923401+0.000816698\ttest-auc:0.893435+0.00461406\n",
      "[883]\ttrain-auc:0.923427+0.000818306\ttest-auc:0.893446+0.00462785\n",
      "[884]\ttrain-auc:0.923445+0.000813973\ttest-auc:0.893444+0.00462922\n",
      "[885]\ttrain-auc:0.923466+0.00081357\ttest-auc:0.893469+0.00461054\n",
      "[886]\ttrain-auc:0.92349+0.000820895\ttest-auc:0.893464+0.00460453\n",
      "[887]\ttrain-auc:0.923512+0.000822773\ttest-auc:0.89346+0.00461922\n",
      "[888]\ttrain-auc:0.923537+0.000811757\ttest-auc:0.893453+0.00464083\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[889]\ttrain-auc:0.923559+0.00081847\ttest-auc:0.893467+0.0046388\n",
      "[890]\ttrain-auc:0.92358+0.000818618\ttest-auc:0.893481+0.00463723\n",
      "[891]\ttrain-auc:0.923605+0.000826855\ttest-auc:0.893481+0.00463671\n",
      "[892]\ttrain-auc:0.923637+0.000820459\ttest-auc:0.89349+0.00463614\n",
      "[893]\ttrain-auc:0.923656+0.000822614\ttest-auc:0.893498+0.00465569\n",
      "[894]\ttrain-auc:0.923679+0.000823494\ttest-auc:0.893497+0.00466416\n",
      "[895]\ttrain-auc:0.923701+0.000822548\ttest-auc:0.893489+0.00464154\n",
      "[896]\ttrain-auc:0.923729+0.000809864\ttest-auc:0.893482+0.0046361\n",
      "[897]\ttrain-auc:0.923751+0.000806899\ttest-auc:0.893492+0.00463211\n",
      "[898]\ttrain-auc:0.923779+0.000797238\ttest-auc:0.893492+0.00464512\n",
      "[899]\ttrain-auc:0.92381+0.000800105\ttest-auc:0.893489+0.00466411\n",
      "[900]\ttrain-auc:0.923828+0.000794856\ttest-auc:0.893492+0.00465209\n",
      "[901]\ttrain-auc:0.923857+0.000789013\ttest-auc:0.893489+0.00466049\n",
      "[902]\ttrain-auc:0.923887+0.000783531\ttest-auc:0.893503+0.0046454\n",
      "[903]\ttrain-auc:0.923911+0.000776501\ttest-auc:0.893487+0.00463836\n",
      "[904]\ttrain-auc:0.923946+0.000774743\ttest-auc:0.893487+0.00463319\n",
      "[905]\ttrain-auc:0.923963+0.00078662\ttest-auc:0.89348+0.00462412\n",
      "[906]\ttrain-auc:0.923982+0.000795701\ttest-auc:0.893495+0.00461733\n",
      "[907]\ttrain-auc:0.924003+0.000789752\ttest-auc:0.893494+0.00461452\n",
      "[908]\ttrain-auc:0.924035+0.000789774\ttest-auc:0.893491+0.00463146\n",
      "[909]\ttrain-auc:0.924057+0.00079245\ttest-auc:0.893495+0.00462562\n",
      "[910]\ttrain-auc:0.924092+0.000792064\ttest-auc:0.893495+0.00462417\n",
      "[911]\ttrain-auc:0.924119+0.000796826\ttest-auc:0.893499+0.00462276\n",
      "[912]\ttrain-auc:0.924143+0.000794483\ttest-auc:0.893504+0.00461825\n",
      "[913]\ttrain-auc:0.924166+0.000796356\ttest-auc:0.893521+0.00460579\n",
      "[914]\ttrain-auc:0.92419+0.000798365\ttest-auc:0.893511+0.00459978\n",
      "[915]\ttrain-auc:0.924223+0.000792135\ttest-auc:0.893523+0.00459525\n",
      "[916]\ttrain-auc:0.92425+0.000791172\ttest-auc:0.893526+0.00460038\n",
      "[917]\ttrain-auc:0.924271+0.000781236\ttest-auc:0.893508+0.00459141\n",
      "[918]\ttrain-auc:0.924297+0.000782256\ttest-auc:0.893504+0.00459891\n",
      "[919]\ttrain-auc:0.924324+0.000794951\ttest-auc:0.893519+0.00459596\n",
      "[920]\ttrain-auc:0.924351+0.000791512\ttest-auc:0.893516+0.00460734\n",
      "[921]\ttrain-auc:0.924375+0.000800946\ttest-auc:0.893516+0.00461389\n",
      "[922]\ttrain-auc:0.924405+0.000798339\ttest-auc:0.893503+0.00461131\n",
      "[923]\ttrain-auc:0.924439+0.000801676\ttest-auc:0.893504+0.00460881\n",
      "[924]\ttrain-auc:0.924472+0.000797272\ttest-auc:0.893531+0.00462293\n",
      "[925]\ttrain-auc:0.924501+0.000793913\ttest-auc:0.893512+0.00461161\n",
      "[926]\ttrain-auc:0.924522+0.000789166\ttest-auc:0.893505+0.00461806\n",
      "[927]\ttrain-auc:0.924551+0.000794724\ttest-auc:0.893506+0.00462478\n",
      "[928]\ttrain-auc:0.92458+0.000789442\ttest-auc:0.893518+0.00463734\n",
      "[929]\ttrain-auc:0.924599+0.000790331\ttest-auc:0.893506+0.00464118\n",
      "[930]\ttrain-auc:0.924627+0.000784437\ttest-auc:0.893513+0.00463509\n",
      "[931]\ttrain-auc:0.924662+0.000778224\ttest-auc:0.893531+0.0046286\n",
      "[932]\ttrain-auc:0.924681+0.000770032\ttest-auc:0.893533+0.00465823\n",
      "[933]\ttrain-auc:0.924714+0.000772747\ttest-auc:0.893523+0.00465191\n",
      "[934]\ttrain-auc:0.924752+0.00077364\ttest-auc:0.893534+0.00466685\n",
      "[935]\ttrain-auc:0.924782+0.000765264\ttest-auc:0.893531+0.0046703\n",
      "[936]\ttrain-auc:0.924798+0.000764013\ttest-auc:0.893531+0.00466152\n",
      "[937]\ttrain-auc:0.924824+0.000759101\ttest-auc:0.893532+0.0046457\n",
      "[938]\ttrain-auc:0.924846+0.000760898\ttest-auc:0.893528+0.00465142\n",
      "[939]\ttrain-auc:0.924868+0.000759013\ttest-auc:0.89352+0.00464952\n",
      "[940]\ttrain-auc:0.924894+0.000763312\ttest-auc:0.893543+0.00464833\n",
      "[941]\ttrain-auc:0.924918+0.000757331\ttest-auc:0.893529+0.00466961\n",
      "[942]\ttrain-auc:0.924945+0.000756483\ttest-auc:0.893529+0.00466418\n",
      "[943]\ttrain-auc:0.924968+0.00075783\ttest-auc:0.89353+0.00467429\n",
      "[944]\ttrain-auc:0.924999+0.000766581\ttest-auc:0.893538+0.00465236\n",
      "[945]\ttrain-auc:0.925028+0.000771929\ttest-auc:0.89355+0.00465133\n",
      "[946]\ttrain-auc:0.925067+0.000778173\ttest-auc:0.893548+0.00464348\n",
      "[947]\ttrain-auc:0.925104+0.000783087\ttest-auc:0.893555+0.0046301\n",
      "[948]\ttrain-auc:0.925124+0.000781687\ttest-auc:0.893556+0.00464109\n",
      "[949]\ttrain-auc:0.925147+0.000767608\ttest-auc:0.893548+0.00464634\n",
      "[950]\ttrain-auc:0.925167+0.000766837\ttest-auc:0.893528+0.00463714\n",
      "[951]\ttrain-auc:0.925198+0.00076496\ttest-auc:0.893536+0.00463541\n",
      "[952]\ttrain-auc:0.925221+0.000761392\ttest-auc:0.893525+0.00463868\n",
      "[953]\ttrain-auc:0.925245+0.000754259\ttest-auc:0.893526+0.00463673\n",
      "[954]\ttrain-auc:0.925262+0.000756632\ttest-auc:0.893516+0.00464416\n",
      "[955]\ttrain-auc:0.92529+0.000760126\ttest-auc:0.893524+0.00464575\n",
      "[956]\ttrain-auc:0.92531+0.000763232\ttest-auc:0.893521+0.00464078\n",
      "[957]\ttrain-auc:0.925344+0.000759864\ttest-auc:0.893511+0.0046356\n",
      "[958]\ttrain-auc:0.925367+0.000759761\ttest-auc:0.893517+0.00462592\n",
      "[959]\ttrain-auc:0.925393+0.000765885\ttest-auc:0.893511+0.00463212\n",
      "[960]\ttrain-auc:0.92542+0.000761995\ttest-auc:0.893527+0.00464504\n",
      "[961]\ttrain-auc:0.925451+0.000762329\ttest-auc:0.893523+0.00463879\n",
      "[962]\ttrain-auc:0.925484+0.00076607\ttest-auc:0.893517+0.00463611\n",
      "[963]\ttrain-auc:0.925509+0.000765032\ttest-auc:0.893527+0.00463884\n",
      "[964]\ttrain-auc:0.925541+0.000767654\ttest-auc:0.893539+0.00463734\n",
      "[965]\ttrain-auc:0.925562+0.000772543\ttest-auc:0.893541+0.00463469\n",
      "[966]\ttrain-auc:0.925597+0.000779403\ttest-auc:0.893545+0.00462299\n",
      "[967]\ttrain-auc:0.925623+0.000776961\ttest-auc:0.893557+0.00462231\n",
      "[968]\ttrain-auc:0.925647+0.000765969\ttest-auc:0.893544+0.00461472\n",
      "[969]\ttrain-auc:0.925682+0.000764014\ttest-auc:0.893547+0.00460025\n",
      "[970]\ttrain-auc:0.925711+0.000773111\ttest-auc:0.893557+0.00460432\n",
      "[971]\ttrain-auc:0.925731+0.000773982\ttest-auc:0.893552+0.00459597\n",
      "[972]\ttrain-auc:0.925756+0.00077029\ttest-auc:0.893552+0.00458954\n",
      "[973]\ttrain-auc:0.925777+0.000767375\ttest-auc:0.893542+0.00456405\n",
      "[974]\ttrain-auc:0.925814+0.000767787\ttest-auc:0.893546+0.00455151\n",
      "[975]\ttrain-auc:0.925836+0.000759636\ttest-auc:0.893541+0.00453816\n",
      "[976]\ttrain-auc:0.925859+0.000761462\ttest-auc:0.893557+0.00452984\n",
      "[977]\ttrain-auc:0.925884+0.00076035\ttest-auc:0.893548+0.00453155\n",
      "[978]\ttrain-auc:0.92591+0.000765552\ttest-auc:0.893572+0.00452101\n",
      "[979]\ttrain-auc:0.92594+0.000770663\ttest-auc:0.893573+0.00452891\n",
      "[980]\ttrain-auc:0.925973+0.000774892\ttest-auc:0.893579+0.00454166\n",
      "[981]\ttrain-auc:0.925989+0.000778084\ttest-auc:0.893579+0.004538\n",
      "[982]\ttrain-auc:0.926015+0.000766413\ttest-auc:0.893582+0.0045313\n",
      "[983]\ttrain-auc:0.926042+0.000770503\ttest-auc:0.89359+0.00451401\n",
      "[984]\ttrain-auc:0.926067+0.000764672\ttest-auc:0.893588+0.00452569\n",
      "[985]\ttrain-auc:0.926089+0.000762781\ttest-auc:0.89357+0.00452397\n",
      "[986]\ttrain-auc:0.926104+0.000765213\ttest-auc:0.893581+0.00454362\n",
      "[987]\ttrain-auc:0.92614+0.000754468\ttest-auc:0.893584+0.00453701\n",
      "[988]\ttrain-auc:0.926167+0.000752146\ttest-auc:0.893569+0.00455132\n",
      "[989]\ttrain-auc:0.926187+0.000751821\ttest-auc:0.893561+0.00455328\n",
      "[990]\ttrain-auc:0.926211+0.000737952\ttest-auc:0.89356+0.00455324\n",
      "[991]\ttrain-auc:0.926235+0.000735526\ttest-auc:0.893563+0.00455522\n",
      "[992]\ttrain-auc:0.92627+0.000744276\ttest-auc:0.89355+0.0045377\n",
      "[993]\ttrain-auc:0.926299+0.000748363\ttest-auc:0.893555+0.00453411\n",
      "[994]\ttrain-auc:0.926318+0.000750268\ttest-auc:0.893554+0.0045269\n",
      "[995]\ttrain-auc:0.926343+0.000747213\ttest-auc:0.893557+0.00452794\n",
      "[996]\ttrain-auc:0.926367+0.000742559\ttest-auc:0.893555+0.00452532\n",
      "[997]\ttrain-auc:0.92639+0.000742065\ttest-auc:0.893557+0.00453009\n",
      "[998]\ttrain-auc:0.926415+0.000743443\ttest-auc:0.893547+0.00453075\n",
      "[999]\ttrain-auc:0.926439+0.000742681\ttest-auc:0.89355+0.00454037\n",
      "[1000]\ttrain-auc:0.926471+0.000738033\ttest-auc:0.893556+0.00453392\n",
      "[1001]\ttrain-auc:0.926494+0.000746412\ttest-auc:0.893547+0.00454364\n",
      "[1002]\ttrain-auc:0.926516+0.000756356\ttest-auc:0.893544+0.00455655\n",
      "[1003]\ttrain-auc:0.92654+0.00074984\ttest-auc:0.893526+0.00454772\n",
      "[1004]\ttrain-auc:0.926567+0.000747376\ttest-auc:0.893534+0.00454852\n",
      "[1005]\ttrain-auc:0.926592+0.000757758\ttest-auc:0.893536+0.00454462\n",
      "[1006]\ttrain-auc:0.92662+0.000755319\ttest-auc:0.893543+0.00453678\n",
      "[1007]\ttrain-auc:0.926655+0.000747349\ttest-auc:0.893545+0.00453251\n",
      "[1008]\ttrain-auc:0.926681+0.000747156\ttest-auc:0.893537+0.00453173\n",
      "[1009]\ttrain-auc:0.926698+0.000745766\ttest-auc:0.89352+0.00453309\n",
      "[1010]\ttrain-auc:0.926724+0.000748693\ttest-auc:0.89352+0.00454894\n",
      "[1011]\ttrain-auc:0.926744+0.000738381\ttest-auc:0.893531+0.00454953\n",
      "[1012]\ttrain-auc:0.926765+0.000742343\ttest-auc:0.893522+0.00455429\n",
      "[1013]\ttrain-auc:0.92679+0.000741496\ttest-auc:0.893511+0.00454373\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[1014]\ttrain-auc:0.926816+0.000743719\ttest-auc:0.893514+0.00454512\n",
      "[1015]\ttrain-auc:0.926837+0.000740017\ttest-auc:0.893504+0.00453779\n",
      "[1016]\ttrain-auc:0.926863+0.000736018\ttest-auc:0.89351+0.00453765\n",
      "[1017]\ttrain-auc:0.92689+0.000735409\ttest-auc:0.893518+0.00453617\n",
      "[1018]\ttrain-auc:0.926909+0.000733842\ttest-auc:0.893501+0.00454227\n",
      "[1019]\ttrain-auc:0.92693+0.000731669\ttest-auc:0.893495+0.00454145\n",
      "[1020]\ttrain-auc:0.926955+0.000735787\ttest-auc:0.893481+0.00454461\n",
      "[1021]\ttrain-auc:0.926972+0.00072684\ttest-auc:0.893489+0.0045399\n",
      "[1022]\ttrain-auc:0.927002+0.000728425\ttest-auc:0.893505+0.00454665\n",
      "[1023]\ttrain-auc:0.927025+0.000726239\ttest-auc:0.8935+0.00453704\n",
      "[1024]\ttrain-auc:0.927046+0.000721693\ttest-auc:0.893489+0.00453089\n",
      "[1025]\ttrain-auc:0.927067+0.00072356\ttest-auc:0.893479+0.00453361\n",
      "[1026]\ttrain-auc:0.927091+0.000717131\ttest-auc:0.893489+0.00454013\n",
      "[1027]\ttrain-auc:0.927113+0.000707963\ttest-auc:0.893488+0.00452994\n",
      "[1028]\ttrain-auc:0.927142+0.00069916\ttest-auc:0.893497+0.0045389\n",
      "[1029]\ttrain-auc:0.927153+0.000696187\ttest-auc:0.893489+0.00453898\n",
      "[1030]\ttrain-auc:0.92718+0.000694521\ttest-auc:0.893486+0.00454483\n",
      "[1031]\ttrain-auc:0.927205+0.000699287\ttest-auc:0.89348+0.00452775\n",
      "[1032]\ttrain-auc:0.927229+0.00069081\ttest-auc:0.893484+0.0045199\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "c:\\users\\marcp\\appdata\\local\\programs\\python\\python36\\lib\\site-packages\\sklearn\\preprocessing\\label.py:151: DeprecationWarning: The truth value of an empty array is ambiguous. Returning False, but in future this will result in an error. Use `array.size > 0` to check that an array is not empty.\n",
      "  if diff:\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Model Report\n",
      "Model best iteration : 984 with an auc score of : 0.8935898\n",
      "Accuracy : 0.8821848739495798\n",
      "AUC Score (Train): 0.9212768387841355\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "xgb4 = XGBClassifier(\n",
    " learning_rate =0.01,\n",
    " n_estimators=3000,\n",
    " max_depth=3,\n",
    " min_child_weight=5,\n",
    " gamma=0.25,\n",
    " subsample=0.65,\n",
    " colsample_bytree=0.75,\n",
    " reg_alpha=0.00009,\n",
    " objective= 'binary:logistic',\n",
    " nthread=4,\n",
    " scale_pos_weight=1,\n",
    " seed=27)\n",
    "modelfit(xgb4, train, predictors)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1341,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0]\teval-auc:0.861537\ttrain-auc:0.871388\n",
      "[1]\teval-auc:0.880949\ttrain-auc:0.885481\n",
      "[2]\teval-auc:0.88409\ttrain-auc:0.88996\n",
      "[3]\teval-auc:0.884881\ttrain-auc:0.893532\n",
      "[4]\teval-auc:0.885464\ttrain-auc:0.894634\n",
      "[5]\teval-auc:0.889317\ttrain-auc:0.897347\n",
      "[6]\teval-auc:0.890313\ttrain-auc:0.89774\n",
      "[7]\teval-auc:0.890348\ttrain-auc:0.898378\n",
      "[8]\teval-auc:0.890128\ttrain-auc:0.899007\n",
      "[9]\teval-auc:0.890705\ttrain-auc:0.898628\n",
      "[10]\teval-auc:0.890947\ttrain-auc:0.89858\n",
      "[11]\teval-auc:0.891097\ttrain-auc:0.898965\n",
      "[12]\teval-auc:0.890803\ttrain-auc:0.899304\n",
      "[13]\teval-auc:0.890464\ttrain-auc:0.89943\n",
      "[14]\teval-auc:0.890869\ttrain-auc:0.899948\n",
      "[15]\teval-auc:0.890382\ttrain-auc:0.900074\n",
      "[16]\teval-auc:0.890998\ttrain-auc:0.900204\n",
      "[17]\teval-auc:0.891191\ttrain-auc:0.90057\n",
      "[18]\teval-auc:0.891277\ttrain-auc:0.90077\n",
      "[19]\teval-auc:0.891717\ttrain-auc:0.90081\n",
      "[20]\teval-auc:0.891762\ttrain-auc:0.901066\n",
      "[21]\teval-auc:0.892204\ttrain-auc:0.901139\n",
      "[22]\teval-auc:0.892121\ttrain-auc:0.901359\n",
      "[23]\teval-auc:0.893183\ttrain-auc:0.902914\n",
      "[24]\teval-auc:0.893281\ttrain-auc:0.903175\n",
      "[25]\teval-auc:0.893564\ttrain-auc:0.903275\n",
      "[26]\teval-auc:0.8936\ttrain-auc:0.903317\n",
      "[27]\teval-auc:0.893575\ttrain-auc:0.90334\n",
      "[28]\teval-auc:0.893844\ttrain-auc:0.903476\n",
      "[29]\teval-auc:0.893874\ttrain-auc:0.903627\n",
      "[30]\teval-auc:0.894097\ttrain-auc:0.9037\n",
      "[31]\teval-auc:0.894181\ttrain-auc:0.90376\n",
      "[32]\teval-auc:0.89439\ttrain-auc:0.904095\n",
      "[33]\teval-auc:0.894447\ttrain-auc:0.904112\n",
      "[34]\teval-auc:0.894462\ttrain-auc:0.904226\n",
      "[35]\teval-auc:0.894391\ttrain-auc:0.904138\n",
      "[36]\teval-auc:0.89451\ttrain-auc:0.904137\n",
      "[37]\teval-auc:0.894826\ttrain-auc:0.904268\n",
      "[38]\teval-auc:0.89474\ttrain-auc:0.904392\n",
      "[39]\teval-auc:0.894827\ttrain-auc:0.904415\n",
      "[40]\teval-auc:0.895284\ttrain-auc:0.905722\n",
      "[41]\teval-auc:0.895201\ttrain-auc:0.905823\n",
      "[42]\teval-auc:0.895278\ttrain-auc:0.905863\n",
      "[43]\teval-auc:0.895306\ttrain-auc:0.905925\n",
      "[44]\teval-auc:0.895413\ttrain-auc:0.906214\n",
      "[45]\teval-auc:0.895332\ttrain-auc:0.906308\n",
      "[46]\teval-auc:0.895401\ttrain-auc:0.90632\n",
      "[47]\teval-auc:0.895535\ttrain-auc:0.906461\n",
      "[48]\teval-auc:0.895808\ttrain-auc:0.90691\n",
      "[49]\teval-auc:0.896005\ttrain-auc:0.90691\n",
      "[50]\teval-auc:0.895893\ttrain-auc:0.907111\n",
      "[51]\teval-auc:0.895984\ttrain-auc:0.907316\n",
      "[52]\teval-auc:0.895863\ttrain-auc:0.907402\n",
      "[53]\teval-auc:0.895796\ttrain-auc:0.907567\n",
      "[54]\teval-auc:0.895927\ttrain-auc:0.907639\n",
      "[55]\teval-auc:0.895979\ttrain-auc:0.90783\n",
      "[56]\teval-auc:0.895995\ttrain-auc:0.907741\n",
      "[57]\teval-auc:0.896044\ttrain-auc:0.907907\n",
      "[58]\teval-auc:0.896196\ttrain-auc:0.908011\n",
      "[59]\teval-auc:0.896333\ttrain-auc:0.908316\n",
      "[60]\teval-auc:0.896473\ttrain-auc:0.908404\n",
      "[61]\teval-auc:0.896438\ttrain-auc:0.908545\n",
      "[62]\teval-auc:0.897591\ttrain-auc:0.909081\n",
      "[63]\teval-auc:0.897605\ttrain-auc:0.908998\n",
      "[64]\teval-auc:0.89759\ttrain-auc:0.909144\n",
      "[65]\teval-auc:0.897555\ttrain-auc:0.909253\n",
      "[66]\teval-auc:0.897475\ttrain-auc:0.909386\n",
      "[67]\teval-auc:0.897542\ttrain-auc:0.909632\n",
      "[68]\teval-auc:0.897582\ttrain-auc:0.909719\n",
      "[69]\teval-auc:0.897626\ttrain-auc:0.909711\n",
      "[70]\teval-auc:0.897658\ttrain-auc:0.909669\n",
      "[71]\teval-auc:0.897721\ttrain-auc:0.90983\n",
      "[72]\teval-auc:0.897701\ttrain-auc:0.90991\n",
      "[73]\teval-auc:0.897646\ttrain-auc:0.909975\n",
      "[74]\teval-auc:0.897601\ttrain-auc:0.910076\n",
      "[75]\teval-auc:0.897648\ttrain-auc:0.91009\n",
      "[76]\teval-auc:0.897582\ttrain-auc:0.910357\n",
      "[77]\teval-auc:0.897644\ttrain-auc:0.910501\n",
      "[78]\teval-auc:0.897673\ttrain-auc:0.910571\n",
      "[79]\teval-auc:0.897671\ttrain-auc:0.910668\n",
      "[80]\teval-auc:0.897715\ttrain-auc:0.910714\n",
      "[81]\teval-auc:0.897757\ttrain-auc:0.910831\n",
      "[82]\teval-auc:0.897731\ttrain-auc:0.910985\n",
      "[83]\teval-auc:0.897579\ttrain-auc:0.911307\n",
      "[84]\teval-auc:0.89752\ttrain-auc:0.911404\n",
      "[85]\teval-auc:0.897466\ttrain-auc:0.911463\n",
      "[86]\teval-auc:0.897377\ttrain-auc:0.911571\n",
      "[87]\teval-auc:0.897405\ttrain-auc:0.911753\n",
      "[88]\teval-auc:0.897437\ttrain-auc:0.911833\n",
      "[89]\teval-auc:0.897513\ttrain-auc:0.911932\n",
      "[90]\teval-auc:0.897612\ttrain-auc:0.912058\n",
      "[91]\teval-auc:0.897586\ttrain-auc:0.912177\n",
      "[92]\teval-auc:0.897649\ttrain-auc:0.912242\n",
      "[93]\teval-auc:0.897591\ttrain-auc:0.912234\n",
      "[94]\teval-auc:0.897656\ttrain-auc:0.912306\n",
      "[95]\teval-auc:0.897698\ttrain-auc:0.912459\n",
      "[96]\teval-auc:0.897719\ttrain-auc:0.91257\n",
      "[97]\teval-auc:0.897812\ttrain-auc:0.912743\n",
      "[98]\teval-auc:0.897836\ttrain-auc:0.912833\n",
      "[99]\teval-auc:0.898005\ttrain-auc:0.912914\n",
      "[100]\teval-auc:0.898033\ttrain-auc:0.913001\n",
      "[101]\teval-auc:0.898028\ttrain-auc:0.913047\n",
      "[102]\teval-auc:0.898192\ttrain-auc:0.913175\n",
      "[103]\teval-auc:0.898252\ttrain-auc:0.913419\n",
      "[104]\teval-auc:0.898287\ttrain-auc:0.913558\n",
      "[105]\teval-auc:0.898365\ttrain-auc:0.913647\n",
      "[106]\teval-auc:0.898321\ttrain-auc:0.913751\n",
      "[107]\teval-auc:0.898315\ttrain-auc:0.913848\n",
      "[108]\teval-auc:0.898331\ttrain-auc:0.913912\n",
      "[109]\teval-auc:0.898494\ttrain-auc:0.914036\n",
      "[110]\teval-auc:0.898757\ttrain-auc:0.914186\n",
      "[111]\teval-auc:0.898795\ttrain-auc:0.914264\n",
      "[112]\teval-auc:0.898813\ttrain-auc:0.914325\n",
      "[113]\teval-auc:0.898916\ttrain-auc:0.914402\n",
      "[114]\teval-auc:0.898958\ttrain-auc:0.914474\n",
      "[115]\teval-auc:0.898985\ttrain-auc:0.914611\n",
      "[116]\teval-auc:0.89909\ttrain-auc:0.914701\n",
      "[117]\teval-auc:0.89905\ttrain-auc:0.914744\n",
      "[118]\teval-auc:0.899052\ttrain-auc:0.914833\n",
      "[119]\teval-auc:0.899047\ttrain-auc:0.914891\n",
      "[120]\teval-auc:0.899064\ttrain-auc:0.9151\n",
      "[121]\teval-auc:0.899101\ttrain-auc:0.915239\n",
      "[122]\teval-auc:0.899118\ttrain-auc:0.915285\n",
      "[123]\teval-auc:0.899237\ttrain-auc:0.915403\n",
      "[124]\teval-auc:0.89935\ttrain-auc:0.915447\n",
      "[125]\teval-auc:0.899349\ttrain-auc:0.915525\n",
      "[126]\teval-auc:0.89926\ttrain-auc:0.91566\n",
      "[127]\teval-auc:0.89928\ttrain-auc:0.915762\n",
      "[128]\teval-auc:0.89932\ttrain-auc:0.915793\n",
      "[129]\teval-auc:0.899427\ttrain-auc:0.915857\n",
      "[130]\teval-auc:0.899455\ttrain-auc:0.915935\n",
      "[131]\teval-auc:0.899468\ttrain-auc:0.916049\n",
      "[132]\teval-auc:0.899521\ttrain-auc:0.916175\n",
      "[133]\teval-auc:0.899552\ttrain-auc:0.916412\n",
      "[134]\teval-auc:0.899585\ttrain-auc:0.916561\n",
      "[135]\teval-auc:0.899548\ttrain-auc:0.916645\n",
      "[136]\teval-auc:0.899652\ttrain-auc:0.916762\n",
      "[137]\teval-auc:0.899791\ttrain-auc:0.916947\n",
      "[138]\teval-auc:0.899825\ttrain-auc:0.91709\n",
      "[139]\teval-auc:0.899884\ttrain-auc:0.917196\n",
      "[140]\teval-auc:0.899891\ttrain-auc:0.917344\n",
      "[141]\teval-auc:0.899933\ttrain-auc:0.917394\n",
      "[142]\teval-auc:0.89993\ttrain-auc:0.917638\n",
      "[143]\teval-auc:0.899962\ttrain-auc:0.917766\n",
      "[144]\teval-auc:0.899926\ttrain-auc:0.917844\n",
      "[145]\teval-auc:0.899917\ttrain-auc:0.917923\n",
      "[146]\teval-auc:0.899916\ttrain-auc:0.917999\n",
      "[147]\teval-auc:0.899924\ttrain-auc:0.918084\n",
      "[148]\teval-auc:0.900011\ttrain-auc:0.91818\n",
      "[149]\teval-auc:0.9001\ttrain-auc:0.918283\n",
      "[150]\teval-auc:0.900075\ttrain-auc:0.918353\n",
      "[151]\teval-auc:0.900137\ttrain-auc:0.918465\n",
      "[152]\teval-auc:0.900164\ttrain-auc:0.918502\n",
      "[153]\teval-auc:0.900193\ttrain-auc:0.918586\n",
      "[154]\teval-auc:0.900287\ttrain-auc:0.918687\n",
      "[155]\teval-auc:0.900366\ttrain-auc:0.918747\n",
      "[156]\teval-auc:0.900468\ttrain-auc:0.918952\n",
      "[157]\teval-auc:0.90049\ttrain-auc:0.919002\n",
      "[158]\teval-auc:0.90042\ttrain-auc:0.919147\n",
      "[159]\teval-auc:0.900317\ttrain-auc:0.919172\n",
      "[160]\teval-auc:0.900484\ttrain-auc:0.919276\n",
      "[161]\teval-auc:0.900489\ttrain-auc:0.919405\n",
      "[162]\teval-auc:0.900492\ttrain-auc:0.919453\n",
      "[163]\teval-auc:0.900433\ttrain-auc:0.919467\n",
      "[164]\teval-auc:0.900406\ttrain-auc:0.919545\n",
      "[165]\teval-auc:0.900431\ttrain-auc:0.919602\n",
      "[166]\teval-auc:0.900368\ttrain-auc:0.919682\n",
      "[167]\teval-auc:0.900415\ttrain-auc:0.919811\n",
      "[168]\teval-auc:0.90043\ttrain-auc:0.919822\n",
      "[169]\teval-auc:0.900479\ttrain-auc:0.919999\n",
      "[170]\teval-auc:0.900525\ttrain-auc:0.920044\n",
      "[171]\teval-auc:0.900549\ttrain-auc:0.920129\n",
      "[172]\teval-auc:0.900558\ttrain-auc:0.92018\n",
      "[173]\teval-auc:0.900592\ttrain-auc:0.920318\n",
      "[174]\teval-auc:0.900571\ttrain-auc:0.920385\n",
      "[175]\teval-auc:0.900548\ttrain-auc:0.920435\n",
      "[176]\teval-auc:0.90063\ttrain-auc:0.920504\n",
      "[177]\teval-auc:0.900636\ttrain-auc:0.920566\n",
      "[178]\teval-auc:0.900607\ttrain-auc:0.920614\n",
      "[179]\teval-auc:0.900702\ttrain-auc:0.920677\n",
      "[180]\teval-auc:0.900662\ttrain-auc:0.920718\n",
      "[181]\teval-auc:0.900664\ttrain-auc:0.920829\n",
      "[182]\teval-auc:0.900672\ttrain-auc:0.920945\n",
      "[183]\teval-auc:0.900707\ttrain-auc:0.921031\n",
      "[184]\teval-auc:0.900926\ttrain-auc:0.921172\n",
      "[185]\teval-auc:0.90097\ttrain-auc:0.921294\n",
      "[186]\teval-auc:0.901002\ttrain-auc:0.921361\n",
      "[187]\teval-auc:0.901058\ttrain-auc:0.921458\n",
      "[188]\teval-auc:0.901173\ttrain-auc:0.921574\n",
      "[189]\teval-auc:0.90119\ttrain-auc:0.921657\n",
      "[190]\teval-auc:0.901192\ttrain-auc:0.921822\n",
      "[191]\teval-auc:0.901412\ttrain-auc:0.922007\n",
      "[192]\teval-auc:0.901475\ttrain-auc:0.922087\n",
      "[193]\teval-auc:0.901453\ttrain-auc:0.922186\n",
      "[194]\teval-auc:0.901477\ttrain-auc:0.922309\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[195]\teval-auc:0.901529\ttrain-auc:0.922374\n",
      "[196]\teval-auc:0.901496\ttrain-auc:0.922468\n",
      "[197]\teval-auc:0.9015\ttrain-auc:0.922542\n",
      "[198]\teval-auc:0.901495\ttrain-auc:0.922641\n",
      "[199]\teval-auc:0.901481\ttrain-auc:0.922684\n",
      "[200]\teval-auc:0.901529\ttrain-auc:0.922689\n",
      "[201]\teval-auc:0.90157\ttrain-auc:0.92276\n",
      "[202]\teval-auc:0.901623\ttrain-auc:0.922869\n",
      "[203]\teval-auc:0.901551\ttrain-auc:0.923046\n",
      "[204]\teval-auc:0.901645\ttrain-auc:0.923103\n",
      "[205]\teval-auc:0.901638\ttrain-auc:0.923184\n",
      "[206]\teval-auc:0.901659\ttrain-auc:0.92326\n",
      "[207]\teval-auc:0.901637\ttrain-auc:0.923341\n",
      "[208]\teval-auc:0.90161\ttrain-auc:0.923404\n",
      "[209]\teval-auc:0.901626\ttrain-auc:0.923434\n",
      "[210]\teval-auc:0.901627\ttrain-auc:0.923497\n",
      "[211]\teval-auc:0.901666\ttrain-auc:0.923624\n",
      "[212]\teval-auc:0.901706\ttrain-auc:0.923833\n",
      "[213]\teval-auc:0.90175\ttrain-auc:0.923946\n",
      "[214]\teval-auc:0.901726\ttrain-auc:0.924083\n",
      "[215]\teval-auc:0.901679\ttrain-auc:0.924158\n",
      "[216]\teval-auc:0.901695\ttrain-auc:0.924248\n",
      "[217]\teval-auc:0.901713\ttrain-auc:0.924497\n",
      "[218]\teval-auc:0.901694\ttrain-auc:0.924562\n",
      "[219]\teval-auc:0.901682\ttrain-auc:0.924596\n",
      "[220]\teval-auc:0.901736\ttrain-auc:0.924793\n",
      "[221]\teval-auc:0.901779\ttrain-auc:0.924879\n",
      "[222]\teval-auc:0.901815\ttrain-auc:0.925022\n",
      "[223]\teval-auc:0.901826\ttrain-auc:0.925096\n",
      "[224]\teval-auc:0.901817\ttrain-auc:0.925189\n",
      "[225]\teval-auc:0.901813\ttrain-auc:0.925287\n",
      "[226]\teval-auc:0.901803\ttrain-auc:0.925366\n",
      "[227]\teval-auc:0.901846\ttrain-auc:0.925414\n",
      "[228]\teval-auc:0.901796\ttrain-auc:0.925512\n",
      "[229]\teval-auc:0.901802\ttrain-auc:0.925588\n",
      "[230]\teval-auc:0.901852\ttrain-auc:0.925569\n",
      "[231]\teval-auc:0.901851\ttrain-auc:0.925628\n",
      "[232]\teval-auc:0.90187\ttrain-auc:0.925714\n",
      "[233]\teval-auc:0.901889\ttrain-auc:0.925807\n",
      "[234]\teval-auc:0.901907\ttrain-auc:0.925931\n",
      "[235]\teval-auc:0.901932\ttrain-auc:0.92595\n",
      "[236]\teval-auc:0.901962\ttrain-auc:0.92616\n",
      "[237]\teval-auc:0.902018\ttrain-auc:0.926481\n",
      "[238]\teval-auc:0.902031\ttrain-auc:0.926539\n",
      "[239]\teval-auc:0.901992\ttrain-auc:0.926579\n",
      "[240]\teval-auc:0.901964\ttrain-auc:0.926646\n",
      "[241]\teval-auc:0.90195\ttrain-auc:0.926695\n",
      "[242]\teval-auc:0.901905\ttrain-auc:0.926814\n",
      "[243]\teval-auc:0.901931\ttrain-auc:0.926913\n",
      "[244]\teval-auc:0.901954\ttrain-auc:0.927055\n",
      "[245]\teval-auc:0.901982\ttrain-auc:0.927183\n",
      "[246]\teval-auc:0.902033\ttrain-auc:0.92739\n",
      "[247]\teval-auc:0.902079\ttrain-auc:0.927538\n",
      "[248]\teval-auc:0.902114\ttrain-auc:0.927675\n",
      "[249]\teval-auc:0.902118\ttrain-auc:0.92777\n",
      "[250]\teval-auc:0.902128\ttrain-auc:0.927826\n",
      "[251]\teval-auc:0.902158\ttrain-auc:0.92785\n",
      "[252]\teval-auc:0.90212\ttrain-auc:0.927911\n",
      "[253]\teval-auc:0.902137\ttrain-auc:0.928007\n",
      "[254]\teval-auc:0.902143\ttrain-auc:0.928076\n",
      "[255]\teval-auc:0.902132\ttrain-auc:0.928155\n",
      "[256]\teval-auc:0.902114\ttrain-auc:0.928194\n",
      "[257]\teval-auc:0.902067\ttrain-auc:0.928242\n",
      "[258]\teval-auc:0.902057\ttrain-auc:0.928352\n",
      "[259]\teval-auc:0.902071\ttrain-auc:0.928338\n",
      "[260]\teval-auc:0.902054\ttrain-auc:0.928441\n",
      "[261]\teval-auc:0.902065\ttrain-auc:0.928489\n",
      "[262]\teval-auc:0.902118\ttrain-auc:0.928618\n",
      "[263]\teval-auc:0.902097\ttrain-auc:0.928668\n",
      "[264]\teval-auc:0.902072\ttrain-auc:0.928825\n",
      "[265]\teval-auc:0.902104\ttrain-auc:0.928903\n",
      "[266]\teval-auc:0.902113\ttrain-auc:0.929068\n",
      "[267]\teval-auc:0.902117\ttrain-auc:0.929177\n",
      "[268]\teval-auc:0.902161\ttrain-auc:0.929298\n",
      "[269]\teval-auc:0.902207\ttrain-auc:0.929493\n",
      "[270]\teval-auc:0.902182\ttrain-auc:0.929546\n",
      "[271]\teval-auc:0.902169\ttrain-auc:0.929651\n",
      "[272]\teval-auc:0.902139\ttrain-auc:0.929712\n",
      "[273]\teval-auc:0.902156\ttrain-auc:0.929776\n",
      "[274]\teval-auc:0.902215\ttrain-auc:0.929815\n",
      "[275]\teval-auc:0.902228\ttrain-auc:0.929878\n",
      "[276]\teval-auc:0.902189\ttrain-auc:0.929964\n",
      "[277]\teval-auc:0.902163\ttrain-auc:0.930062\n",
      "[278]\teval-auc:0.90217\ttrain-auc:0.930137\n",
      "[279]\teval-auc:0.902148\ttrain-auc:0.930206\n",
      "[280]\teval-auc:0.902142\ttrain-auc:0.930298\n",
      "[281]\teval-auc:0.902227\ttrain-auc:0.930339\n",
      "[282]\teval-auc:0.902261\ttrain-auc:0.930391\n",
      "[283]\teval-auc:0.902268\ttrain-auc:0.930446\n",
      "[284]\teval-auc:0.9023\ttrain-auc:0.930482\n",
      "[285]\teval-auc:0.902333\ttrain-auc:0.930549\n",
      "[286]\teval-auc:0.902327\ttrain-auc:0.930686\n",
      "[287]\teval-auc:0.902359\ttrain-auc:0.930727\n",
      "[288]\teval-auc:0.902342\ttrain-auc:0.930842\n",
      "[289]\teval-auc:0.902418\ttrain-auc:0.930926\n",
      "[290]\teval-auc:0.902422\ttrain-auc:0.931028\n",
      "[291]\teval-auc:0.90235\ttrain-auc:0.931105\n",
      "[292]\teval-auc:0.902339\ttrain-auc:0.931216\n",
      "[293]\teval-auc:0.902314\ttrain-auc:0.931283\n",
      "[294]\teval-auc:0.902284\ttrain-auc:0.931399\n",
      "[295]\teval-auc:0.902309\ttrain-auc:0.931419\n",
      "[296]\teval-auc:0.902255\ttrain-auc:0.931438\n",
      "[297]\teval-auc:0.902247\ttrain-auc:0.931512\n",
      "[298]\teval-auc:0.902224\ttrain-auc:0.931597\n",
      "[299]\teval-auc:0.90221\ttrain-auc:0.931772\n",
      "[300]\teval-auc:0.902217\ttrain-auc:0.931822\n",
      "[301]\teval-auc:0.902229\ttrain-auc:0.93191\n",
      "[302]\teval-auc:0.902232\ttrain-auc:0.931988\n",
      "[303]\teval-auc:0.902245\ttrain-auc:0.932081\n",
      "[304]\teval-auc:0.902216\ttrain-auc:0.932114\n",
      "[305]\teval-auc:0.902213\ttrain-auc:0.932133\n",
      "[306]\teval-auc:0.902229\ttrain-auc:0.932199\n",
      "[307]\teval-auc:0.902233\ttrain-auc:0.932293\n",
      "[308]\teval-auc:0.902289\ttrain-auc:0.932445\n",
      "[309]\teval-auc:0.902297\ttrain-auc:0.932612\n",
      "[310]\teval-auc:0.902277\ttrain-auc:0.932716\n",
      "[311]\teval-auc:0.902261\ttrain-auc:0.932737\n",
      "[312]\teval-auc:0.90232\ttrain-auc:0.932873\n",
      "[313]\teval-auc:0.902337\ttrain-auc:0.933031\n",
      "[314]\teval-auc:0.902316\ttrain-auc:0.933148\n",
      "[315]\teval-auc:0.902312\ttrain-auc:0.933235\n",
      "[316]\teval-auc:0.902309\ttrain-auc:0.933335\n",
      "[317]\teval-auc:0.902335\ttrain-auc:0.933398\n",
      "[318]\teval-auc:0.902314\ttrain-auc:0.933457\n",
      "[319]\teval-auc:0.902316\ttrain-auc:0.933481\n",
      "[320]\teval-auc:0.902325\ttrain-auc:0.933583\n",
      "[321]\teval-auc:0.902373\ttrain-auc:0.933682\n",
      "[322]\teval-auc:0.902394\ttrain-auc:0.933809\n",
      "[323]\teval-auc:0.902413\ttrain-auc:0.933848\n",
      "[324]\teval-auc:0.902395\ttrain-auc:0.93399\n",
      "[325]\teval-auc:0.902403\ttrain-auc:0.934039\n",
      "[326]\teval-auc:0.902451\ttrain-auc:0.934088\n",
      "[327]\teval-auc:0.902416\ttrain-auc:0.934147\n",
      "[328]\teval-auc:0.902427\ttrain-auc:0.934215\n",
      "[329]\teval-auc:0.902425\ttrain-auc:0.93433\n",
      "[330]\teval-auc:0.902421\ttrain-auc:0.934425\n",
      "[331]\teval-auc:0.902449\ttrain-auc:0.934451\n",
      "[332]\teval-auc:0.902455\ttrain-auc:0.934507\n",
      "[333]\teval-auc:0.902459\ttrain-auc:0.934595\n",
      "[334]\teval-auc:0.902442\ttrain-auc:0.934683\n",
      "[335]\teval-auc:0.902422\ttrain-auc:0.934778\n",
      "[336]\teval-auc:0.902436\ttrain-auc:0.934873\n",
      "[337]\teval-auc:0.902445\ttrain-auc:0.934932\n",
      "[338]\teval-auc:0.902492\ttrain-auc:0.935036\n",
      "[339]\teval-auc:0.902516\ttrain-auc:0.935206\n",
      "[340]\teval-auc:0.902531\ttrain-auc:0.935285\n",
      "[341]\teval-auc:0.902564\ttrain-auc:0.935339\n",
      "[342]\teval-auc:0.902531\ttrain-auc:0.935451\n",
      "[343]\teval-auc:0.902518\ttrain-auc:0.935502\n",
      "[344]\teval-auc:0.902589\ttrain-auc:0.935568\n",
      "[345]\teval-auc:0.902569\ttrain-auc:0.935637\n",
      "[346]\teval-auc:0.902581\ttrain-auc:0.935679\n",
      "[347]\teval-auc:0.902558\ttrain-auc:0.935767\n",
      "[348]\teval-auc:0.902578\ttrain-auc:0.935864\n",
      "[349]\teval-auc:0.902558\ttrain-auc:0.935962\n",
      "[350]\teval-auc:0.902569\ttrain-auc:0.936035\n",
      "[351]\teval-auc:0.902573\ttrain-auc:0.936144\n",
      "[352]\teval-auc:0.902602\ttrain-auc:0.936217\n",
      "[353]\teval-auc:0.902611\ttrain-auc:0.936268\n",
      "[354]\teval-auc:0.902619\ttrain-auc:0.936385\n",
      "[355]\teval-auc:0.902633\ttrain-auc:0.93646\n",
      "[356]\teval-auc:0.902561\ttrain-auc:0.936562\n",
      "[357]\teval-auc:0.90258\ttrain-auc:0.936673\n",
      "[358]\teval-auc:0.902595\ttrain-auc:0.936785\n",
      "[359]\teval-auc:0.902646\ttrain-auc:0.936906\n",
      "[360]\teval-auc:0.902659\ttrain-auc:0.936964\n",
      "[361]\teval-auc:0.902637\ttrain-auc:0.937065\n",
      "[362]\teval-auc:0.902654\ttrain-auc:0.937146\n",
      "[363]\teval-auc:0.902629\ttrain-auc:0.937226\n",
      "[364]\teval-auc:0.902623\ttrain-auc:0.937307\n",
      "[365]\teval-auc:0.902647\ttrain-auc:0.937415\n",
      "[366]\teval-auc:0.902682\ttrain-auc:0.937478\n",
      "[367]\teval-auc:0.902662\ttrain-auc:0.937542\n",
      "[368]\teval-auc:0.902697\ttrain-auc:0.93766\n",
      "[369]\teval-auc:0.902725\ttrain-auc:0.937774\n",
      "[370]\teval-auc:0.902693\ttrain-auc:0.937854\n",
      "[371]\teval-auc:0.902682\ttrain-auc:0.93792\n",
      "[372]\teval-auc:0.902668\ttrain-auc:0.938061\n",
      "[373]\teval-auc:0.902643\ttrain-auc:0.938148\n",
      "[374]\teval-auc:0.90266\ttrain-auc:0.9382\n",
      "[375]\teval-auc:0.90271\ttrain-auc:0.938264\n",
      "[376]\teval-auc:0.902696\ttrain-auc:0.938344\n",
      "[377]\teval-auc:0.902701\ttrain-auc:0.938413\n",
      "[378]\teval-auc:0.902703\ttrain-auc:0.938473\n",
      "[379]\teval-auc:0.902706\ttrain-auc:0.938587\n",
      "[380]\teval-auc:0.902673\ttrain-auc:0.938678\n",
      "[381]\teval-auc:0.902681\ttrain-auc:0.938775\n",
      "[382]\teval-auc:0.902694\ttrain-auc:0.938855\n",
      "[383]\teval-auc:0.902656\ttrain-auc:0.938933\n",
      "[384]\teval-auc:0.902651\ttrain-auc:0.939045\n",
      "[385]\teval-auc:0.902667\ttrain-auc:0.939144\n",
      "[386]\teval-auc:0.902662\ttrain-auc:0.939229\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[387]\teval-auc:0.902687\ttrain-auc:0.939268\n",
      "[388]\teval-auc:0.902691\ttrain-auc:0.939331\n",
      "[389]\teval-auc:0.902728\ttrain-auc:0.939454\n",
      "[390]\teval-auc:0.902684\ttrain-auc:0.939545\n",
      "[391]\teval-auc:0.902669\ttrain-auc:0.939642\n",
      "[392]\teval-auc:0.902632\ttrain-auc:0.939695\n",
      "[393]\teval-auc:0.902606\ttrain-auc:0.939741\n",
      "[394]\teval-auc:0.902603\ttrain-auc:0.939838\n",
      "[395]\teval-auc:0.902612\ttrain-auc:0.939861\n",
      "[396]\teval-auc:0.902621\ttrain-auc:0.939914\n",
      "[397]\teval-auc:0.902636\ttrain-auc:0.940061\n",
      "[398]\teval-auc:0.902643\ttrain-auc:0.940106\n",
      "[399]\teval-auc:0.902562\ttrain-auc:0.94018\n",
      "[400]\teval-auc:0.902573\ttrain-auc:0.940242\n",
      "[401]\teval-auc:0.902623\ttrain-auc:0.940366\n",
      "[402]\teval-auc:0.902611\ttrain-auc:0.94046\n",
      "[403]\teval-auc:0.902599\ttrain-auc:0.94054\n",
      "[404]\teval-auc:0.902578\ttrain-auc:0.940624\n",
      "[405]\teval-auc:0.902557\ttrain-auc:0.940685\n",
      "[406]\teval-auc:0.902565\ttrain-auc:0.940778\n",
      "[407]\teval-auc:0.902525\ttrain-auc:0.94089\n",
      "[408]\teval-auc:0.902578\ttrain-auc:0.940994\n",
      "[409]\teval-auc:0.902589\ttrain-auc:0.941003\n",
      "[410]\teval-auc:0.902618\ttrain-auc:0.941057\n",
      "[411]\teval-auc:0.902595\ttrain-auc:0.941108\n",
      "[412]\teval-auc:0.902598\ttrain-auc:0.941191\n",
      "[413]\teval-auc:0.902636\ttrain-auc:0.941289\n",
      "[414]\teval-auc:0.902645\ttrain-auc:0.94134\n",
      "[415]\teval-auc:0.902664\ttrain-auc:0.941371\n",
      "[416]\teval-auc:0.902696\ttrain-auc:0.941448\n",
      "[417]\teval-auc:0.902685\ttrain-auc:0.941537\n",
      "[418]\teval-auc:0.902674\ttrain-auc:0.941557\n",
      "[419]\teval-auc:0.902726\ttrain-auc:0.941656\n",
      "[420]\teval-auc:0.902747\ttrain-auc:0.941704\n",
      "[421]\teval-auc:0.902715\ttrain-auc:0.941792\n",
      "[422]\teval-auc:0.902756\ttrain-auc:0.941872\n",
      "[423]\teval-auc:0.902745\ttrain-auc:0.94196\n",
      "[424]\teval-auc:0.902739\ttrain-auc:0.941979\n",
      "[425]\teval-auc:0.902764\ttrain-auc:0.942059\n",
      "[426]\teval-auc:0.902779\ttrain-auc:0.942111\n",
      "[427]\teval-auc:0.902775\ttrain-auc:0.942264\n",
      "[428]\teval-auc:0.902773\ttrain-auc:0.942358\n",
      "[429]\teval-auc:0.902804\ttrain-auc:0.942495\n",
      "[430]\teval-auc:0.902817\ttrain-auc:0.942503\n",
      "[431]\teval-auc:0.902812\ttrain-auc:0.942542\n",
      "[432]\teval-auc:0.902797\ttrain-auc:0.942614\n",
      "[433]\teval-auc:0.902797\ttrain-auc:0.942706\n",
      "[434]\teval-auc:0.902807\ttrain-auc:0.942766\n",
      "[435]\teval-auc:0.902789\ttrain-auc:0.942793\n",
      "[436]\teval-auc:0.902773\ttrain-auc:0.942833\n",
      "[437]\teval-auc:0.902777\ttrain-auc:0.942885\n",
      "[438]\teval-auc:0.902757\ttrain-auc:0.942989\n",
      "[439]\teval-auc:0.902767\ttrain-auc:0.943018\n",
      "[440]\teval-auc:0.902743\ttrain-auc:0.943089\n",
      "[441]\teval-auc:0.90278\ttrain-auc:0.943186\n",
      "[442]\teval-auc:0.90276\ttrain-auc:0.943221\n",
      "[443]\teval-auc:0.902732\ttrain-auc:0.943298\n",
      "[444]\teval-auc:0.902745\ttrain-auc:0.943368\n",
      "[445]\teval-auc:0.902748\ttrain-auc:0.943376\n",
      "[446]\teval-auc:0.902748\ttrain-auc:0.943457\n",
      "[447]\teval-auc:0.902709\ttrain-auc:0.943554\n",
      "[448]\teval-auc:0.90271\ttrain-auc:0.943634\n",
      "[449]\teval-auc:0.90269\ttrain-auc:0.943694\n",
      "[450]\teval-auc:0.902662\ttrain-auc:0.943732\n",
      "[451]\teval-auc:0.90266\ttrain-auc:0.943793\n",
      "[452]\teval-auc:0.902671\ttrain-auc:0.943895\n",
      "[453]\teval-auc:0.902663\ttrain-auc:0.943932\n",
      "[454]\teval-auc:0.902663\ttrain-auc:0.944006\n",
      "[455]\teval-auc:0.90268\ttrain-auc:0.944089\n",
      "[456]\teval-auc:0.902694\ttrain-auc:0.944147\n",
      "[457]\teval-auc:0.902681\ttrain-auc:0.944239\n",
      "[458]\teval-auc:0.902706\ttrain-auc:0.944338\n",
      "[459]\teval-auc:0.902731\ttrain-auc:0.944425\n",
      "[460]\teval-auc:0.902733\ttrain-auc:0.944476\n",
      "[461]\teval-auc:0.90268\ttrain-auc:0.944569\n",
      "[462]\teval-auc:0.902675\ttrain-auc:0.944624\n",
      "[463]\teval-auc:0.90266\ttrain-auc:0.944641\n",
      "[464]\teval-auc:0.902633\ttrain-auc:0.944727\n",
      "[465]\teval-auc:0.902597\ttrain-auc:0.944843\n",
      "[466]\teval-auc:0.902599\ttrain-auc:0.944932\n",
      "[467]\teval-auc:0.902614\ttrain-auc:0.945051\n",
      "[468]\teval-auc:0.902584\ttrain-auc:0.945165\n",
      "[469]\teval-auc:0.902623\ttrain-auc:0.945208\n",
      "[470]\teval-auc:0.902607\ttrain-auc:0.945264\n",
      "[471]\teval-auc:0.902615\ttrain-auc:0.9453\n",
      "[472]\teval-auc:0.902601\ttrain-auc:0.945382\n",
      "[473]\teval-auc:0.902619\ttrain-auc:0.945429\n",
      "[474]\teval-auc:0.902622\ttrain-auc:0.945491\n",
      "[475]\teval-auc:0.902634\ttrain-auc:0.945525\n",
      "[476]\teval-auc:0.902626\ttrain-auc:0.945568\n",
      "[477]\teval-auc:0.902617\ttrain-auc:0.945631\n",
      "[478]\teval-auc:0.902603\ttrain-auc:0.945706\n",
      "[479]\teval-auc:0.902656\ttrain-auc:0.945812\n",
      "[480]\teval-auc:0.902658\ttrain-auc:0.945864\n",
      "[481]\teval-auc:0.902661\ttrain-auc:0.945944\n",
      "[482]\teval-auc:0.902656\ttrain-auc:0.946017\n",
      "[483]\teval-auc:0.90263\ttrain-auc:0.946083\n",
      "[484]\teval-auc:0.902625\ttrain-auc:0.946129\n",
      "[485]\teval-auc:0.902624\ttrain-auc:0.946166\n",
      "[486]\teval-auc:0.902618\ttrain-auc:0.946191\n",
      "[487]\teval-auc:0.902592\ttrain-auc:0.94627\n",
      "[488]\teval-auc:0.902601\ttrain-auc:0.946387\n",
      "[489]\teval-auc:0.902647\ttrain-auc:0.946436\n",
      "[490]\teval-auc:0.902635\ttrain-auc:0.946478\n",
      "[491]\teval-auc:0.902681\ttrain-auc:0.9466\n",
      "[492]\teval-auc:0.902642\ttrain-auc:0.946711\n",
      "[493]\teval-auc:0.902663\ttrain-auc:0.946798\n",
      "[494]\teval-auc:0.902653\ttrain-auc:0.946811\n",
      "[495]\teval-auc:0.902636\ttrain-auc:0.946875\n",
      "[496]\teval-auc:0.902633\ttrain-auc:0.946956\n",
      "[497]\teval-auc:0.902638\ttrain-auc:0.946992\n",
      "[498]\teval-auc:0.902628\ttrain-auc:0.947013\n",
      "[499]\teval-auc:0.902647\ttrain-auc:0.947073\n",
      "[500]\teval-auc:0.902653\ttrain-auc:0.947091\n",
      "[501]\teval-auc:0.902658\ttrain-auc:0.947141\n",
      "[502]\teval-auc:0.902673\ttrain-auc:0.947161\n",
      "[503]\teval-auc:0.90271\ttrain-auc:0.947243\n",
      "[504]\teval-auc:0.902718\ttrain-auc:0.947265\n",
      "[505]\teval-auc:0.902735\ttrain-auc:0.947342\n",
      "[506]\teval-auc:0.902732\ttrain-auc:0.947374\n",
      "[507]\teval-auc:0.902733\ttrain-auc:0.947476\n",
      "[508]\teval-auc:0.902712\ttrain-auc:0.947521\n",
      "[509]\teval-auc:0.902705\ttrain-auc:0.947548\n",
      "[510]\teval-auc:0.902671\ttrain-auc:0.947652\n",
      "[511]\teval-auc:0.902669\ttrain-auc:0.947711\n",
      "[512]\teval-auc:0.902655\ttrain-auc:0.947821\n",
      "[513]\teval-auc:0.902684\ttrain-auc:0.947892\n",
      "[514]\teval-auc:0.902691\ttrain-auc:0.947973\n",
      "[515]\teval-auc:0.902662\ttrain-auc:0.948042\n",
      "[516]\teval-auc:0.902669\ttrain-auc:0.948092\n",
      "[517]\teval-auc:0.90269\ttrain-auc:0.948108\n",
      "[518]\teval-auc:0.902681\ttrain-auc:0.948197\n",
      "[519]\teval-auc:0.902674\ttrain-auc:0.948237\n",
      "[520]\teval-auc:0.902679\ttrain-auc:0.948286\n",
      "[521]\teval-auc:0.902656\ttrain-auc:0.948321\n",
      "[522]\teval-auc:0.902663\ttrain-auc:0.948396\n",
      "[523]\teval-auc:0.902645\ttrain-auc:0.948424\n",
      "[524]\teval-auc:0.90265\ttrain-auc:0.948457\n",
      "[525]\teval-auc:0.902622\ttrain-auc:0.948531\n",
      "[526]\teval-auc:0.902645\ttrain-auc:0.948561\n",
      "[527]\teval-auc:0.902651\ttrain-auc:0.948661\n",
      "[528]\teval-auc:0.902685\ttrain-auc:0.948726\n",
      "[529]\teval-auc:0.902662\ttrain-auc:0.948788\n",
      "[530]\teval-auc:0.902684\ttrain-auc:0.94886\n",
      "[531]\teval-auc:0.902694\ttrain-auc:0.948928\n",
      "[532]\teval-auc:0.902702\ttrain-auc:0.948962\n",
      "[533]\teval-auc:0.90272\ttrain-auc:0.949008\n",
      "[534]\teval-auc:0.902768\ttrain-auc:0.949054\n",
      "[535]\teval-auc:0.90277\ttrain-auc:0.949106\n",
      "[536]\teval-auc:0.902784\ttrain-auc:0.949143\n",
      "[537]\teval-auc:0.902786\ttrain-auc:0.949221\n",
      "[538]\teval-auc:0.902775\ttrain-auc:0.949302\n",
      "[539]\teval-auc:0.902758\ttrain-auc:0.949333\n",
      "[540]\teval-auc:0.90276\ttrain-auc:0.949383\n",
      "[541]\teval-auc:0.902734\ttrain-auc:0.949436\n",
      "[542]\teval-auc:0.902767\ttrain-auc:0.949508\n",
      "[543]\teval-auc:0.902765\ttrain-auc:0.949587\n",
      "[544]\teval-auc:0.902742\ttrain-auc:0.949629\n",
      "[545]\teval-auc:0.902743\ttrain-auc:0.949684\n",
      "[546]\teval-auc:0.902774\ttrain-auc:0.949725\n",
      "[547]\teval-auc:0.902813\ttrain-auc:0.949783\n",
      "[548]\teval-auc:0.902838\ttrain-auc:0.949842\n",
      "[549]\teval-auc:0.902837\ttrain-auc:0.94985\n",
      "[550]\teval-auc:0.902838\ttrain-auc:0.9499\n",
      "[551]\teval-auc:0.902809\ttrain-auc:0.94998\n",
      "[552]\teval-auc:0.902815\ttrain-auc:0.950042\n",
      "[553]\teval-auc:0.902825\ttrain-auc:0.950112\n",
      "[554]\teval-auc:0.902781\ttrain-auc:0.950186\n",
      "[555]\teval-auc:0.902767\ttrain-auc:0.950242\n",
      "[556]\teval-auc:0.902769\ttrain-auc:0.950327\n",
      "[557]\teval-auc:0.902749\ttrain-auc:0.9504\n",
      "[558]\teval-auc:0.902751\ttrain-auc:0.950453\n",
      "[559]\teval-auc:0.902747\ttrain-auc:0.950525\n",
      "[560]\teval-auc:0.902745\ttrain-auc:0.950601\n",
      "[561]\teval-auc:0.902754\ttrain-auc:0.950682\n",
      "[562]\teval-auc:0.902757\ttrain-auc:0.95071\n",
      "[563]\teval-auc:0.902771\ttrain-auc:0.950801\n",
      "[564]\teval-auc:0.902737\ttrain-auc:0.950889\n",
      "[565]\teval-auc:0.902736\ttrain-auc:0.950896\n",
      "[566]\teval-auc:0.902764\ttrain-auc:0.950969\n",
      "[567]\teval-auc:0.90274\ttrain-auc:0.951032\n",
      "[568]\teval-auc:0.902753\ttrain-auc:0.951048\n",
      "[569]\teval-auc:0.902759\ttrain-auc:0.951115\n",
      "[570]\teval-auc:0.90272\ttrain-auc:0.951155\n",
      "[571]\teval-auc:0.902699\ttrain-auc:0.951183\n",
      "[572]\teval-auc:0.90269\ttrain-auc:0.951253\n",
      "[573]\teval-auc:0.902694\ttrain-auc:0.951316\n",
      "[574]\teval-auc:0.902696\ttrain-auc:0.951335\n",
      "[575]\teval-auc:0.902671\ttrain-auc:0.951423\n",
      "[576]\teval-auc:0.902704\ttrain-auc:0.951495\n",
      "[577]\teval-auc:0.902723\ttrain-auc:0.951537\n",
      "[578]\teval-auc:0.902741\ttrain-auc:0.951584\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[579]\teval-auc:0.902683\ttrain-auc:0.951653\n",
      "[580]\teval-auc:0.902689\ttrain-auc:0.951672\n",
      "[581]\teval-auc:0.902701\ttrain-auc:0.951738\n",
      "[582]\teval-auc:0.902687\ttrain-auc:0.951799\n",
      "[583]\teval-auc:0.902678\ttrain-auc:0.951847\n",
      "[584]\teval-auc:0.902691\ttrain-auc:0.951917\n",
      "[585]\teval-auc:0.902692\ttrain-auc:0.951966\n",
      "[586]\teval-auc:0.902723\ttrain-auc:0.952051\n",
      "[587]\teval-auc:0.902711\ttrain-auc:0.952121\n",
      "[588]\teval-auc:0.902683\ttrain-auc:0.952149\n",
      "[589]\teval-auc:0.902674\ttrain-auc:0.952188\n",
      "[590]\teval-auc:0.902672\ttrain-auc:0.952263\n",
      "[591]\teval-auc:0.902652\ttrain-auc:0.952296\n",
      "[592]\teval-auc:0.902652\ttrain-auc:0.952381\n",
      "[593]\teval-auc:0.902639\ttrain-auc:0.952434\n",
      "[594]\teval-auc:0.902637\ttrain-auc:0.952492\n",
      "[595]\teval-auc:0.902666\ttrain-auc:0.952578\n",
      "[596]\teval-auc:0.902664\ttrain-auc:0.952604\n",
      "[597]\teval-auc:0.902668\ttrain-auc:0.952726\n",
      "[598]\teval-auc:0.902656\ttrain-auc:0.952847\n",
      "[599]\teval-auc:0.902632\ttrain-auc:0.952875\n",
      "[600]\teval-auc:0.902636\ttrain-auc:0.952952\n",
      "[601]\teval-auc:0.902634\ttrain-auc:0.953026\n",
      "[602]\teval-auc:0.902591\ttrain-auc:0.953089\n",
      "[603]\teval-auc:0.90257\ttrain-auc:0.953149\n",
      "[604]\teval-auc:0.902579\ttrain-auc:0.953203\n",
      "[605]\teval-auc:0.90259\ttrain-auc:0.953277\n",
      "[606]\teval-auc:0.902579\ttrain-auc:0.95334\n",
      "[607]\teval-auc:0.902543\ttrain-auc:0.9534\n",
      "[608]\teval-auc:0.902562\ttrain-auc:0.953476\n",
      "[609]\teval-auc:0.902574\ttrain-auc:0.953507\n",
      "[610]\teval-auc:0.902575\ttrain-auc:0.953549\n",
      "[611]\teval-auc:0.902584\ttrain-auc:0.953589\n",
      "[612]\teval-auc:0.902555\ttrain-auc:0.953691\n",
      "[613]\teval-auc:0.902548\ttrain-auc:0.953719\n",
      "[614]\teval-auc:0.902535\ttrain-auc:0.95379\n",
      "[615]\teval-auc:0.902525\ttrain-auc:0.953852\n",
      "[616]\teval-auc:0.902488\ttrain-auc:0.953928\n",
      "[617]\teval-auc:0.902525\ttrain-auc:0.953983\n",
      "[618]\teval-auc:0.90252\ttrain-auc:0.954008\n",
      "[619]\teval-auc:0.902516\ttrain-auc:0.954079\n",
      "[620]\teval-auc:0.902506\ttrain-auc:0.954108\n",
      "[621]\teval-auc:0.902485\ttrain-auc:0.954203\n",
      "[622]\teval-auc:0.902528\ttrain-auc:0.954276\n",
      "[623]\teval-auc:0.902522\ttrain-auc:0.954292\n",
      "[624]\teval-auc:0.902498\ttrain-auc:0.954366\n",
      "[625]\teval-auc:0.902506\ttrain-auc:0.954506\n",
      "[626]\teval-auc:0.902465\ttrain-auc:0.954652\n",
      "[627]\teval-auc:0.902487\ttrain-auc:0.954714\n",
      "[628]\teval-auc:0.902487\ttrain-auc:0.954766\n",
      "[629]\teval-auc:0.9025\ttrain-auc:0.954818\n",
      "[630]\teval-auc:0.902507\ttrain-auc:0.954854\n",
      "[631]\teval-auc:0.902485\ttrain-auc:0.954926\n",
      "[632]\teval-auc:0.902476\ttrain-auc:0.954965\n",
      "[633]\teval-auc:0.90246\ttrain-auc:0.955059\n",
      "[634]\teval-auc:0.902464\ttrain-auc:0.955134\n",
      "[635]\teval-auc:0.902465\ttrain-auc:0.955188\n",
      "[636]\teval-auc:0.902459\ttrain-auc:0.955218\n",
      "[637]\teval-auc:0.902466\ttrain-auc:0.955281\n",
      "[638]\teval-auc:0.902471\ttrain-auc:0.955315\n",
      "[639]\teval-auc:0.902456\ttrain-auc:0.955328\n",
      "[640]\teval-auc:0.902477\ttrain-auc:0.955356\n",
      "[641]\teval-auc:0.902439\ttrain-auc:0.955413\n",
      "[642]\teval-auc:0.902404\ttrain-auc:0.955535\n",
      "[643]\teval-auc:0.902399\ttrain-auc:0.955589\n",
      "[644]\teval-auc:0.902415\ttrain-auc:0.95566\n",
      "[645]\teval-auc:0.902426\ttrain-auc:0.955708\n",
      "[646]\teval-auc:0.902369\ttrain-auc:0.955795\n",
      "[647]\teval-auc:0.902355\ttrain-auc:0.955886\n",
      "[648]\teval-auc:0.902361\ttrain-auc:0.955942\n",
      "[649]\teval-auc:0.902371\ttrain-auc:0.956024\n",
      "[650]\teval-auc:0.902374\ttrain-auc:0.956073\n",
      "[651]\teval-auc:0.902384\ttrain-auc:0.956151\n",
      "[652]\teval-auc:0.902357\ttrain-auc:0.956199\n",
      "[653]\teval-auc:0.902372\ttrain-auc:0.956241\n",
      "[654]\teval-auc:0.902391\ttrain-auc:0.956306\n",
      "[655]\teval-auc:0.902397\ttrain-auc:0.956323\n",
      "[656]\teval-auc:0.902397\ttrain-auc:0.956412\n",
      "[657]\teval-auc:0.902367\ttrain-auc:0.956469\n",
      "[658]\teval-auc:0.902335\ttrain-auc:0.956576\n",
      "[659]\teval-auc:0.902348\ttrain-auc:0.956627\n",
      "[660]\teval-auc:0.902366\ttrain-auc:0.956665\n",
      "[661]\teval-auc:0.902344\ttrain-auc:0.956718\n",
      "[662]\teval-auc:0.902358\ttrain-auc:0.956736\n",
      "[663]\teval-auc:0.902325\ttrain-auc:0.95682\n",
      "[664]\teval-auc:0.902322\ttrain-auc:0.956822\n",
      "[665]\teval-auc:0.902366\ttrain-auc:0.956875\n",
      "[666]\teval-auc:0.902345\ttrain-auc:0.956941\n",
      "[667]\teval-auc:0.902364\ttrain-auc:0.957\n",
      "[668]\teval-auc:0.902365\ttrain-auc:0.95708\n",
      "[669]\teval-auc:0.902373\ttrain-auc:0.957135\n",
      "[670]\teval-auc:0.902384\ttrain-auc:0.957238\n",
      "[671]\teval-auc:0.902377\ttrain-auc:0.957246\n",
      "[672]\teval-auc:0.902378\ttrain-auc:0.957268\n",
      "[673]\teval-auc:0.902391\ttrain-auc:0.957368\n",
      "[674]\teval-auc:0.902378\ttrain-auc:0.957421\n",
      "[675]\teval-auc:0.902364\ttrain-auc:0.957482\n",
      "[676]\teval-auc:0.902343\ttrain-auc:0.957529\n",
      "[677]\teval-auc:0.902347\ttrain-auc:0.957596\n"
     ]
    }
   ],
   "source": [
    "num_round = 678\n",
    "evallist  = [(dtest,'eval'), (dtrain,'train')]\n",
    "param = {'objective':'binary:logistic', \n",
    "         'silent':1, \n",
    "         'eval_metric': ['auc'], \n",
    "         'eta':0.01, \n",
    "         'max_depth':5, \n",
    "         'subsample':0.58, \n",
    "         'colsample_bytree':1}\n",
    "\n",
    "bst = xgb.train(param, dtrain, num_round, evallist)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "threshold = 0.5\n",
    "y_train_pred = bst.predict(dtrain)\n",
    "y_test_pred = bst.predict(dtest)\n",
    "y_pred_pred = bst.predict(dpred)\n",
    "\n",
    "fig,ax = plt.subplots(1,3)\n",
    "fig.set_size_inches(15,5)\n",
    "\n",
    "plot_cm(ax[0],  y_train, y_train_pred, [0,1], 'Confusion matrix (TRAIN)', threshold)\n",
    "plot_cm(ax[1],  y_test, y_test_pred,   [0,1], 'Confusion matrix (TEST)', threshold)\n",
    "plot_auc(ax[2], y_train, y_train_pred, y_test, y_test_pred, threshold)\n",
    "    \n",
    "plt.tight_layout()\n",
    "plt.show()\n",
    "np.savetxt(\"DesjPred_ultime.csv\", y_pred_pred, delimiter=\",\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 109,
   "metadata": {},
   "outputs": [],
   "source": [
    "for train_index, test_index in kf.split(np_scaled_raw_X):\n",
    "    KFold_X_train, KFold_X_test = np_scaled_raw_X[train_index], np_scaled_raw_X[test_index]\n",
    "    KFold_y_train, KFold_y_test = np_y[train_index], np_y[test_index]\n",
    "  \n",
    "valid_set = (KFold_X_test,KFold_y_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 104,
   "metadata": {},
   "outputs": [],
   "source": [
    "import tensorflow as tf\n",
    "from keras.models import Sequential\n",
    "from keras.layers import Dense\n",
    "from sklearn.datasets import make_classification\n",
    "from keras.models import Sequential\n",
    "from keras.utils import np_utils\n",
    "from keras.callbacks import Callback, EarlyStopping\n",
    "from sklearn.metrics import roc_auc_score\n",
    "from keras.optimizers import Adam\n",
    "from sklearn import roc_auc_score\n",
    "\n",
    "def auc_roc(y_true, y_pred):\n",
    "    # any tensorflow metric\n",
    "    value, update_op = tf.contrib.metrics.streaming_auc(y_pred, y_true)\n",
    "\n",
    "    # find all variables created for this metric\n",
    "    metric_vars = [i for i in tf.local_variables() if 'auc_roc' in i.name.split('/')[1]]\n",
    "\n",
    "    # Add metric variables to GLOBAL_VARIABLES collection.\n",
    "    # They will be initialized for new session.\n",
    "    for v in metric_vars:\n",
    "        tf.add_to_collection(tf.GraphKeys.GLOBAL_VARIABLES, v)\n",
    "\n",
    "    # force to update metric values\n",
    "    with tf.control_dependencies([update_op]):\n",
    "        value = tf.identity(value)\n",
    "        return value"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 114,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1/10\n",
      " - 4s - loss: 0.3954 - acc: 0.8345 - auc_roc: 0.6856\n",
      "Epoch 2/10\n",
      " - 1s - loss: 0.3113 - acc: 0.8633 - auc_roc: 0.8316\n",
      "Epoch 3/10\n",
      " - 1s - loss: 0.3036 - acc: 0.8657 - auc_roc: 0.8572\n",
      "Epoch 4/10\n",
      " - 1s - loss: 0.2994 - acc: 0.8654 - auc_roc: 0.8688\n",
      "Epoch 5/10\n",
      " - 1s - loss: 0.2956 - acc: 0.8676 - auc_roc: 0.8759\n",
      "Epoch 6/10\n",
      " - 1s - loss: 0.2920 - acc: 0.8717 - auc_roc: 0.8805\n",
      "Epoch 7/10\n",
      " - 1s - loss: 0.2903 - acc: 0.8695 - auc_roc: 0.8838\n",
      "Epoch 8/10\n",
      " - 1s - loss: 0.2886 - acc: 0.8726 - auc_roc: 0.8869\n",
      "Epoch 9/10\n",
      " - 1s - loss: 0.2873 - acc: 0.8713 - auc_roc: 0.8892\n",
      "Epoch 10/10\n",
      " - 1s - loss: 0.2850 - acc: 0.8729 - auc_roc: 0.8907\n",
      "Epoch 1/1000\n",
      " - 1s - loss: 0.2803 - acc: 0.8748 - auc_roc: 0.8924\n",
      "Epoch 2/1000\n",
      " - 1s - loss: 0.2783 - acc: 0.8769 - auc_roc: 0.8941\n",
      "Epoch 3/1000\n",
      " - 1s - loss: 0.2764 - acc: 0.8768 - auc_roc: 0.8957\n",
      "Epoch 4/1000\n",
      " - 1s - loss: 0.2747 - acc: 0.8779 - auc_roc: 0.8971\n",
      "Epoch 5/1000\n",
      " - 1s - loss: 0.2728 - acc: 0.8783 - auc_roc: 0.8984\n",
      "Epoch 6/1000\n",
      " - 1s - loss: 0.2710 - acc: 0.8791 - auc_roc: 0.8996\n",
      "Epoch 7/1000\n",
      " - 1s - loss: 0.2692 - acc: 0.8800 - auc_roc: 0.9007\n",
      "Epoch 8/1000\n",
      " - 1s - loss: 0.2674 - acc: 0.8806 - auc_roc: 0.9018\n",
      "Epoch 9/1000\n",
      " - 1s - loss: 0.2654 - acc: 0.8818 - auc_roc: 0.9028\n",
      "Epoch 10/1000\n",
      " - 1s - loss: 0.2633 - acc: 0.8832 - auc_roc: 0.9038\n",
      "Epoch 11/1000\n",
      " - 1s - loss: 0.2614 - acc: 0.8843 - auc_roc: 0.9048\n",
      "Epoch 12/1000\n",
      " - 1s - loss: 0.2592 - acc: 0.8856 - auc_roc: 0.9057\n",
      "Epoch 13/1000\n",
      " - 1s - loss: 0.2569 - acc: 0.8869 - auc_roc: 0.9067\n",
      "Epoch 14/1000\n",
      " - 1s - loss: 0.2547 - acc: 0.8874 - auc_roc: 0.9076\n",
      "Epoch 15/1000\n",
      " - 1s - loss: 0.2525 - acc: 0.8886 - auc_roc: 0.9085\n",
      "Epoch 16/1000\n",
      " - 1s - loss: 0.2501 - acc: 0.8899 - auc_roc: 0.9094\n",
      "Epoch 17/1000\n",
      " - 1s - loss: 0.2475 - acc: 0.8910 - auc_roc: 0.9102\n",
      "Epoch 18/1000\n",
      " - 1s - loss: 0.2450 - acc: 0.8925 - auc_roc: 0.9111\n",
      "Epoch 19/1000\n",
      " - 1s - loss: 0.2423 - acc: 0.8937 - auc_roc: 0.9120\n",
      "Epoch 20/1000\n",
      " - 1s - loss: 0.2395 - acc: 0.8942 - auc_roc: 0.9128\n",
      "Epoch 21/1000\n",
      " - 1s - loss: 0.2365 - acc: 0.8958 - auc_roc: 0.9137\n",
      "Epoch 22/1000\n",
      " - 1s - loss: 0.2336 - acc: 0.8973 - auc_roc: 0.9146\n",
      "Epoch 23/1000\n",
      " - 1s - loss: 0.2307 - acc: 0.8986 - auc_roc: 0.9155\n",
      "Epoch 24/1000\n",
      " - 1s - loss: 0.2280 - acc: 0.9004 - auc_roc: 0.9163\n",
      "Epoch 25/1000\n",
      " - 1s - loss: 0.2251 - acc: 0.9012 - auc_roc: 0.9172\n",
      "Epoch 26/1000\n",
      " - 1s - loss: 0.2216 - acc: 0.9036 - auc_roc: 0.9181\n",
      "Epoch 27/1000\n",
      " - 1s - loss: 0.2186 - acc: 0.9048 - auc_roc: 0.9190\n",
      "Epoch 28/1000\n",
      " - 1s - loss: 0.2154 - acc: 0.9067 - auc_roc: 0.9198\n",
      "Epoch 29/1000\n",
      " - 1s - loss: 0.2122 - acc: 0.9081 - auc_roc: 0.9207\n",
      "Epoch 30/1000\n",
      " - 1s - loss: 0.2090 - acc: 0.9106 - auc_roc: 0.9216\n",
      "Epoch 31/1000\n",
      " - 1s - loss: 0.2058 - acc: 0.9111 - auc_roc: 0.9225\n",
      "Epoch 32/1000\n",
      " - 1s - loss: 0.2028 - acc: 0.9125 - auc_roc: 0.9234\n",
      "Epoch 33/1000\n",
      " - 1s - loss: 0.1997 - acc: 0.9144 - auc_roc: 0.9242\n",
      "Epoch 34/1000\n",
      " - 1s - loss: 0.1969 - acc: 0.9154 - auc_roc: 0.9251\n",
      "Epoch 35/1000\n",
      " - 1s - loss: 0.1939 - acc: 0.9173 - auc_roc: 0.9260\n",
      "Epoch 36/1000\n",
      " - 1s - loss: 0.1910 - acc: 0.9193 - auc_roc: 0.9268\n",
      "Epoch 37/1000\n",
      " - 1s - loss: 0.1882 - acc: 0.9202 - auc_roc: 0.9277\n",
      "Epoch 38/1000\n",
      " - 1s - loss: 0.1852 - acc: 0.9216 - auc_roc: 0.9285\n",
      "Epoch 39/1000\n",
      " - 1s - loss: 0.1824 - acc: 0.9234 - auc_roc: 0.9294\n",
      "Epoch 40/1000\n",
      " - 1s - loss: 0.1793 - acc: 0.9250 - auc_roc: 0.9302\n",
      "Epoch 41/1000\n",
      " - 1s - loss: 0.1764 - acc: 0.9255 - auc_roc: 0.9310\n",
      "Epoch 42/1000\n",
      " - 1s - loss: 0.1740 - acc: 0.9263 - auc_roc: 0.9319\n",
      "Epoch 43/1000\n",
      " - 1s - loss: 0.1712 - acc: 0.9287 - auc_roc: 0.9327\n",
      "Epoch 44/1000\n",
      " - 1s - loss: 0.1683 - acc: 0.9294 - auc_roc: 0.9335\n",
      "Epoch 45/1000\n",
      " - 1s - loss: 0.1658 - acc: 0.9314 - auc_roc: 0.9343\n",
      "Epoch 46/1000\n",
      " - 1s - loss: 0.1633 - acc: 0.9319 - auc_roc: 0.9351\n",
      "Epoch 47/1000\n",
      " - 1s - loss: 0.1605 - acc: 0.9338 - auc_roc: 0.9358\n",
      "Epoch 48/1000\n",
      " - 1s - loss: 0.1579 - acc: 0.9356 - auc_roc: 0.9366\n",
      "Epoch 49/1000\n",
      " - 1s - loss: 0.1551 - acc: 0.9367 - auc_roc: 0.9374\n",
      "Epoch 50/1000\n",
      " - 1s - loss: 0.1525 - acc: 0.9370 - auc_roc: 0.9381\n",
      "Epoch 51/1000\n",
      " - 1s - loss: 0.1500 - acc: 0.9383 - auc_roc: 0.9389\n",
      "Epoch 52/1000\n",
      " - 1s - loss: 0.1477 - acc: 0.9379 - auc_roc: 0.9396\n",
      "Epoch 53/1000\n",
      " - 1s - loss: 0.1453 - acc: 0.9401 - auc_roc: 0.9403\n",
      "Epoch 54/1000\n",
      " - 1s - loss: 0.1428 - acc: 0.9430 - auc_roc: 0.9411\n",
      "Epoch 55/1000\n",
      " - 1s - loss: 0.1410 - acc: 0.9432 - auc_roc: 0.9418\n",
      "Epoch 56/1000\n",
      " - 1s - loss: 0.1379 - acc: 0.9448 - auc_roc: 0.9425\n",
      "Epoch 57/1000\n",
      " - 1s - loss: 0.1359 - acc: 0.9457 - auc_roc: 0.9432\n",
      "Epoch 58/1000\n",
      " - 1s - loss: 0.1340 - acc: 0.9467 - auc_roc: 0.9439\n",
      "Epoch 59/1000\n",
      " - 1s - loss: 0.1313 - acc: 0.9473 - auc_roc: 0.9446\n",
      "Epoch 60/1000\n",
      " - 1s - loss: 0.1300 - acc: 0.9475 - auc_roc: 0.9452\n",
      "Epoch 61/1000\n",
      " - 1s - loss: 0.1277 - acc: 0.9489 - auc_roc: 0.9459\n",
      "Epoch 62/1000\n",
      " - 1s - loss: 0.1255 - acc: 0.9496 - auc_roc: 0.9466\n",
      "Epoch 63/1000\n",
      " - 1s - loss: 0.1238 - acc: 0.9503 - auc_roc: 0.9472\n",
      "Epoch 64/1000\n",
      " - 1s - loss: 0.1220 - acc: 0.9504 - auc_roc: 0.9478\n",
      "Epoch 65/1000\n",
      " - 1s - loss: 0.1202 - acc: 0.9504 - auc_roc: 0.9485\n",
      "Epoch 66/1000\n",
      " - 1s - loss: 0.1181 - acc: 0.9522 - auc_roc: 0.9491\n",
      "Epoch 67/1000\n",
      " - 1s - loss: 0.1164 - acc: 0.9519 - auc_roc: 0.9497\n",
      "Epoch 68/1000\n",
      " - 1s - loss: 0.1148 - acc: 0.9531 - auc_roc: 0.9503\n",
      "Epoch 69/1000\n",
      " - 1s - loss: 0.1126 - acc: 0.9532 - auc_roc: 0.9509\n",
      "Epoch 70/1000\n",
      " - 1s - loss: 0.1112 - acc: 0.9535 - auc_roc: 0.9514\n",
      "Epoch 71/1000\n",
      " - 1s - loss: 0.1091 - acc: 0.9553 - auc_roc: 0.9520\n",
      "Epoch 72/1000\n",
      " - 1s - loss: 0.1072 - acc: 0.9557 - auc_roc: 0.9526\n",
      "Epoch 73/1000\n",
      " - 1s - loss: 0.1051 - acc: 0.9571 - auc_roc: 0.9532\n",
      "Epoch 74/1000\n",
      " - 1s - loss: 0.1037 - acc: 0.9581 - auc_roc: 0.9537\n",
      "Epoch 75/1000\n",
      " - 1s - loss: 0.1021 - acc: 0.9590 - auc_roc: 0.9543\n",
      "Epoch 76/1000\n",
      " - 1s - loss: 0.1006 - acc: 0.9601 - auc_roc: 0.9548\n",
      "Epoch 77/1000\n",
      " - 1s - loss: 0.0992 - acc: 0.9599 - auc_roc: 0.9553\n",
      "Epoch 78/1000\n",
      " - 1s - loss: 0.0982 - acc: 0.9613 - auc_roc: 0.9558\n",
      "Epoch 79/1000\n",
      " - 1s - loss: 0.0961 - acc: 0.9616 - auc_roc: 0.9564\n",
      "Epoch 80/1000\n",
      " - 1s - loss: 0.0946 - acc: 0.9629 - auc_roc: 0.9569\n",
      "Epoch 81/1000\n",
      " - 1s - loss: 0.0933 - acc: 0.9638 - auc_roc: 0.9574\n",
      "Epoch 82/1000\n",
      " - 1s - loss: 0.0924 - acc: 0.9629 - auc_roc: 0.9578\n",
      "Epoch 83/1000\n",
      " - 1s - loss: 0.0904 - acc: 0.9641 - auc_roc: 0.9583\n",
      "Epoch 84/1000\n",
      " - 1s - loss: 0.0888 - acc: 0.9657 - auc_roc: 0.9588\n",
      "Epoch 85/1000\n",
      " - 1s - loss: 0.0878 - acc: 0.9655 - auc_roc: 0.9593\n",
      "Epoch 86/1000\n",
      " - 1s - loss: 0.0860 - acc: 0.9659 - auc_roc: 0.9597\n",
      "Epoch 87/1000\n",
      " - 1s - loss: 0.0878 - acc: 0.9662 - auc_roc: 0.9602\n",
      "Epoch 88/1000\n",
      " - 1s - loss: 0.0878 - acc: 0.9661 - auc_roc: 0.9606\n",
      "Epoch 89/1000\n",
      " - 1s - loss: 0.0867 - acc: 0.9668 - auc_roc: 0.9611\n",
      "Epoch 90/1000\n",
      " - 1s - loss: 0.0826 - acc: 0.9680 - auc_roc: 0.9615\n",
      "Epoch 91/1000\n",
      " - 1s - loss: 0.0817 - acc: 0.9685 - auc_roc: 0.9619\n",
      "Epoch 92/1000\n",
      " - 1s - loss: 0.0803 - acc: 0.9690 - auc_roc: 0.9623\n",
      "Epoch 93/1000\n",
      " - 1s - loss: 0.0783 - acc: 0.9694 - auc_roc: 0.9628\n",
      "Epoch 94/1000\n",
      " - 1s - loss: 0.0772 - acc: 0.9702 - auc_roc: 0.9632\n",
      "Epoch 95/1000\n",
      " - 1s - loss: 0.0765 - acc: 0.9704 - auc_roc: 0.9636\n",
      "Epoch 96/1000\n",
      " - 1s - loss: 0.0755 - acc: 0.9717 - auc_roc: 0.9640\n",
      "Epoch 97/1000\n",
      " - 1s - loss: 0.0741 - acc: 0.9717 - auc_roc: 0.9644\n",
      "Epoch 98/1000\n",
      " - 1s - loss: 0.0727 - acc: 0.9719 - auc_roc: 0.9648\n",
      "Epoch 99/1000\n",
      " - 1s - loss: 0.0722 - acc: 0.9722 - auc_roc: 0.9651\n",
      "Epoch 100/1000\n",
      " - 1s - loss: 0.0707 - acc: 0.9717 - auc_roc: 0.9655\n",
      "Epoch 101/1000\n",
      " - 1s - loss: 0.0740 - acc: 0.9719 - auc_roc: 0.9659\n",
      "Epoch 102/1000\n",
      " - 1s - loss: 0.0734 - acc: 0.9717 - auc_roc: 0.9662\n",
      "Epoch 103/1000\n",
      " - 1s - loss: 0.0689 - acc: 0.9731 - auc_roc: 0.9666\n",
      "Epoch 104/1000\n",
      " - 1s - loss: 0.0675 - acc: 0.9729 - auc_roc: 0.9670\n",
      "Epoch 105/1000\n",
      " - 1s - loss: 0.0672 - acc: 0.9732 - auc_roc: 0.9673\n",
      "Epoch 106/1000\n",
      " - 1s - loss: 0.0654 - acc: 0.9739 - auc_roc: 0.9677\n",
      "Epoch 107/1000\n",
      " - 1s - loss: 0.0650 - acc: 0.9749 - auc_roc: 0.9680\n",
      "Epoch 108/1000\n",
      " - 1s - loss: 0.0646 - acc: 0.9742 - auc_roc: 0.9683\n",
      "Epoch 109/1000\n",
      " - 1s - loss: 0.0639 - acc: 0.9752 - auc_roc: 0.9687\n",
      "Epoch 110/1000\n",
      " - 1s - loss: 0.0630 - acc: 0.9758 - auc_roc: 0.9690\n",
      "Epoch 111/1000\n",
      " - 1s - loss: 0.0623 - acc: 0.9762 - auc_roc: 0.9693\n",
      "Epoch 112/1000\n",
      " - 1s - loss: 0.0623 - acc: 0.9760 - auc_roc: 0.9696\n",
      "Epoch 113/1000\n",
      " - 1s - loss: 0.0612 - acc: 0.9756 - auc_roc: 0.9699\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 114/1000\n",
      " - 1s - loss: 0.0615 - acc: 0.9764 - auc_roc: 0.9702\n",
      "Epoch 115/1000\n",
      " - 1s - loss: 0.0619 - acc: 0.9743 - auc_roc: 0.9705\n",
      "Epoch 116/1000\n",
      " - 1s - loss: 0.0621 - acc: 0.9758 - auc_roc: 0.9708\n",
      "Epoch 117/1000\n",
      " - 1s - loss: 0.0738 - acc: 0.9701 - auc_roc: 0.9711\n",
      "Epoch 118/1000\n",
      " - 1s - loss: 0.0696 - acc: 0.9723 - auc_roc: 0.9713\n",
      "Epoch 119/1000\n",
      " - 1s - loss: 0.0749 - acc: 0.9695 - auc_roc: 0.9716\n",
      "Epoch 120/1000\n",
      " - 1s - loss: 0.0705 - acc: 0.9720 - auc_roc: 0.9718\n",
      "Epoch 121/1000\n",
      " - 1s - loss: 0.0763 - acc: 0.9697 - auc_roc: 0.9721\n",
      "Epoch 122/1000\n",
      " - 1s - loss: 0.0789 - acc: 0.9676 - auc_roc: 0.9723\n",
      "Epoch 123/1000\n",
      " - 1s - loss: 0.0830 - acc: 0.9645 - auc_roc: 0.9725\n",
      "Epoch 124/1000\n",
      " - 1s - loss: 0.0840 - acc: 0.9652 - auc_roc: 0.9726\n",
      "Epoch 125/1000\n",
      " - 1s - loss: 0.1005 - acc: 0.9564 - auc_roc: 0.9728\n",
      "Epoch 126/1000\n",
      " - 1s - loss: 0.0964 - acc: 0.9578 - auc_roc: 0.9729\n",
      "Epoch 127/1000\n",
      " - 1s - loss: 0.0813 - acc: 0.9646 - auc_roc: 0.9731\n",
      "Epoch 128/1000\n",
      " - 1s - loss: 0.0722 - acc: 0.9711 - auc_roc: 0.9733\n",
      "Epoch 129/1000\n",
      " - 1s - loss: 0.0655 - acc: 0.9733 - auc_roc: 0.9735\n",
      "Epoch 130/1000\n",
      " - 1s - loss: 0.0608 - acc: 0.9761 - auc_roc: 0.9737\n",
      "Epoch 131/1000\n",
      " - 1s - loss: 0.0574 - acc: 0.9769 - auc_roc: 0.9740\n",
      "Epoch 132/1000\n",
      " - 1s - loss: 0.0547 - acc: 0.9784 - auc_roc: 0.9742\n",
      "Epoch 133/1000\n",
      " - 1s - loss: 0.0541 - acc: 0.9785 - auc_roc: 0.9744\n",
      "Epoch 134/1000\n",
      " - 1s - loss: 0.0537 - acc: 0.9784 - auc_roc: 0.9747\n",
      "Epoch 135/1000\n",
      " - 1s - loss: 0.0527 - acc: 0.9797 - auc_roc: 0.9749\n",
      "Epoch 136/1000\n",
      " - 1s - loss: 0.0514 - acc: 0.9792 - auc_roc: 0.9751\n",
      "Epoch 137/1000\n",
      " - 1s - loss: 0.0510 - acc: 0.9812 - auc_roc: 0.9753\n",
      "Epoch 138/1000\n",
      " - 1s - loss: 0.0502 - acc: 0.9810 - auc_roc: 0.9756\n",
      "Epoch 139/1000\n",
      " - 1s - loss: 0.0492 - acc: 0.9801 - auc_roc: 0.9758\n",
      "Epoch 140/1000\n",
      " - 1s - loss: 0.0482 - acc: 0.9817 - auc_roc: 0.9760\n",
      "Epoch 141/1000\n",
      " - 1s - loss: 0.0466 - acc: 0.9822 - auc_roc: 0.9762\n",
      "Epoch 142/1000\n",
      " - 1s - loss: 0.0462 - acc: 0.9818 - auc_roc: 0.9764\n",
      "Epoch 143/1000\n",
      " - 1s - loss: 0.0656 - acc: 0.9756 - auc_roc: 0.9766\n",
      "Epoch 144/1000\n",
      " - 1s - loss: 0.0768 - acc: 0.9683 - auc_roc: 0.9768\n",
      "Epoch 145/1000\n",
      " - 1s - loss: 0.0560 - acc: 0.9770 - auc_roc: 0.9769\n",
      "Epoch 146/1000\n",
      " - 1s - loss: 0.0509 - acc: 0.9793 - auc_roc: 0.9771\n",
      "Epoch 147/1000\n",
      " - 1s - loss: 0.0476 - acc: 0.9814 - auc_roc: 0.9773\n",
      "Epoch 148/1000\n",
      " - 1s - loss: 0.0452 - acc: 0.9822 - auc_roc: 0.9775\n",
      "Epoch 149/1000\n",
      " - 1s - loss: 0.0438 - acc: 0.9825 - auc_roc: 0.9777\n",
      "Epoch 150/1000\n",
      " - 1s - loss: 0.0429 - acc: 0.9831 - auc_roc: 0.9779\n",
      "Epoch 151/1000\n",
      " - 1s - loss: 0.0418 - acc: 0.9843 - auc_roc: 0.9781\n",
      "Epoch 152/1000\n",
      " - 1s - loss: 0.0406 - acc: 0.9844 - auc_roc: 0.9783\n",
      "Epoch 153/1000\n",
      " - 1s - loss: 0.0405 - acc: 0.9854 - auc_roc: 0.9785\n",
      "Epoch 154/1000\n",
      " - 1s - loss: 0.0391 - acc: 0.9862 - auc_roc: 0.9787\n",
      "Epoch 155/1000\n",
      " - 1s - loss: 0.0393 - acc: 0.9858 - auc_roc: 0.9788\n",
      "Epoch 156/1000\n",
      " - 1s - loss: 0.0380 - acc: 0.9861 - auc_roc: 0.9790\n",
      "Epoch 157/1000\n",
      " - 1s - loss: 0.0377 - acc: 0.9862 - auc_roc: 0.9792\n",
      "Epoch 158/1000\n",
      " - 1s - loss: 0.0610 - acc: 0.9776 - auc_roc: 0.9794\n",
      "Epoch 159/1000\n",
      " - 1s - loss: 0.0833 - acc: 0.9693 - auc_roc: 0.9795\n",
      "Epoch 160/1000\n",
      " - 1s - loss: 0.0467 - acc: 0.9816 - auc_roc: 0.9796\n",
      "Epoch 161/1000\n",
      " - 1s - loss: 0.0413 - acc: 0.9844 - auc_roc: 0.9798\n",
      "Epoch 162/1000\n",
      " - 1s - loss: 0.0495 - acc: 0.9816 - auc_roc: 0.9799\n",
      "Epoch 163/1000\n",
      " - 1s - loss: 0.0422 - acc: 0.9838 - auc_roc: 0.9801\n",
      "Epoch 164/1000\n",
      " - 1s - loss: 0.0389 - acc: 0.9851 - auc_roc: 0.9802\n",
      "Epoch 165/1000\n",
      " - 1s - loss: 0.0371 - acc: 0.9860 - auc_roc: 0.9804\n",
      "Epoch 166/1000\n",
      " - 1s - loss: 0.0365 - acc: 0.9862 - auc_roc: 0.9806\n",
      "Epoch 167/1000\n",
      " - 1s - loss: 0.0358 - acc: 0.9864 - auc_roc: 0.9807\n",
      "Epoch 168/1000\n",
      " - 1s - loss: 0.0353 - acc: 0.9870 - auc_roc: 0.9809\n",
      "Epoch 169/1000\n",
      " - 1s - loss: 0.0338 - acc: 0.9866 - auc_roc: 0.9810\n",
      "Epoch 170/1000\n",
      " - 1s - loss: 0.0337 - acc: 0.9880 - auc_roc: 0.9812\n",
      "Epoch 171/1000\n",
      " - 1s - loss: 0.0331 - acc: 0.9871 - auc_roc: 0.9813\n",
      "Epoch 172/1000\n",
      " - 1s - loss: 0.0429 - acc: 0.9833 - auc_roc: 0.9815\n",
      "Epoch 173/1000\n",
      " - 1s - loss: 0.0804 - acc: 0.9703 - auc_roc: 0.9816\n",
      "Epoch 174/1000\n",
      " - 1s - loss: 0.0408 - acc: 0.9842 - auc_roc: 0.9817\n",
      "Epoch 175/1000\n",
      " - 1s - loss: 0.0351 - acc: 0.9870 - auc_roc: 0.9818\n",
      "Epoch 176/1000\n",
      " - 1s - loss: 0.0335 - acc: 0.9864 - auc_roc: 0.9820\n",
      "Epoch 177/1000\n",
      " - 1s - loss: 0.0326 - acc: 0.9880 - auc_roc: 0.9821\n",
      "Epoch 178/1000\n",
      " - 1s - loss: 0.0315 - acc: 0.9888 - auc_roc: 0.9823\n",
      "Epoch 179/1000\n",
      " - 1s - loss: 0.0312 - acc: 0.9881 - auc_roc: 0.9824\n",
      "Epoch 180/1000\n",
      " - 1s - loss: 0.0298 - acc: 0.9903 - auc_roc: 0.9825\n",
      "Epoch 181/1000\n",
      " - 1s - loss: 0.0296 - acc: 0.9895 - auc_roc: 0.9827\n",
      "Epoch 182/1000\n",
      " - 1s - loss: 0.0296 - acc: 0.9895 - auc_roc: 0.9828\n",
      "Epoch 183/1000\n",
      " - 1s - loss: 0.0527 - acc: 0.9816 - auc_roc: 0.9829\n",
      "Epoch 184/1000\n",
      " - 1s - loss: 0.0708 - acc: 0.9732 - auc_roc: 0.9830\n",
      "Epoch 185/1000\n",
      " - 1s - loss: 0.0386 - acc: 0.9854 - auc_roc: 0.9831\n",
      "Epoch 186/1000\n",
      " - 1s - loss: 0.0324 - acc: 0.9880 - auc_roc: 0.9832\n",
      "Epoch 187/1000\n",
      " - 1s - loss: 0.0298 - acc: 0.9898 - auc_roc: 0.9834\n",
      "Epoch 188/1000\n",
      " - 1s - loss: 0.0288 - acc: 0.9897 - auc_roc: 0.9835\n",
      "Epoch 189/1000\n",
      " - 1s - loss: 0.0274 - acc: 0.9906 - auc_roc: 0.9836\n",
      "Epoch 190/1000\n",
      " - 1s - loss: 0.0273 - acc: 0.9899 - auc_roc: 0.9837\n",
      "Epoch 191/1000\n",
      " - 1s - loss: 0.0271 - acc: 0.9909 - auc_roc: 0.9839\n",
      "Epoch 192/1000\n",
      " - 1s - loss: 0.0274 - acc: 0.9905 - auc_roc: 0.9840\n",
      "Epoch 193/1000\n",
      " - 1s - loss: 0.0260 - acc: 0.9907 - auc_roc: 0.9841\n",
      "Epoch 194/1000\n",
      " - 1s - loss: 0.0426 - acc: 0.9846 - auc_roc: 0.9842\n",
      "Epoch 195/1000\n",
      " - 1s - loss: 0.0662 - acc: 0.9738 - auc_roc: 0.9843\n",
      "Epoch 196/1000\n",
      " - 1s - loss: 0.0373 - acc: 0.9864 - auc_roc: 0.9844\n",
      "Epoch 197/1000\n",
      " - 1s - loss: 0.0304 - acc: 0.9891 - auc_roc: 0.9845\n",
      "Epoch 198/1000\n",
      " - 1s - loss: 0.0270 - acc: 0.9904 - auc_roc: 0.9846\n",
      "Epoch 199/1000\n",
      " - 1s - loss: 0.0300 - acc: 0.9886 - auc_roc: 0.9847\n",
      "Epoch 200/1000\n",
      " - 1s - loss: 0.0263 - acc: 0.9905 - auc_roc: 0.9848\n",
      "Epoch 201/1000\n",
      " - 1s - loss: 0.0249 - acc: 0.9913 - auc_roc: 0.9849\n",
      "Epoch 202/1000\n",
      " - 1s - loss: 0.0244 - acc: 0.9918 - auc_roc: 0.9850\n",
      "Epoch 203/1000\n",
      " - 1s - loss: 0.0239 - acc: 0.9914 - auc_roc: 0.9851\n",
      "Epoch 204/1000\n",
      " - 1s - loss: 0.0238 - acc: 0.9923 - auc_roc: 0.9852\n",
      "Epoch 205/1000\n",
      " - 1s - loss: 0.0249 - acc: 0.9907 - auc_roc: 0.9854\n",
      "Epoch 206/1000\n",
      " - 1s - loss: 0.0238 - acc: 0.9913 - auc_roc: 0.9855\n",
      "Epoch 207/1000\n",
      " - 1s - loss: 0.0226 - acc: 0.9924 - auc_roc: 0.9856\n",
      "Epoch 208/1000\n",
      " - 1s - loss: 0.0227 - acc: 0.9925 - auc_roc: 0.9857\n",
      "Epoch 209/1000\n",
      " - 1s - loss: 0.0683 - acc: 0.9767 - auc_roc: 0.9858\n",
      "Epoch 210/1000\n",
      " - 1s - loss: 0.0527 - acc: 0.9794 - auc_roc: 0.9858\n",
      "Epoch 211/1000\n",
      " - 1s - loss: 0.0374 - acc: 0.9857 - auc_roc: 0.9859\n",
      "Epoch 212/1000\n",
      " - 1s - loss: 0.0486 - acc: 0.9810 - auc_roc: 0.9860\n",
      "Epoch 213/1000\n",
      " - 1s - loss: 0.0267 - acc: 0.9906 - auc_roc: 0.9860\n",
      "Epoch 214/1000\n",
      " - 1s - loss: 0.0254 - acc: 0.9906 - auc_roc: 0.9861\n",
      "Epoch 215/1000\n",
      " - 1s - loss: 0.0236 - acc: 0.9916 - auc_roc: 0.9862\n",
      "Epoch 216/1000\n",
      " - 1s - loss: 0.0219 - acc: 0.9929 - auc_roc: 0.9863\n",
      "Epoch 217/1000\n",
      " - 1s - loss: 0.0211 - acc: 0.9925 - auc_roc: 0.9864\n",
      "Epoch 218/1000\n",
      " - 1s - loss: 0.0202 - acc: 0.9935 - auc_roc: 0.9865\n",
      "Epoch 219/1000\n",
      " - 1s - loss: 0.0201 - acc: 0.9937 - auc_roc: 0.9866\n",
      "Epoch 220/1000\n",
      " - 1s - loss: 0.0213 - acc: 0.9924 - auc_roc: 0.9867\n",
      "Epoch 221/1000\n",
      " - 1s - loss: 0.0681 - acc: 0.9775 - auc_roc: 0.9868\n",
      "Epoch 222/1000\n",
      " - 1s - loss: 0.0570 - acc: 0.9775 - auc_roc: 0.9868\n",
      "Epoch 223/1000\n",
      " - 1s - loss: 0.0452 - acc: 0.9854 - auc_roc: 0.9869\n",
      "Epoch 224/1000\n",
      " - 1s - loss: 0.0342 - acc: 0.9882 - auc_roc: 0.9869\n",
      "Epoch 225/1000\n",
      " - 1s - loss: 0.0243 - acc: 0.9918 - auc_roc: 0.9870\n",
      "Epoch 226/1000\n",
      " - 1s - loss: 0.0223 - acc: 0.9919 - auc_roc: 0.9871\n",
      "Epoch 227/1000\n",
      " - 1s - loss: 0.0220 - acc: 0.9919 - auc_roc: 0.9872\n",
      "Epoch 228/1000\n",
      " - 1s - loss: 0.0202 - acc: 0.9934 - auc_roc: 0.9873\n",
      "Epoch 229/1000\n",
      " - 1s - loss: 0.0198 - acc: 0.9928 - auc_roc: 0.9874\n",
      "Epoch 230/1000\n",
      " - 1s - loss: 0.0194 - acc: 0.9934 - auc_roc: 0.9874\n",
      "Epoch 231/1000\n",
      " - 1s - loss: 0.0193 - acc: 0.9933 - auc_roc: 0.9875\n",
      "Epoch 232/1000\n",
      " - 1s - loss: 0.0190 - acc: 0.9932 - auc_roc: 0.9876\n",
      "Epoch 233/1000\n",
      " - 1s - loss: 0.0187 - acc: 0.9937 - auc_roc: 0.9877\n",
      "Epoch 234/1000\n",
      " - 1s - loss: 0.0201 - acc: 0.9934 - auc_roc: 0.9878\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 235/1000\n",
      " - 1s - loss: 0.0256 - acc: 0.9909 - auc_roc: 0.9879\n",
      "Epoch 236/1000\n",
      " - 1s - loss: 0.1130 - acc: 0.9624 - auc_roc: 0.9879\n",
      "Epoch 237/1000\n",
      " - 1s - loss: 0.0379 - acc: 0.9852 - auc_roc: 0.9879\n",
      "Epoch 238/1000\n",
      " - 1s - loss: 0.0243 - acc: 0.9918 - auc_roc: 0.9880\n",
      "Epoch 239/1000\n",
      " - 1s - loss: 0.0260 - acc: 0.9908 - auc_roc: 0.9880\n",
      "Epoch 240/1000\n",
      " - 1s - loss: 0.0219 - acc: 0.9927 - auc_roc: 0.9881\n",
      "Epoch 241/1000\n",
      " - 1s - loss: 0.0204 - acc: 0.9928 - auc_roc: 0.9882\n",
      "Epoch 242/1000\n",
      " - 1s - loss: 0.0215 - acc: 0.9922 - auc_roc: 0.9883\n",
      "Epoch 243/1000\n",
      " - 1s - loss: 0.0210 - acc: 0.9925 - auc_roc: 0.9883\n",
      "Epoch 244/1000\n",
      " - 1s - loss: 0.0189 - acc: 0.9933 - auc_roc: 0.9884\n",
      "Epoch 245/1000\n",
      " - 1s - loss: 0.0192 - acc: 0.9932 - auc_roc: 0.9885\n",
      "Epoch 246/1000\n",
      " - 1s - loss: 0.0176 - acc: 0.9938 - auc_roc: 0.9885\n",
      "Epoch 247/1000\n",
      " - 1s - loss: 0.0190 - acc: 0.9931 - auc_roc: 0.9886\n",
      "Epoch 248/1000\n",
      " - 1s - loss: 0.0210 - acc: 0.9927 - auc_roc: 0.9887\n",
      "Epoch 249/1000\n",
      " - 1s - loss: 0.0275 - acc: 0.9905 - auc_roc: 0.9887\n",
      "Epoch 250/1000\n",
      " - 1s - loss: 0.0740 - acc: 0.9721 - auc_roc: 0.9888\n",
      "Epoch 251/1000\n",
      " - 1s - loss: 0.0276 - acc: 0.9891 - auc_roc: 0.9888\n",
      "Epoch 252/1000\n",
      " - 1s - loss: 0.0216 - acc: 0.9927 - auc_roc: 0.9889\n",
      "Epoch 253/1000\n",
      " - 1s - loss: 0.0216 - acc: 0.9922 - auc_roc: 0.9890\n",
      "Epoch 254/1000\n",
      " - 1s - loss: 0.0204 - acc: 0.9932 - auc_roc: 0.9890\n",
      "Epoch 255/1000\n",
      " - 1s - loss: 0.0193 - acc: 0.9928 - auc_roc: 0.9891\n",
      "Epoch 256/1000\n",
      " - 1s - loss: 0.0193 - acc: 0.9932 - auc_roc: 0.9892\n",
      "Epoch 257/1000\n",
      " - 1s - loss: 0.0178 - acc: 0.9947 - auc_roc: 0.9892\n",
      "Epoch 258/1000\n",
      " - 1s - loss: 0.0184 - acc: 0.9935 - auc_roc: 0.9893\n",
      "Epoch 259/1000\n",
      " - 1s - loss: 0.0183 - acc: 0.9934 - auc_roc: 0.9893\n",
      "Epoch 260/1000\n",
      " - 1s - loss: 0.0179 - acc: 0.9935 - auc_roc: 0.9894\n",
      "Epoch 261/1000\n",
      " - 1s - loss: 0.0180 - acc: 0.9939 - auc_roc: 0.9895\n",
      "Epoch 262/1000\n",
      " - 1s - loss: 0.0851 - acc: 0.9681 - auc_roc: 0.9895\n",
      "Epoch 263/1000\n",
      " - 1s - loss: 0.0315 - acc: 0.9879 - auc_roc: 0.9895\n",
      "Epoch 264/1000\n",
      " - 1s - loss: 0.0198 - acc: 0.9938 - auc_roc: 0.9896\n",
      "Epoch 265/1000\n",
      " - 1s - loss: 0.0182 - acc: 0.9943 - auc_roc: 0.9896\n",
      "Epoch 266/1000\n",
      " - 1s - loss: 0.0183 - acc: 0.9938 - auc_roc: 0.9897\n",
      "Epoch 267/1000\n",
      " - 1s - loss: 0.0184 - acc: 0.9934 - auc_roc: 0.9898\n",
      "Epoch 268/1000\n",
      " - 1s - loss: 0.0166 - acc: 0.9943 - auc_roc: 0.9898\n",
      "Epoch 269/1000\n",
      " - 1s - loss: 0.0164 - acc: 0.9946 - auc_roc: 0.9899\n",
      "Epoch 270/1000\n",
      " - 1s - loss: 0.0164 - acc: 0.9945 - auc_roc: 0.9899\n",
      "Epoch 271/1000\n",
      " - 1s - loss: 0.0322 - acc: 0.9889 - auc_roc: 0.9900\n",
      "Epoch 272/1000\n",
      " - 1s - loss: 0.0470 - acc: 0.9826 - auc_roc: 0.9900\n",
      "Epoch 273/1000\n",
      " - 1s - loss: 0.0295 - acc: 0.9894 - auc_roc: 0.9901\n",
      "Epoch 274/1000\n",
      " - 1s - loss: 0.0184 - acc: 0.9929 - auc_roc: 0.9901\n",
      "Epoch 275/1000\n",
      " - 1s - loss: 0.0171 - acc: 0.9941 - auc_roc: 0.9902\n",
      "Epoch 276/1000\n",
      " - 1s - loss: 0.0178 - acc: 0.9931 - auc_roc: 0.9902\n",
      "Epoch 277/1000\n",
      " - 1s - loss: 0.0209 - acc: 0.9916 - auc_roc: 0.9903\n",
      "Epoch 278/1000\n",
      " - 1s - loss: 0.0382 - acc: 0.9851 - auc_roc: 0.9903\n",
      "Epoch 279/1000\n",
      " - 1s - loss: 0.0339 - acc: 0.9882 - auc_roc: 0.9904\n",
      "Epoch 280/1000\n",
      " - 1s - loss: 0.0190 - acc: 0.9935 - auc_roc: 0.9904\n",
      "Epoch 281/1000\n",
      " - 1s - loss: 0.0147 - acc: 0.9957 - auc_roc: 0.9905\n",
      "Epoch 282/1000\n",
      " - 1s - loss: 0.0146 - acc: 0.9956 - auc_roc: 0.9905\n",
      "Epoch 283/1000\n",
      " - 1s - loss: 0.0139 - acc: 0.9956 - auc_roc: 0.9906\n",
      "Epoch 284/1000\n",
      " - 1s - loss: 0.0176 - acc: 0.9941 - auc_roc: 0.9906\n",
      "Epoch 285/1000\n",
      " - 1s - loss: 0.0198 - acc: 0.9937 - auc_roc: 0.9907\n",
      "Epoch 286/1000\n",
      " - 1s - loss: 0.0163 - acc: 0.9948 - auc_roc: 0.9907\n",
      "Epoch 287/1000\n",
      " - 1s - loss: 0.0133 - acc: 0.9961 - auc_roc: 0.9908\n",
      "Epoch 288/1000\n",
      " - 1s - loss: 0.0146 - acc: 0.9956 - auc_roc: 0.9908\n",
      "Epoch 289/1000\n",
      " - 1s - loss: 0.0137 - acc: 0.9956 - auc_roc: 0.9909\n",
      "Epoch 290/1000\n",
      " - 1s - loss: 0.0584 - acc: 0.9826 - auc_roc: 0.9909\n",
      "Epoch 291/1000\n",
      " - 1s - loss: 0.0492 - acc: 0.9827 - auc_roc: 0.9909\n",
      "Epoch 292/1000\n",
      " - 1s - loss: 0.0221 - acc: 0.9915 - auc_roc: 0.9910\n",
      "Epoch 293/1000\n",
      " - 1s - loss: 0.0249 - acc: 0.9909 - auc_roc: 0.9910\n",
      "Epoch 294/1000\n",
      " - 1s - loss: 0.0192 - acc: 0.9928 - auc_roc: 0.9911\n",
      "Epoch 295/1000\n",
      " - 1s - loss: 0.0213 - acc: 0.9925 - auc_roc: 0.9911\n",
      "Epoch 296/1000\n",
      " - 1s - loss: 0.0134 - acc: 0.9964 - auc_roc: 0.9911\n",
      "Epoch 297/1000\n",
      " - 1s - loss: 0.0132 - acc: 0.9962 - auc_roc: 0.9912\n",
      "Epoch 298/1000\n",
      " - 1s - loss: 0.0124 - acc: 0.9961 - auc_roc: 0.9912\n",
      "Epoch 299/1000\n",
      " - 1s - loss: 0.0122 - acc: 0.9959 - auc_roc: 0.9913\n",
      "Epoch 300/1000\n",
      " - 1s - loss: 0.0176 - acc: 0.9934 - auc_roc: 0.9913\n",
      "Epoch 301/1000\n",
      " - 1s - loss: 0.0239 - acc: 0.9918 - auc_roc: 0.9914\n",
      "Epoch 302/1000\n",
      " - 1s - loss: 0.0122 - acc: 0.9968 - auc_roc: 0.9914\n",
      "Epoch 303/1000\n",
      " - 1s - loss: 0.0125 - acc: 0.9960 - auc_roc: 0.9915\n",
      "Epoch 304/1000\n",
      " - 1s - loss: 0.0129 - acc: 0.9956 - auc_roc: 0.9915\n",
      "Epoch 305/1000\n",
      " - 1s - loss: 0.0158 - acc: 0.9954 - auc_roc: 0.9916\n",
      "Epoch 306/1000\n",
      " - 1s - loss: 0.0567 - acc: 0.9798 - auc_roc: 0.9916\n",
      "Epoch 307/1000\n",
      " - 1s - loss: 0.0344 - acc: 0.9872 - auc_roc: 0.9916\n",
      "Epoch 308/1000\n",
      " - 1s - loss: 0.0191 - acc: 0.9932 - auc_roc: 0.9916\n",
      "Epoch 309/1000\n",
      " - 1s - loss: 0.0185 - acc: 0.9945 - auc_roc: 0.9917\n",
      "Epoch 310/1000\n",
      " - 1s - loss: 0.0127 - acc: 0.9959 - auc_roc: 0.9917\n",
      "Epoch 311/1000\n",
      " - 1s - loss: 0.0136 - acc: 0.9959 - auc_roc: 0.9918\n",
      "Epoch 312/1000\n",
      " - 1s - loss: 0.0126 - acc: 0.9966 - auc_roc: 0.9918\n",
      "Epoch 313/1000\n",
      " - 1s - loss: 0.0112 - acc: 0.9964 - auc_roc: 0.9918\n",
      "Epoch 314/1000\n",
      " - 1s - loss: 0.0097 - acc: 0.9969 - auc_roc: 0.9919\n",
      "Epoch 315/1000\n",
      " - 1s - loss: 0.0105 - acc: 0.9969 - auc_roc: 0.9919\n",
      "Epoch 316/1000\n",
      " - 1s - loss: 0.0093 - acc: 0.9978 - auc_roc: 0.9920\n",
      "Epoch 317/1000\n",
      " - 1s - loss: 0.0098 - acc: 0.9973 - auc_roc: 0.9920\n",
      "Epoch 318/1000\n",
      " - 1s - loss: 0.0092 - acc: 0.9976 - auc_roc: 0.9921\n",
      "Epoch 319/1000\n",
      " - 1s - loss: 0.0454 - acc: 0.9848 - auc_roc: 0.9921\n",
      "Epoch 320/1000\n",
      " - 1s - loss: 0.0967 - acc: 0.9684 - auc_roc: 0.9921\n",
      "Epoch 321/1000\n",
      " - 1s - loss: 0.0179 - acc: 0.9944 - auc_roc: 0.9921\n",
      "Epoch 322/1000\n",
      " - 1s - loss: 0.0179 - acc: 0.9941 - auc_roc: 0.9921\n",
      "Epoch 323/1000\n",
      " - 1s - loss: 0.0135 - acc: 0.9960 - auc_roc: 0.9922\n",
      "Epoch 324/1000\n",
      " - 1s - loss: 0.0108 - acc: 0.9969 - auc_roc: 0.9922\n",
      "Epoch 325/1000\n",
      " - 1s - loss: 0.0093 - acc: 0.9978 - auc_roc: 0.9923\n",
      "Epoch 326/1000\n",
      " - 1s - loss: 0.0088 - acc: 0.9979 - auc_roc: 0.9923\n",
      "Epoch 327/1000\n",
      " - 1s - loss: 0.0092 - acc: 0.9975 - auc_roc: 0.9923\n",
      "Epoch 328/1000\n",
      " - 1s - loss: 0.0079 - acc: 0.9982 - auc_roc: 0.9924\n",
      "Epoch 329/1000\n",
      " - 1s - loss: 0.0075 - acc: 0.9982 - auc_roc: 0.9924\n",
      "Epoch 330/1000\n",
      " - 1s - loss: 0.0078 - acc: 0.9979 - auc_roc: 0.9925\n",
      "Epoch 331/1000\n",
      " - 1s - loss: 0.0100 - acc: 0.9965 - auc_roc: 0.9925\n",
      "Epoch 332/1000\n",
      " - 1s - loss: 0.0172 - acc: 0.9935 - auc_roc: 0.9925\n",
      "Epoch 333/1000\n",
      " - 1s - loss: 0.0934 - acc: 0.9704 - auc_roc: 0.9925\n",
      "Epoch 334/1000\n",
      " - 1s - loss: 0.0199 - acc: 0.9929 - auc_roc: 0.9925\n",
      "Epoch 335/1000\n",
      " - 1s - loss: 0.0125 - acc: 0.9966 - auc_roc: 0.9926\n",
      "Epoch 336/1000\n",
      " - 1s - loss: 0.0100 - acc: 0.9968 - auc_roc: 0.9926\n",
      "Epoch 337/1000\n",
      " - 1s - loss: 0.0083 - acc: 0.9979 - auc_roc: 0.9926\n",
      "Epoch 338/1000\n",
      " - 1s - loss: 0.0076 - acc: 0.9981 - auc_roc: 0.9927\n",
      "Epoch 339/1000\n",
      " - 1s - loss: 0.0074 - acc: 0.9982 - auc_roc: 0.9927\n",
      "Epoch 340/1000\n",
      " - 1s - loss: 0.0071 - acc: 0.9984 - auc_roc: 0.9928\n",
      "Epoch 341/1000\n",
      " - 1s - loss: 0.0072 - acc: 0.9983 - auc_roc: 0.9928\n",
      "Epoch 342/1000\n",
      " - 1s - loss: 0.0068 - acc: 0.9984 - auc_roc: 0.9928\n",
      "Epoch 343/1000\n",
      " - 1s - loss: 0.0063 - acc: 0.9985 - auc_roc: 0.9929\n",
      "Epoch 344/1000\n",
      " - 1s - loss: 0.0095 - acc: 0.9971 - auc_roc: 0.9929\n",
      "Epoch 345/1000\n",
      " - 1s - loss: 0.0861 - acc: 0.9754 - auc_roc: 0.9929\n",
      "Epoch 346/1000\n",
      " - 1s - loss: 0.0391 - acc: 0.9864 - auc_roc: 0.9929\n",
      "Epoch 347/1000\n",
      " - 1s - loss: 0.0166 - acc: 0.9952 - auc_roc: 0.9929\n",
      "Epoch 348/1000\n",
      " - 1s - loss: 0.0126 - acc: 0.9962 - auc_roc: 0.9930\n",
      "Epoch 349/1000\n",
      " - 1s - loss: 0.0088 - acc: 0.9974 - auc_roc: 0.9930\n",
      "Epoch 350/1000\n",
      " - 1s - loss: 0.0075 - acc: 0.9982 - auc_roc: 0.9930\n",
      "Epoch 351/1000\n",
      " - 1s - loss: 0.0067 - acc: 0.9987 - auc_roc: 0.9931\n",
      "Epoch 352/1000\n",
      " - 1s - loss: 0.0066 - acc: 0.9982 - auc_roc: 0.9931\n",
      "Epoch 353/1000\n",
      " - 1s - loss: 0.0057 - acc: 0.9987 - auc_roc: 0.9931\n",
      "Epoch 354/1000\n",
      " - 1s - loss: 0.0064 - acc: 0.9985 - auc_roc: 0.9932\n",
      "Epoch 355/1000\n",
      " - 1s - loss: 0.0091 - acc: 0.9973 - auc_roc: 0.9932\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 356/1000\n",
      " - 1s - loss: 0.0650 - acc: 0.9774 - auc_roc: 0.9932\n",
      "Epoch 357/1000\n",
      " - 1s - loss: 0.0280 - acc: 0.9898 - auc_roc: 0.9932\n",
      "Epoch 358/1000\n",
      " - 1s - loss: 0.0137 - acc: 0.9955 - auc_roc: 0.9933\n",
      "Epoch 359/1000\n",
      " - 1s - loss: 0.0095 - acc: 0.9974 - auc_roc: 0.9933\n",
      "Epoch 360/1000\n",
      " - 1s - loss: 0.0066 - acc: 0.9987 - auc_roc: 0.9933\n",
      "Epoch 361/1000\n",
      " - 1s - loss: 0.0060 - acc: 0.9988 - auc_roc: 0.9934\n",
      "Epoch 362/1000\n",
      " - 1s - loss: 0.0053 - acc: 0.9993 - auc_roc: 0.9934\n",
      "Epoch 363/1000\n",
      " - 1s - loss: 0.0055 - acc: 0.9990 - auc_roc: 0.9934\n",
      "Epoch 364/1000\n",
      " - 1s - loss: 0.0052 - acc: 0.9987 - auc_roc: 0.9934\n",
      "Epoch 365/1000\n",
      " - 1s - loss: 0.0052 - acc: 0.9989 - auc_roc: 0.9935\n",
      "Epoch 366/1000\n",
      " - 1s - loss: 0.0472 - acc: 0.9872 - auc_roc: 0.9935\n",
      "Epoch 367/1000\n",
      " - 1s - loss: 0.0422 - acc: 0.9835 - auc_roc: 0.9935\n",
      "Epoch 368/1000\n",
      " - 1s - loss: 0.0180 - acc: 0.9933 - auc_roc: 0.9935\n",
      "Epoch 369/1000\n",
      " - 1s - loss: 0.0075 - acc: 0.9988 - auc_roc: 0.9936\n",
      "Epoch 370/1000\n",
      " - 1s - loss: 0.0061 - acc: 0.9990 - auc_roc: 0.9936\n",
      "Epoch 371/1000\n",
      " - 1s - loss: 0.0059 - acc: 0.9988 - auc_roc: 0.9936\n",
      "Epoch 372/1000\n",
      " - 1s - loss: 0.0051 - acc: 0.9989 - auc_roc: 0.9936\n",
      "Epoch 373/1000\n",
      " - 1s - loss: 0.0051 - acc: 0.9993 - auc_roc: 0.9937\n",
      "Epoch 374/1000\n",
      " - 1s - loss: 0.0047 - acc: 0.9993 - auc_roc: 0.9937\n",
      "Epoch 375/1000\n",
      " - 1s - loss: 0.0501 - acc: 0.9872 - auc_roc: 0.9937\n",
      "Epoch 376/1000\n",
      " - 1s - loss: 0.0452 - acc: 0.9832 - auc_roc: 0.9937\n",
      "Epoch 377/1000\n",
      " - 1s - loss: 0.0214 - acc: 0.9931 - auc_roc: 0.9937\n",
      "Epoch 378/1000\n",
      " - 1s - loss: 0.0192 - acc: 0.9937 - auc_roc: 0.9938\n",
      "Epoch 379/1000\n",
      " - 1s - loss: 0.0082 - acc: 0.9982 - auc_roc: 0.9938\n",
      "Epoch 380/1000\n",
      " - 1s - loss: 0.0064 - acc: 0.9983 - auc_roc: 0.9938\n",
      "Epoch 381/1000\n",
      " - 1s - loss: 0.0056 - acc: 0.9990 - auc_roc: 0.9938\n",
      "Epoch 382/1000\n",
      " - 1s - loss: 0.0048 - acc: 0.9992 - auc_roc: 0.9939\n",
      "Epoch 383/1000\n",
      " - 1s - loss: 0.0047 - acc: 0.9990 - auc_roc: 0.9939\n",
      "Epoch 384/1000\n",
      " - 1s - loss: 0.0045 - acc: 0.9994 - auc_roc: 0.9939\n",
      "Epoch 385/1000\n",
      " - 1s - loss: 0.0044 - acc: 0.9992 - auc_roc: 0.9940\n",
      "Epoch 386/1000\n",
      " - 1s - loss: 0.0051 - acc: 0.9987 - auc_roc: 0.9940\n",
      "Epoch 387/1000\n",
      " - 1s - loss: 0.0753 - acc: 0.9822 - auc_roc: 0.9940\n",
      "Epoch 388/1000\n",
      " - 1s - loss: 0.0523 - acc: 0.9812 - auc_roc: 0.9940\n",
      "Epoch 389/1000\n",
      " - 1s - loss: 0.0191 - acc: 0.9937 - auc_roc: 0.9940\n",
      "Epoch 390/1000\n",
      " - 1s - loss: 0.0090 - acc: 0.9982 - auc_roc: 0.9940\n",
      "Epoch 391/1000\n",
      " - 1s - loss: 0.0059 - acc: 0.9991 - auc_roc: 0.9941\n",
      "Epoch 392/1000\n",
      " - 1s - loss: 0.0052 - acc: 0.9991 - auc_roc: 0.9941\n",
      "Epoch 393/1000\n",
      " - 1s - loss: 0.0049 - acc: 0.9993 - auc_roc: 0.9941\n",
      "Epoch 394/1000\n",
      " - 1s - loss: 0.0044 - acc: 0.9993 - auc_roc: 0.9941\n",
      "Epoch 395/1000\n",
      " - 1s - loss: 0.0043 - acc: 0.9994 - auc_roc: 0.9942\n",
      "Epoch 396/1000\n",
      " - 1s - loss: 0.0043 - acc: 0.9997 - auc_roc: 0.9942\n",
      "Epoch 397/1000\n",
      " - 1s - loss: 0.0046 - acc: 0.9989 - auc_roc: 0.9942\n",
      "Epoch 398/1000\n",
      " - 1s - loss: 0.0060 - acc: 0.9988 - auc_roc: 0.9942\n",
      "Epoch 399/1000\n",
      " - 1s - loss: 0.0566 - acc: 0.9807 - auc_roc: 0.9943\n",
      "Epoch 400/1000\n",
      " - 1s - loss: 0.0266 - acc: 0.9896 - auc_roc: 0.9943\n",
      "Epoch 401/1000\n",
      " - 1s - loss: 0.0077 - acc: 0.9988 - auc_roc: 0.9943\n",
      "Epoch 402/1000\n",
      " - 1s - loss: 0.0128 - acc: 0.9959 - auc_roc: 0.9943\n",
      "Epoch 403/1000\n",
      " - 1s - loss: 0.0072 - acc: 0.9983 - auc_roc: 0.9943\n",
      "Epoch 404/1000\n",
      " - 1s - loss: 0.0047 - acc: 0.9997 - auc_roc: 0.9943\n",
      "Epoch 405/1000\n",
      " - 1s - loss: 0.0039 - acc: 0.9993 - auc_roc: 0.9944\n",
      "Epoch 406/1000\n",
      " - 1s - loss: 0.0036 - acc: 0.9994 - auc_roc: 0.9944\n",
      "Epoch 407/1000\n",
      " - 1s - loss: 0.0033 - acc: 0.9997 - auc_roc: 0.9944\n",
      "Epoch 408/1000\n",
      " - 1s - loss: 0.0037 - acc: 0.9994 - auc_roc: 0.9944\n",
      "Epoch 409/1000\n",
      " - 1s - loss: 0.0048 - acc: 0.9984 - auc_roc: 0.9945\n",
      "Epoch 410/1000\n",
      " - 1s - loss: 0.0699 - acc: 0.9825 - auc_roc: 0.9945\n",
      "Epoch 411/1000\n",
      " - 1s - loss: 0.0346 - acc: 0.9883 - auc_roc: 0.9945\n",
      "Epoch 412/1000\n",
      " - 1s - loss: 0.0082 - acc: 0.9983 - auc_roc: 0.9945\n",
      "Epoch 413/1000\n",
      " - 1s - loss: 0.0066 - acc: 0.9992 - auc_roc: 0.9945\n",
      "Epoch 414/1000\n",
      " - 1s - loss: 0.0043 - acc: 0.9994 - auc_roc: 0.9945\n",
      "Epoch 415/1000\n",
      " - 1s - loss: 0.0037 - acc: 0.9997 - auc_roc: 0.9946\n",
      "Epoch 416/1000\n",
      " - 1s - loss: 0.0034 - acc: 0.9997 - auc_roc: 0.9946\n",
      "Epoch 417/1000\n",
      " - 1s - loss: 0.0032 - acc: 0.9998 - auc_roc: 0.9946\n",
      "Epoch 418/1000\n",
      " - 1s - loss: 0.0032 - acc: 0.9996 - auc_roc: 0.9946\n",
      "Epoch 419/1000\n",
      " - 1s - loss: 0.0032 - acc: 0.9997 - auc_roc: 0.9947\n",
      "Epoch 420/1000\n",
      " - 1s - loss: 0.0034 - acc: 0.9994 - auc_roc: 0.9947\n",
      "Epoch 421/1000\n",
      " - 1s - loss: 0.0241 - acc: 0.9927 - auc_roc: 0.9947\n",
      "Epoch 422/1000\n",
      " - 1s - loss: 0.0685 - acc: 0.9778 - auc_roc: 0.9947\n",
      "Epoch 423/1000\n",
      " - 1s - loss: 0.0229 - acc: 0.9925 - auc_roc: 0.9947\n",
      "Epoch 424/1000\n",
      " - 1s - loss: 0.0069 - acc: 0.9981 - auc_roc: 0.9947\n",
      "Epoch 425/1000\n",
      " - 1s - loss: 0.0052 - acc: 0.9992 - auc_roc: 0.9947\n",
      "Epoch 426/1000\n",
      " - 1s - loss: 0.0037 - acc: 0.9996 - auc_roc: 0.9948\n",
      "Epoch 427/1000\n",
      " - 1s - loss: 0.0031 - acc: 0.9998 - auc_roc: 0.9948\n",
      "Epoch 428/1000\n",
      " - 1s - loss: 0.0028 - acc: 0.9998 - auc_roc: 0.9948\n",
      "Epoch 429/1000\n",
      " - 1s - loss: 0.0027 - acc: 0.9999 - auc_roc: 0.9948\n",
      "Epoch 430/1000\n",
      " - 1s - loss: 0.0026 - acc: 0.9999 - auc_roc: 0.9948\n",
      "Epoch 431/1000\n",
      " - 1s - loss: 0.0029 - acc: 0.9997 - auc_roc: 0.9949\n",
      "Epoch 432/1000\n",
      " - 1s - loss: 0.0331 - acc: 0.9918 - auc_roc: 0.9949\n",
      "Epoch 433/1000\n",
      " - 1s - loss: 0.0558 - acc: 0.9813 - auc_roc: 0.9949\n",
      "Epoch 434/1000\n",
      " - 1s - loss: 0.0108 - acc: 0.9974 - auc_roc: 0.9949\n",
      "Epoch 435/1000\n",
      " - 1s - loss: 0.0094 - acc: 0.9972 - auc_roc: 0.9949\n",
      "Epoch 436/1000\n",
      " - 1s - loss: 0.0042 - acc: 0.9993 - auc_roc: 0.9949\n",
      "Epoch 437/1000\n",
      " - 1s - loss: 0.0035 - acc: 0.9996 - auc_roc: 0.9950\n",
      "Epoch 438/1000\n",
      " - 1s - loss: 0.0029 - acc: 0.9998 - auc_roc: 0.9950\n",
      "Epoch 439/1000\n",
      " - 1s - loss: 0.0026 - acc: 0.9999 - auc_roc: 0.9950\n",
      "Epoch 440/1000\n",
      " - 1s - loss: 0.0026 - acc: 0.9999 - auc_roc: 0.9950\n",
      "Epoch 441/1000\n",
      " - 1s - loss: 0.0027 - acc: 0.9999 - auc_roc: 0.9950\n",
      "Epoch 442/1000\n",
      " - 1s - loss: 0.0023 - acc: 0.9998 - auc_roc: 0.9951\n",
      "Epoch 443/1000\n",
      " - 1s - loss: 0.0025 - acc: 0.9999 - auc_roc: 0.9951\n",
      "Epoch 444/1000\n",
      " - 1s - loss: 0.0756 - acc: 0.9796 - auc_roc: 0.9951\n",
      "Epoch 445/1000\n",
      " - 1s - loss: 0.0474 - acc: 0.9826 - auc_roc: 0.9951\n",
      "Epoch 446/1000\n",
      " - 1s - loss: 0.0082 - acc: 0.9981 - auc_roc: 0.9951\n",
      "Epoch 447/1000\n",
      " - 1s - loss: 0.0045 - acc: 0.9993 - auc_roc: 0.9951\n",
      "Epoch 448/1000\n",
      " - 1s - loss: 0.0033 - acc: 0.9999 - auc_roc: 0.9951\n",
      "Epoch 449/1000\n",
      " - 1s - loss: 0.0028 - acc: 0.9998 - auc_roc: 0.9951\n",
      "Epoch 450/1000\n",
      " - 1s - loss: 0.0025 - acc: 0.9999 - auc_roc: 0.9952\n",
      "Epoch 451/1000\n",
      " - 1s - loss: 0.0023 - acc: 0.9999 - auc_roc: 0.9952\n",
      "Epoch 452/1000\n",
      " - 1s - loss: 0.0024 - acc: 0.9998 - auc_roc: 0.9952\n",
      "Epoch 453/1000\n",
      " - 1s - loss: 0.0025 - acc: 0.9998 - auc_roc: 0.9952\n",
      "Epoch 454/1000\n",
      " - 1s - loss: 0.0451 - acc: 0.9866 - auc_roc: 0.9952\n",
      "Epoch 455/1000\n",
      " - 1s - loss: 0.0549 - acc: 0.9827 - auc_roc: 0.9952\n",
      "Epoch 456/1000\n",
      " - 1s - loss: 0.0172 - acc: 0.9939 - auc_roc: 0.9952\n",
      "Epoch 457/1000\n",
      " - 1s - loss: 0.0054 - acc: 0.9989 - auc_roc: 0.9952\n",
      "Epoch 458/1000\n",
      " - 1s - loss: 0.0057 - acc: 0.9987 - auc_roc: 0.9953\n",
      "Epoch 459/1000\n",
      " - 1s - loss: 0.0066 - acc: 0.9978 - auc_roc: 0.9953\n",
      "Epoch 460/1000\n",
      " - 1s - loss: 0.0192 - acc: 0.9934 - auc_roc: 0.9953\n",
      "Epoch 461/1000\n",
      " - 1s - loss: 0.0082 - acc: 0.9978 - auc_roc: 0.9953\n",
      "Epoch 462/1000\n",
      " - 1s - loss: 0.0050 - acc: 0.9990 - auc_roc: 0.9953\n",
      "Epoch 463/1000\n",
      " - 1s - loss: 0.0041 - acc: 0.9992 - auc_roc: 0.9953\n",
      "Epoch 464/1000\n",
      " - 1s - loss: 0.0030 - acc: 0.9997 - auc_roc: 0.9954\n",
      "Epoch 465/1000\n",
      " - 1s - loss: 0.0040 - acc: 0.9989 - auc_roc: 0.9954\n",
      "Epoch 466/1000\n",
      " - 1s - loss: 0.0353 - acc: 0.9876 - auc_roc: 0.9954\n",
      "Epoch 467/1000\n",
      " - 1s - loss: 0.0177 - acc: 0.9947 - auc_roc: 0.9954\n",
      "Epoch 468/1000\n",
      " - 1s - loss: 0.0089 - acc: 0.9975 - auc_roc: 0.9954\n",
      "Epoch 469/1000\n",
      " - 1s - loss: 0.0034 - acc: 0.9997 - auc_roc: 0.9954\n",
      "Epoch 470/1000\n",
      " - 1s - loss: 0.0024 - acc: 0.9998 - auc_roc: 0.9954\n",
      "Epoch 471/1000\n",
      " - 1s - loss: 0.0020 - acc: 0.9999 - auc_roc: 0.9955\n",
      "Epoch 472/1000\n",
      " - 1s - loss: 0.0020 - acc: 0.9999 - auc_roc: 0.9955\n",
      "Epoch 473/1000\n",
      " - 1s - loss: 0.0019 - acc: 1.0000 - auc_roc: 0.9955\n",
      "Epoch 474/1000\n",
      " - 1s - loss: 0.0019 - acc: 0.9999 - auc_roc: 0.9955\n",
      "Epoch 475/1000\n",
      " - 1s - loss: 0.0022 - acc: 0.9998 - auc_roc: 0.9955\n",
      "Epoch 476/1000\n",
      " - 1s - loss: 0.0018 - acc: 1.0000 - auc_roc: 0.9955\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 477/1000\n",
      " - 1s - loss: 0.0622 - acc: 0.9789 - auc_roc: 0.9956\n",
      "Epoch 478/1000\n",
      " - 1s - loss: 0.0217 - acc: 0.9911 - auc_roc: 0.9956\n",
      "Epoch 479/1000\n",
      " - 1s - loss: 0.0083 - acc: 0.9980 - auc_roc: 0.9956\n",
      "Epoch 480/1000\n",
      " - 1s - loss: 0.0047 - acc: 0.9990 - auc_roc: 0.9956\n",
      "Epoch 481/1000\n",
      " - 1s - loss: 0.0027 - acc: 1.0000 - auc_roc: 0.9956\n",
      "Epoch 482/1000\n",
      " - 1s - loss: 0.0020 - acc: 1.0000 - auc_roc: 0.9956\n",
      "Epoch 483/1000\n",
      " - 1s - loss: 0.0017 - acc: 1.0000 - auc_roc: 0.9956\n",
      "Epoch 484/1000\n",
      " - 1s - loss: 0.0016 - acc: 1.0000 - auc_roc: 0.9956\n",
      "Epoch 485/1000\n",
      " - 1s - loss: 0.0015 - acc: 1.0000 - auc_roc: 0.9957\n",
      "Epoch 486/1000\n",
      " - 1s - loss: 0.0016 - acc: 1.0000 - auc_roc: 0.9957\n",
      "Epoch 487/1000\n",
      " - 1s - loss: 0.0015 - acc: 0.9999 - auc_roc: 0.9957\n",
      "Epoch 488/1000\n",
      " - 1s - loss: 0.0019 - acc: 1.0000 - auc_roc: 0.9957\n",
      "Epoch 489/1000\n",
      " - 1s - loss: 0.0613 - acc: 0.9807 - auc_roc: 0.9957\n",
      "Epoch 490/1000\n",
      " - 1s - loss: 0.0154 - acc: 0.9953 - auc_roc: 0.9957\n",
      "Epoch 491/1000\n",
      " - 1s - loss: 0.0087 - acc: 0.9979 - auc_roc: 0.9957\n",
      "Epoch 492/1000\n",
      " - 1s - loss: 0.0031 - acc: 0.9997 - auc_roc: 0.9957\n",
      "Epoch 493/1000\n",
      " - 1s - loss: 0.0022 - acc: 0.9998 - auc_roc: 0.9958\n",
      "Epoch 494/1000\n",
      " - 1s - loss: 0.0034 - acc: 0.9996 - auc_roc: 0.9958\n",
      "Epoch 495/1000\n",
      " - 1s - loss: 0.0027 - acc: 0.9997 - auc_roc: 0.9958\n",
      "Epoch 496/1000\n",
      " - 1s - loss: 0.0076 - acc: 0.9975 - auc_roc: 0.9958\n",
      "Epoch 497/1000\n",
      " - 1s - loss: 0.0472 - acc: 0.9852 - auc_roc: 0.9958\n",
      "Epoch 498/1000\n",
      " - 1s - loss: 0.0125 - acc: 0.9959 - auc_roc: 0.9958\n",
      "Epoch 499/1000\n",
      " - 1s - loss: 0.0035 - acc: 0.9993 - auc_roc: 0.9958\n",
      "Epoch 500/1000\n",
      " - 1s - loss: 0.0027 - acc: 0.9996 - auc_roc: 0.9958\n",
      "Epoch 501/1000\n",
      " - 1s - loss: 0.0020 - acc: 0.9999 - auc_roc: 0.9959\n",
      "Epoch 502/1000\n",
      " - 1s - loss: 0.0020 - acc: 0.9998 - auc_roc: 0.9959\n",
      "Epoch 503/1000\n",
      " - 1s - loss: 0.0014 - acc: 1.0000 - auc_roc: 0.9959\n",
      "Epoch 504/1000\n",
      " - 1s - loss: 0.0015 - acc: 1.0000 - auc_roc: 0.9959\n",
      "Epoch 505/1000\n",
      " - 1s - loss: 0.0013 - acc: 1.0000 - auc_roc: 0.9959\n",
      "Epoch 506/1000\n",
      " - 1s - loss: 0.0013 - acc: 1.0000 - auc_roc: 0.9959\n",
      "Epoch 507/1000\n",
      " - 1s - loss: 0.0012 - acc: 1.0000 - auc_roc: 0.9959\n",
      "Epoch 508/1000\n",
      " - 1s - loss: 0.0012 - acc: 1.0000 - auc_roc: 0.9960\n",
      "Epoch 509/1000\n",
      " - 1s - loss: 0.0700 - acc: 0.9787 - auc_roc: 0.9960\n",
      "Epoch 510/1000\n",
      " - 1s - loss: 0.0169 - acc: 0.9947 - auc_roc: 0.9960\n",
      "Epoch 511/1000\n",
      " - 1s - loss: 0.0085 - acc: 0.9981 - auc_roc: 0.9960\n",
      "Epoch 512/1000\n",
      " - 1s - loss: 0.0025 - acc: 0.9997 - auc_roc: 0.9960\n",
      "Epoch 513/1000\n",
      " - 1s - loss: 0.0019 - acc: 1.0000 - auc_roc: 0.9960\n",
      "Epoch 514/1000\n",
      " - 1s - loss: 0.0015 - acc: 1.0000 - auc_roc: 0.9960\n",
      "Epoch 515/1000\n",
      " - 1s - loss: 0.0013 - acc: 1.0000 - auc_roc: 0.9960\n",
      "Epoch 516/1000\n",
      " - 1s - loss: 0.0011 - acc: 1.0000 - auc_roc: 0.9960\n",
      "Epoch 517/1000\n",
      " - 1s - loss: 0.0010 - acc: 1.0000 - auc_roc: 0.9961\n",
      "Epoch 518/1000\n",
      " - 1s - loss: 9.5707e-04 - acc: 1.0000 - auc_roc: 0.9961\n",
      "Epoch 519/1000\n",
      " - 1s - loss: 8.9862e-04 - acc: 1.0000 - auc_roc: 0.9961\n",
      "Epoch 520/1000\n",
      " - 1s - loss: 0.0510 - acc: 0.9869 - auc_roc: 0.9961\n",
      "Epoch 521/1000\n",
      " - 1s - loss: 0.0265 - acc: 0.9910 - auc_roc: 0.9961\n",
      "Epoch 522/1000\n",
      " - 1s - loss: 0.0100 - acc: 0.9965 - auc_roc: 0.9961\n",
      "Epoch 523/1000\n",
      " - 1s - loss: 0.0175 - acc: 0.9933 - auc_roc: 0.9961\n",
      "Epoch 524/1000\n",
      " - 1s - loss: 0.0073 - acc: 0.9978 - auc_roc: 0.9961\n",
      "Epoch 525/1000\n",
      " - 1s - loss: 0.0031 - acc: 0.9993 - auc_roc: 0.9961\n",
      "Epoch 526/1000\n",
      " - 1s - loss: 0.0017 - acc: 0.9998 - auc_roc: 0.9961\n",
      "Epoch 527/1000\n",
      " - 1s - loss: 0.0019 - acc: 0.9997 - auc_roc: 0.9962\n",
      "Epoch 528/1000\n",
      " - 1s - loss: 0.0013 - acc: 0.9998 - auc_roc: 0.9962\n",
      "Epoch 529/1000\n",
      " - 1s - loss: 0.0018 - acc: 0.9997 - auc_roc: 0.9962\n",
      "Epoch 530/1000\n",
      " - 1s - loss: 0.0011 - acc: 1.0000 - auc_roc: 0.9962\n",
      "Epoch 531/1000\n",
      " - 1s - loss: 9.0274e-04 - acc: 1.0000 - auc_roc: 0.9962\n",
      "Epoch 532/1000\n",
      " - 1s - loss: 9.9671e-04 - acc: 1.0000 - auc_roc: 0.9962\n",
      "Epoch 533/1000\n",
      " - 1s - loss: 8.5558e-04 - acc: 1.0000 - auc_roc: 0.9962\n",
      "Epoch 534/1000\n",
      " - 1s - loss: 8.9416e-04 - acc: 1.0000 - auc_roc: 0.9962\n",
      "Epoch 535/1000\n",
      " - 1s - loss: 0.0839 - acc: 0.9755 - auc_roc: 0.9962\n",
      "Epoch 536/1000\n",
      " - 1s - loss: 0.0140 - acc: 0.9955 - auc_roc: 0.9962\n",
      "Epoch 537/1000\n",
      " - 1s - loss: 0.0058 - acc: 0.9985 - auc_roc: 0.9962\n",
      "Epoch 538/1000\n",
      " - 1s - loss: 0.0022 - acc: 0.9999 - auc_roc: 0.9963\n",
      "Epoch 539/1000\n",
      " - 1s - loss: 0.0017 - acc: 0.9999 - auc_roc: 0.9963\n",
      "Epoch 540/1000\n",
      " - 1s - loss: 0.0014 - acc: 1.0000 - auc_roc: 0.9963\n",
      "Epoch 541/1000\n",
      " - 1s - loss: 0.0013 - acc: 1.0000 - auc_roc: 0.9963\n",
      "Epoch 542/1000\n",
      " - 1s - loss: 0.0012 - acc: 1.0000 - auc_roc: 0.9963\n",
      "Epoch 543/1000\n",
      " - 1s - loss: 0.0010 - acc: 1.0000 - auc_roc: 0.9963\n",
      "Epoch 544/1000\n",
      " - 1s - loss: 0.0012 - acc: 0.9998 - auc_roc: 0.9963\n",
      "Epoch 545/1000\n",
      " - 1s - loss: 0.0443 - acc: 0.9863 - auc_roc: 0.9963\n",
      "Epoch 546/1000\n",
      " - 1s - loss: 0.0103 - acc: 0.9964 - auc_roc: 0.9963\n",
      "Epoch 547/1000\n",
      " - 1s - loss: 0.0030 - acc: 0.9997 - auc_roc: 0.9964\n",
      "Epoch 548/1000\n",
      " - 1s - loss: 0.0017 - acc: 1.0000 - auc_roc: 0.9964\n",
      "Epoch 549/1000\n",
      " - 1s - loss: 0.0040 - acc: 0.9988 - auc_roc: 0.9964\n",
      "Epoch 550/1000\n",
      " - 1s - loss: 0.0281 - acc: 0.9897 - auc_roc: 0.9964\n",
      "Epoch 551/1000\n",
      " - 1s - loss: 0.0075 - acc: 0.9973 - auc_roc: 0.9964\n",
      "Epoch 552/1000\n",
      " - 1s - loss: 0.0073 - acc: 0.9976 - auc_roc: 0.9964\n",
      "Epoch 553/1000\n",
      " - 1s - loss: 0.0052 - acc: 0.9982 - auc_roc: 0.9964\n",
      "Epoch 554/1000\n",
      " - 1s - loss: 0.0024 - acc: 0.9997 - auc_roc: 0.9964\n",
      "Epoch 555/1000\n",
      " - 1s - loss: 0.0013 - acc: 1.0000 - auc_roc: 0.9964\n",
      "Epoch 556/1000\n",
      " - 1s - loss: 0.0018 - acc: 0.9999 - auc_roc: 0.9964\n",
      "Epoch 557/1000\n",
      " - 1s - loss: 0.0023 - acc: 0.9997 - auc_roc: 0.9965\n",
      "Epoch 558/1000\n",
      " - 1s - loss: 0.0015 - acc: 1.0000 - auc_roc: 0.9965\n",
      "Epoch 559/1000\n",
      " - 1s - loss: 0.0011 - acc: 1.0000 - auc_roc: 0.9965\n",
      "Epoch 560/1000\n",
      " - 1s - loss: 8.9889e-04 - acc: 1.0000 - auc_roc: 0.9965\n",
      "Epoch 561/1000\n",
      " - 1s - loss: 0.0121 - acc: 0.9963 - auc_roc: 0.9965\n",
      "Epoch 562/1000\n",
      " - 1s - loss: 0.0802 - acc: 0.9780 - auc_roc: 0.9965\n",
      "Epoch 563/1000\n",
      " - 1s - loss: 0.0078 - acc: 0.9981 - auc_roc: 0.9965\n",
      "Epoch 564/1000\n",
      " - 1s - loss: 0.0026 - acc: 0.9997 - auc_roc: 0.9965\n",
      "Epoch 565/1000\n",
      " - 1s - loss: 0.0017 - acc: 1.0000 - auc_roc: 0.9965\n",
      "Epoch 566/1000\n",
      " - 1s - loss: 0.0013 - acc: 1.0000 - auc_roc: 0.9965\n",
      "Epoch 567/1000\n",
      " - 1s - loss: 0.0011 - acc: 1.0000 - auc_roc: 0.9965\n",
      "Epoch 568/1000\n",
      " - 1s - loss: 9.4536e-04 - acc: 1.0000 - auc_roc: 0.9965\n",
      "Epoch 569/1000\n",
      " - 1s - loss: 9.6461e-04 - acc: 1.0000 - auc_roc: 0.9966\n",
      "Epoch 570/1000\n",
      " - 1s - loss: 8.3964e-04 - acc: 1.0000 - auc_roc: 0.9966\n",
      "Epoch 571/1000\n",
      " - 1s - loss: 7.7139e-04 - acc: 1.0000 - auc_roc: 0.9966\n",
      "Epoch 572/1000\n",
      " - 1s - loss: 7.8143e-04 - acc: 1.0000 - auc_roc: 0.9966\n",
      "Epoch 573/1000\n",
      " - 1s - loss: 0.0604 - acc: 0.9799 - auc_roc: 0.9966\n",
      "Epoch 574/1000\n",
      " - 1s - loss: 0.0152 - acc: 0.9959 - auc_roc: 0.9966\n",
      "Epoch 575/1000\n",
      " - 1s - loss: 0.0166 - acc: 0.9956 - auc_roc: 0.9966\n",
      "Epoch 576/1000\n",
      " - 1s - loss: 0.0038 - acc: 0.9994 - auc_roc: 0.9966\n",
      "Epoch 577/1000\n",
      " - 1s - loss: 0.0021 - acc: 0.9998 - auc_roc: 0.9966\n",
      "Epoch 578/1000\n",
      " - 1s - loss: 0.0012 - acc: 1.0000 - auc_roc: 0.9966\n",
      "Epoch 579/1000\n",
      " - 1s - loss: 9.6947e-04 - acc: 1.0000 - auc_roc: 0.9966\n",
      "Epoch 580/1000\n",
      " - 1s - loss: 8.1650e-04 - acc: 1.0000 - auc_roc: 0.9967\n",
      "Epoch 581/1000\n",
      " - 1s - loss: 7.2945e-04 - acc: 1.0000 - auc_roc: 0.9967\n",
      "Epoch 582/1000\n",
      " - 1s - loss: 6.7790e-04 - acc: 1.0000 - auc_roc: 0.9967\n",
      "Epoch 583/1000\n",
      " - 1s - loss: 6.9134e-04 - acc: 1.0000 - auc_roc: 0.9967\n",
      "Epoch 584/1000\n",
      " - 1s - loss: 6.2032e-04 - acc: 1.0000 - auc_roc: 0.9967\n",
      "Epoch 585/1000\n",
      " - 1s - loss: 0.0011 - acc: 1.0000 - auc_roc: 0.9967\n",
      "Epoch 586/1000\n",
      " - 1s - loss: 0.0618 - acc: 0.9817 - auc_roc: 0.9967\n",
      "Epoch 587/1000\n",
      " - 1s - loss: 0.0101 - acc: 0.9979 - auc_roc: 0.9967\n",
      "Epoch 588/1000\n",
      " - 1s - loss: 0.0107 - acc: 0.9968 - auc_roc: 0.9967\n",
      "Epoch 589/1000\n",
      " - 1s - loss: 0.0027 - acc: 0.9996 - auc_roc: 0.9967\n",
      "Epoch 590/1000\n",
      " - 1s - loss: 0.0013 - acc: 1.0000 - auc_roc: 0.9967\n",
      "Epoch 591/1000\n",
      " - 1s - loss: 0.0013 - acc: 0.9999 - auc_roc: 0.9967\n",
      "Epoch 592/1000\n",
      " - 1s - loss: 0.0080 - acc: 0.9971 - auc_roc: 0.9967\n",
      "Epoch 593/1000\n",
      " - 1s - loss: 0.0047 - acc: 0.9983 - auc_roc: 0.9968\n",
      "Epoch 594/1000\n",
      " - 1s - loss: 0.0217 - acc: 0.9923 - auc_roc: 0.9968\n",
      "Epoch 595/1000\n",
      " - 1s - loss: 0.0149 - acc: 0.9951 - auc_roc: 0.9968\n",
      "Epoch 596/1000\n",
      " - 1s - loss: 0.0072 - acc: 0.9976 - auc_roc: 0.9968\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 597/1000\n",
      " - 1s - loss: 0.0020 - acc: 0.9997 - auc_roc: 0.9968\n",
      "Epoch 598/1000\n",
      " - 1s - loss: 0.0010 - acc: 1.0000 - auc_roc: 0.9968\n",
      "Epoch 599/1000\n",
      " - 1s - loss: 8.6613e-04 - acc: 1.0000 - auc_roc: 0.9968\n",
      "Epoch 600/1000\n",
      " - 1s - loss: 6.6878e-04 - acc: 1.0000 - auc_roc: 0.9968\n",
      "Epoch 601/1000\n",
      " - 1s - loss: 6.1804e-04 - acc: 1.0000 - auc_roc: 0.9968\n",
      "Epoch 602/1000\n",
      " - 1s - loss: 5.1322e-04 - acc: 1.0000 - auc_roc: 0.9968\n",
      "Epoch 603/1000\n",
      " - 1s - loss: 5.0128e-04 - acc: 1.0000 - auc_roc: 0.9968\n",
      "Epoch 604/1000\n",
      " - 1s - loss: 5.6117e-04 - acc: 1.0000 - auc_roc: 0.9968\n",
      "Epoch 605/1000\n",
      " - 1s - loss: 0.0489 - acc: 0.9843 - auc_roc: 0.9969\n",
      "Epoch 606/1000\n",
      " - 1s - loss: 0.0086 - acc: 0.9971 - auc_roc: 0.9969\n",
      "Epoch 607/1000\n",
      " - 1s - loss: 0.0062 - acc: 0.9981 - auc_roc: 0.9969\n",
      "Epoch 608/1000\n",
      " - 1s - loss: 0.0155 - acc: 0.9956 - auc_roc: 0.9969\n",
      "Epoch 609/1000\n",
      " - 1s - loss: 0.0052 - acc: 0.9985 - auc_roc: 0.9969\n",
      "Epoch 610/1000\n",
      " - 1s - loss: 0.0032 - acc: 0.9991 - auc_roc: 0.9969\n",
      "Epoch 611/1000\n",
      " - 1s - loss: 0.0030 - acc: 0.9993 - auc_roc: 0.9969\n",
      "Epoch 612/1000\n",
      " - 1s - loss: 0.0046 - acc: 0.9985 - auc_roc: 0.9969\n",
      "Epoch 613/1000\n",
      " - 1s - loss: 0.0199 - acc: 0.9928 - auc_roc: 0.9969\n",
      "Epoch 614/1000\n",
      " - 1s - loss: 0.0144 - acc: 0.9952 - auc_roc: 0.9969\n",
      "Epoch 615/1000\n",
      " - 1s - loss: 0.0027 - acc: 0.9994 - auc_roc: 0.9969\n",
      "Epoch 616/1000\n",
      " - 1s - loss: 0.0013 - acc: 1.0000 - auc_roc: 0.9969\n",
      "Epoch 617/1000\n",
      " - 1s - loss: 9.5409e-04 - acc: 1.0000 - auc_roc: 0.9969\n",
      "Epoch 618/1000\n",
      " - 1s - loss: 0.0014 - acc: 0.9996 - auc_roc: 0.9969\n",
      "Epoch 619/1000\n",
      " - 1s - loss: 0.0287 - acc: 0.9901 - auc_roc: 0.9970\n",
      "Epoch 620/1000\n",
      " - 1s - loss: 0.0154 - acc: 0.9945 - auc_roc: 0.9970\n",
      "Epoch 621/1000\n",
      " - 1s - loss: 0.0027 - acc: 0.9997 - auc_roc: 0.9970\n",
      "Epoch 622/1000\n",
      " - 1s - loss: 0.0107 - acc: 0.9957 - auc_roc: 0.9970\n",
      "Epoch 623/1000\n",
      " - 1s - loss: 0.0053 - acc: 0.9982 - auc_roc: 0.9970\n",
      "Epoch 624/1000\n",
      " - 1s - loss: 0.0021 - acc: 0.9998 - auc_roc: 0.9970\n",
      "Epoch 625/1000\n",
      " - 1s - loss: 0.0015 - acc: 0.9998 - auc_roc: 0.9970\n",
      "Epoch 626/1000\n",
      " - 1s - loss: 0.0014 - acc: 0.9999 - auc_roc: 0.9970\n",
      "Epoch 627/1000\n",
      " - 1s - loss: 0.0014 - acc: 0.9998 - auc_roc: 0.9970\n",
      "Epoch 628/1000\n",
      " - 1s - loss: 0.0062 - acc: 0.9975 - auc_roc: 0.9970\n",
      "Epoch 629/1000\n",
      " - 1s - loss: 0.0420 - acc: 0.9869 - auc_roc: 0.9970\n",
      "Epoch 630/1000\n",
      " - 1s - loss: 0.0161 - acc: 0.9956 - auc_roc: 0.9970\n",
      "Epoch 631/1000\n",
      " - 1s - loss: 0.0096 - acc: 0.9966 - auc_roc: 0.9970\n",
      "Epoch 632/1000\n",
      " - 1s - loss: 0.0033 - acc: 0.9991 - auc_roc: 0.9970\n",
      "Epoch 633/1000\n",
      " - 1s - loss: 0.0011 - acc: 1.0000 - auc_roc: 0.9970\n",
      "Epoch 634/1000\n",
      " - 1s - loss: 7.9918e-04 - acc: 1.0000 - auc_roc: 0.9971\n",
      "Epoch 635/1000\n",
      " - 1s - loss: 6.7772e-04 - acc: 1.0000 - auc_roc: 0.9971\n",
      "Epoch 636/1000\n",
      " - 1s - loss: 5.6572e-04 - acc: 1.0000 - auc_roc: 0.9971\n",
      "Epoch 637/1000\n",
      " - 1s - loss: 5.3806e-04 - acc: 1.0000 - auc_roc: 0.9971\n",
      "Epoch 638/1000\n",
      " - 1s - loss: 4.9262e-04 - acc: 1.0000 - auc_roc: 0.9971\n",
      "Epoch 639/1000\n",
      " - 1s - loss: 4.5580e-04 - acc: 1.0000 - auc_roc: 0.9971\n",
      "Epoch 640/1000\n",
      " - 1s - loss: 4.3591e-04 - acc: 1.0000 - auc_roc: 0.9971\n",
      "Epoch 641/1000\n",
      " - 1s - loss: 5.2693e-04 - acc: 1.0000 - auc_roc: 0.9971\n",
      "Epoch 642/1000\n",
      " - 1s - loss: 0.0544 - acc: 0.9827 - auc_roc: 0.9971\n",
      "Epoch 643/1000\n",
      " - 1s - loss: 0.0229 - acc: 0.9916 - auc_roc: 0.9971\n",
      "Epoch 644/1000\n",
      " - 1s - loss: 0.0066 - acc: 0.9980 - auc_roc: 0.9971\n",
      "Epoch 645/1000\n",
      " - 1s - loss: 0.0053 - acc: 0.9980 - auc_roc: 0.9971\n",
      "Epoch 646/1000\n",
      " - 1s - loss: 0.0040 - acc: 0.9989 - auc_roc: 0.9971\n",
      "Epoch 647/1000\n",
      " - 1s - loss: 0.0015 - acc: 0.9999 - auc_roc: 0.9971\n",
      "Epoch 648/1000\n",
      " - 1s - loss: 9.2228e-04 - acc: 1.0000 - auc_roc: 0.9971\n",
      "Epoch 649/1000\n",
      " - 1s - loss: 7.6244e-04 - acc: 1.0000 - auc_roc: 0.9972\n",
      "Epoch 650/1000\n",
      " - 1s - loss: 6.3439e-04 - acc: 1.0000 - auc_roc: 0.9972\n",
      "Epoch 651/1000\n",
      " - 1s - loss: 5.3209e-04 - acc: 1.0000 - auc_roc: 0.9972\n",
      "Epoch 652/1000\n",
      " - 1s - loss: 5.2826e-04 - acc: 1.0000 - auc_roc: 0.9972\n",
      "Epoch 653/1000\n",
      " - 1s - loss: 4.6378e-04 - acc: 1.0000 - auc_roc: 0.9972\n",
      "Epoch 654/1000\n",
      " - 1s - loss: 6.8826e-04 - acc: 0.9999 - auc_roc: 0.9972\n",
      "Epoch 655/1000\n",
      " - 1s - loss: 0.0608 - acc: 0.9812 - auc_roc: 0.9972\n",
      "Epoch 656/1000\n",
      " - 1s - loss: 0.0057 - acc: 0.9982 - auc_roc: 0.9972\n",
      "Epoch 657/1000\n",
      " - 1s - loss: 0.0042 - acc: 0.9987 - auc_roc: 0.9972\n",
      "Epoch 658/1000\n",
      " - 1s - loss: 0.0053 - acc: 0.9984 - auc_roc: 0.9972\n",
      "Epoch 659/1000\n",
      " - 1s - loss: 0.0145 - acc: 0.9946 - auc_roc: 0.9972\n",
      "Epoch 660/1000\n",
      " - 1s - loss: 0.0065 - acc: 0.9980 - auc_roc: 0.9972\n",
      "Epoch 661/1000\n",
      " - 1s - loss: 0.0012 - acc: 1.0000 - auc_roc: 0.9972\n",
      "Epoch 662/1000\n",
      " - 1s - loss: 0.0011 - acc: 0.9999 - auc_roc: 0.9972\n",
      "Epoch 663/1000\n",
      " - 1s - loss: 7.0727e-04 - acc: 1.0000 - auc_roc: 0.9972\n",
      "Epoch 664/1000\n",
      " - 1s - loss: 5.4981e-04 - acc: 1.0000 - auc_roc: 0.9972\n",
      "Epoch 665/1000\n",
      " - 1s - loss: 4.6275e-04 - acc: 1.0000 - auc_roc: 0.9973\n",
      "Epoch 666/1000\n",
      " - 1s - loss: 4.0835e-04 - acc: 1.0000 - auc_roc: 0.9973\n",
      "Epoch 667/1000\n",
      " - 1s - loss: 4.0303e-04 - acc: 1.0000 - auc_roc: 0.9973\n",
      "Epoch 668/1000\n",
      " - 1s - loss: 7.6550e-04 - acc: 0.9999 - auc_roc: 0.9973\n",
      "Epoch 669/1000\n",
      " - 1s - loss: 0.0446 - acc: 0.9840 - auc_roc: 0.9973\n",
      "Epoch 670/1000\n",
      " - 1s - loss: 0.0083 - acc: 0.9974 - auc_roc: 0.9973\n",
      "Epoch 671/1000\n",
      " - 1s - loss: 0.0154 - acc: 0.9951 - auc_roc: 0.9973\n",
      "Epoch 672/1000\n",
      " - 1s - loss: 0.0073 - acc: 0.9976 - auc_roc: 0.9973\n",
      "Epoch 673/1000\n",
      " - 1s - loss: 0.0040 - acc: 0.9988 - auc_roc: 0.9973\n",
      "Epoch 674/1000\n",
      " - 1s - loss: 0.0021 - acc: 0.9997 - auc_roc: 0.9973\n",
      "Epoch 675/1000\n",
      " - 1s - loss: 0.0020 - acc: 0.9996 - auc_roc: 0.9973\n",
      "Epoch 676/1000\n",
      " - 1s - loss: 8.2918e-04 - acc: 1.0000 - auc_roc: 0.9973\n",
      "Epoch 677/1000\n",
      " - 1s - loss: 6.4009e-04 - acc: 1.0000 - auc_roc: 0.9973\n",
      "Epoch 678/1000\n",
      " - 1s - loss: 5.1545e-04 - acc: 1.0000 - auc_roc: 0.9973\n",
      "Epoch 679/1000\n",
      " - 1s - loss: 4.3643e-04 - acc: 1.0000 - auc_roc: 0.9973\n",
      "Epoch 680/1000\n",
      " - 1s - loss: 3.8466e-04 - acc: 1.0000 - auc_roc: 0.9973\n",
      "Epoch 681/1000\n",
      " - 1s - loss: 3.7748e-04 - acc: 1.0000 - auc_roc: 0.9973\n",
      "Epoch 682/1000\n",
      " - 1s - loss: 3.3709e-04 - acc: 1.0000 - auc_roc: 0.9974\n",
      "Epoch 683/1000\n",
      " - 1s - loss: 3.2911e-04 - acc: 1.0000 - auc_roc: 0.9974\n",
      "Epoch 684/1000\n",
      " - 1s - loss: 2.9883e-04 - acc: 1.0000 - auc_roc: 0.9974\n",
      "Epoch 685/1000\n",
      " - 1s - loss: 6.4159e-04 - acc: 0.9997 - auc_roc: 0.9974\n",
      "Epoch 686/1000\n",
      " - 1s - loss: 0.0741 - acc: 0.9779 - auc_roc: 0.9974\n",
      "Epoch 687/1000\n",
      " - 1s - loss: 0.0053 - acc: 0.9985 - auc_roc: 0.9974\n",
      "Epoch 688/1000\n",
      " - 1s - loss: 0.0019 - acc: 1.0000 - auc_roc: 0.9974\n",
      "Epoch 689/1000\n",
      " - 1s - loss: 0.0027 - acc: 0.9993 - auc_roc: 0.9974\n",
      "Epoch 690/1000\n",
      " - 1s - loss: 0.0038 - acc: 0.9989 - auc_roc: 0.9974\n",
      "Epoch 691/1000\n",
      " - 1s - loss: 0.0043 - acc: 0.9988 - auc_roc: 0.9974\n",
      "Epoch 692/1000\n",
      " - 1s - loss: 0.0013 - acc: 1.0000 - auc_roc: 0.9974\n",
      "Epoch 693/1000\n",
      " - 1s - loss: 8.6168e-04 - acc: 0.9999 - auc_roc: 0.9974\n",
      "Epoch 694/1000\n",
      " - 1s - loss: 0.0301 - acc: 0.9910 - auc_roc: 0.9974\n",
      "Epoch 695/1000\n",
      " - 1s - loss: 0.0228 - acc: 0.9929 - auc_roc: 0.9974\n",
      "Epoch 696/1000\n",
      " - 1s - loss: 0.0058 - acc: 0.9985 - auc_roc: 0.9974\n",
      "Epoch 697/1000\n",
      " - 1s - loss: 0.0021 - acc: 0.9993 - auc_roc: 0.9974\n",
      "Epoch 698/1000\n",
      " - 1s - loss: 0.0015 - acc: 0.9994 - auc_roc: 0.9974\n",
      "Epoch 699/1000\n",
      " - 1s - loss: 0.0020 - acc: 0.9998 - auc_roc: 0.9974\n",
      "Epoch 700/1000\n",
      " - 1s - loss: 0.0134 - acc: 0.9956 - auc_roc: 0.9974\n",
      "Epoch 701/1000\n",
      " - 1s - loss: 0.0145 - acc: 0.9960 - auc_roc: 0.9974\n",
      "Epoch 702/1000\n",
      " - 1s - loss: 0.0061 - acc: 0.9984 - auc_roc: 0.9974\n",
      "Epoch 703/1000\n",
      " - 1s - loss: 0.0055 - acc: 0.9980 - auc_roc: 0.9975\n",
      "Epoch 704/1000\n",
      " - 1s - loss: 0.0079 - acc: 0.9966 - auc_roc: 0.9975\n",
      "Epoch 705/1000\n",
      " - 1s - loss: 0.0054 - acc: 0.9983 - auc_roc: 0.9975\n",
      "Epoch 706/1000\n",
      " - 1s - loss: 0.0060 - acc: 0.9985 - auc_roc: 0.9975\n",
      "Epoch 707/1000\n",
      " - 1s - loss: 0.0053 - acc: 0.9974 - auc_roc: 0.9975\n",
      "Epoch 708/1000\n",
      " - 1s - loss: 0.0074 - acc: 0.9975 - auc_roc: 0.9975\n",
      "Epoch 709/1000\n",
      " - 1s - loss: 0.0025 - acc: 0.9993 - auc_roc: 0.9975\n",
      "Epoch 710/1000\n",
      " - 1s - loss: 0.0045 - acc: 0.9990 - auc_roc: 0.9975\n",
      "Epoch 711/1000\n",
      " - 1s - loss: 0.0144 - acc: 0.9959 - auc_roc: 0.9975\n",
      "Epoch 712/1000\n",
      " - 1s - loss: 0.0048 - acc: 0.9985 - auc_roc: 0.9975\n",
      "Epoch 713/1000\n",
      " - 1s - loss: 0.0159 - acc: 0.9951 - auc_roc: 0.9975\n",
      "Epoch 714/1000\n",
      " - 1s - loss: 0.0033 - acc: 0.9996 - auc_roc: 0.9975\n",
      "Epoch 715/1000\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " - 1s - loss: 0.0038 - acc: 0.9985 - auc_roc: 0.9975\n",
      "Epoch 716/1000\n",
      " - 1s - loss: 0.0051 - acc: 0.9987 - auc_roc: 0.9975\n",
      "Epoch 717/1000\n",
      " - 1s - loss: 0.0161 - acc: 0.9936 - auc_roc: 0.9975\n",
      "Epoch 718/1000\n",
      " - 1s - loss: 0.0103 - acc: 0.9962 - auc_roc: 0.9975\n",
      "Epoch 719/1000\n",
      " - 1s - loss: 0.0136 - acc: 0.9947 - auc_roc: 0.9975\n",
      "Epoch 720/1000\n",
      " - 1s - loss: 0.0030 - acc: 0.9993 - auc_roc: 0.9975\n",
      "Epoch 721/1000\n",
      " - 1s - loss: 0.0010 - acc: 1.0000 - auc_roc: 0.9975\n",
      "Epoch 722/1000\n",
      " - 1s - loss: 7.5179e-04 - acc: 1.0000 - auc_roc: 0.9975\n",
      "Epoch 723/1000\n",
      " - 1s - loss: 6.2101e-04 - acc: 1.0000 - auc_roc: 0.9976\n",
      "Epoch 724/1000\n",
      " - 1s - loss: 4.4814e-04 - acc: 1.0000 - auc_roc: 0.9976\n",
      "Epoch 725/1000\n",
      " - 1s - loss: 4.8170e-04 - acc: 1.0000 - auc_roc: 0.9976\n",
      "Epoch 726/1000\n",
      " - 1s - loss: 5.8819e-04 - acc: 1.0000 - auc_roc: 0.9976\n",
      "Epoch 727/1000\n",
      " - 1s - loss: 5.5079e-04 - acc: 0.9999 - auc_roc: 0.9976\n",
      "Epoch 728/1000\n",
      " - 1s - loss: 0.0455 - acc: 0.9862 - auc_roc: 0.9976\n",
      "Epoch 729/1000\n",
      " - 1s - loss: 0.0047 - acc: 0.9988 - auc_roc: 0.9976\n",
      "Epoch 730/1000\n",
      " - 1s - loss: 0.0014 - acc: 0.9998 - auc_roc: 0.9976\n",
      "Epoch 731/1000\n",
      " - 1s - loss: 0.0023 - acc: 0.9998 - auc_roc: 0.9976\n",
      "Epoch 732/1000\n",
      " - 1s - loss: 0.0034 - acc: 0.9989 - auc_roc: 0.9976\n",
      "Epoch 733/1000\n",
      " - 1s - loss: 0.0023 - acc: 0.9992 - auc_roc: 0.9976\n",
      "Epoch 734/1000\n",
      " - 1s - loss: 0.0012 - acc: 1.0000 - auc_roc: 0.9976\n",
      "Epoch 735/1000\n",
      " - 1s - loss: 5.4834e-04 - acc: 1.0000 - auc_roc: 0.9976\n",
      "Epoch 736/1000\n",
      " - 1s - loss: 3.7658e-04 - acc: 1.0000 - auc_roc: 0.9976\n",
      "Epoch 737/1000\n",
      " - 1s - loss: 4.5395e-04 - acc: 0.9999 - auc_roc: 0.9976\n",
      "Epoch 738/1000\n",
      " - 1s - loss: 9.2761e-04 - acc: 0.9998 - auc_roc: 0.9976\n",
      "Epoch 739/1000\n",
      " - 1s - loss: 0.0399 - acc: 0.9864 - auc_roc: 0.9976\n",
      "Epoch 740/1000\n",
      " - 1s - loss: 0.0047 - acc: 0.9991 - auc_roc: 0.9976\n",
      "Epoch 741/1000\n",
      " - 1s - loss: 0.0029 - acc: 0.9991 - auc_roc: 0.9976\n",
      "Epoch 742/1000\n",
      " - 1s - loss: 0.0120 - acc: 0.9965 - auc_roc: 0.9976\n",
      "Epoch 743/1000\n",
      " - 1s - loss: 0.0149 - acc: 0.9952 - auc_roc: 0.9976\n",
      "Epoch 744/1000\n",
      " - 1s - loss: 0.0044 - acc: 0.9987 - auc_roc: 0.9976\n",
      "Epoch 745/1000\n",
      " - 1s - loss: 0.0012 - acc: 0.9999 - auc_roc: 0.9977\n",
      "Epoch 746/1000\n",
      " - 1s - loss: 6.1435e-04 - acc: 1.0000 - auc_roc: 0.9977\n",
      "Epoch 747/1000\n",
      " - 1s - loss: 5.2002e-04 - acc: 1.0000 - auc_roc: 0.9977\n",
      "Epoch 748/1000\n",
      " - 1s - loss: 4.0569e-04 - acc: 1.0000 - auc_roc: 0.9977\n",
      "Epoch 749/1000\n",
      " - 1s - loss: 3.5258e-04 - acc: 1.0000 - auc_roc: 0.9977\n",
      "Epoch 750/1000\n",
      " - 1s - loss: 3.1404e-04 - acc: 1.0000 - auc_roc: 0.9977\n",
      "Epoch 751/1000\n",
      " - 1s - loss: 2.8837e-04 - acc: 1.0000 - auc_roc: 0.9977\n",
      "Epoch 752/1000\n",
      " - 1s - loss: 2.5545e-04 - acc: 1.0000 - auc_roc: 0.9977\n",
      "Epoch 753/1000\n",
      " - 1s - loss: 2.4163e-04 - acc: 1.0000 - auc_roc: 0.9977\n",
      "Epoch 754/1000\n",
      " - 1s - loss: 2.7120e-04 - acc: 1.0000 - auc_roc: 0.9977\n",
      "Epoch 755/1000\n",
      " - 1s - loss: 2.1807e-04 - acc: 1.0000 - auc_roc: 0.9977\n",
      "Epoch 756/1000\n",
      " - 1s - loss: 0.0451 - acc: 0.9838 - auc_roc: 0.9977\n",
      "Epoch 757/1000\n",
      " - 1s - loss: 0.0063 - acc: 0.9980 - auc_roc: 0.9977\n",
      "Epoch 758/1000\n",
      " - 1s - loss: 0.0033 - acc: 0.9992 - auc_roc: 0.9977\n",
      "Epoch 759/1000\n",
      " - 1s - loss: 0.0089 - acc: 0.9970 - auc_roc: 0.9977\n",
      "Epoch 760/1000\n",
      " - 1s - loss: 0.0079 - acc: 0.9979 - auc_roc: 0.9977\n",
      "Epoch 761/1000\n",
      " - 1s - loss: 0.0031 - acc: 0.9991 - auc_roc: 0.9977\n",
      "Epoch 762/1000\n",
      " - 1s - loss: 0.0155 - acc: 0.9950 - auc_roc: 0.9977\n",
      "Epoch 763/1000\n",
      " - 1s - loss: 0.0058 - acc: 0.9983 - auc_roc: 0.9977\n",
      "Epoch 764/1000\n",
      " - 1s - loss: 0.0012 - acc: 0.9997 - auc_roc: 0.9977\n",
      "Epoch 765/1000\n",
      " - 1s - loss: 7.6496e-04 - acc: 1.0000 - auc_roc: 0.9977\n",
      "Epoch 766/1000\n",
      " - 1s - loss: 5.6126e-04 - acc: 1.0000 - auc_roc: 0.9978\n",
      "Epoch 767/1000\n",
      " - 1s - loss: 4.0625e-04 - acc: 1.0000 - auc_roc: 0.9978\n",
      "Epoch 768/1000\n",
      " - 1s - loss: 3.6780e-04 - acc: 1.0000 - auc_roc: 0.9978\n",
      "Epoch 769/1000\n",
      " - 1s - loss: 2.9391e-04 - acc: 1.0000 - auc_roc: 0.9978\n",
      "Epoch 770/1000\n",
      " - 1s - loss: 2.6492e-04 - acc: 1.0000 - auc_roc: 0.9978\n",
      "Epoch 771/1000\n",
      " - 1s - loss: 2.4364e-04 - acc: 1.0000 - auc_roc: 0.9978\n",
      "Epoch 772/1000\n",
      " - 1s - loss: 2.3019e-04 - acc: 1.0000 - auc_roc: 0.9978\n",
      "Epoch 773/1000\n",
      " - 1s - loss: 2.3609e-04 - acc: 1.0000 - auc_roc: 0.9978\n",
      "Epoch 774/1000\n",
      " - 1s - loss: 0.0204 - acc: 0.9955 - auc_roc: 0.9978\n",
      "Epoch 775/1000\n",
      " - 1s - loss: 0.0427 - acc: 0.9843 - auc_roc: 0.9978\n",
      "Epoch 776/1000\n",
      " - 1s - loss: 0.0086 - acc: 0.9966 - auc_roc: 0.9978\n",
      "Epoch 777/1000\n",
      " - 1s - loss: 0.0035 - acc: 0.9988 - auc_roc: 0.9978\n",
      "Epoch 778/1000\n",
      " - 1s - loss: 0.0024 - acc: 0.9994 - auc_roc: 0.9978\n",
      "Epoch 779/1000\n",
      " - 1s - loss: 0.0113 - acc: 0.9969 - auc_roc: 0.9978\n",
      "Epoch 780/1000\n",
      " - 1s - loss: 0.0016 - acc: 0.9998 - auc_roc: 0.9978\n",
      "Epoch 781/1000\n",
      " - 1s - loss: 9.2415e-04 - acc: 0.9999 - auc_roc: 0.9978\n",
      "Epoch 782/1000\n",
      " - 1s - loss: 5.1756e-04 - acc: 1.0000 - auc_roc: 0.9978\n",
      "Epoch 783/1000\n",
      " - 1s - loss: 4.2217e-04 - acc: 1.0000 - auc_roc: 0.9978\n",
      "Epoch 784/1000\n",
      " - 1s - loss: 3.3844e-04 - acc: 1.0000 - auc_roc: 0.9978\n",
      "Epoch 785/1000\n",
      " - 1s - loss: 2.8536e-04 - acc: 1.0000 - auc_roc: 0.9978\n",
      "Epoch 786/1000\n",
      " - 1s - loss: 2.6615e-04 - acc: 1.0000 - auc_roc: 0.9978\n",
      "Epoch 787/1000\n",
      " - 1s - loss: 2.2920e-04 - acc: 1.0000 - auc_roc: 0.9978\n",
      "Epoch 788/1000\n",
      " - 1s - loss: 2.0244e-04 - acc: 1.0000 - auc_roc: 0.9978\n",
      "Epoch 789/1000\n",
      " - 1s - loss: 1.7431e-04 - acc: 1.0000 - auc_roc: 0.9978\n",
      "Epoch 790/1000\n",
      " - 1s - loss: 1.6066e-04 - acc: 1.0000 - auc_roc: 0.9979\n",
      "Epoch 791/1000\n",
      " - 1s - loss: 1.8694e-04 - acc: 1.0000 - auc_roc: 0.9979\n",
      "Epoch 792/1000\n",
      " - 1s - loss: 0.0557 - acc: 0.9855 - auc_roc: 0.9979\n",
      "Epoch 793/1000\n",
      " - 1s - loss: 0.0204 - acc: 0.9938 - auc_roc: 0.9979\n",
      "Epoch 794/1000\n",
      " - 1s - loss: 0.0088 - acc: 0.9969 - auc_roc: 0.9979\n",
      "Epoch 795/1000\n",
      " - 1s - loss: 0.0022 - acc: 0.9997 - auc_roc: 0.9979\n",
      "Epoch 796/1000\n",
      " - 1s - loss: 8.2655e-04 - acc: 1.0000 - auc_roc: 0.9979\n",
      "Epoch 797/1000\n",
      " - 1s - loss: 7.3672e-04 - acc: 1.0000 - auc_roc: 0.9979\n",
      "Epoch 798/1000\n",
      " - 1s - loss: 6.8417e-04 - acc: 0.9999 - auc_roc: 0.9979\n",
      "Epoch 799/1000\n",
      " - 1s - loss: 0.0022 - acc: 0.9992 - auc_roc: 0.9979\n",
      "Epoch 800/1000\n",
      " - 1s - loss: 0.0222 - acc: 0.9914 - auc_roc: 0.9979\n",
      "Epoch 801/1000\n",
      " - 1s - loss: 0.0108 - acc: 0.9961 - auc_roc: 0.9979\n",
      "Epoch 802/1000\n",
      " - 1s - loss: 0.0024 - acc: 0.9996 - auc_roc: 0.9979\n",
      "Epoch 803/1000\n",
      " - 1s - loss: 9.5396e-04 - acc: 1.0000 - auc_roc: 0.9979\n",
      "Epoch 804/1000\n",
      " - 1s - loss: 5.1630e-04 - acc: 1.0000 - auc_roc: 0.9979\n",
      "Epoch 805/1000\n",
      " - 1s - loss: 4.0865e-04 - acc: 1.0000 - auc_roc: 0.9979\n",
      "Epoch 806/1000\n",
      " - 1s - loss: 3.3611e-04 - acc: 1.0000 - auc_roc: 0.9979\n",
      "Epoch 807/1000\n",
      " - 1s - loss: 3.0856e-04 - acc: 1.0000 - auc_roc: 0.9979\n",
      "Epoch 808/1000\n",
      " - 1s - loss: 2.5968e-04 - acc: 1.0000 - auc_roc: 0.9979\n",
      "Epoch 809/1000\n",
      " - 1s - loss: 2.2586e-04 - acc: 1.0000 - auc_roc: 0.9979\n",
      "Epoch 810/1000\n",
      " - 1s - loss: 2.6395e-04 - acc: 1.0000 - auc_roc: 0.9979\n",
      "Epoch 811/1000\n",
      " - 1s - loss: 1.7830e-04 - acc: 1.0000 - auc_roc: 0.9979\n",
      "Epoch 812/1000\n",
      " - 1s - loss: 1.6088e-04 - acc: 1.0000 - auc_roc: 0.9979\n",
      "Epoch 813/1000\n",
      " - 1s - loss: 1.4430e-04 - acc: 1.0000 - auc_roc: 0.9979\n",
      "Epoch 814/1000\n",
      " - 1s - loss: 2.7263e-04 - acc: 1.0000 - auc_roc: 0.9979\n",
      "Epoch 815/1000\n",
      " - 1s - loss: 0.0560 - acc: 0.9839 - auc_roc: 0.9979\n",
      "Epoch 816/1000\n",
      " - 1s - loss: 0.0067 - acc: 0.9975 - auc_roc: 0.9979\n",
      "Epoch 817/1000\n",
      " - 1s - loss: 0.0087 - acc: 0.9962 - auc_roc: 0.9979\n",
      "Epoch 818/1000\n",
      " - 1s - loss: 0.0183 - acc: 0.9938 - auc_roc: 0.9979\n",
      "Epoch 819/1000\n",
      " - 1s - loss: 0.0043 - acc: 0.9991 - auc_roc: 0.9979\n",
      "Epoch 820/1000\n",
      " - 1s - loss: 0.0020 - acc: 0.9997 - auc_roc: 0.9980\n",
      "Epoch 821/1000\n",
      " - 1s - loss: 0.0010 - acc: 0.9998 - auc_roc: 0.9980\n",
      "Epoch 822/1000\n",
      " - 1s - loss: 6.4495e-04 - acc: 1.0000 - auc_roc: 0.9980\n",
      "Epoch 823/1000\n",
      " - 1s - loss: 4.5939e-04 - acc: 1.0000 - auc_roc: 0.9980\n",
      "Epoch 824/1000\n",
      " - 1s - loss: 3.9666e-04 - acc: 1.0000 - auc_roc: 0.9980\n",
      "Epoch 825/1000\n",
      " - 1s - loss: 3.6310e-04 - acc: 1.0000 - auc_roc: 0.9980\n",
      "Epoch 826/1000\n",
      " - 1s - loss: 2.8571e-04 - acc: 1.0000 - auc_roc: 0.9980\n",
      "Epoch 827/1000\n",
      " - 1s - loss: 2.6560e-04 - acc: 1.0000 - auc_roc: 0.9980\n",
      "Epoch 828/1000\n",
      " - 1s - loss: 2.3811e-04 - acc: 1.0000 - auc_roc: 0.9980\n",
      "Epoch 829/1000\n",
      " - 1s - loss: 1.8979e-04 - acc: 1.0000 - auc_roc: 0.9980\n",
      "Epoch 830/1000\n",
      " - 1s - loss: 1.8495e-04 - acc: 1.0000 - auc_roc: 0.9980\n",
      "Epoch 831/1000\n",
      " - 1s - loss: 5.2790e-04 - acc: 0.9999 - auc_roc: 0.9980\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 832/1000\n",
      " - 1s - loss: 0.0637 - acc: 0.9824 - auc_roc: 0.9980\n",
      "Epoch 833/1000\n",
      " - 1s - loss: 0.0049 - acc: 0.9987 - auc_roc: 0.9980\n",
      "Epoch 834/1000\n",
      " - 1s - loss: 0.0033 - acc: 0.9991 - auc_roc: 0.9980\n",
      "Epoch 835/1000\n",
      " - 1s - loss: 0.0017 - acc: 0.9996 - auc_roc: 0.9980\n",
      "Epoch 836/1000\n",
      " - 1s - loss: 0.0011 - acc: 0.9996 - auc_roc: 0.9980\n",
      "Epoch 837/1000\n",
      " - 1s - loss: 3.9878e-04 - acc: 1.0000 - auc_roc: 0.9980\n",
      "Epoch 838/1000\n",
      " - 1s - loss: 3.3772e-04 - acc: 1.0000 - auc_roc: 0.9980\n",
      "Epoch 839/1000\n",
      " - 1s - loss: 2.5833e-04 - acc: 1.0000 - auc_roc: 0.9980\n",
      "Epoch 840/1000\n",
      " - 1s - loss: 2.2844e-04 - acc: 1.0000 - auc_roc: 0.9980\n",
      "Epoch 841/1000\n",
      " - 1s - loss: 1.9785e-04 - acc: 1.0000 - auc_roc: 0.9980\n",
      "Epoch 842/1000\n",
      " - 1s - loss: 1.7726e-04 - acc: 1.0000 - auc_roc: 0.9980\n",
      "Epoch 843/1000\n",
      " - 1s - loss: 1.6673e-04 - acc: 1.0000 - auc_roc: 0.9980\n",
      "Epoch 844/1000\n",
      " - 1s - loss: 1.5203e-04 - acc: 1.0000 - auc_roc: 0.9980\n",
      "Epoch 845/1000\n",
      " - 1s - loss: 1.4830e-04 - acc: 1.0000 - auc_roc: 0.9980\n",
      "Epoch 846/1000\n",
      " - 1s - loss: 1.3526e-04 - acc: 1.0000 - auc_roc: 0.9980\n",
      "Epoch 847/1000\n",
      " - 1s - loss: 1.1618e-04 - acc: 1.0000 - auc_roc: 0.9981\n",
      "Epoch 848/1000\n",
      " - 1s - loss: 0.0130 - acc: 0.9975 - auc_roc: 0.9981\n",
      "Epoch 849/1000\n",
      " - 1s - loss: 0.0600 - acc: 0.9782 - auc_roc: 0.9980\n",
      "Epoch 850/1000\n",
      " - 1s - loss: 0.0065 - acc: 0.9981 - auc_roc: 0.9981\n",
      "Epoch 851/1000\n",
      " - 1s - loss: 0.0042 - acc: 0.9987 - auc_roc: 0.9981\n",
      "Epoch 852/1000\n",
      " - 1s - loss: 0.0122 - acc: 0.9963 - auc_roc: 0.9981\n",
      "Epoch 853/1000\n",
      " - 1s - loss: 0.0051 - acc: 0.9987 - auc_roc: 0.9981\n",
      "Epoch 854/1000\n",
      " - 1s - loss: 0.0012 - acc: 0.9999 - auc_roc: 0.9981\n",
      "Epoch 855/1000\n",
      " - 1s - loss: 6.4178e-04 - acc: 1.0000 - auc_roc: 0.9981\n",
      "Epoch 856/1000\n",
      " - 1s - loss: 3.9582e-04 - acc: 1.0000 - auc_roc: 0.9981\n",
      "Epoch 857/1000\n",
      " - 1s - loss: 2.8847e-04 - acc: 1.0000 - auc_roc: 0.9981\n",
      "Epoch 858/1000\n",
      " - 1s - loss: 3.6413e-04 - acc: 1.0000 - auc_roc: 0.9981\n",
      "Epoch 859/1000\n",
      " - 1s - loss: 2.6314e-04 - acc: 1.0000 - auc_roc: 0.9981\n",
      "Epoch 860/1000\n",
      " - 1s - loss: 2.2754e-04 - acc: 1.0000 - auc_roc: 0.9981\n",
      "Epoch 861/1000\n",
      " - 1s - loss: 3.4495e-04 - acc: 1.0000 - auc_roc: 0.9981\n",
      "Epoch 862/1000\n",
      " - 1s - loss: 0.0402 - acc: 0.9861 - auc_roc: 0.9981\n",
      "Epoch 863/1000\n",
      " - 1s - loss: 0.0066 - acc: 0.9976 - auc_roc: 0.9981\n",
      "Epoch 864/1000\n",
      " - 1s - loss: 0.0157 - acc: 0.9954 - auc_roc: 0.9981\n",
      "Epoch 865/1000\n",
      " - 1s - loss: 0.0075 - acc: 0.9980 - auc_roc: 0.9981\n",
      "Epoch 866/1000\n",
      " - 1s - loss: 0.0014 - acc: 0.9998 - auc_roc: 0.9981\n",
      "Epoch 867/1000\n",
      " - 1s - loss: 6.9838e-04 - acc: 1.0000 - auc_roc: 0.9981\n",
      "Epoch 868/1000\n",
      " - 1s - loss: 3.9407e-04 - acc: 1.0000 - auc_roc: 0.9981\n",
      "Epoch 869/1000\n",
      " - 1s - loss: 3.1425e-04 - acc: 1.0000 - auc_roc: 0.9981\n",
      "Epoch 870/1000\n",
      " - 1s - loss: 2.9065e-04 - acc: 1.0000 - auc_roc: 0.9981\n",
      "Epoch 871/1000\n",
      " - 1s - loss: 2.7444e-04 - acc: 1.0000 - auc_roc: 0.9981\n",
      "Epoch 872/1000\n",
      " - 1s - loss: 3.3686e-04 - acc: 1.0000 - auc_roc: 0.9981\n",
      "Epoch 873/1000\n",
      " - 1s - loss: 2.6104e-04 - acc: 1.0000 - auc_roc: 0.9981\n",
      "Epoch 874/1000\n",
      " - 1s - loss: 5.1823e-04 - acc: 0.9999 - auc_roc: 0.9981\n",
      "Epoch 875/1000\n",
      " - 1s - loss: 0.0464 - acc: 0.9862 - auc_roc: 0.9981\n",
      "Epoch 876/1000\n",
      " - 1s - loss: 0.0085 - acc: 0.9975 - auc_roc: 0.9981\n",
      "Epoch 877/1000\n",
      " - 1s - loss: 0.0060 - acc: 0.9985 - auc_roc: 0.9981\n",
      "Epoch 878/1000\n",
      " - 1s - loss: 0.0074 - acc: 0.9975 - auc_roc: 0.9981\n",
      "Epoch 879/1000\n",
      " - 1s - loss: 0.0014 - acc: 0.9997 - auc_roc: 0.9981\n",
      "Epoch 880/1000\n",
      " - 1s - loss: 5.7641e-04 - acc: 0.9999 - auc_roc: 0.9981\n",
      "Epoch 881/1000\n",
      " - 1s - loss: 3.7904e-04 - acc: 1.0000 - auc_roc: 0.9981\n",
      "Epoch 882/1000\n",
      " - 1s - loss: 2.8601e-04 - acc: 1.0000 - auc_roc: 0.9981\n",
      "Epoch 883/1000\n",
      " - 1s - loss: 2.7491e-04 - acc: 1.0000 - auc_roc: 0.9982\n",
      "Epoch 884/1000\n",
      " - 1s - loss: 0.0218 - acc: 0.9926 - auc_roc: 0.9982\n",
      "Epoch 885/1000\n",
      " - 1s - loss: 0.0106 - acc: 0.9959 - auc_roc: 0.9982\n",
      "Epoch 886/1000\n",
      " - 1s - loss: 0.0137 - acc: 0.9947 - auc_roc: 0.9982\n",
      "Epoch 887/1000\n",
      " - 1s - loss: 0.0051 - acc: 0.9989 - auc_roc: 0.9982\n",
      "Epoch 888/1000\n",
      " - 1s - loss: 8.5161e-04 - acc: 1.0000 - auc_roc: 0.9982\n",
      "Epoch 889/1000\n",
      " - 1s - loss: 9.5192e-04 - acc: 0.9999 - auc_roc: 0.9982\n",
      "Epoch 890/1000\n",
      " - 1s - loss: 4.7141e-04 - acc: 1.0000 - auc_roc: 0.9982\n",
      "Epoch 891/1000\n",
      " - 1s - loss: 0.0084 - acc: 0.9972 - auc_roc: 0.9982\n",
      "Epoch 892/1000\n",
      " - 1s - loss: 0.0186 - acc: 0.9933 - auc_roc: 0.9982\n",
      "Epoch 893/1000\n",
      " - 1s - loss: 0.0032 - acc: 0.9991 - auc_roc: 0.9982\n",
      "Epoch 894/1000\n",
      " - 1s - loss: 9.7043e-04 - acc: 1.0000 - auc_roc: 0.9982\n",
      "Epoch 895/1000\n",
      " - 1s - loss: 4.7963e-04 - acc: 1.0000 - auc_roc: 0.9982\n",
      "Epoch 896/1000\n",
      " - 1s - loss: 2.9874e-04 - acc: 1.0000 - auc_roc: 0.9982\n",
      "Epoch 897/1000\n",
      " - 1s - loss: 2.1312e-04 - acc: 1.0000 - auc_roc: 0.9982\n",
      "Epoch 898/1000\n",
      " - 1s - loss: 1.7972e-04 - acc: 1.0000 - auc_roc: 0.9982\n",
      "Epoch 899/1000\n",
      " - 1s - loss: 1.6895e-04 - acc: 1.0000 - auc_roc: 0.9982\n",
      "Epoch 900/1000\n",
      " - 1s - loss: 1.7481e-04 - acc: 1.0000 - auc_roc: 0.9982\n",
      "Epoch 901/1000\n",
      " - 1s - loss: 5.5591e-04 - acc: 0.9999 - auc_roc: 0.9982\n",
      "Epoch 902/1000\n",
      " - 1s - loss: 0.0402 - acc: 0.9879 - auc_roc: 0.9982\n",
      "Epoch 903/1000\n",
      " - 1s - loss: 0.0021 - acc: 0.9996 - auc_roc: 0.9982\n",
      "Epoch 904/1000\n",
      " - 1s - loss: 0.0018 - acc: 0.9996 - auc_roc: 0.9982\n",
      "Epoch 905/1000\n",
      " - 1s - loss: 0.0017 - acc: 0.9994 - auc_roc: 0.9982\n",
      "Epoch 906/1000\n",
      " - 1s - loss: 4.6963e-04 - acc: 1.0000 - auc_roc: 0.9982\n",
      "Epoch 907/1000\n",
      " - 1s - loss: 3.4517e-04 - acc: 1.0000 - auc_roc: 0.9982\n",
      "Epoch 908/1000\n",
      " - 1s - loss: 2.9521e-04 - acc: 1.0000 - auc_roc: 0.9982\n",
      "Epoch 909/1000\n",
      " - 1s - loss: 0.0150 - acc: 0.9960 - auc_roc: 0.9982\n",
      "Epoch 910/1000\n",
      " - 1s - loss: 0.0211 - acc: 0.9916 - auc_roc: 0.9982\n",
      "Epoch 911/1000\n",
      " - 1s - loss: 0.0073 - acc: 0.9974 - auc_roc: 0.9982\n",
      "Epoch 912/1000\n",
      " - 1s - loss: 0.0028 - acc: 0.9993 - auc_roc: 0.9982\n",
      "Epoch 913/1000\n",
      " - 1s - loss: 0.0017 - acc: 0.9994 - auc_roc: 0.9982\n",
      "Epoch 914/1000\n",
      " - 1s - loss: 0.0019 - acc: 0.9993 - auc_roc: 0.9982\n",
      "Epoch 915/1000\n",
      " - 1s - loss: 0.0026 - acc: 0.9992 - auc_roc: 0.9982\n",
      "Epoch 916/1000\n",
      " - 1s - loss: 0.0017 - acc: 0.9996 - auc_roc: 0.9982\n",
      "Epoch 917/1000\n",
      " - 1s - loss: 6.2928e-04 - acc: 1.0000 - auc_roc: 0.9982\n",
      "Epoch 918/1000\n",
      " - 1s - loss: 4.2489e-04 - acc: 1.0000 - auc_roc: 0.9982\n",
      "Epoch 919/1000\n",
      " - 1s - loss: 3.0273e-04 - acc: 1.0000 - auc_roc: 0.9983\n",
      "Epoch 920/1000\n",
      " - 1s - loss: 4.0409e-04 - acc: 1.0000 - auc_roc: 0.9983\n",
      "Epoch 921/1000\n",
      " - 1s - loss: 3.2125e-04 - acc: 1.0000 - auc_roc: 0.9983\n",
      "Epoch 922/1000\n",
      " - 1s - loss: 3.0776e-04 - acc: 0.9999 - auc_roc: 0.9983\n",
      "Epoch 923/1000\n",
      " - 1s - loss: 1.6545e-04 - acc: 1.0000 - auc_roc: 0.9983\n",
      "Epoch 924/1000\n",
      " - 1s - loss: 2.1942e-04 - acc: 1.0000 - auc_roc: 0.9983\n",
      "Epoch 925/1000\n",
      " - 1s - loss: 1.1592e-04 - acc: 1.0000 - auc_roc: 0.9983\n",
      "Epoch 926/1000\n",
      " - 1s - loss: 1.1181e-04 - acc: 1.0000 - auc_roc: 0.9983\n",
      "Epoch 927/1000\n",
      " - 1s - loss: 8.4131e-05 - acc: 1.0000 - auc_roc: 0.9983\n",
      "Epoch 928/1000\n",
      " - 1s - loss: 7.5478e-05 - acc: 1.0000 - auc_roc: 0.9983\n",
      "Epoch 929/1000\n",
      " - 1s - loss: 1.2703e-04 - acc: 1.0000 - auc_roc: 0.9983\n",
      "Epoch 930/1000\n",
      " - 1s - loss: 8.5052e-05 - acc: 1.0000 - auc_roc: 0.9983\n",
      "Epoch 931/1000\n",
      " - 1s - loss: 0.0415 - acc: 0.9881 - auc_roc: 0.9983\n",
      "Epoch 932/1000\n",
      " - 1s - loss: 0.0102 - acc: 0.9971 - auc_roc: 0.9983\n",
      "Epoch 933/1000\n",
      " - 1s - loss: 0.0017 - acc: 0.9997 - auc_roc: 0.9983\n",
      "Epoch 934/1000\n",
      " - 1s - loss: 5.3000e-04 - acc: 1.0000 - auc_roc: 0.9983\n",
      "Epoch 935/1000\n",
      " - 1s - loss: 6.6320e-04 - acc: 0.9999 - auc_roc: 0.9983\n",
      "Epoch 936/1000\n",
      " - 1s - loss: 0.0075 - acc: 0.9970 - auc_roc: 0.9983\n",
      "Epoch 937/1000\n",
      " - 1s - loss: 0.0179 - acc: 0.9939 - auc_roc: 0.9983\n",
      "Epoch 938/1000\n",
      " - 1s - loss: 0.0027 - acc: 0.9994 - auc_roc: 0.9983\n",
      "Epoch 939/1000\n",
      " - 1s - loss: 6.2627e-04 - acc: 1.0000 - auc_roc: 0.9983\n",
      "Epoch 940/1000\n",
      " - 1s - loss: 5.1288e-04 - acc: 0.9999 - auc_roc: 0.9983\n",
      "Epoch 941/1000\n",
      " - 1s - loss: 5.8642e-04 - acc: 0.9998 - auc_roc: 0.9983\n",
      "Epoch 942/1000\n",
      " - 1s - loss: 4.1483e-04 - acc: 0.9999 - auc_roc: 0.9983\n",
      "Epoch 943/1000\n",
      " - 1s - loss: 1.9829e-04 - acc: 1.0000 - auc_roc: 0.9983\n",
      "Epoch 944/1000\n",
      " - 1s - loss: 2.2999e-04 - acc: 1.0000 - auc_roc: 0.9983\n",
      "Epoch 945/1000\n",
      " - 1s - loss: 1.5936e-04 - acc: 1.0000 - auc_roc: 0.9983\n",
      "Epoch 946/1000\n",
      " - 1s - loss: 1.3632e-04 - acc: 1.0000 - auc_roc: 0.9983\n",
      "Epoch 947/1000\n",
      " - 1s - loss: 1.1945e-04 - acc: 1.0000 - auc_roc: 0.9983\n",
      "Epoch 948/1000\n",
      " - 1s - loss: 1.0416e-04 - acc: 1.0000 - auc_roc: 0.9983\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 949/1000\n",
      " - 1s - loss: 9.4802e-05 - acc: 1.0000 - auc_roc: 0.9983\n",
      "Epoch 950/1000\n",
      " - 1s - loss: 8.6408e-05 - acc: 1.0000 - auc_roc: 0.9983\n",
      "Epoch 951/1000\n",
      " - 1s - loss: 8.1282e-05 - acc: 1.0000 - auc_roc: 0.9983\n",
      "Epoch 952/1000\n",
      " - 1s - loss: 7.1574e-05 - acc: 1.0000 - auc_roc: 0.9983\n",
      "Epoch 953/1000\n",
      " - 1s - loss: 6.8392e-05 - acc: 1.0000 - auc_roc: 0.9983\n",
      "Epoch 954/1000\n",
      " - 1s - loss: 6.5971e-05 - acc: 1.0000 - auc_roc: 0.9983\n",
      "Epoch 955/1000\n",
      " - 1s - loss: 8.1076e-05 - acc: 1.0000 - auc_roc: 0.9984\n",
      "Epoch 956/1000\n",
      " - 1s - loss: 7.3172e-05 - acc: 1.0000 - auc_roc: 0.9984\n",
      "Epoch 957/1000\n",
      " - 1s - loss: 0.0841 - acc: 0.9760 - auc_roc: 0.9983\n",
      "Epoch 958/1000\n",
      " - 1s - loss: 0.0058 - acc: 0.9984 - auc_roc: 0.9983\n",
      "Epoch 959/1000\n",
      " - 1s - loss: 0.0014 - acc: 0.9998 - auc_roc: 0.9984\n",
      "Epoch 960/1000\n",
      " - 1s - loss: 7.8493e-04 - acc: 1.0000 - auc_roc: 0.9984\n",
      "Epoch 961/1000\n",
      " - 1s - loss: 6.8596e-04 - acc: 0.9999 - auc_roc: 0.9984\n",
      "Epoch 962/1000\n",
      " - 1s - loss: 3.2023e-04 - acc: 1.0000 - auc_roc: 0.9984\n",
      "Epoch 963/1000\n",
      " - 1s - loss: 2.0078e-04 - acc: 1.0000 - auc_roc: 0.9984\n",
      "Epoch 964/1000\n",
      " - 1s - loss: 1.6248e-04 - acc: 1.0000 - auc_roc: 0.9984\n",
      "Epoch 965/1000\n",
      " - 1s - loss: 1.3934e-04 - acc: 1.0000 - auc_roc: 0.9984\n",
      "Epoch 966/1000\n",
      " - 1s - loss: 1.1720e-04 - acc: 1.0000 - auc_roc: 0.9984\n",
      "Epoch 967/1000\n",
      " - 1s - loss: 1.0941e-04 - acc: 1.0000 - auc_roc: 0.9984\n",
      "Epoch 968/1000\n",
      " - 1s - loss: 9.6049e-05 - acc: 1.0000 - auc_roc: 0.9984\n",
      "Epoch 969/1000\n",
      " - 1s - loss: 8.8633e-05 - acc: 1.0000 - auc_roc: 0.9984\n",
      "Epoch 970/1000\n",
      " - 1s - loss: 7.9189e-05 - acc: 1.0000 - auc_roc: 0.9984\n",
      "Epoch 971/1000\n",
      " - 1s - loss: 7.0719e-05 - acc: 1.0000 - auc_roc: 0.9984\n",
      "Epoch 972/1000\n",
      " - 1s - loss: 6.5062e-05 - acc: 1.0000 - auc_roc: 0.9984\n",
      "Epoch 973/1000\n",
      " - 1s - loss: 6.1515e-05 - acc: 1.0000 - auc_roc: 0.9984\n",
      "Epoch 974/1000\n",
      " - 1s - loss: 5.6493e-05 - acc: 1.0000 - auc_roc: 0.9984\n",
      "Epoch 975/1000\n",
      " - 1s - loss: 0.0416 - acc: 0.9925 - auc_roc: 0.9984\n",
      "Epoch 976/1000\n",
      " - 1s - loss: 0.0326 - acc: 0.9881 - auc_roc: 0.9984\n",
      "Epoch 977/1000\n",
      " - 1s - loss: 0.0103 - acc: 0.9968 - auc_roc: 0.9984\n",
      "Epoch 978/1000\n",
      " - 1s - loss: 0.0034 - acc: 0.9989 - auc_roc: 0.9984\n",
      "Epoch 979/1000\n",
      " - 1s - loss: 0.0097 - acc: 0.9962 - auc_roc: 0.9984\n",
      "Epoch 980/1000\n",
      " - 1s - loss: 0.0054 - acc: 0.9981 - auc_roc: 0.9984\n",
      "Epoch 981/1000\n",
      " - 1s - loss: 0.0059 - acc: 0.9976 - auc_roc: 0.9984\n",
      "Epoch 982/1000\n",
      " - 1s - loss: 0.0027 - acc: 0.9990 - auc_roc: 0.9984\n",
      "Epoch 983/1000\n",
      " - 1s - loss: 0.0118 - acc: 0.9962 - auc_roc: 0.9984\n",
      "Epoch 984/1000\n",
      " - 1s - loss: 0.0036 - acc: 0.9992 - auc_roc: 0.9984\n",
      "Epoch 985/1000\n",
      " - 1s - loss: 6.5029e-04 - acc: 1.0000 - auc_roc: 0.9984\n",
      "Epoch 986/1000\n",
      " - 1s - loss: 3.3371e-04 - acc: 1.0000 - auc_roc: 0.9984\n",
      "Epoch 987/1000\n",
      " - 1s - loss: 2.3593e-04 - acc: 1.0000 - auc_roc: 0.9984\n",
      "Epoch 988/1000\n",
      " - 1s - loss: 1.7309e-04 - acc: 1.0000 - auc_roc: 0.9984\n",
      "Epoch 989/1000\n",
      " - 1s - loss: 1.3965e-04 - acc: 1.0000 - auc_roc: 0.9984\n",
      "Epoch 990/1000\n",
      " - 1s - loss: 1.1814e-04 - acc: 1.0000 - auc_roc: 0.9984\n",
      "Epoch 991/1000\n",
      " - 1s - loss: 1.0288e-04 - acc: 1.0000 - auc_roc: 0.9984\n",
      "Epoch 992/1000\n",
      " - 1s - loss: 9.1779e-05 - acc: 1.0000 - auc_roc: 0.9984\n",
      "Epoch 993/1000\n",
      " - 1s - loss: 8.1034e-05 - acc: 1.0000 - auc_roc: 0.9984\n",
      "Epoch 994/1000\n",
      " - 1s - loss: 7.5388e-05 - acc: 1.0000 - auc_roc: 0.9984\n",
      "Epoch 995/1000\n",
      " - 1s - loss: 6.7666e-05 - acc: 1.0000 - auc_roc: 0.9984\n",
      "Epoch 996/1000\n",
      " - 1s - loss: 6.2982e-05 - acc: 1.0000 - auc_roc: 0.9984\n",
      "Epoch 997/1000\n",
      " - 1s - loss: 5.8355e-05 - acc: 1.0000 - auc_roc: 0.9984\n",
      "Epoch 998/1000\n",
      " - 1s - loss: 5.4286e-05 - acc: 1.0000 - auc_roc: 0.9984\n",
      "Epoch 999/1000\n",
      " - 1s - loss: 5.0741e-05 - acc: 1.0000 - auc_roc: 0.9984\n",
      "Epoch 1000/1000\n",
      " - 1s - loss: 4.7625e-05 - acc: 1.0000 - auc_roc: 0.9984\n"
     ]
    }
   ],
   "source": [
    "model = Sequential()\n",
    "model.add(Dense(320, input_dim=KFold_X_train.shape[1], activation='relu'))\n",
    "\n",
    "#model.add(Dense(256, activation='relu'))\n",
    "#model.add(Dense(64, activation='relu'))\n",
    "#model.add(Dense(64, activation='relu'))\n",
    "#model.add(Dense(10, activation='relu'))\n",
    "#model.add(Dense(10, activation='sigmoid'))\n",
    "#model.add(Dense(1,  activation='sigmoid'))\n",
    "\n",
    "model.add(Dense(160, activation='relu'))\n",
    "model.add(Dense(80, activation='relu'))\n",
    "model.add(Dense(1, activation='sigmoid'))\n",
    "#model.add(Dense(2, activation='softmax'))\n",
    "#model.compile(optimizer='adam', loss='categorical_crossentropy', metrics=['accuracy', auc_roc])\n",
    "model.compile(Adam(lr=0.0001), loss='binary_crossentropy', metrics=['accuracy', auc_roc])\n",
    "\n",
    "my_callbacks = [EarlyStopping(monitor='auc_roc', patience=20, verbose=1, mode='max')]\n",
    "\n",
    "#model.fit(KFold_X_train, KFold_y_train,\n",
    "#         epochs=20, \n",
    "#         validation_split = 0.05,\n",
    "#         batch_size = 5, \n",
    "#         verbose=2,\n",
    "#         callbacks=my_callbacks)\n",
    "\n",
    "\n",
    "model.fit(KFold_X_train, KFold_y_train,\n",
    "         epochs=10, \n",
    "         batch_size = 32, \n",
    "         verbose=2,\n",
    "         callbacks=my_callbacks,\n",
    "         shuffle=True)\n",
    "\n",
    "model.fit(KFold_X_train, KFold_y_train,\n",
    "         epochs=1000, \n",
    "         batch_size = 32, \n",
    "         verbose=2,\n",
    "         callbacks=my_callbacks,\n",
    "         shuffle=False)\n",
    "\n",
    "prediction1000 = model.predict(KFold_X_test)\n",
    "np.savetxt(\"500_epoch.csv\", predictionss, delimiter=\",\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 207,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      " Fold 1 - Run 1\n",
      "\n",
      "Train on 8925 samples, validate on 2975 samples\n",
      "Epoch 1/5000\n",
      " - 12s - loss: 0.5010 - acc: 0.7752 - val_loss: 0.4040 - val_acc: 0.8434\n",
      "roc_auc: 0.8766 - roc_auc_val: 0.86133 - norm_gini: 0.75321 - norm_gini_val: 0.72267          \n",
      "\n",
      "Epoch 00001: norm_gini_val improved from -inf to 0.72267, saving model to keras-5fold-run-01-v1-fold-01-run-01.check\n",
      "Epoch 2/5000\n",
      " - 3s - loss: 0.3726 - acc: 0.8404 - val_loss: 0.3435 - val_acc: 0.8508\n",
      "roc_auc: 0.88263 - roc_auc_val: 0.86989 - norm_gini: 0.76525 - norm_gini_val: 0.73978          \n",
      "\n",
      "Epoch 00002: norm_gini_val improved from 0.72267 to 0.73978, saving model to keras-5fold-run-01-v1-fold-01-run-01.check\n",
      "Epoch 3/5000\n",
      " - 3s - loss: 0.3519 - acc: 0.8422 - val_loss: 0.3362 - val_acc: 0.8541\n",
      "roc_auc: 0.89176 - roc_auc_val: 0.87215 - norm_gini: 0.78352 - norm_gini_val: 0.7443          \n",
      "\n",
      "Epoch 00003: norm_gini_val improved from 0.73978 to 0.74430, saving model to keras-5fold-run-01-v1-fold-01-run-01.check\n",
      "Epoch 4/5000\n",
      " - 3s - loss: 0.3362 - acc: 0.8469 - val_loss: 0.3303 - val_acc: 0.8555\n",
      "roc_auc: 0.89598 - roc_auc_val: 0.87969 - norm_gini: 0.79195 - norm_gini_val: 0.75937          \n",
      "\n",
      "Epoch 00004: norm_gini_val improved from 0.74430 to 0.75937, saving model to keras-5fold-run-01-v1-fold-01-run-01.check\n",
      "Epoch 5/5000\n",
      " - 3s - loss: 0.3330 - acc: 0.8513 - val_loss: 0.3315 - val_acc: 0.8508\n",
      "roc_auc: 0.89873 - roc_auc_val: 0.87846 - norm_gini: 0.79745 - norm_gini_val: 0.75692          \n",
      "\n",
      "Epoch 00005: norm_gini_val did not improve from 0.75937\n",
      "Epoch 6/5000\n",
      " - 3s - loss: 0.3279 - acc: 0.8485 - val_loss: 0.3343 - val_acc: 0.8504\n",
      "roc_auc: 0.90108 - roc_auc_val: 0.87761 - norm_gini: 0.80216 - norm_gini_val: 0.75523          \n",
      "\n",
      "Epoch 00006: norm_gini_val did not improve from 0.75937\n",
      "Epoch 7/5000\n",
      " - 3s - loss: 0.3246 - acc: 0.8552 - val_loss: 0.3331 - val_acc: 0.8481\n",
      "roc_auc: 0.90147 - roc_auc_val: 0.88144 - norm_gini: 0.80294 - norm_gini_val: 0.76288          \n",
      "\n",
      "Epoch 00007: norm_gini_val improved from 0.75937 to 0.76288, saving model to keras-5fold-run-01-v1-fold-01-run-01.check\n",
      "Epoch 8/5000\n",
      " - 3s - loss: 0.3232 - acc: 0.8557 - val_loss: 0.3267 - val_acc: 0.8538\n",
      "roc_auc: 0.90379 - roc_auc_val: 0.88094 - norm_gini: 0.80758 - norm_gini_val: 0.76188          \n",
      "\n",
      "Epoch 00008: norm_gini_val did not improve from 0.76288\n",
      "Epoch 9/5000\n",
      " - 3s - loss: 0.3189 - acc: 0.8579 - val_loss: 0.3296 - val_acc: 0.8548\n",
      "roc_auc: 0.90367 - roc_auc_val: 0.87858 - norm_gini: 0.80735 - norm_gini_val: 0.75716          \n",
      "\n",
      "Epoch 00009: norm_gini_val did not improve from 0.76288\n",
      "Epoch 10/5000\n",
      " - 3s - loss: 0.3171 - acc: 0.8550 - val_loss: 0.3420 - val_acc: 0.8561\n",
      "roc_auc: 0.90217 - roc_auc_val: 0.87718 - norm_gini: 0.80434 - norm_gini_val: 0.75437          \n",
      "\n",
      "Epoch 00010: norm_gini_val did not improve from 0.76288\n",
      "Epoch 11/5000\n",
      " - 3s - loss: 0.3157 - acc: 0.8533 - val_loss: 0.3263 - val_acc: 0.8555\n",
      "roc_auc: 0.90467 - roc_auc_val: 0.87927 - norm_gini: 0.80934 - norm_gini_val: 0.75855          \n",
      "\n",
      "Epoch 00011: norm_gini_val did not improve from 0.76288\n",
      "Epoch 12/5000\n",
      " - 3s - loss: 0.3182 - acc: 0.8562 - val_loss: 0.3221 - val_acc: 0.8548\n",
      "roc_auc: 0.90525 - roc_auc_val: 0.88435 - norm_gini: 0.8105 - norm_gini_val: 0.76869          \n",
      "\n",
      "Epoch 00012: norm_gini_val improved from 0.76288 to 0.76869, saving model to keras-5fold-run-01-v1-fold-01-run-01.check\n",
      "Epoch 13/5000\n",
      " - 3s - loss: 0.3141 - acc: 0.8566 - val_loss: 0.3313 - val_acc: 0.8561\n",
      "roc_auc: 0.90457 - roc_auc_val: 0.8846 - norm_gini: 0.80913 - norm_gini_val: 0.7692          \n",
      "\n",
      "Epoch 00013: norm_gini_val improved from 0.76869 to 0.76920, saving model to keras-5fold-run-01-v1-fold-01-run-01.check\n",
      "Epoch 14/5000\n",
      " - 3s - loss: 0.3144 - acc: 0.8556 - val_loss: 0.3443 - val_acc: 0.8501\n",
      "roc_auc: 0.9035 - roc_auc_val: 0.88226 - norm_gini: 0.80701 - norm_gini_val: 0.76453          \n",
      "\n",
      "Epoch 00014: norm_gini_val did not improve from 0.76920\n",
      "Epoch 15/5000\n",
      " - 3s - loss: 0.3124 - acc: 0.8570 - val_loss: 0.3291 - val_acc: 0.8565\n",
      "roc_auc: 0.90795 - roc_auc_val: 0.88231 - norm_gini: 0.81591 - norm_gini_val: 0.76463          \n",
      "\n",
      "Epoch 00015: norm_gini_val did not improve from 0.76920\n",
      "Epoch 16/5000\n",
      " - 3s - loss: 0.3121 - acc: 0.8586 - val_loss: 0.3306 - val_acc: 0.8558\n",
      "roc_auc: 0.90594 - roc_auc_val: 0.88338 - norm_gini: 0.81188 - norm_gini_val: 0.76676          \n",
      "\n",
      "Epoch 00016: norm_gini_val did not improve from 0.76920\n",
      "Epoch 17/5000\n",
      " - 3s - loss: 0.3095 - acc: 0.8613 - val_loss: 0.3210 - val_acc: 0.8575\n",
      "roc_auc: 0.90787 - roc_auc_val: 0.88643 - norm_gini: 0.81573 - norm_gini_val: 0.77286          \n",
      "\n",
      "Epoch 00017: norm_gini_val improved from 0.76920 to 0.77286, saving model to keras-5fold-run-01-v1-fold-01-run-01.check\n",
      "Epoch 18/5000\n",
      " - 3s - loss: 0.3138 - acc: 0.8592 - val_loss: 0.3233 - val_acc: 0.8575\n",
      "roc_auc: 0.9083 - roc_auc_val: 0.88617 - norm_gini: 0.81659 - norm_gini_val: 0.77235          \n",
      "\n",
      "Epoch 00018: norm_gini_val did not improve from 0.77286\n",
      "Epoch 19/5000\n",
      " - 3s - loss: 0.3098 - acc: 0.8593 - val_loss: 0.3260 - val_acc: 0.8575\n",
      "roc_auc: 0.90918 - roc_auc_val: 0.88191 - norm_gini: 0.81836 - norm_gini_val: 0.76382          \n",
      "\n",
      "Epoch 00019: norm_gini_val did not improve from 0.77286\n",
      "Epoch 20/5000\n",
      " - 3s - loss: 0.3081 - acc: 0.8596 - val_loss: 0.3370 - val_acc: 0.8578\n",
      "roc_auc: 0.90512 - roc_auc_val: 0.87629 - norm_gini: 0.81023 - norm_gini_val: 0.75257          \n",
      "\n",
      "Epoch 00020: norm_gini_val did not improve from 0.77286\n",
      "Epoch 21/5000\n",
      " - 3s - loss: 0.3079 - acc: 0.8584 - val_loss: 0.3526 - val_acc: 0.8410\n",
      "roc_auc: 0.90802 - roc_auc_val: 0.88403 - norm_gini: 0.81604 - norm_gini_val: 0.76806          \n",
      "\n",
      "Epoch 00021: norm_gini_val did not improve from 0.77286\n",
      "Epoch 22/5000\n",
      " - 3s - loss: 0.3040 - acc: 0.8639 - val_loss: 0.3672 - val_acc: 0.8252\n",
      "roc_auc: 0.90526 - roc_auc_val: 0.88143 - norm_gini: 0.81051 - norm_gini_val: 0.76287          \n",
      "\n",
      "Epoch 00022: norm_gini_val did not improve from 0.77286\n",
      "Epoch 23/5000\n",
      " - 3s - loss: 0.3103 - acc: 0.8595 - val_loss: 0.3271 - val_acc: 0.8558\n",
      "roc_auc: 0.91067 - roc_auc_val: 0.88409 - norm_gini: 0.82134 - norm_gini_val: 0.76819          \n",
      "\n",
      "Epoch 00023: norm_gini_val did not improve from 0.77286\n",
      "Epoch 24/5000\n",
      " - 3s - loss: 0.3097 - acc: 0.8605 - val_loss: 0.3477 - val_acc: 0.8447\n",
      "roc_auc: 0.90869 - roc_auc_val: 0.88284 - norm_gini: 0.81738 - norm_gini_val: 0.76569          \n",
      "\n",
      "Epoch 00024: norm_gini_val did not improve from 0.77286\n",
      "Epoch 25/5000\n",
      " - 3s - loss: 0.3063 - acc: 0.8584 - val_loss: 0.3214 - val_acc: 0.8585\n",
      "roc_auc: 0.91227 - roc_auc_val: 0.88663 - norm_gini: 0.82453 - norm_gini_val: 0.77326          \n",
      "\n",
      "Epoch 00025: norm_gini_val improved from 0.77286 to 0.77326, saving model to keras-5fold-run-01-v1-fold-01-run-01.check\n",
      "Epoch 26/5000\n",
      " - 3s - loss: 0.3014 - acc: 0.8621 - val_loss: 0.3269 - val_acc: 0.8568\n",
      "roc_auc: 0.91243 - roc_auc_val: 0.88412 - norm_gini: 0.82486 - norm_gini_val: 0.76824          \n",
      "\n",
      "Epoch 00026: norm_gini_val did not improve from 0.77326\n",
      "Epoch 27/5000\n",
      " - 3s - loss: 0.3036 - acc: 0.8621 - val_loss: 0.3440 - val_acc: 0.8558\n",
      "roc_auc: 0.91169 - roc_auc_val: 0.88457 - norm_gini: 0.82337 - norm_gini_val: 0.76914          \n",
      "\n",
      "Epoch 00027: norm_gini_val did not improve from 0.77326\n",
      "Epoch 28/5000\n",
      " - 3s - loss: 0.3055 - acc: 0.8615 - val_loss: 0.3254 - val_acc: 0.8588\n",
      "roc_auc: 0.9141 - roc_auc_val: 0.88528 - norm_gini: 0.82821 - norm_gini_val: 0.77056          \n",
      "\n",
      "Epoch 00028: norm_gini_val did not improve from 0.77326\n",
      "Epoch 29/5000\n",
      " - 3s - loss: 0.3024 - acc: 0.8631 - val_loss: 0.3274 - val_acc: 0.8528\n",
      "roc_auc: 0.9134 - roc_auc_val: 0.8841 - norm_gini: 0.82681 - norm_gini_val: 0.76819          \n",
      "\n",
      "Epoch 00029: norm_gini_val did not improve from 0.77326\n",
      "Epoch 30/5000\n",
      " - 3s - loss: 0.3010 - acc: 0.8620 - val_loss: 0.3221 - val_acc: 0.8578\n",
      "roc_auc: 0.91543 - roc_auc_val: 0.88597 - norm_gini: 0.83087 - norm_gini_val: 0.77193          \n",
      "\n",
      "Epoch 00030: norm_gini_val did not improve from 0.77326\n",
      "Epoch 31/5000\n",
      " - 3s - loss: 0.3034 - acc: 0.8622 - val_loss: 0.3250 - val_acc: 0.8561\n",
      "roc_auc: 0.91519 - roc_auc_val: 0.88422 - norm_gini: 0.83037 - norm_gini_val: 0.76844          \n",
      "\n",
      "Epoch 00031: norm_gini_val did not improve from 0.77326\n",
      "Epoch 32/5000\n",
      " - 3s - loss: 0.3049 - acc: 0.8613 - val_loss: 0.3244 - val_acc: 0.8578\n",
      "roc_auc: 0.91684 - roc_auc_val: 0.88329 - norm_gini: 0.83368 - norm_gini_val: 0.76657          \n",
      "\n",
      "Epoch 00032: norm_gini_val did not improve from 0.77326\n",
      "Epoch 33/5000\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " - 3s - loss: 0.2956 - acc: 0.8638 - val_loss: 0.3575 - val_acc: 0.8545\n",
      "roc_auc: 0.91222 - roc_auc_val: 0.88035 - norm_gini: 0.82445 - norm_gini_val: 0.7607          \n",
      "\n",
      "Epoch 00033: norm_gini_val did not improve from 0.77326\n",
      "Epoch 34/5000\n",
      " - 3s - loss: 0.2978 - acc: 0.8645 - val_loss: 0.3283 - val_acc: 0.8568\n",
      "roc_auc: 0.91505 - roc_auc_val: 0.88075 - norm_gini: 0.83011 - norm_gini_val: 0.76149          \n",
      "\n",
      "Epoch 00034: norm_gini_val did not improve from 0.77326\n",
      "Epoch 35/5000\n",
      " - 3s - loss: 0.3023 - acc: 0.8599 - val_loss: 0.3265 - val_acc: 0.8561\n",
      "roc_auc: 0.9138 - roc_auc_val: 0.88386 - norm_gini: 0.8276 - norm_gini_val: 0.76772          \n",
      "\n",
      "Epoch 00035: norm_gini_val did not improve from 0.77326\n",
      "Epoch 36/5000\n",
      " - 3s - loss: 0.2976 - acc: 0.8635 - val_loss: 0.3285 - val_acc: 0.8531\n",
      "roc_auc: 0.91731 - roc_auc_val: 0.88383 - norm_gini: 0.83462 - norm_gini_val: 0.76766          \n",
      "\n",
      "Epoch 00036: norm_gini_val did not improve from 0.77326\n",
      "Epoch 37/5000\n",
      " - 3s - loss: 0.3034 - acc: 0.8634 - val_loss: 0.3337 - val_acc: 0.8545\n",
      "roc_auc: 0.91928 - roc_auc_val: 0.88395 - norm_gini: 0.83857 - norm_gini_val: 0.76789          \n",
      "\n",
      "Epoch 00037: norm_gini_val did not improve from 0.77326\n",
      "Epoch 38/5000\n",
      " - 3s - loss: 0.2975 - acc: 0.8654 - val_loss: 0.3324 - val_acc: 0.8571\n",
      "roc_auc: 0.91564 - roc_auc_val: 0.88022 - norm_gini: 0.83128 - norm_gini_val: 0.76043          \n",
      "\n",
      "Epoch 00038: norm_gini_val did not improve from 0.77326\n",
      "Epoch 39/5000\n",
      " - 3s - loss: 0.3004 - acc: 0.8642 - val_loss: 0.3330 - val_acc: 0.8545\n",
      "roc_auc: 0.91633 - roc_auc_val: 0.87829 - norm_gini: 0.83265 - norm_gini_val: 0.75658          \n",
      "\n",
      "Epoch 00039: norm_gini_val did not improve from 0.77326\n",
      "Epoch 40/5000\n",
      " - 3s - loss: 0.2987 - acc: 0.8659 - val_loss: 0.3302 - val_acc: 0.8524\n",
      "roc_auc: 0.91812 - roc_auc_val: 0.88587 - norm_gini: 0.83625 - norm_gini_val: 0.77175          \n",
      "\n",
      "Epoch 00040: norm_gini_val did not improve from 0.77326\n",
      "Epoch 41/5000\n",
      " - 3s - loss: 0.2988 - acc: 0.8646 - val_loss: 0.3264 - val_acc: 0.8585\n",
      "roc_auc: 0.92065 - roc_auc_val: 0.88326 - norm_gini: 0.84129 - norm_gini_val: 0.76651          \n",
      "\n",
      "Epoch 00041: norm_gini_val did not improve from 0.77326\n",
      "Epoch 42/5000\n",
      " - 3s - loss: 0.2967 - acc: 0.8667 - val_loss: 0.3255 - val_acc: 0.8592\n",
      "roc_auc: 0.92002 - roc_auc_val: 0.8826 - norm_gini: 0.84004 - norm_gini_val: 0.76519          \n",
      "\n",
      "Epoch 00042: norm_gini_val did not improve from 0.77326\n",
      "Epoch 43/5000\n",
      " - 3s - loss: 0.2943 - acc: 0.8663 - val_loss: 0.3268 - val_acc: 0.8528\n",
      "roc_auc: 0.91825 - roc_auc_val: 0.88599 - norm_gini: 0.8365 - norm_gini_val: 0.77198          \n",
      "\n",
      "Epoch 00043: norm_gini_val did not improve from 0.77326\n",
      "Epoch 44/5000\n",
      " - 3s - loss: 0.2969 - acc: 0.8677 - val_loss: 0.3538 - val_acc: 0.8289\n",
      "roc_auc: 0.91512 - roc_auc_val: 0.88107 - norm_gini: 0.83024 - norm_gini_val: 0.76215          \n",
      "\n",
      "Epoch 00044: norm_gini_val did not improve from 0.77326\n",
      "Epoch 45/5000\n",
      " - 3s - loss: 0.2955 - acc: 0.8677 - val_loss: 0.3274 - val_acc: 0.8585\n",
      "roc_auc: 0.92051 - roc_auc_val: 0.88092 - norm_gini: 0.84101 - norm_gini_val: 0.76185          \n",
      "\n",
      "Epoch 00045: norm_gini_val did not improve from 0.77326\n",
      "Epoch 00045: early stopping\n",
      "\n",
      " Fold 1 Run 1 Log-loss: 0.32140\n",
      " Fold 1 Run 1 AUC: 0.88663\n",
      " Fold 1 Run 1 normalized gini: 0.77326\n",
      "\n",
      " Fold 1 - Run 2\n",
      "\n",
      "Train on 8925 samples, validate on 2975 samples\n",
      "Epoch 1/5000\n",
      " - 12s - loss: 0.5215 - acc: 0.7584 - val_loss: 0.3576 - val_acc: 0.8558\n",
      "roc_auc: 0.86711 - roc_auc_val: 0.855 - norm_gini: 0.73422 - norm_gini_val: 0.71001          \n",
      "\n",
      "Epoch 00001: norm_gini_val improved from -inf to 0.71001, saving model to keras-5fold-run-01-v1-fold-01-run-02.check\n",
      "Epoch 2/5000\n",
      " - 3s - loss: 0.3676 - acc: 0.8420 - val_loss: 0.3294 - val_acc: 0.8534\n",
      "roc_auc: 0.8872 - roc_auc_val: 0.87755 - norm_gini: 0.7744 - norm_gini_val: 0.7551          \n",
      "\n",
      "Epoch 00002: norm_gini_val improved from 0.71001 to 0.75510, saving model to keras-5fold-run-01-v1-fold-01-run-02.check\n",
      "Epoch 3/5000\n",
      " - 3s - loss: 0.3459 - acc: 0.8403 - val_loss: 0.3459 - val_acc: 0.8430\n",
      "roc_auc: 0.8919 - roc_auc_val: 0.87527 - norm_gini: 0.78381 - norm_gini_val: 0.75055          \n",
      "\n",
      "Epoch 00003: norm_gini_val did not improve from 0.75510\n",
      "Epoch 4/5000\n",
      " - 3s - loss: 0.3361 - acc: 0.8503 - val_loss: 0.3443 - val_acc: 0.8457\n",
      "roc_auc: 0.89588 - roc_auc_val: 0.88098 - norm_gini: 0.79175 - norm_gini_val: 0.76197          \n",
      "\n",
      "Epoch 00004: norm_gini_val improved from 0.75510 to 0.76197, saving model to keras-5fold-run-01-v1-fold-01-run-02.check\n",
      "Epoch 5/5000\n",
      " - 3s - loss: 0.3298 - acc: 0.8508 - val_loss: 0.3266 - val_acc: 0.8538\n",
      "roc_auc: 0.89846 - roc_auc_val: 0.87885 - norm_gini: 0.79691 - norm_gini_val: 0.7577          \n",
      "\n",
      "Epoch 00005: norm_gini_val did not improve from 0.76197\n",
      "Epoch 6/5000\n",
      " - 3s - loss: 0.3247 - acc: 0.8525 - val_loss: 0.3283 - val_acc: 0.8524\n",
      "roc_auc: 0.89977 - roc_auc_val: 0.8779 - norm_gini: 0.79953 - norm_gini_val: 0.75581          \n",
      "\n",
      "Epoch 00006: norm_gini_val did not improve from 0.76197\n",
      "Epoch 7/5000\n",
      " - 3s - loss: 0.3226 - acc: 0.8550 - val_loss: 0.3287 - val_acc: 0.8534\n",
      "roc_auc: 0.9018 - roc_auc_val: 0.88009 - norm_gini: 0.80361 - norm_gini_val: 0.76018          \n",
      "\n",
      "Epoch 00007: norm_gini_val did not improve from 0.76197\n",
      "Epoch 8/5000\n",
      " - 3s - loss: 0.3211 - acc: 0.8530 - val_loss: 0.3259 - val_acc: 0.8568\n",
      "roc_auc: 0.90205 - roc_auc_val: 0.88098 - norm_gini: 0.80411 - norm_gini_val: 0.76197          \n",
      "\n",
      "Epoch 00008: norm_gini_val improved from 0.76197 to 0.76197, saving model to keras-5fold-run-01-v1-fold-01-run-02.check\n",
      "Epoch 9/5000\n",
      " - 3s - loss: 0.3169 - acc: 0.8583 - val_loss: 0.3240 - val_acc: 0.8558\n",
      "roc_auc: 0.90073 - roc_auc_val: 0.88431 - norm_gini: 0.80146 - norm_gini_val: 0.76862          \n",
      "\n",
      "Epoch 00009: norm_gini_val improved from 0.76197 to 0.76862, saving model to keras-5fold-run-01-v1-fold-01-run-02.check\n",
      "Epoch 10/5000\n",
      " - 3s - loss: 0.3182 - acc: 0.8545 - val_loss: 0.3262 - val_acc: 0.8534\n",
      "roc_auc: 0.90376 - roc_auc_val: 0.88377 - norm_gini: 0.80753 - norm_gini_val: 0.76753          \n",
      "\n",
      "Epoch 00010: norm_gini_val did not improve from 0.76862\n",
      "Epoch 11/5000\n",
      " - 3s - loss: 0.3161 - acc: 0.8547 - val_loss: 0.3226 - val_acc: 0.8571\n",
      "roc_auc: 0.90245 - roc_auc_val: 0.88377 - norm_gini: 0.8049 - norm_gini_val: 0.76753          \n",
      "\n",
      "Epoch 00011: norm_gini_val did not improve from 0.76862\n",
      "Epoch 12/5000\n",
      " - 3s - loss: 0.3174 - acc: 0.8536 - val_loss: 0.3238 - val_acc: 0.8558\n",
      "roc_auc: 0.9053 - roc_auc_val: 0.88446 - norm_gini: 0.81061 - norm_gini_val: 0.76893          \n",
      "\n",
      "Epoch 00012: norm_gini_val improved from 0.76862 to 0.76893, saving model to keras-5fold-run-01-v1-fold-01-run-02.check\n",
      "Epoch 13/5000\n",
      " - 3s - loss: 0.3183 - acc: 0.8559 - val_loss: 0.3274 - val_acc: 0.8541\n",
      "roc_auc: 0.90648 - roc_auc_val: 0.88135 - norm_gini: 0.81296 - norm_gini_val: 0.7627          \n",
      "\n",
      "Epoch 00013: norm_gini_val did not improve from 0.76893\n",
      "Epoch 14/5000\n",
      " - 3s - loss: 0.3131 - acc: 0.8571 - val_loss: 0.3286 - val_acc: 0.8568\n",
      "roc_auc: 0.9072 - roc_auc_val: 0.88143 - norm_gini: 0.8144 - norm_gini_val: 0.76286          \n",
      "\n",
      "Epoch 00014: norm_gini_val did not improve from 0.76893\n",
      "Epoch 15/5000\n",
      " - 3s - loss: 0.3132 - acc: 0.8627 - val_loss: 0.3271 - val_acc: 0.8595\n",
      "roc_auc: 0.90767 - roc_auc_val: 0.88082 - norm_gini: 0.81533 - norm_gini_val: 0.76164          \n",
      "\n",
      "Epoch 00015: norm_gini_val did not improve from 0.76893\n",
      "Epoch 16/5000\n",
      " - 3s - loss: 0.3080 - acc: 0.8622 - val_loss: 0.3789 - val_acc: 0.8484\n",
      "roc_auc: 0.90169 - roc_auc_val: 0.87843 - norm_gini: 0.80338 - norm_gini_val: 0.75687          \n",
      "\n",
      "Epoch 00016: norm_gini_val did not improve from 0.76893\n",
      "Epoch 17/5000\n",
      " - 3s - loss: 0.3087 - acc: 0.8604 - val_loss: 0.3759 - val_acc: 0.8457\n",
      "roc_auc: 0.90151 - roc_auc_val: 0.86801 - norm_gini: 0.80302 - norm_gini_val: 0.73603          \n",
      "\n",
      "Epoch 00017: norm_gini_val did not improve from 0.76893\n",
      "Epoch 18/5000\n",
      " - 3s - loss: 0.3074 - acc: 0.8582 - val_loss: 0.3325 - val_acc: 0.8548\n",
      "roc_auc: 0.90818 - roc_auc_val: 0.87985 - norm_gini: 0.81636 - norm_gini_val: 0.7597          \n",
      "\n",
      "Epoch 00018: norm_gini_val did not improve from 0.76893\n",
      "Epoch 19/5000\n",
      " - 3s - loss: 0.3050 - acc: 0.8622 - val_loss: 0.3363 - val_acc: 0.8545\n",
      "roc_auc: 0.91034 - roc_auc_val: 0.88234 - norm_gini: 0.82068 - norm_gini_val: 0.76467          \n",
      "\n",
      "Epoch 00019: norm_gini_val did not improve from 0.76893\n",
      "Epoch 20/5000\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " - 3s - loss: 0.3097 - acc: 0.8571 - val_loss: 0.3269 - val_acc: 0.8558\n",
      "roc_auc: 0.9104 - roc_auc_val: 0.88296 - norm_gini: 0.8208 - norm_gini_val: 0.76591          \n",
      "\n",
      "Epoch 00020: norm_gini_val did not improve from 0.76893\n",
      "Epoch 21/5000\n",
      " - 3s - loss: 0.3078 - acc: 0.8616 - val_loss: 0.3841 - val_acc: 0.8272\n",
      "roc_auc: 0.90383 - roc_auc_val: 0.87337 - norm_gini: 0.80765 - norm_gini_val: 0.74673          \n",
      "\n",
      "Epoch 00021: norm_gini_val did not improve from 0.76893\n",
      "Epoch 22/5000\n",
      " - 3s - loss: 0.3059 - acc: 0.8615 - val_loss: 0.3360 - val_acc: 0.8568\n",
      "roc_auc: 0.90957 - roc_auc_val: 0.88113 - norm_gini: 0.81914 - norm_gini_val: 0.76226          \n",
      "\n",
      "Epoch 00022: norm_gini_val did not improve from 0.76893\n",
      "Epoch 23/5000\n",
      " - 3s - loss: 0.3046 - acc: 0.8616 - val_loss: 0.3285 - val_acc: 0.8568\n",
      "roc_auc: 0.91227 - roc_auc_val: 0.881 - norm_gini: 0.82455 - norm_gini_val: 0.76199          \n",
      "\n",
      "Epoch 00023: norm_gini_val did not improve from 0.76893\n",
      "Epoch 24/5000\n",
      " - 3s - loss: 0.3069 - acc: 0.8597 - val_loss: 0.3303 - val_acc: 0.8582\n",
      "roc_auc: 0.91126 - roc_auc_val: 0.87866 - norm_gini: 0.82252 - norm_gini_val: 0.75733          \n",
      "\n",
      "Epoch 00024: norm_gini_val did not improve from 0.76893\n",
      "Epoch 25/5000\n",
      " - 3s - loss: 0.3020 - acc: 0.8621 - val_loss: 0.3343 - val_acc: 0.8501\n",
      "roc_auc: 0.91009 - roc_auc_val: 0.88188 - norm_gini: 0.82019 - norm_gini_val: 0.76376          \n",
      "\n",
      "Epoch 00025: norm_gini_val did not improve from 0.76893\n",
      "Epoch 26/5000\n",
      " - 3s - loss: 0.3039 - acc: 0.8599 - val_loss: 0.3507 - val_acc: 0.8524\n",
      "roc_auc: 0.9075 - roc_auc_val: 0.87986 - norm_gini: 0.81499 - norm_gini_val: 0.75972          \n",
      "\n",
      "Epoch 00026: norm_gini_val did not improve from 0.76893\n",
      "Epoch 27/5000\n",
      " - 3s - loss: 0.3030 - acc: 0.8629 - val_loss: 0.3360 - val_acc: 0.8555\n",
      "roc_auc: 0.91164 - roc_auc_val: 0.87694 - norm_gini: 0.82328 - norm_gini_val: 0.75388          \n",
      "\n",
      "Epoch 00027: norm_gini_val did not improve from 0.76893\n",
      "Epoch 28/5000\n",
      " - 3s - loss: 0.3074 - acc: 0.8604 - val_loss: 0.3291 - val_acc: 0.8504\n",
      "roc_auc: 0.91134 - roc_auc_val: 0.88385 - norm_gini: 0.82267 - norm_gini_val: 0.7677          \n",
      "\n",
      "Epoch 00028: norm_gini_val did not improve from 0.76893\n",
      "Epoch 29/5000\n",
      " - 3s - loss: 0.3027 - acc: 0.8613 - val_loss: 0.3393 - val_acc: 0.8518\n",
      "roc_auc: 0.91289 - roc_auc_val: 0.87862 - norm_gini: 0.82579 - norm_gini_val: 0.75724          \n",
      "\n",
      "Epoch 00029: norm_gini_val did not improve from 0.76893\n",
      "Epoch 30/5000\n",
      " - 3s - loss: 0.3055 - acc: 0.8650 - val_loss: 0.3284 - val_acc: 0.8534\n",
      "roc_auc: 0.91318 - roc_auc_val: 0.88424 - norm_gini: 0.82636 - norm_gini_val: 0.76848          \n",
      "\n",
      "Epoch 00030: norm_gini_val did not improve from 0.76893\n",
      "Epoch 31/5000\n",
      " - 3s - loss: 0.3044 - acc: 0.8636 - val_loss: 0.3426 - val_acc: 0.8487\n",
      "roc_auc: 0.91178 - roc_auc_val: 0.87846 - norm_gini: 0.82356 - norm_gini_val: 0.75691          \n",
      "\n",
      "Epoch 00031: norm_gini_val did not improve from 0.76893\n",
      "Epoch 32/5000\n",
      " - 3s - loss: 0.3030 - acc: 0.8588 - val_loss: 0.3437 - val_acc: 0.8504\n",
      "roc_auc: 0.91178 - roc_auc_val: 0.87963 - norm_gini: 0.82356 - norm_gini_val: 0.75926          \n",
      "\n",
      "Epoch 00032: norm_gini_val did not improve from 0.76893\n",
      "Epoch 00032: early stopping\n",
      "\n",
      " Fold 1 Run 2 Log-loss: 0.32378\n",
      " Fold 1 Run 2 AUC: 0.88446\n",
      " Fold 1 Run 2 normalized gini: 0.76893\n",
      "\n",
      " Fold 1 Log-loss: 0.32089\n",
      " Fold 1 AUC: 0.88675\n",
      " Fold 1 normalized gini: 0.77350\n",
      "\n",
      " Time taken: 0 hours 6 minutes and 53.75 seconds.\n"
     ]
    },
    {
     "ename": "ValueError",
     "evalue": "Length of values does not match length of index",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mValueError\u001b[0m                                Traceback (most recent call last)",
      "\u001b[1;32m<ipython-input-207-3087c31f14ee>\u001b[0m in \u001b[0;36m<module>\u001b[1;34m()\u001b[0m\n\u001b[0;32m    142\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    143\u001b[0m     \u001b[0mtrain_preds_df\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mloc\u001b[0m\u001b[1;33m[\u001b[0m\u001b[0mtest_index\u001b[0m\u001b[1;33m,\u001b[0m\u001b[0mname\u001b[0m\u001b[1;33m]\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mtrain_pred\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mT\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 144\u001b[1;33m     \u001b[0mtemp_test_preds_df\u001b[0m\u001b[1;33m[\u001b[0m\u001b[0mtemp_name\u001b[0m\u001b[1;33m]\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mtest_pred\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mT\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    145\u001b[0m     \u001b[0mcount\u001b[0m \u001b[1;33m+=\u001b[0m \u001b[1;36m1\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    146\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32mc:\\users\\utilisateur\\appdata\\local\\programs\\python\\python36\\lib\\site-packages\\pandas\\core\\frame.py\u001b[0m in \u001b[0;36m__setitem__\u001b[1;34m(self, key, value)\u001b[0m\n\u001b[0;32m   3117\u001b[0m         \u001b[1;32melse\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   3118\u001b[0m             \u001b[1;31m# set column\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m-> 3119\u001b[1;33m             \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_set_item\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mvalue\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m   3120\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   3121\u001b[0m     \u001b[1;32mdef\u001b[0m \u001b[0m_setitem_slice\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mself\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mkey\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mvalue\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32mc:\\users\\utilisateur\\appdata\\local\\programs\\python\\python36\\lib\\site-packages\\pandas\\core\\frame.py\u001b[0m in \u001b[0;36m_set_item\u001b[1;34m(self, key, value)\u001b[0m\n\u001b[0;32m   3192\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   3193\u001b[0m         \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_ensure_valid_index\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mvalue\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m-> 3194\u001b[1;33m         \u001b[0mvalue\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_sanitize_column\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mvalue\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m   3195\u001b[0m         \u001b[0mNDFrame\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_set_item\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mself\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mkey\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mvalue\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   3196\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32mc:\\users\\utilisateur\\appdata\\local\\programs\\python\\python36\\lib\\site-packages\\pandas\\core\\frame.py\u001b[0m in \u001b[0;36m_sanitize_column\u001b[1;34m(self, key, value, broadcast)\u001b[0m\n\u001b[0;32m   3389\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   3390\u001b[0m             \u001b[1;31m# turn me into an ndarray\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m-> 3391\u001b[1;33m             \u001b[0mvalue\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0m_sanitize_index\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mvalue\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mindex\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[1;33m=\u001b[0m\u001b[1;32mFalse\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m   3392\u001b[0m             \u001b[1;32mif\u001b[0m \u001b[1;32mnot\u001b[0m \u001b[0misinstance\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mvalue\u001b[0m\u001b[1;33m,\u001b[0m \u001b[1;33m(\u001b[0m\u001b[0mnp\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mndarray\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mIndex\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   3393\u001b[0m                 \u001b[1;32mif\u001b[0m \u001b[0misinstance\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mvalue\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mlist\u001b[0m\u001b[1;33m)\u001b[0m \u001b[1;32mand\u001b[0m \u001b[0mlen\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mvalue\u001b[0m\u001b[1;33m)\u001b[0m \u001b[1;33m>\u001b[0m \u001b[1;36m0\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32mc:\\users\\utilisateur\\appdata\\local\\programs\\python\\python36\\lib\\site-packages\\pandas\\core\\series.py\u001b[0m in \u001b[0;36m_sanitize_index\u001b[1;34m(data, index, copy)\u001b[0m\n\u001b[0;32m   3998\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   3999\u001b[0m     \u001b[1;32mif\u001b[0m \u001b[0mlen\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mdata\u001b[0m\u001b[1;33m)\u001b[0m \u001b[1;33m!=\u001b[0m \u001b[0mlen\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mindex\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m-> 4000\u001b[1;33m         \u001b[1;32mraise\u001b[0m \u001b[0mValueError\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;34m'Length of values does not match length of '\u001b[0m \u001b[1;34m'index'\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m   4001\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   4002\u001b[0m     \u001b[1;32mif\u001b[0m \u001b[0misinstance\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mdata\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mABCIndexClass\u001b[0m\u001b[1;33m)\u001b[0m \u001b[1;32mand\u001b[0m \u001b[1;32mnot\u001b[0m \u001b[0mcopy\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;31mValueError\u001b[0m: Length of values does not match length of index"
     ]
    }
   ],
   "source": [
    "from datetime import datetime\n",
    "from sklearn.metrics import log_loss, roc_auc_score\n",
    "from sklearn.model_selection import StratifiedKFold\n",
    "\n",
    "from keras.models import load_model\n",
    "from keras.models import Sequential, Model\n",
    "from keras.layers import Input, Dense, Dropout, Activation\n",
    "from keras.layers.normalization import BatchNormalization\n",
    "from keras.callbacks import EarlyStopping, ModelCheckpoint, CSVLogger, Callback\n",
    "from keras.wrappers.scikit_learn import KerasClassifier\n",
    "\n",
    "class roc_auc_callback(Callback):\n",
    "    def __init__(self,training_data,validation_data):\n",
    "        self.x = training_data[0]\n",
    "        self.y = training_data[1]\n",
    "        self.x_val = validation_data[0]\n",
    "        self.y_val = validation_data[1]\n",
    "\n",
    "    def on_train_begin(self, logs={}):\n",
    "        return\n",
    "\n",
    "    def on_train_end(self, logs={}):\n",
    "        return\n",
    "\n",
    "    def on_epoch_begin(self, epoch, logs={}):\n",
    "        return\n",
    "\n",
    "    def on_epoch_end(self, epoch, logs={}):\n",
    "        y_pred = self.model.predict_proba(self.x, verbose=0)\n",
    "        roc = roc_auc_score(self.y, y_pred)\n",
    "        logs['roc_auc'] = roc_auc_score(self.y, y_pred)\n",
    "        logs['norm_gini'] = ( roc_auc_score(self.y, y_pred) * 2 ) - 1\n",
    "\n",
    "        y_pred_val = self.model.predict_proba(self.x_val, verbose=0)\n",
    "        roc_val = roc_auc_score(self.y_val, y_pred_val)\n",
    "        logs['roc_auc_val'] = roc_auc_score(self.y_val, y_pred_val)\n",
    "        logs['norm_gini_val'] = ( roc_auc_score(self.y_val, y_pred_val) * 2 ) - 1\n",
    "\n",
    "        print('\\rroc_auc: %s - roc_auc_val: %s - norm_gini: %s - norm_gini_val: %s' % (str(round(roc,5)),str(round(roc_val,5)),str(round((roc*2-1),5)),str(round((roc_val*2-1),5))), end=10*' '+'\\n')\n",
    "        return\n",
    "\n",
    "    def on_batch_begin(self, batch, logs={}):\n",
    "        return\n",
    "\n",
    "    def on_batch_end(self, batch, logs={}):\n",
    "        return\n",
    "\n",
    "def timer(start_time=None):\n",
    "    if not start_time:\n",
    "        start_time = datetime.now()\n",
    "        return start_time\n",
    "    elif start_time:\n",
    "        thour, temp_sec = divmod(\n",
    "            (datetime.now() - start_time).total_seconds(), 3600)\n",
    "        tmin, tsec = divmod(temp_sec, 60)\n",
    "        print('\\n Time taken: %i hours %i minutes and %s seconds.' %\n",
    "              (thour, tmin, round(tsec, 2)))\n",
    "\n",
    "def scale_data(X, scaler=None):\n",
    "    if not scaler:\n",
    "        scaler = MinMaxScaler(feature_range=(-1, 1))\n",
    "        scaler.fit(X)\n",
    "    X = scaler.transform(X)\n",
    "    return X, scaler\n",
    "\n",
    "folds = 4\n",
    "runs = 2\n",
    "\n",
    "\n",
    "cv_LL = 0\n",
    "cv_AUC = 0\n",
    "cv_gini = 0\n",
    "fpred = []\n",
    "avpred = []\n",
    "avreal = []\n",
    "#avids = []\n",
    "\n",
    "patience = 20\n",
    "batchsize = 32\n",
    "\n",
    "# Let's split the data into folds. I always use the same random number for reproducibility, \n",
    "# and suggest that you do the same (you certainly don't have to use 1001).\n",
    "\n",
    "skf = StratifiedKFold(n_splits=folds)\n",
    "starttime = timer(None)\n",
    "#for i, (train_index, test_index) in enumerate(skf.split(np_scaled_raw_X, np_y)):\n",
    "    \n",
    "    #X_train, X_val = np_scaled_raw_X[train_index], np_scaled_raw_X[test_index]\n",
    "    #y_train, y_val = np_y[train_index], np_y[test_index]\n",
    "    #train_ids, val_ids = tr_ids[train_index], tr_ids[test_index]\n",
    "    \n",
    "for train_index, test_index in kf.split(np_scaled_raw_X):\n",
    "    X_train, X_val = np_scaled_raw_X[train_index], np_scaled_raw_X[test_index]\n",
    "    y_train, y_val = np_y[train_index], np_y[test_index]    \n",
    "    start_time = timer(None)\n",
    "    count = 0\n",
    "# This is where we define and compile the model. These parameters are not optimal, as they were chosen \n",
    "# to get a notebook to complete in 60 minutes. Other than leaving BatchNormalization and last sigmoid \n",
    "# activation alone, virtually everything else can be optimized: number of neurons, types of initializers, \n",
    "# activation functions, dropout values. The same goes for the optimizer at the end.\n",
    "\n",
    "#########\n",
    "# Never move this model definition to the beginning of the file or anywhere else outside of this loop. \n",
    "# The model needs to be initialized anew every time you run a different fold. If not, it will continue \n",
    "# the training from a previous model, and that is not what you want.\n",
    "#########\n",
    "\n",
    "    # This definition must be within the for loop or else it will continue training previous model\n",
    "    def baseline_model():\n",
    "        model = Sequential()\n",
    "        model.add(Dense(200,input_dim=X_train.shape[1],kernel_initializer='glorot_normal',))\n",
    "        model.add(Activation('relu'))\n",
    "        model.add(BatchNormalization())\n",
    "        model.add(Dropout(0.5))\n",
    "        model.add(Dense(100, kernel_initializer='glorot_normal'))\n",
    "        model.add(Activation('relu'))\n",
    "        model.add(BatchNormalization())\n",
    "        model.add(Dropout(0.25))\n",
    "        model.add(Dense(50, kernel_initializer='glorot_normal'))\n",
    "        model.add(Activation('relu'))\n",
    "        model.add(BatchNormalization())\n",
    "        model.add(Dropout(0.15))\n",
    "        model.add(Dense(25, kernel_initializer='glorot_normal'))\n",
    "        model.add(Activation('relu'))\n",
    "        model.add(BatchNormalization())\n",
    "        model.add(Dropout(0.1))\n",
    "        model.add(Dense(1, activation='sigmoid'))\n",
    "\n",
    "        # Compile model\n",
    "        model.compile(optimizer='adam', metrics = ['accuracy'], loss='binary_crossentropy')\n",
    "\n",
    "        return model\n",
    "\n",
    "# This is where we repeat the runs for each fold. If you choose runs=1 above, it will run a \n",
    "# regular N-fold procedure.\n",
    "\n",
    "#########\n",
    "# It is important to leave the call to random seed here, so each run starts with a different seed.\n",
    "#########\n",
    "\n",
    "    for run in range(runs):\n",
    "        print('\\n Fold %d - Run %d\\n' % ((i + 1), (run + 1)))\n",
    "        np.random.seed()\n",
    "\n",
    "# Lots to unpack here.\n",
    "\n",
    "# The first callback prints out roc_auc and gini values at the end of each epoch. It must be listed \n",
    "# before the EarlyStopping callback, which monitors gini values saved in the previous callback. Make \n",
    "# sure to set the mode to \"max\" because the default value (\"auto\") will not handle gini properly \n",
    "# (it will act as if the model is not improving even when roc/gini go up).\n",
    "\n",
    "# CSVLogger creates a record of all iterations. Not really needed but it doesn't hurt to have it.\n",
    "\n",
    "# ModelCheckpoint saves a model each time gini improves. Its mode also must be set to \"max\" for reasons \n",
    "# explained above.\n",
    "\n",
    "        callbacks = [\n",
    "            roc_auc_callback(training_data=(X_train, y_train),validation_data=(X_val, y_val)),  # call this before EarlyStopping\n",
    "            EarlyStopping(monitor='norm_gini_val', patience=patience, mode='max', verbose=1),\n",
    "            #CSVLogger('keras-5fold-run-01-v1-epochs.log', separator=',', append=False),\n",
    "            ModelCheckpoint(\n",
    "                    'keras-5fold-run-01-v1-fold-' + str('%02d' % (i + 1)) + '-run-' + str('%02d' % (run + 1)) + '.check',\n",
    "                    monitor='norm_gini_val', mode='max', # mode must be set to max or Keras will be confused\n",
    "                    save_best_only=True,\n",
    "                    verbose=1)\n",
    "        ]\n",
    "\n",
    "# The classifier is defined here. Epochs should be be set to a very large number (not 3 like below) which \n",
    "# will never be reached anyway because of early stopping. I usually put 5000 there. Because why not.\n",
    "\n",
    "        nnet = KerasClassifier(\n",
    "            build_fn=baseline_model,\n",
    "# Epoch needs to be set to a very large number ; early stopping will prevent it from reaching\n",
    "            epochs=5000,\n",
    "            batch_size=batchsize,\n",
    "            validation_data=(X_val, y_val),\n",
    "            verbose=2,\n",
    "            shuffle=True,\n",
    "            callbacks=callbacks)\n",
    "\n",
    "        fit = nnet.fit(X_train, y_train)\n",
    "        \n",
    "# We want the best saved model - not the last one where the training stopped. So we delete the old \n",
    "# model instance and load the model from the last saved checkpoint. Next we predict values both for \n",
    "# validation and test data, and create a summary of parameters for each run.\n",
    "\n",
    "        del nnet\n",
    "        nnet = load_model('keras-5fold-run-01-v1-fold-' + str('%02d' % (i + 1)) + '-run-' + str('%02d' % (run + 1)) + '.check')\n",
    "        scores_val_run = nnet.predict_proba(X_val, verbose=0)\n",
    "        LL_run = log_loss(y_val, scores_val_run)\n",
    "        print('\\n Fold %d Run %d Log-loss: %.5f' % ((i + 1), (run + 1), LL_run))\n",
    "        AUC_run = roc_auc_score(y_val, scores_val_run)\n",
    "        print(' Fold %d Run %d AUC: %.5f' % ((i + 1), (run + 1), AUC_run))\n",
    "        print(' Fold %d Run %d normalized gini: %.5f' % ((i + 1), (run + 1), AUC_run*2-1))\n",
    "        y_pred_run = nnet.predict_proba(np_scaled_raw_X, verbose=0)\n",
    "        if run > 0:\n",
    "            scores_val = scores_val + scores_val_run\n",
    "            y_pred = y_pred + y_pred_run\n",
    "        else:\n",
    "            scores_val = scores_val_run\n",
    "            y_pred = y_pred_run\n",
    "            \n",
    "# We average all runs from the same fold and provide a parameter summary for each fold. Unless something \n",
    "# is wrong, the numbers printed here should be better than any of the individual runs.\n",
    "\n",
    "    scores_val = scores_val / runs\n",
    "    y_pred = y_pred / runs\n",
    "    LL = log_loss(y_val, scores_val)\n",
    "    print('\\n Fold %d Log-loss: %.5f' % ((i + 1), LL))\n",
    "    AUC = roc_auc_score(y_val, scores_val)\n",
    "    print(' Fold %d AUC: %.5f' % ((i + 1), AUC))\n",
    "    print(' Fold %d normalized gini: %.5f' % ((i + 1), AUC*2-1))\n",
    "    timer(start_time)\n",
    "    \n",
    "# We add up predictions on the test data for each fold. Create out-of-fold predictions for validation data.\n",
    "\n",
    "    train_pred = nnet.predict_proba(KFold_X_test)\n",
    "    test_pred = nnet.predict_proba(np_scaled_rawpredict_X)\n",
    "                \n",
    "    name = 'scaled_X_nn'\n",
    "    temp_name = 'temp_scaled_rawX_{}'.format(count)\n",
    "    \n",
    "    train_preds_df.loc[test_index,name] = train_pred.T\n",
    "    temp_test_preds_df[temp_name] = test_pred.T\n",
    "    count += 1\n",
    "\n",
    "    if i > 0:\n",
    "        fpred = pred + y_pred\n",
    "        avreal = np.concatenate((avreal, y_val), axis=0)\n",
    "        avpred = np.concatenate((avpred, scores_val), axis=0)\n",
    "        #avids = np.concatenate((avids, val_ids), axis=0)\n",
    "    else:\n",
    "        fpred = y_pred\n",
    "        avreal = y_val\n",
    "        avpred = scores_val\n",
    "        #avids = val_ids\n",
    "    pred = fpred\n",
    "    cv_LL = cv_LL + LL\n",
    "    cv_AUC = cv_AUC + AUC\n",
    "    cv_gini = cv_gini + (AUC*2-1)\n",
    "    \n",
    "test_preds_df[name] = 0.25*temp_test_preds_df['temp_scaled_rawX_0'] + 0.25*temp_test_preds_df['temp_scaled_rawX_1'] + 0.25*temp_test_preds_df['temp_scaled_rawX_2'] + 0.25*temp_test_preds_df['temp_scaled_rawX_3']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 213,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>temp_scaled_X90_k1_0</th>\n",
       "      <th>temp_scaled_X90_k1_1</th>\n",
       "      <th>temp_scaled_X90_k1_2</th>\n",
       "      <th>temp_scaled_X90_k1_3</th>\n",
       "      <th>temp_scaled_X90_k3_0</th>\n",
       "      <th>temp_scaled_X90_k3_1</th>\n",
       "      <th>temp_scaled_X90_k3_2</th>\n",
       "      <th>temp_scaled_X90_k3_3</th>\n",
       "      <th>temp_scaled_X90_k7_0</th>\n",
       "      <th>temp_scaled_X90_k7_1</th>\n",
       "      <th>...</th>\n",
       "      <th>temp_scaled_rawX_k3_3</th>\n",
       "      <th>temp_scaled_rawX_k7_0</th>\n",
       "      <th>temp_scaled_rawX_k7_1</th>\n",
       "      <th>temp_scaled_rawX_k7_2</th>\n",
       "      <th>temp_scaled_rawX_k7_3</th>\n",
       "      <th>temp_scaled_rawX_0</th>\n",
       "      <th>temp_scaled_rawX_1</th>\n",
       "      <th>temp_scaled_rawX_2</th>\n",
       "      <th>temp_scaled_rawX_3</th>\n",
       "      <th>temp_scaled_rawX_4</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.014891</td>\n",
       "      <td>0.006111</td>\n",
       "      <td>-0.001901</td>\n",
       "      <td>0.012509</td>\n",
       "      <td>0.028723</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.142857</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>-0.007553</td>\n",
       "      <td>-0.010092</td>\n",
       "      <td>-0.011368</td>\n",
       "      <td>-0.015901</td>\n",
       "      <td>0.014321</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.333333</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.285714</td>\n",
       "      <td>0.285714</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.142857</td>\n",
       "      <td>0.142857</td>\n",
       "      <td>0.285714</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.032948</td>\n",
       "      <td>0.016659</td>\n",
       "      <td>0.042220</td>\n",
       "      <td>0.031593</td>\n",
       "      <td>0.122392</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.046017</td>\n",
       "      <td>0.094779</td>\n",
       "      <td>0.058918</td>\n",
       "      <td>0.069502</td>\n",
       "      <td>0.048957</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.333333</td>\n",
       "      <td>0.333333</td>\n",
       "      <td>0.333333</td>\n",
       "      <td>0.142857</td>\n",
       "      <td>0.142857</td>\n",
       "      <td>...</td>\n",
       "      <td>0.333333</td>\n",
       "      <td>0.142857</td>\n",
       "      <td>0.285714</td>\n",
       "      <td>0.142857</td>\n",
       "      <td>0.142857</td>\n",
       "      <td>0.136332</td>\n",
       "      <td>0.153658</td>\n",
       "      <td>0.124354</td>\n",
       "      <td>0.132836</td>\n",
       "      <td>0.185075</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.142857</td>\n",
       "      <td>0.019672</td>\n",
       "      <td>-0.007912</td>\n",
       "      <td>0.004275</td>\n",
       "      <td>-0.006204</td>\n",
       "      <td>0.014033</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.333333</td>\n",
       "      <td>0.142857</td>\n",
       "      <td>0.142857</td>\n",
       "      <td>0.142857</td>\n",
       "      <td>0.142857</td>\n",
       "      <td>0.023851</td>\n",
       "      <td>0.042042</td>\n",
       "      <td>0.065067</td>\n",
       "      <td>0.055476</td>\n",
       "      <td>0.040372</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>-0.011201</td>\n",
       "      <td>-0.009090</td>\n",
       "      <td>-0.000533</td>\n",
       "      <td>-0.006831</td>\n",
       "      <td>0.018772</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.333333</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.142857</td>\n",
       "      <td>0.285714</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.142857</td>\n",
       "      <td>0.142857</td>\n",
       "      <td>0.142857</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.027590</td>\n",
       "      <td>0.026415</td>\n",
       "      <td>-0.005150</td>\n",
       "      <td>0.002392</td>\n",
       "      <td>0.049264</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.007064</td>\n",
       "      <td>0.007495</td>\n",
       "      <td>0.032786</td>\n",
       "      <td>0.024527</td>\n",
       "      <td>0.011748</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.028237</td>\n",
       "      <td>0.029552</td>\n",
       "      <td>0.013428</td>\n",
       "      <td>0.022354</td>\n",
       "      <td>0.021789</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.333333</td>\n",
       "      <td>0.333333</td>\n",
       "      <td>0.333333</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.142857</td>\n",
       "      <td>...</td>\n",
       "      <td>0.333333</td>\n",
       "      <td>0.142857</td>\n",
       "      <td>0.142857</td>\n",
       "      <td>0.142857</td>\n",
       "      <td>0.285714</td>\n",
       "      <td>0.012403</td>\n",
       "      <td>0.022117</td>\n",
       "      <td>0.034908</td>\n",
       "      <td>0.017146</td>\n",
       "      <td>0.033171</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.333333</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.142857</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.142857</td>\n",
       "      <td>0.142857</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.142857</td>\n",
       "      <td>0.233830</td>\n",
       "      <td>0.263820</td>\n",
       "      <td>0.367275</td>\n",
       "      <td>0.277640</td>\n",
       "      <td>0.361115</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.333333</td>\n",
       "      <td>0.333333</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.333333</td>\n",
       "      <td>0.142857</td>\n",
       "      <td>0.142857</td>\n",
       "      <td>...</td>\n",
       "      <td>0.333333</td>\n",
       "      <td>0.285714</td>\n",
       "      <td>0.285714</td>\n",
       "      <td>0.142857</td>\n",
       "      <td>0.285714</td>\n",
       "      <td>0.183190</td>\n",
       "      <td>0.162300</td>\n",
       "      <td>0.219977</td>\n",
       "      <td>0.340860</td>\n",
       "      <td>0.257356</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.333333</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.333333</td>\n",
       "      <td>0.666667</td>\n",
       "      <td>0.571429</td>\n",
       "      <td>0.428571</td>\n",
       "      <td>...</td>\n",
       "      <td>0.666667</td>\n",
       "      <td>0.428571</td>\n",
       "      <td>0.428571</td>\n",
       "      <td>0.285714</td>\n",
       "      <td>0.571429</td>\n",
       "      <td>0.049641</td>\n",
       "      <td>0.105816</td>\n",
       "      <td>0.115646</td>\n",
       "      <td>0.089288</td>\n",
       "      <td>0.153735</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.333333</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.142857</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.142857</td>\n",
       "      <td>0.142857</td>\n",
       "      <td>0.142857</td>\n",
       "      <td>0.047914</td>\n",
       "      <td>0.081706</td>\n",
       "      <td>0.080925</td>\n",
       "      <td>0.082667</td>\n",
       "      <td>0.092652</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.333333</td>\n",
       "      <td>0.333333</td>\n",
       "      <td>0.333333</td>\n",
       "      <td>0.142857</td>\n",
       "      <td>0.285714</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.135215</td>\n",
       "      <td>0.139255</td>\n",
       "      <td>0.065981</td>\n",
       "      <td>0.122404</td>\n",
       "      <td>0.200856</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.042523</td>\n",
       "      <td>0.056999</td>\n",
       "      <td>0.077550</td>\n",
       "      <td>0.112083</td>\n",
       "      <td>0.018599</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.044959</td>\n",
       "      <td>0.082393</td>\n",
       "      <td>0.068374</td>\n",
       "      <td>0.062036</td>\n",
       "      <td>0.013467</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.006256</td>\n",
       "      <td>0.008853</td>\n",
       "      <td>-0.018298</td>\n",
       "      <td>-0.011807</td>\n",
       "      <td>0.015359</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>-0.013357</td>\n",
       "      <td>0.002566</td>\n",
       "      <td>-0.012992</td>\n",
       "      <td>0.004189</td>\n",
       "      <td>0.015623</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.333333</td>\n",
       "      <td>0.333333</td>\n",
       "      <td>0.333333</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.142857</td>\n",
       "      <td>0.142857</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.142857</td>\n",
       "      <td>0.142857</td>\n",
       "      <td>0.142857</td>\n",
       "      <td>0.142857</td>\n",
       "      <td>0.070560</td>\n",
       "      <td>0.053547</td>\n",
       "      <td>0.052442</td>\n",
       "      <td>0.053050</td>\n",
       "      <td>0.024600</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.009015</td>\n",
       "      <td>0.012313</td>\n",
       "      <td>-0.013185</td>\n",
       "      <td>-0.007814</td>\n",
       "      <td>0.011363</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.048857</td>\n",
       "      <td>0.057735</td>\n",
       "      <td>0.047402</td>\n",
       "      <td>0.073696</td>\n",
       "      <td>0.027479</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>-0.009861</td>\n",
       "      <td>-0.011597</td>\n",
       "      <td>-0.012095</td>\n",
       "      <td>-0.016726</td>\n",
       "      <td>0.020662</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.142857</td>\n",
       "      <td>0.142857</td>\n",
       "      <td>0.142857</td>\n",
       "      <td>0.142857</td>\n",
       "      <td>0.045768</td>\n",
       "      <td>0.020496</td>\n",
       "      <td>0.018595</td>\n",
       "      <td>0.017763</td>\n",
       "      <td>0.079376</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.008557</td>\n",
       "      <td>0.032250</td>\n",
       "      <td>0.003705</td>\n",
       "      <td>-0.018110</td>\n",
       "      <td>0.018323</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.030171</td>\n",
       "      <td>0.037154</td>\n",
       "      <td>0.026090</td>\n",
       "      <td>0.020596</td>\n",
       "      <td>0.009385</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.333333</td>\n",
       "      <td>0.333333</td>\n",
       "      <td>0.333333</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.142857</td>\n",
       "      <td>...</td>\n",
       "      <td>0.333333</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.285714</td>\n",
       "      <td>0.142857</td>\n",
       "      <td>0.142857</td>\n",
       "      <td>0.132000</td>\n",
       "      <td>0.165649</td>\n",
       "      <td>0.158049</td>\n",
       "      <td>0.110358</td>\n",
       "      <td>0.199037</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.019390</td>\n",
       "      <td>0.030172</td>\n",
       "      <td>0.024109</td>\n",
       "      <td>0.019987</td>\n",
       "      <td>0.010494</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5070</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.333333</td>\n",
       "      <td>0.142857</td>\n",
       "      <td>0.142857</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.142857</td>\n",
       "      <td>-0.005030</td>\n",
       "      <td>0.010700</td>\n",
       "      <td>0.009435</td>\n",
       "      <td>0.008299</td>\n",
       "      <td>0.013729</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5071</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.007302</td>\n",
       "      <td>-0.003961</td>\n",
       "      <td>0.037233</td>\n",
       "      <td>-0.026067</td>\n",
       "      <td>0.046689</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5072</th>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.333333</td>\n",
       "      <td>0.333333</td>\n",
       "      <td>0.333333</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.142857</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.142857</td>\n",
       "      <td>0.142857</td>\n",
       "      <td>0.142857</td>\n",
       "      <td>0.015084</td>\n",
       "      <td>0.034101</td>\n",
       "      <td>0.030862</td>\n",
       "      <td>0.026840</td>\n",
       "      <td>0.023372</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5073</th>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.666667</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.857143</td>\n",
       "      <td>0.857143</td>\n",
       "      <td>...</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.714286</td>\n",
       "      <td>0.857143</td>\n",
       "      <td>0.857143</td>\n",
       "      <td>0.857143</td>\n",
       "      <td>0.668856</td>\n",
       "      <td>0.678300</td>\n",
       "      <td>0.739781</td>\n",
       "      <td>0.702937</td>\n",
       "      <td>0.720321</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5074</th>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.666667</td>\n",
       "      <td>0.333333</td>\n",
       "      <td>0.333333</td>\n",
       "      <td>0.666667</td>\n",
       "      <td>0.285714</td>\n",
       "      <td>0.142857</td>\n",
       "      <td>...</td>\n",
       "      <td>0.333333</td>\n",
       "      <td>0.142857</td>\n",
       "      <td>0.142857</td>\n",
       "      <td>0.285714</td>\n",
       "      <td>0.428571</td>\n",
       "      <td>0.141895</td>\n",
       "      <td>0.126728</td>\n",
       "      <td>0.181087</td>\n",
       "      <td>0.236919</td>\n",
       "      <td>0.312183</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5075</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>-0.012297</td>\n",
       "      <td>0.001238</td>\n",
       "      <td>-0.011239</td>\n",
       "      <td>-0.009153</td>\n",
       "      <td>0.053772</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5076</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.012042</td>\n",
       "      <td>0.023215</td>\n",
       "      <td>0.032997</td>\n",
       "      <td>-0.007288</td>\n",
       "      <td>0.010112</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5077</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>-0.009635</td>\n",
       "      <td>-0.018518</td>\n",
       "      <td>-0.013670</td>\n",
       "      <td>-0.020433</td>\n",
       "      <td>0.020519</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5078</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>-0.010645</td>\n",
       "      <td>-0.011440</td>\n",
       "      <td>-0.003494</td>\n",
       "      <td>-0.013409</td>\n",
       "      <td>0.017163</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5079</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.666667</td>\n",
       "      <td>0.666667</td>\n",
       "      <td>0.666667</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.285714</td>\n",
       "      <td>0.285714</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>-0.034601</td>\n",
       "      <td>-0.056925</td>\n",
       "      <td>-0.035986</td>\n",
       "      <td>0.025334</td>\n",
       "      <td>0.035468</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5080</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.333333</td>\n",
       "      <td>0.428571</td>\n",
       "      <td>0.428571</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.142857</td>\n",
       "      <td>0.142857</td>\n",
       "      <td>0.285714</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.241289</td>\n",
       "      <td>0.222381</td>\n",
       "      <td>0.300729</td>\n",
       "      <td>0.236904</td>\n",
       "      <td>0.373853</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5081</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.001779</td>\n",
       "      <td>0.030667</td>\n",
       "      <td>0.055849</td>\n",
       "      <td>-0.003141</td>\n",
       "      <td>0.012356</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5082</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>-0.017500</td>\n",
       "      <td>-0.008168</td>\n",
       "      <td>0.002591</td>\n",
       "      <td>0.006988</td>\n",
       "      <td>0.026133</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5083</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.333333</td>\n",
       "      <td>0.333333</td>\n",
       "      <td>0.333333</td>\n",
       "      <td>0.142857</td>\n",
       "      <td>0.285714</td>\n",
       "      <td>...</td>\n",
       "      <td>0.333333</td>\n",
       "      <td>0.285714</td>\n",
       "      <td>0.285714</td>\n",
       "      <td>0.428571</td>\n",
       "      <td>0.285714</td>\n",
       "      <td>0.380326</td>\n",
       "      <td>0.363607</td>\n",
       "      <td>0.487223</td>\n",
       "      <td>0.328978</td>\n",
       "      <td>0.396572</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5084</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.056475</td>\n",
       "      <td>0.036439</td>\n",
       "      <td>0.056404</td>\n",
       "      <td>0.048188</td>\n",
       "      <td>0.046823</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5085</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>-0.010549</td>\n",
       "      <td>-0.018344</td>\n",
       "      <td>-0.007305</td>\n",
       "      <td>-0.030404</td>\n",
       "      <td>0.025563</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5086</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>-0.002828</td>\n",
       "      <td>0.016340</td>\n",
       "      <td>-0.006454</td>\n",
       "      <td>-0.002793</td>\n",
       "      <td>0.030345</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5087</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>-0.018571</td>\n",
       "      <td>-0.027812</td>\n",
       "      <td>0.000473</td>\n",
       "      <td>-0.010215</td>\n",
       "      <td>0.015467</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5088</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000898</td>\n",
       "      <td>0.003079</td>\n",
       "      <td>0.009549</td>\n",
       "      <td>-0.002965</td>\n",
       "      <td>0.030712</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5089</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>-0.008173</td>\n",
       "      <td>-0.006701</td>\n",
       "      <td>-0.007622</td>\n",
       "      <td>0.000755</td>\n",
       "      <td>0.010164</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5090</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.114621</td>\n",
       "      <td>0.124824</td>\n",
       "      <td>0.094402</td>\n",
       "      <td>0.081361</td>\n",
       "      <td>0.081926</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5091</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.333333</td>\n",
       "      <td>0.333333</td>\n",
       "      <td>0.333333</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.142857</td>\n",
       "      <td>0.142857</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.142857</td>\n",
       "      <td>0.142857</td>\n",
       "      <td>0.142857</td>\n",
       "      <td>0.044556</td>\n",
       "      <td>0.040450</td>\n",
       "      <td>0.025415</td>\n",
       "      <td>0.047867</td>\n",
       "      <td>0.032298</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5092</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>-0.013867</td>\n",
       "      <td>-0.008641</td>\n",
       "      <td>-0.023109</td>\n",
       "      <td>-0.002854</td>\n",
       "      <td>0.010920</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5093</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.142857</td>\n",
       "      <td>0.142857</td>\n",
       "      <td>0.142857</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.461160</td>\n",
       "      <td>0.496512</td>\n",
       "      <td>0.399771</td>\n",
       "      <td>0.370719</td>\n",
       "      <td>0.333930</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5094</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.071041</td>\n",
       "      <td>0.054091</td>\n",
       "      <td>0.123524</td>\n",
       "      <td>0.078443</td>\n",
       "      <td>0.055171</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5095</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>-0.023538</td>\n",
       "      <td>-0.025373</td>\n",
       "      <td>-0.022791</td>\n",
       "      <td>-0.009576</td>\n",
       "      <td>0.004178</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5096</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>-0.008382</td>\n",
       "      <td>-0.004297</td>\n",
       "      <td>-0.020279</td>\n",
       "      <td>-0.012123</td>\n",
       "      <td>0.025151</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5097</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>-0.017157</td>\n",
       "      <td>-0.013801</td>\n",
       "      <td>-0.015917</td>\n",
       "      <td>-0.018572</td>\n",
       "      <td>0.019205</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5098</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.151368</td>\n",
       "      <td>0.149896</td>\n",
       "      <td>0.157221</td>\n",
       "      <td>0.127965</td>\n",
       "      <td>0.078111</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5099</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>-0.020929</td>\n",
       "      <td>-0.017874</td>\n",
       "      <td>-0.018579</td>\n",
       "      <td>-0.018119</td>\n",
       "      <td>0.013939</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5100 rows × 41 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      temp_scaled_X90_k1_0  temp_scaled_X90_k1_1  temp_scaled_X90_k1_2  \\\n",
       "0                      0.0                   0.0                   0.0   \n",
       "1                      0.0                   0.0                   0.0   \n",
       "2                      0.0                   0.0                   0.0   \n",
       "3                      0.0                   0.0                   0.0   \n",
       "4                      0.0                   0.0                   0.0   \n",
       "5                      0.0                   0.0                   0.0   \n",
       "6                      0.0                   0.0                   0.0   \n",
       "7                      0.0                   0.0                   0.0   \n",
       "8                      1.0                   0.0                   0.0   \n",
       "9                      0.0                   0.0                   0.0   \n",
       "10                     0.0                   0.0                   0.0   \n",
       "11                     0.0                   1.0                   0.0   \n",
       "12                     0.0                   0.0                   0.0   \n",
       "13                     0.0                   0.0                   0.0   \n",
       "14                     0.0                   0.0                   0.0   \n",
       "15                     0.0                   0.0                   0.0   \n",
       "16                     0.0                   1.0                   0.0   \n",
       "17                     0.0                   0.0                   0.0   \n",
       "18                     0.0                   0.0                   0.0   \n",
       "19                     0.0                   0.0                   0.0   \n",
       "20                     0.0                   0.0                   0.0   \n",
       "21                     1.0                   1.0                   1.0   \n",
       "22                     0.0                   0.0                   0.0   \n",
       "23                     0.0                   0.0                   0.0   \n",
       "24                     0.0                   0.0                   0.0   \n",
       "25                     0.0                   0.0                   0.0   \n",
       "26                     0.0                   0.0                   0.0   \n",
       "27                     0.0                   0.0                   0.0   \n",
       "28                     0.0                   0.0                   0.0   \n",
       "29                     0.0                   0.0                   0.0   \n",
       "...                    ...                   ...                   ...   \n",
       "5070                   0.0                   0.0                   0.0   \n",
       "5071                   0.0                   0.0                   0.0   \n",
       "5072                   0.0                   1.0                   0.0   \n",
       "5073                   1.0                   1.0                   1.0   \n",
       "5074                   1.0                   0.0                   1.0   \n",
       "5075                   0.0                   0.0                   0.0   \n",
       "5076                   0.0                   0.0                   0.0   \n",
       "5077                   0.0                   0.0                   0.0   \n",
       "5078                   0.0                   0.0                   0.0   \n",
       "5079                   0.0                   0.0                   0.0   \n",
       "5080                   0.0                   0.0                   0.0   \n",
       "5081                   0.0                   0.0                   0.0   \n",
       "5082                   0.0                   0.0                   0.0   \n",
       "5083                   0.0                   0.0                   1.0   \n",
       "5084                   0.0                   0.0                   0.0   \n",
       "5085                   0.0                   0.0                   0.0   \n",
       "5086                   0.0                   0.0                   0.0   \n",
       "5087                   0.0                   0.0                   0.0   \n",
       "5088                   0.0                   0.0                   0.0   \n",
       "5089                   0.0                   0.0                   0.0   \n",
       "5090                   0.0                   0.0                   0.0   \n",
       "5091                   0.0                   0.0                   0.0   \n",
       "5092                   0.0                   0.0                   0.0   \n",
       "5093                   0.0                   0.0                   0.0   \n",
       "5094                   0.0                   0.0                   0.0   \n",
       "5095                   0.0                   0.0                   0.0   \n",
       "5096                   0.0                   0.0                   0.0   \n",
       "5097                   0.0                   0.0                   0.0   \n",
       "5098                   0.0                   0.0                   0.0   \n",
       "5099                   0.0                   0.0                   0.0   \n",
       "\n",
       "      temp_scaled_X90_k1_3  temp_scaled_X90_k3_0  temp_scaled_X90_k3_1  \\\n",
       "0                      0.0              0.000000              0.000000   \n",
       "1                      0.0              0.000000              0.000000   \n",
       "2                      0.0              0.000000              0.000000   \n",
       "3                      0.0              0.000000              0.000000   \n",
       "4                      0.0              0.000000              0.333333   \n",
       "5                      0.0              0.000000              0.000000   \n",
       "6                      0.0              0.000000              0.000000   \n",
       "7                      0.0              0.000000              0.000000   \n",
       "8                      0.0              0.333333              0.000000   \n",
       "9                      0.0              0.000000              0.000000   \n",
       "10                     0.0              0.000000              0.000000   \n",
       "11                     0.0              0.000000              0.333333   \n",
       "12                     0.0              0.000000              0.000000   \n",
       "13                     0.0              0.333333              0.333333   \n",
       "14                     0.0              0.333333              0.000000   \n",
       "15                     0.0              0.000000              0.000000   \n",
       "16                     0.0              0.000000              0.333333   \n",
       "17                     0.0              0.000000              0.000000   \n",
       "18                     0.0              0.000000              0.000000   \n",
       "19                     0.0              0.000000              0.000000   \n",
       "20                     0.0              0.000000              0.000000   \n",
       "21                     0.0              0.333333              0.333333   \n",
       "22                     0.0              0.000000              0.000000   \n",
       "23                     0.0              0.000000              0.000000   \n",
       "24                     0.0              0.000000              0.000000   \n",
       "25                     0.0              0.000000              0.000000   \n",
       "26                     0.0              0.000000              0.000000   \n",
       "27                     0.0              0.000000              0.000000   \n",
       "28                     0.0              0.000000              0.333333   \n",
       "29                     0.0              0.000000              0.000000   \n",
       "...                    ...                   ...                   ...   \n",
       "5070                   0.0              0.000000              0.000000   \n",
       "5071                   0.0              0.000000              0.000000   \n",
       "5072                   0.0              0.000000              0.333333   \n",
       "5073                   1.0              0.666667              1.000000   \n",
       "5074                   1.0              0.666667              0.333333   \n",
       "5075                   0.0              0.000000              0.000000   \n",
       "5076                   0.0              0.000000              0.000000   \n",
       "5077                   0.0              0.000000              0.000000   \n",
       "5078                   0.0              0.000000              0.000000   \n",
       "5079                   0.0              0.666667              0.666667   \n",
       "5080                   0.0              0.000000              0.000000   \n",
       "5081                   0.0              0.000000              0.000000   \n",
       "5082                   0.0              0.000000              0.000000   \n",
       "5083                   0.0              0.000000              0.333333   \n",
       "5084                   0.0              0.000000              0.000000   \n",
       "5085                   0.0              0.000000              0.000000   \n",
       "5086                   0.0              0.000000              0.000000   \n",
       "5087                   0.0              0.000000              0.000000   \n",
       "5088                   0.0              0.000000              0.000000   \n",
       "5089                   0.0              0.000000              0.000000   \n",
       "5090                   0.0              0.000000              0.000000   \n",
       "5091                   0.0              0.333333              0.333333   \n",
       "5092                   0.0              0.000000              0.000000   \n",
       "5093                   0.0              0.000000              0.000000   \n",
       "5094                   0.0              0.000000              0.000000   \n",
       "5095                   0.0              0.000000              0.000000   \n",
       "5096                   0.0              0.000000              0.000000   \n",
       "5097                   0.0              0.000000              0.000000   \n",
       "5098                   0.0              0.000000              0.000000   \n",
       "5099                   0.0              0.000000              0.000000   \n",
       "\n",
       "      temp_scaled_X90_k3_2  temp_scaled_X90_k3_3  temp_scaled_X90_k7_0  \\\n",
       "0                 0.000000              0.000000              0.000000   \n",
       "1                 0.000000              0.000000              0.142857   \n",
       "2                 0.333333              0.000000              0.285714   \n",
       "3                 0.000000              0.000000              0.000000   \n",
       "4                 0.333333              0.333333              0.142857   \n",
       "5                 0.000000              0.000000              0.000000   \n",
       "6                 0.000000              0.000000              0.000000   \n",
       "7                 0.000000              0.000000              0.000000   \n",
       "8                 0.000000              0.000000              0.142857   \n",
       "9                 0.000000              0.000000              0.000000   \n",
       "10                0.000000              0.000000              0.000000   \n",
       "11                0.333333              0.333333              0.000000   \n",
       "12                0.000000              0.333333              0.000000   \n",
       "13                0.000000              0.333333              0.142857   \n",
       "14                0.333333              0.666667              0.571429   \n",
       "15                0.333333              0.000000              0.000000   \n",
       "16                0.333333              0.333333              0.142857   \n",
       "17                0.000000              0.000000              0.000000   \n",
       "18                0.000000              0.000000              0.000000   \n",
       "19                0.000000              0.000000              0.000000   \n",
       "20                0.000000              0.000000              0.000000   \n",
       "21                0.333333              0.000000              0.142857   \n",
       "22                0.000000              0.000000              0.000000   \n",
       "23                0.000000              0.000000              0.000000   \n",
       "24                0.000000              0.000000              0.000000   \n",
       "25                0.000000              0.000000              0.000000   \n",
       "26                0.000000              0.000000              0.000000   \n",
       "27                0.000000              0.000000              0.000000   \n",
       "28                0.333333              0.333333              0.000000   \n",
       "29                0.000000              0.000000              0.000000   \n",
       "...                    ...                   ...                   ...   \n",
       "5070              0.000000              0.000000              0.000000   \n",
       "5071              0.000000              0.000000              0.000000   \n",
       "5072              0.333333              0.333333              0.000000   \n",
       "5073              1.000000              1.000000              0.857143   \n",
       "5074              0.333333              0.666667              0.285714   \n",
       "5075              0.000000              0.000000              0.000000   \n",
       "5076              0.000000              0.000000              0.000000   \n",
       "5077              0.000000              0.000000              0.000000   \n",
       "5078              0.000000              0.000000              0.000000   \n",
       "5079              0.666667              0.000000              0.285714   \n",
       "5080              0.000000              0.333333              0.428571   \n",
       "5081              0.000000              0.000000              0.000000   \n",
       "5082              0.000000              0.000000              0.000000   \n",
       "5083              0.333333              0.333333              0.142857   \n",
       "5084              0.000000              0.000000              0.000000   \n",
       "5085              0.000000              0.000000              0.000000   \n",
       "5086              0.000000              0.000000              0.000000   \n",
       "5087              0.000000              0.000000              0.000000   \n",
       "5088              0.000000              0.000000              0.000000   \n",
       "5089              0.000000              0.000000              0.000000   \n",
       "5090              0.000000              0.000000              0.000000   \n",
       "5091              0.333333              0.000000              0.142857   \n",
       "5092              0.000000              0.000000              0.000000   \n",
       "5093              0.000000              0.000000              0.000000   \n",
       "5094              0.000000              0.000000              0.000000   \n",
       "5095              0.000000              0.000000              0.000000   \n",
       "5096              0.000000              0.000000              0.000000   \n",
       "5097              0.000000              0.000000              0.000000   \n",
       "5098              0.000000              0.000000              0.000000   \n",
       "5099              0.000000              0.000000              0.000000   \n",
       "\n",
       "      temp_scaled_X90_k7_1         ...          temp_scaled_rawX_k3_3  \\\n",
       "0                 0.000000         ...                       0.000000   \n",
       "1                 0.000000         ...                       0.000000   \n",
       "2                 0.285714         ...                       0.000000   \n",
       "3                 0.000000         ...                       0.000000   \n",
       "4                 0.142857         ...                       0.333333   \n",
       "5                 0.000000         ...                       0.000000   \n",
       "6                 0.000000         ...                       0.333333   \n",
       "7                 0.000000         ...                       0.000000   \n",
       "8                 0.285714         ...                       0.000000   \n",
       "9                 0.000000         ...                       0.000000   \n",
       "10                0.000000         ...                       0.000000   \n",
       "11                0.142857         ...                       0.333333   \n",
       "12                0.142857         ...                       0.000000   \n",
       "13                0.142857         ...                       0.333333   \n",
       "14                0.428571         ...                       0.666667   \n",
       "15                0.142857         ...                       0.000000   \n",
       "16                0.285714         ...                       0.000000   \n",
       "17                0.000000         ...                       0.000000   \n",
       "18                0.000000         ...                       0.000000   \n",
       "19                0.000000         ...                       0.000000   \n",
       "20                0.000000         ...                       0.000000   \n",
       "21                0.142857         ...                       0.000000   \n",
       "22                0.000000         ...                       0.000000   \n",
       "23                0.000000         ...                       0.000000   \n",
       "24                0.000000         ...                       0.000000   \n",
       "25                0.000000         ...                       0.000000   \n",
       "26                0.000000         ...                       0.000000   \n",
       "27                0.000000         ...                       0.000000   \n",
       "28                0.142857         ...                       0.333333   \n",
       "29                0.000000         ...                       0.000000   \n",
       "...                    ...         ...                            ...   \n",
       "5070              0.000000         ...                       0.333333   \n",
       "5071              0.000000         ...                       0.000000   \n",
       "5072              0.142857         ...                       0.000000   \n",
       "5073              0.857143         ...                       1.000000   \n",
       "5074              0.142857         ...                       0.333333   \n",
       "5075              0.000000         ...                       0.000000   \n",
       "5076              0.000000         ...                       0.000000   \n",
       "5077              0.000000         ...                       0.000000   \n",
       "5078              0.000000         ...                       0.000000   \n",
       "5079              0.285714         ...                       0.000000   \n",
       "5080              0.428571         ...                       0.000000   \n",
       "5081              0.000000         ...                       0.000000   \n",
       "5082              0.000000         ...                       0.000000   \n",
       "5083              0.285714         ...                       0.333333   \n",
       "5084              0.000000         ...                       0.000000   \n",
       "5085              0.000000         ...                       0.000000   \n",
       "5086              0.000000         ...                       0.000000   \n",
       "5087              0.000000         ...                       0.000000   \n",
       "5088              0.000000         ...                       0.000000   \n",
       "5089              0.000000         ...                       0.000000   \n",
       "5090              0.000000         ...                       0.000000   \n",
       "5091              0.142857         ...                       0.000000   \n",
       "5092              0.000000         ...                       0.000000   \n",
       "5093              0.000000         ...                       0.000000   \n",
       "5094              0.000000         ...                       0.000000   \n",
       "5095              0.000000         ...                       0.000000   \n",
       "5096              0.000000         ...                       0.000000   \n",
       "5097              0.000000         ...                       0.000000   \n",
       "5098              0.000000         ...                       0.000000   \n",
       "5099              0.000000         ...                       0.000000   \n",
       "\n",
       "      temp_scaled_rawX_k7_0  temp_scaled_rawX_k7_1  temp_scaled_rawX_k7_2  \\\n",
       "0                  0.000000               0.000000               0.000000   \n",
       "1                  0.000000               0.000000               0.000000   \n",
       "2                  0.142857               0.142857               0.285714   \n",
       "3                  0.000000               0.000000               0.000000   \n",
       "4                  0.142857               0.285714               0.142857   \n",
       "5                  0.000000               0.000000               0.000000   \n",
       "6                  0.142857               0.142857               0.142857   \n",
       "7                  0.000000               0.000000               0.000000   \n",
       "8                  0.142857               0.142857               0.142857   \n",
       "9                  0.000000               0.000000               0.000000   \n",
       "10                 0.000000               0.000000               0.000000   \n",
       "11                 0.142857               0.142857               0.142857   \n",
       "12                 0.142857               0.142857               0.000000   \n",
       "13                 0.285714               0.285714               0.142857   \n",
       "14                 0.428571               0.428571               0.285714   \n",
       "15                 0.000000               0.142857               0.142857   \n",
       "16                 0.000000               0.000000               0.000000   \n",
       "17                 0.000000               0.000000               0.000000   \n",
       "18                 0.000000               0.000000               0.000000   \n",
       "19                 0.000000               0.000000               0.000000   \n",
       "20                 0.000000               0.000000               0.000000   \n",
       "21                 0.142857               0.142857               0.142857   \n",
       "22                 0.000000               0.000000               0.000000   \n",
       "23                 0.000000               0.000000               0.000000   \n",
       "24                 0.000000               0.000000               0.000000   \n",
       "25                 0.142857               0.142857               0.142857   \n",
       "26                 0.000000               0.000000               0.000000   \n",
       "27                 0.000000               0.000000               0.000000   \n",
       "28                 0.000000               0.285714               0.142857   \n",
       "29                 0.000000               0.000000               0.000000   \n",
       "...                     ...                    ...                    ...   \n",
       "5070               0.142857               0.142857               0.000000   \n",
       "5071               0.000000               0.000000               0.000000   \n",
       "5072               0.000000               0.142857               0.142857   \n",
       "5073               0.714286               0.857143               0.857143   \n",
       "5074               0.142857               0.142857               0.285714   \n",
       "5075               0.000000               0.000000               0.000000   \n",
       "5076               0.000000               0.000000               0.000000   \n",
       "5077               0.000000               0.000000               0.000000   \n",
       "5078               0.000000               0.000000               0.000000   \n",
       "5079               0.000000               0.000000               0.000000   \n",
       "5080               0.142857               0.142857               0.285714   \n",
       "5081               0.000000               0.000000               0.000000   \n",
       "5082               0.000000               0.000000               0.000000   \n",
       "5083               0.285714               0.285714               0.428571   \n",
       "5084               0.000000               0.000000               0.000000   \n",
       "5085               0.000000               0.000000               0.000000   \n",
       "5086               0.000000               0.000000               0.000000   \n",
       "5087               0.000000               0.000000               0.000000   \n",
       "5088               0.000000               0.000000               0.000000   \n",
       "5089               0.000000               0.000000               0.000000   \n",
       "5090               0.000000               0.000000               0.000000   \n",
       "5091               0.000000               0.142857               0.142857   \n",
       "5092               0.000000               0.000000               0.000000   \n",
       "5093               0.142857               0.142857               0.142857   \n",
       "5094               0.000000               0.000000               0.000000   \n",
       "5095               0.000000               0.000000               0.000000   \n",
       "5096               0.000000               0.000000               0.000000   \n",
       "5097               0.000000               0.000000               0.000000   \n",
       "5098               0.000000               0.000000               0.000000   \n",
       "5099               0.000000               0.000000               0.000000   \n",
       "\n",
       "      temp_scaled_rawX_k7_3  temp_scaled_rawX_0  temp_scaled_rawX_1  \\\n",
       "0                  0.000000            0.014891            0.006111   \n",
       "1                  0.000000           -0.007553           -0.010092   \n",
       "2                  0.000000            0.032948            0.016659   \n",
       "3                  0.000000            0.046017            0.094779   \n",
       "4                  0.142857            0.136332            0.153658   \n",
       "5                  0.142857            0.019672           -0.007912   \n",
       "6                  0.142857            0.023851            0.042042   \n",
       "7                  0.000000           -0.011201           -0.009090   \n",
       "8                  0.000000            0.027590            0.026415   \n",
       "9                  0.000000            0.007064            0.007495   \n",
       "10                 0.000000            0.028237            0.029552   \n",
       "11                 0.285714            0.012403            0.022117   \n",
       "12                 0.142857            0.233830            0.263820   \n",
       "13                 0.285714            0.183190            0.162300   \n",
       "14                 0.571429            0.049641            0.105816   \n",
       "15                 0.142857            0.047914            0.081706   \n",
       "16                 0.000000            0.135215            0.139255   \n",
       "17                 0.000000            0.042523            0.056999   \n",
       "18                 0.000000            0.044959            0.082393   \n",
       "19                 0.000000            0.006256            0.008853   \n",
       "20                 0.000000           -0.013357            0.002566   \n",
       "21                 0.142857            0.070560            0.053547   \n",
       "22                 0.000000            0.009015            0.012313   \n",
       "23                 0.000000            0.048857            0.057735   \n",
       "24                 0.000000           -0.009861           -0.011597   \n",
       "25                 0.142857            0.045768            0.020496   \n",
       "26                 0.000000            0.008557            0.032250   \n",
       "27                 0.000000            0.030171            0.037154   \n",
       "28                 0.142857            0.132000            0.165649   \n",
       "29                 0.000000            0.019390            0.030172   \n",
       "...                     ...                 ...                 ...   \n",
       "5070               0.142857           -0.005030            0.010700   \n",
       "5071               0.000000            0.007302           -0.003961   \n",
       "5072               0.142857            0.015084            0.034101   \n",
       "5073               0.857143            0.668856            0.678300   \n",
       "5074               0.428571            0.141895            0.126728   \n",
       "5075               0.000000           -0.012297            0.001238   \n",
       "5076               0.000000            0.012042            0.023215   \n",
       "5077               0.000000           -0.009635           -0.018518   \n",
       "5078               0.000000           -0.010645           -0.011440   \n",
       "5079               0.000000           -0.034601           -0.056925   \n",
       "5080               0.000000            0.241289            0.222381   \n",
       "5081               0.000000            0.001779            0.030667   \n",
       "5082               0.000000           -0.017500           -0.008168   \n",
       "5083               0.285714            0.380326            0.363607   \n",
       "5084               0.000000            0.056475            0.036439   \n",
       "5085               0.000000           -0.010549           -0.018344   \n",
       "5086               0.000000           -0.002828            0.016340   \n",
       "5087               0.000000           -0.018571           -0.027812   \n",
       "5088               0.000000            0.000898            0.003079   \n",
       "5089               0.000000           -0.008173           -0.006701   \n",
       "5090               0.000000            0.114621            0.124824   \n",
       "5091               0.142857            0.044556            0.040450   \n",
       "5092               0.000000           -0.013867           -0.008641   \n",
       "5093               0.000000            0.461160            0.496512   \n",
       "5094               0.000000            0.071041            0.054091   \n",
       "5095               0.000000           -0.023538           -0.025373   \n",
       "5096               0.000000           -0.008382           -0.004297   \n",
       "5097               0.000000           -0.017157           -0.013801   \n",
       "5098               0.000000            0.151368            0.149896   \n",
       "5099               0.000000           -0.020929           -0.017874   \n",
       "\n",
       "      temp_scaled_rawX_2  temp_scaled_rawX_3  temp_scaled_rawX_4  \n",
       "0              -0.001901            0.012509            0.028723  \n",
       "1              -0.011368           -0.015901            0.014321  \n",
       "2               0.042220            0.031593            0.122392  \n",
       "3               0.058918            0.069502            0.048957  \n",
       "4               0.124354            0.132836            0.185075  \n",
       "5               0.004275           -0.006204            0.014033  \n",
       "6               0.065067            0.055476            0.040372  \n",
       "7              -0.000533           -0.006831            0.018772  \n",
       "8              -0.005150            0.002392            0.049264  \n",
       "9               0.032786            0.024527            0.011748  \n",
       "10              0.013428            0.022354            0.021789  \n",
       "11              0.034908            0.017146            0.033171  \n",
       "12              0.367275            0.277640            0.361115  \n",
       "13              0.219977            0.340860            0.257356  \n",
       "14              0.115646            0.089288            0.153735  \n",
       "15              0.080925            0.082667            0.092652  \n",
       "16              0.065981            0.122404            0.200856  \n",
       "17              0.077550            0.112083            0.018599  \n",
       "18              0.068374            0.062036            0.013467  \n",
       "19             -0.018298           -0.011807            0.015359  \n",
       "20             -0.012992            0.004189            0.015623  \n",
       "21              0.052442            0.053050            0.024600  \n",
       "22             -0.013185           -0.007814            0.011363  \n",
       "23              0.047402            0.073696            0.027479  \n",
       "24             -0.012095           -0.016726            0.020662  \n",
       "25              0.018595            0.017763            0.079376  \n",
       "26              0.003705           -0.018110            0.018323  \n",
       "27              0.026090            0.020596            0.009385  \n",
       "28              0.158049            0.110358            0.199037  \n",
       "29              0.024109            0.019987            0.010494  \n",
       "...                  ...                 ...                 ...  \n",
       "5070            0.009435            0.008299            0.013729  \n",
       "5071            0.037233           -0.026067            0.046689  \n",
       "5072            0.030862            0.026840            0.023372  \n",
       "5073            0.739781            0.702937            0.720321  \n",
       "5074            0.181087            0.236919            0.312183  \n",
       "5075           -0.011239           -0.009153            0.053772  \n",
       "5076            0.032997           -0.007288            0.010112  \n",
       "5077           -0.013670           -0.020433            0.020519  \n",
       "5078           -0.003494           -0.013409            0.017163  \n",
       "5079           -0.035986            0.025334            0.035468  \n",
       "5080            0.300729            0.236904            0.373853  \n",
       "5081            0.055849           -0.003141            0.012356  \n",
       "5082            0.002591            0.006988            0.026133  \n",
       "5083            0.487223            0.328978            0.396572  \n",
       "5084            0.056404            0.048188            0.046823  \n",
       "5085           -0.007305           -0.030404            0.025563  \n",
       "5086           -0.006454           -0.002793            0.030345  \n",
       "5087            0.000473           -0.010215            0.015467  \n",
       "5088            0.009549           -0.002965            0.030712  \n",
       "5089           -0.007622            0.000755            0.010164  \n",
       "5090            0.094402            0.081361            0.081926  \n",
       "5091            0.025415            0.047867            0.032298  \n",
       "5092           -0.023109           -0.002854            0.010920  \n",
       "5093            0.399771            0.370719            0.333930  \n",
       "5094            0.123524            0.078443            0.055171  \n",
       "5095           -0.022791           -0.009576            0.004178  \n",
       "5096           -0.020279           -0.012123            0.025151  \n",
       "5097           -0.015917           -0.018572            0.019205  \n",
       "5098            0.157221            0.127965            0.078111  \n",
       "5099           -0.018579           -0.018119            0.013939  \n",
       "\n",
       "[5100 rows x 41 columns]"
      ]
     },
     "execution_count": 213,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "temp_test_preds_df"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
